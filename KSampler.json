{
  "KSampler": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.1,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "KSampler",
    "display_name": "KSampler",
    "description": "",
    "category": "sampling",
    "output_node": false
  },
  "CheckpointLoaderSimple": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "name": "CheckpointLoaderSimple",
    "display_name": "Load Checkpoint",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "CLIPTextEncode": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": true
          }
        ],
        "clip": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "CLIPTextEncode",
    "display_name": "CLIP Text Encode (Prompt)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "CLIPSetLastLayer": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "stop_at_clip_layer": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIP"
    ],
    "name": "CLIPSetLastLayer",
    "display_name": "CLIP Set Last Layer",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "VAEDecode": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "vae": [
          "VAE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "VAEDecode",
    "display_name": "VAE Decode",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "VAEEncode": {
    "input": {
      "required": {
        "pixels": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "VAEEncode",
    "display_name": "VAE Encode",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "VAEEncodeForInpaint": {
    "input": {
      "required": {
        "pixels": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "mask": [
          "MASK"
        ],
        "grow_mask_by": [
          "INT",
          {
            "default": 6,
            "min": 0,
            "max": 64,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "VAEEncodeForInpaint",
    "display_name": "VAE Encode (for Inpainting)",
    "description": "",
    "category": "latent/inpaint",
    "output_node": false
  },
  "VAELoader": {
    "input": {
      "required": {
        "vae_name": [
          [
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ]
      }
    },
    "output": [
      "VAE"
    ],
    "output_is_list": [false],
    "output_name": [
      "VAE"
    ],
    "name": "VAELoader",
    "display_name": "Load VAE",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "EmptyLatentImage": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "EmptyLatentImage",
    "display_name": "Empty Latent Image",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "LatentUpscale": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentUpscale",
    "display_name": "Upscale Latent",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "LatentUpscaleBy": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ],
        "scale_by": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 0.01,
            "max": 8,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentUpscaleBy",
    "display_name": "Upscale Latent By",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "LatentFromBatch": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "batch_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 63
          }
        ],
        "length": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentFromBatch",
    "display_name": "Latent From Batch",
    "description": "",
    "category": "latent/batch",
    "output_node": false
  },
  "RepeatLatentBatch": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "amount": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "RepeatLatentBatch",
    "display_name": "Repeat Latent Batch",
    "description": "",
    "category": "latent/batch",
    "output_node": false
  },
  "SaveImage": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SaveImage",
    "display_name": "Save Image",
    "description": "",
    "category": "image",
    "output_node": true
  },
  "PreviewImage": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "PreviewImage",
    "display_name": "Preview Image",
    "description": "",
    "category": "image",
    "output_node": true
  },
  "LoadImage": {
    "input": {
      "required": {
        "image": [
          [
            "example.png"
          ],
          {
            "image_upload": true
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "LoadImage",
    "display_name": "Load Image",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "LoadImageMask": {
    "input": {
      "required": {
        "image": [
          [
            "example.png"
          ],
          {
            "image_upload": true
          }
        ],
        "channel": [
          [
            "alpha",
            "red",
            "green",
            "blue"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "LoadImageMask",
    "display_name": "Load Image (as Mask)",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "ImageScale": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos"
          ]
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageScale",
    "display_name": "Upscale Image",
    "description": "",
    "category": "image/upscaling",
    "output_node": false
  },
  "ImageScaleBy": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos"
          ]
        ],
        "scale_by": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 8,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageScaleBy",
    "display_name": "Upscale Image By",
    "description": "",
    "category": "image/upscaling",
    "output_node": false
  },
  "ImageInvert": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageInvert",
    "display_name": "Invert Image",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "ImageBatch": {
    "input": {
      "required": {
        "image1": [
          "IMAGE"
        ],
        "image2": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageBatch",
    "display_name": "Batch Images",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "ImagePadForOutpaint": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "left": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "top": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "right": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "bottom": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "feathering": [
          "INT",
          {
            "default": 40,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "ImagePadForOutpaint",
    "display_name": "Pad Image for Outpainting",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "EmptyImage": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ],
        "color": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16777215,
            "step": 1,
            "display": "color"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "EmptyImage",
    "display_name": "EmptyImage",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "ConditioningAverage": {
    "input": {
      "required": {
        "conditioning_to": [
          "CONDITIONING"
        ],
        "conditioning_from": [
          "CONDITIONING"
        ],
        "conditioning_to_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningAverage",
    "display_name": "ConditioningAverage",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningCombine": {
    "input": {
      "required": {
        "conditioning_1": [
          "CONDITIONING"
        ],
        "conditioning_2": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningCombine",
    "display_name": "Conditioning (Combine)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningConcat": {
    "input": {
      "required": {
        "conditioning_to": [
          "CONDITIONING"
        ],
        "conditioning_from": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningConcat",
    "display_name": "Conditioning (Concat)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningSetArea": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "width": [
          "INT",
          {
            "default": 64,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 64,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningSetArea",
    "display_name": "Conditioning (Set Area)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningSetAreaPercentage": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "width": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "height": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "x": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "y": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningSetAreaPercentage",
    "display_name": "Conditioning (Set Area with Percentage)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningSetAreaStrength": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningSetAreaStrength",
    "display_name": "ConditioningSetAreaStrength",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningSetMask": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "mask": [
          "MASK"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "set_cond_area": [
          [
            "default",
            "mask bounds"
          ]
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningSetMask",
    "display_name": "Conditioning (Set Mask)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "KSamplerAdvanced": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "add_noise": [
          [
            "enable",
            "disable"
          ]
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.1,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "return_with_leftover_noise": [
          [
            "disable",
            "enable"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "KSamplerAdvanced",
    "display_name": "KSampler (Advanced)",
    "description": "",
    "category": "sampling",
    "output_node": false
  },
  "SetLatentNoiseMask": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "SetLatentNoiseMask",
    "display_name": "Set Latent Noise Mask",
    "description": "",
    "category": "latent/inpaint",
    "output_node": false
  },
  "LatentComposite": {
    "input": {
      "required": {
        "samples_to": [
          "LATENT"
        ],
        "samples_from": [
          "LATENT"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "feather": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentComposite",
    "display_name": "Latent Composite",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "LatentBlend": {
    "input": {
      "required": {
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ],
        "blend_factor": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentBlend",
    "display_name": "Latent Blend",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "LatentRotate": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "rotation": [
          [
            "none",
            "90 degrees",
            "180 degrees",
            "270 degrees"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentRotate",
    "display_name": "Rotate Latent",
    "description": "",
    "category": "latent/transform",
    "output_node": false
  },
  "LatentFlip": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "flip_method": [
          [
            "x-axis: vertically",
            "y-axis: horizontally"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentFlip",
    "display_name": "Flip Latent",
    "description": "",
    "category": "latent/transform",
    "output_node": false
  },
  "LatentCrop": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentCrop",
    "display_name": "Crop Latent",
    "description": "",
    "category": "latent/transform",
    "output_node": false
  },
  "LoraLoader": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_name": [
          [
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -100,
            "max": 100,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1,
            "min": -100,
            "max": 100,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL",
      "CLIP"
    ],
    "name": "LoraLoader",
    "display_name": "Load LoRA",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "CLIPLoader": {
    "input": {
      "required": {
        "clip_name": [
          [
            "cliph.safetensors",
            "model.safetensors"
          ]
        ],
        "type": [
          [
            "stable_diffusion",
            "stable_cascade"
          ]
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIP"
    ],
    "name": "CLIPLoader",
    "display_name": "Load CLIP",
    "description": "",
    "category": "advanced/loaders",
    "output_node": false
  },
  "UNETLoader": {
    "input": {
      "required": {
        "unet_name": [
          [
            "diffusion_pytorch_model.fp16.safetensors",
            "iclight_sd15_fc.safetensors",
            "sdxs.safetensors",
            "stage_b_bf16.safetensors",
            "stage_c_bf16.safetensors"
          ]
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "UNETLoader",
    "display_name": "UNETLoader",
    "description": "",
    "category": "advanced/loaders",
    "output_node": false
  },
  "DualCLIPLoader": {
    "input": {
      "required": {
        "clip_name1": [
          [
            "cliph.safetensors",
            "model.safetensors"
          ]
        ],
        "clip_name2": [
          [
            "cliph.safetensors",
            "model.safetensors"
          ]
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIP"
    ],
    "name": "DualCLIPLoader",
    "display_name": "DualCLIPLoader",
    "description": "",
    "category": "advanced/loaders",
    "output_node": false
  },
  "CLIPVisionEncode": {
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "CLIP_VISION_OUTPUT"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIP_VISION_OUTPUT"
    ],
    "name": "CLIPVisionEncode",
    "display_name": "CLIP Vision Encode",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "StyleModelApply": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "style_model": [
          "STYLE_MODEL"
        ],
        "clip_vision_output": [
          "CLIP_VISION_OUTPUT"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "StyleModelApply",
    "display_name": "Apply Style Model",
    "description": "",
    "category": "conditioning/style_model",
    "output_node": false
  },
  "unCLIPConditioning": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "clip_vision_output": [
          "CLIP_VISION_OUTPUT"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "noise_augmentation": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "unCLIPConditioning",
    "display_name": "unCLIPConditioning",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ControlNetApply": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ControlNetApply",
    "display_name": "Apply ControlNet",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ControlNetApplyAdvanced": {
    "input": {
      "required": {
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "positive",
      "negative"
    ],
    "name": "ControlNetApplyAdvanced",
    "display_name": "Apply ControlNet (Advanced)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ControlNetLoader": {
    "input": {
      "required": {
        "control_net_name": [
          [
            "SD1.5/animatediff/v3_sd15_sparsectrl_rgb.ckpt",
            "canny.safetensors",
            "control-lora-canny-rank256.safetensors",
            "control-lora-depth-rank256.safetensors",
            "control-lora-sketch-rank256.safetensors",
            "control_v11e_sd15_ip2p.pth",
            "control_v11f1e_sd15_tile.safetensors",
            "control_v11f1p_sd15_depth.pth",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny.pth",
            "control_v11p_sd15_lineart.pth",
            "control_v11p_sd15_openpose.pth",
            "control_v11p_sd15_seg.pth",
            "control_v1p_sd15_qrcode_monster.safetensors",
            "controlnet-canny-sdxl-1.0-mid.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusion_pytorch_model.fp16.safetensors",
            "mistoLine_fp16.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_softedge.safetensors"
          ]
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "ControlNetLoader",
    "display_name": "Load ControlNet Model",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "DiffControlNetLoader": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "control_net_name": [
          [
            "SD1.5/animatediff/v3_sd15_sparsectrl_rgb.ckpt",
            "canny.safetensors",
            "control-lora-canny-rank256.safetensors",
            "control-lora-depth-rank256.safetensors",
            "control-lora-sketch-rank256.safetensors",
            "control_v11e_sd15_ip2p.pth",
            "control_v11f1e_sd15_tile.safetensors",
            "control_v11f1p_sd15_depth.pth",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny.pth",
            "control_v11p_sd15_lineart.pth",
            "control_v11p_sd15_openpose.pth",
            "control_v11p_sd15_seg.pth",
            "control_v1p_sd15_qrcode_monster.safetensors",
            "controlnet-canny-sdxl-1.0-mid.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusion_pytorch_model.fp16.safetensors",
            "mistoLine_fp16.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_softedge.safetensors"
          ]
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "DiffControlNetLoader",
    "display_name": "Load ControlNet Model (diff)",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "StyleModelLoader": {
    "input": {
      "required": {
        "style_model_name": [
          []
        ]
      }
    },
    "output": [
      "STYLE_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "STYLE_MODEL"
    ],
    "name": "StyleModelLoader",
    "display_name": "Load Style Model",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "CLIPVisionLoader": {
    "input": {
      "required": {
        "clip_name": [
          [
            "CLIP-ViT-H-14-laion2B-s32B-b79K.safetensors"
          ]
        ]
      }
    },
    "output": [
      "CLIP_VISION"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIP_VISION"
    ],
    "name": "CLIPVisionLoader",
    "display_name": "Load CLIP Vision",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "VAEDecodeTiled": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "vae": [
          "VAE"
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "VAEDecodeTiled",
    "display_name": "VAE Decode (Tiled)",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "VAEEncodeTiled": {
    "input": {
      "required": {
        "pixels": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "VAEEncodeTiled",
    "display_name": "VAE Encode (Tiled)",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "unCLIPCheckpointLoader": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "CLIP_VISION"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "CLIP_VISION"
    ],
    "name": "unCLIPCheckpointLoader",
    "display_name": "unCLIPCheckpointLoader",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "GLIGENLoader": {
    "input": {
      "required": {
        "gligen_name": [
          []
        ]
      }
    },
    "output": [
      "GLIGEN"
    ],
    "output_is_list": [false],
    "output_name": [
      "GLIGEN"
    ],
    "name": "GLIGENLoader",
    "display_name": "GLIGENLoader",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "GLIGENTextBoxApply": {
    "input": {
      "required": {
        "conditioning_to": [
          "CONDITIONING"
        ],
        "clip": [
          "CLIP"
        ],
        "gligen_textbox_model": [
          "GLIGEN"
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": true
          }
        ],
        "width": [
          "INT",
          {
            "default": 64,
            "min": 8,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 64,
            "min": 8,
            "max": 16384,
            "step": 8
          }
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "GLIGENTextBoxApply",
    "display_name": "GLIGENTextBoxApply",
    "description": "",
    "category": "conditioning/gligen",
    "output_node": false
  },
  "InpaintModelConditioning": {
    "input": {
      "required": {
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "vae": [
          "VAE"
        ],
        "pixels": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "name": "InpaintModelConditioning",
    "display_name": "InpaintModelConditioning",
    "description": "",
    "category": "conditioning/inpaint",
    "output_node": false
  },
  "CheckpointLoader": {
    "input": {
      "required": {
        "config_name": [
          [
            "anything_v3.yaml",
            "v1-inference.yaml",
            "v1-inference_clip_skip_2.yaml",
            "v1-inference_clip_skip_2_fp16.yaml",
            "v1-inference_fp16.yaml",
            "v1-inpainting-inference.yaml",
            "v2-inference-v.yaml",
            "v2-inference-v_fp32.yaml",
            "v2-inference.yaml",
            "v2-inference_fp32.yaml",
            "v2-inpainting-inference.yaml"
          ]
        ],
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "name": "CheckpointLoader",
    "display_name": "Load Checkpoint With Config (DEPRECATED)",
    "description": "",
    "category": "advanced/loaders",
    "output_node": false
  },
  "DiffusersLoader": {
    "input": {
      "required": {
        "model_path": [
          []
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "name": "DiffusersLoader",
    "display_name": "DiffusersLoader",
    "description": "",
    "category": "advanced/loaders/deprecated",
    "output_node": false
  },
  "LoadLatent": {
    "input": {
      "required": {
        "latent": [
          []
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LoadLatent",
    "display_name": "LoadLatent",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "SaveLatent": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "latents/ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SaveLatent",
    "display_name": "SaveLatent",
    "description": "",
    "category": "_for_testing",
    "output_node": true
  },
  "ConditioningZeroOut": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningZeroOut",
    "display_name": "ConditioningZeroOut",
    "description": "",
    "category": "advanced/conditioning",
    "output_node": false
  },
  "ConditioningSetTimestepRange": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "start": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningSetTimestepRange",
    "display_name": "ConditioningSetTimestepRange",
    "description": "",
    "category": "advanced/conditioning",
    "output_node": false
  },
  "LoraLoaderModelOnly": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "lora_name": [
          [
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -100,
            "max": 100,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "LoraLoaderModelOnly",
    "display_name": "LoraLoaderModelOnly",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "LatentAdd": {
    "input": {
      "required": {
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentAdd",
    "display_name": "LatentAdd",
    "description": "",
    "category": "latent/advanced",
    "output_node": false
  },
  "LatentSubtract": {
    "input": {
      "required": {
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentSubtract",
    "display_name": "LatentSubtract",
    "description": "",
    "category": "latent/advanced",
    "output_node": false
  },
  "LatentMultiply": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentMultiply",
    "display_name": "LatentMultiply",
    "description": "",
    "category": "latent/advanced",
    "output_node": false
  },
  "LatentInterpolate": {
    "input": {
      "required": {
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ],
        "ratio": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentInterpolate",
    "display_name": "LatentInterpolate",
    "description": "",
    "category": "latent/advanced",
    "output_node": false
  },
  "LatentBatch": {
    "input": {
      "required": {
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentBatch",
    "display_name": "LatentBatch",
    "description": "",
    "category": "latent/batch",
    "output_node": false
  },
  "LatentBatchSeedBehavior": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "seed_behavior": [
          [
            "random",
            "fixed"
          ],
          {
            "default": "fixed"
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentBatchSeedBehavior",
    "display_name": "LatentBatchSeedBehavior",
    "description": "",
    "category": "latent/advanced",
    "output_node": false
  },
  "HypernetworkLoader": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "hypernetwork_name": [
          [
            "dantionMarbleStatues_10.pt"
          ]
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "HypernetworkLoader",
    "display_name": "HypernetworkLoader",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "UpscaleModelLoader": {
    "input": {
      "required": {
        "model_name": [
          [
            "4x-lollypop.pth",
            "4xRealWebPhoto_v4_dat2.pth",
            "4x_NMKD-Siax_200k.pth",
            "RealESRGAN_x2.pth",
            "RealESRGAN_x4.pth",
            "RealESRGAN_x8.pth"
          ]
        ]
      }
    },
    "output": [
      "UPSCALE_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "UPSCALE_MODEL"
    ],
    "name": "UpscaleModelLoader",
    "display_name": "Load Upscale Model",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "ImageUpscaleWithModel": {
    "input": {
      "required": {
        "upscale_model": [
          "UPSCALE_MODEL"
        ],
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageUpscaleWithModel",
    "display_name": "Upscale Image (using Model)",
    "description": "",
    "category": "image/upscaling",
    "output_node": false
  },
  "ImageBlend": {
    "input": {
      "required": {
        "image1": [
          "IMAGE"
        ],
        "image2": [
          "IMAGE"
        ],
        "blend_factor": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "blend_mode": [
          [
            "normal",
            "multiply",
            "screen",
            "overlay",
            "soft_light",
            "difference"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageBlend",
    "display_name": "ImageBlend",
    "description": "",
    "category": "image/postprocessing",
    "output_node": false
  },
  "ImageBlur": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "blur_radius": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 31,
            "step": 1
          }
        ],
        "sigma": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 10,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageBlur",
    "display_name": "ImageBlur",
    "description": "",
    "category": "image/postprocessing",
    "output_node": false
  },
  "ImageQuantize": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "colors": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "max": 256,
            "step": 1
          }
        ],
        "dither": [
          [
            "none",
            "floyd-steinberg",
            "bayer-2",
            "bayer-4",
            "bayer-8",
            "bayer-16"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageQuantize",
    "display_name": "ImageQuantize",
    "description": "",
    "category": "image/postprocessing",
    "output_node": false
  },
  "ImageSharpen": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "sharpen_radius": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 31,
            "step": 1
          }
        ],
        "sigma": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 10,
            "step": 0.01
          }
        ],
        "alpha": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 5,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageSharpen",
    "display_name": "ImageSharpen",
    "description": "",
    "category": "image/postprocessing",
    "output_node": false
  },
  "ImageScaleToTotalPixels": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos"
          ]
        ],
        "megapixels": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 16,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageScaleToTotalPixels",
    "display_name": "ImageScaleToTotalPixels",
    "description": "",
    "category": "image/upscaling",
    "output_node": false
  },
  "LatentCompositeMasked": {
    "input": {
      "required": {
        "destination": [
          "LATENT"
        ],
        "source": [
          "LATENT"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "resize_source": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentCompositeMasked",
    "display_name": "LatentCompositeMasked",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "ImageCompositeMasked": {
    "input": {
      "required": {
        "destination": [
          "IMAGE"
        ],
        "source": [
          "IMAGE"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "resize_source": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageCompositeMasked",
    "display_name": "ImageCompositeMasked",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "MaskToImage": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "MaskToImage",
    "display_name": "Convert Mask to Image",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "ImageToMask": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "channel": [
          [
            "red",
            "green",
            "blue",
            "alpha"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "ImageToMask",
    "display_name": "Convert Image to Mask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "ImageColorToMask": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "color": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16777215,
            "step": 1,
            "display": "color"
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "ImageColorToMask",
    "display_name": "ImageColorToMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "SolidMask": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "SolidMask",
    "display_name": "SolidMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "InvertMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "InvertMask",
    "display_name": "InvertMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "CropMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "CropMask",
    "display_name": "CropMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "MaskComposite": {
    "input": {
      "required": {
        "destination": [
          "MASK"
        ],
        "source": [
          "MASK"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "operation": [
          [
            "multiply",
            "add",
            "subtract",
            "and",
            "or",
            "xor"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "MaskComposite",
    "display_name": "MaskComposite",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "FeatherMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "left": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "top": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "right": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "bottom": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "FeatherMask",
    "display_name": "FeatherMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "GrowMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "expand": [
          "INT",
          {
            "default": 0,
            "min": -16384,
            "max": 16384,
            "step": 1
          }
        ],
        "tapered_corners": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "GrowMask",
    "display_name": "GrowMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "ThresholdMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "value": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "ThresholdMask",
    "display_name": "ThresholdMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "PorterDuffImageComposite": {
    "input": {
      "required": {
        "source": [
          "IMAGE"
        ],
        "source_alpha": [
          "MASK"
        ],
        "destination": [
          "IMAGE"
        ],
        "destination_alpha": [
          "MASK"
        ],
        "mode": [
          [
            "ADD",
            "CLEAR",
            "DARKEN",
            "DST",
            "DST_ATOP",
            "DST_IN",
            "DST_OUT",
            "DST_OVER",
            "LIGHTEN",
            "MULTIPLY",
            "OVERLAY",
            "SCREEN",
            "SRC",
            "SRC_ATOP",
            "SRC_IN",
            "SRC_OUT",
            "SRC_OVER",
            "XOR"
          ],
          {
            "default": "DST"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "PorterDuffImageComposite",
    "display_name": "Porter-Duff Image Composite",
    "description": "",
    "category": "mask/compositing",
    "output_node": false
  },
  "SplitImageWithAlpha": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "SplitImageWithAlpha",
    "display_name": "Split Image with Alpha",
    "description": "",
    "category": "mask/compositing",
    "output_node": false
  },
  "JoinImageWithAlpha": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "alpha": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "JoinImageWithAlpha",
    "display_name": "Join Image with Alpha",
    "description": "",
    "category": "mask/compositing",
    "output_node": false
  },
  "RebatchLatents": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [true],
    "output_name": [
      "LATENT"
    ],
    "name": "RebatchLatents",
    "display_name": "Rebatch Latents",
    "description": "",
    "category": "latent/batch",
    "output_node": false
  },
  "RebatchImages": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [true],
    "output_name": [
      "IMAGE"
    ],
    "name": "RebatchImages",
    "display_name": "Rebatch Images",
    "description": "",
    "category": "image/batch",
    "output_node": false
  },
  "ModelMergeSimple": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "ratio": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelMergeSimple",
    "display_name": "ModelMergeSimple",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "ModelMergeBlocks": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "input": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelMergeBlocks",
    "display_name": "ModelMergeBlocks",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "ModelMergeSubtract": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelMergeSubtract",
    "display_name": "ModelMergeSubtract",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "ModelMergeAdd": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelMergeAdd",
    "display_name": "ModelMergeAdd",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "CheckpointSave": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "checkpoints/ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "CheckpointSave",
    "display_name": "CheckpointSave",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": true
  },
  "CLIPMergeSimple": {
    "input": {
      "required": {
        "clip1": [
          "CLIP"
        ],
        "clip2": [
          "CLIP"
        ],
        "ratio": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIP"
    ],
    "name": "CLIPMergeSimple",
    "display_name": "CLIPMergeSimple",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "CLIPMergeSubtract": {
    "input": {
      "required": {
        "clip1": [
          "CLIP"
        ],
        "clip2": [
          "CLIP"
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIP"
    ],
    "name": "CLIPMergeSubtract",
    "display_name": "CLIPMergeSubtract",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "CLIPMergeAdd": {
    "input": {
      "required": {
        "clip1": [
          "CLIP"
        ],
        "clip2": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIP"
    ],
    "name": "CLIPMergeAdd",
    "display_name": "CLIPMergeAdd",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "CLIPSave": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "clip/ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "CLIPSave",
    "display_name": "CLIPSave",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": true
  },
  "VAESave": {
    "input": {
      "required": {
        "vae": [
          "VAE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "vae/ComfyUI_vae"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "VAESave",
    "display_name": "VAESave",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": true
  },
  "TomePatchModel": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ratio": [
          "FLOAT",
          {
            "default": 0.3,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "TomePatchModel",
    "display_name": "TomePatchModel",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "CLIPTextEncodeSDXLRefiner": {
    "input": {
      "required": {
        "ascore": [
          "FLOAT",
          {
            "default": 6,
            "min": 0,
            "max": 1000,
            "step": 0.01
          }
        ],
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 16384
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 16384
          }
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": true
          }
        ],
        "clip": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "CLIPTextEncodeSDXLRefiner",
    "display_name": "CLIPTextEncodeSDXLRefiner",
    "description": "",
    "category": "advanced/conditioning",
    "output_node": false
  },
  "CLIPTextEncodeSDXL": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 16384
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 16384
          }
        ],
        "crop_w": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384
          }
        ],
        "crop_h": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384
          }
        ],
        "target_width": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 16384
          }
        ],
        "target_height": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 16384
          }
        ],
        "text_g": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": true
          }
        ],
        "clip": [
          "CLIP"
        ],
        "text_l": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": true
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "CLIPTextEncodeSDXL",
    "display_name": "CLIPTextEncodeSDXL",
    "description": "",
    "category": "advanced/conditioning",
    "output_node": false
  },
  "Canny": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "low_threshold": [
          "FLOAT",
          {
            "default": 0.4,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ],
        "high_threshold": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Canny",
    "display_name": "Canny",
    "description": "",
    "category": "image/preprocessors",
    "output_node": false
  },
  "FreeU": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "b1": [
          "FLOAT",
          {
            "default": 1.1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "b2": [
          "FLOAT",
          {
            "default": 1.2,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "s1": [
          "FLOAT",
          {
            "default": 0.9,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "s2": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "FreeU",
    "display_name": "FreeU",
    "description": "",
    "category": "model_patches",
    "output_node": false
  },
  "FreeU_V2": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "b1": [
          "FLOAT",
          {
            "default": 1.3,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "b2": [
          "FLOAT",
          {
            "default": 1.4,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "s1": [
          "FLOAT",
          {
            "default": 0.9,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "s2": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "FreeU_V2",
    "display_name": "FreeU_V2",
    "description": "",
    "category": "model_patches",
    "output_node": false
  },
  "SamplerCustom": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "add_noise": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.1,
            "round": 0.01
          }
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "sampler": [
          "SAMPLER"
        ],
        "sigmas": [
          "SIGMAS"
        ],
        "latent_image": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "output",
      "denoised_output"
    ],
    "name": "SamplerCustom",
    "display_name": "SamplerCustom",
    "description": "",
    "category": "sampling/custom_sampling",
    "output_node": false
  },
  "BasicScheduler": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SIGMAS"
    ],
    "name": "BasicScheduler",
    "display_name": "BasicScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "KarrasScheduler": {
    "input": {
      "required": {
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "sigma_max": [
          "FLOAT",
          {
            "default": 14.614642,
            "min": 0,
            "max": 5000,
            "step": 0.01,
            "round": false
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "default": 0.0291675,
            "min": 0,
            "max": 5000,
            "step": 0.01,
            "round": false
          }
        ],
        "rho": [
          "FLOAT",
          {
            "default": 7,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SIGMAS"
    ],
    "name": "KarrasScheduler",
    "display_name": "KarrasScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "ExponentialScheduler": {
    "input": {
      "required": {
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "sigma_max": [
          "FLOAT",
          {
            "default": 14.614642,
            "min": 0,
            "max": 5000,
            "step": 0.01,
            "round": false
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "default": 0.0291675,
            "min": 0,
            "max": 5000,
            "step": 0.01,
            "round": false
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SIGMAS"
    ],
    "name": "ExponentialScheduler",
    "display_name": "ExponentialScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "PolyexponentialScheduler": {
    "input": {
      "required": {
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "sigma_max": [
          "FLOAT",
          {
            "default": 14.614642,
            "min": 0,
            "max": 5000,
            "step": 0.01,
            "round": false
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "default": 0.0291675,
            "min": 0,
            "max": 5000,
            "step": 0.01,
            "round": false
          }
        ],
        "rho": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SIGMAS"
    ],
    "name": "PolyexponentialScheduler",
    "display_name": "PolyexponentialScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "VPScheduler": {
    "input": {
      "required": {
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "beta_d": [
          "FLOAT",
          {
            "default": 19.9,
            "min": 0,
            "max": 5000,
            "step": 0.01,
            "round": false
          }
        ],
        "beta_min": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 5000,
            "step": 0.01,
            "round": false
          }
        ],
        "eps_s": [
          "FLOAT",
          {
            "default": 0.001,
            "min": 0,
            "max": 1,
            "step": 0.0001,
            "round": false
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SIGMAS"
    ],
    "name": "VPScheduler",
    "display_name": "VPScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "SDTurboScheduler": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "steps": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SIGMAS"
    ],
    "name": "SDTurboScheduler",
    "display_name": "SDTurboScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "KSamplerSelect": {
    "input": {
      "required": {
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ]
      }
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [false],
    "output_name": [
      "SAMPLER"
    ],
    "name": "KSamplerSelect",
    "display_name": "KSamplerSelect",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SamplerEulerAncestral": {
    "input": {
      "required": {
        "eta": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ]
      }
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [false],
    "output_name": [
      "SAMPLER"
    ],
    "name": "SamplerEulerAncestral",
    "display_name": "SamplerEulerAncestral",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SamplerLMS": {
    "input": {
      "required": {
        "order": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 100
          }
        ]
      }
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [false],
    "output_name": [
      "SAMPLER"
    ],
    "name": "SamplerLMS",
    "display_name": "SamplerLMS",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SamplerDPMPP_3M_SDE": {
    "input": {
      "required": {
        "eta": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "noise_device": [
          [
            "gpu",
            "cpu"
          ]
        ]
      }
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [false],
    "output_name": [
      "SAMPLER"
    ],
    "name": "SamplerDPMPP_3M_SDE",
    "display_name": "SamplerDPMPP_3M_SDE",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SamplerDPMPP_2M_SDE": {
    "input": {
      "required": {
        "solver_type": [
          [
            "midpoint",
            "heun"
          ]
        ],
        "eta": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "noise_device": [
          [
            "gpu",
            "cpu"
          ]
        ]
      }
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [false],
    "output_name": [
      "SAMPLER"
    ],
    "name": "SamplerDPMPP_2M_SDE",
    "display_name": "SamplerDPMPP_2M_SDE",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SamplerDPMPP_SDE": {
    "input": {
      "required": {
        "eta": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "r": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "noise_device": [
          [
            "gpu",
            "cpu"
          ]
        ]
      }
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [false],
    "output_name": [
      "SAMPLER"
    ],
    "name": "SamplerDPMPP_SDE",
    "display_name": "SamplerDPMPP_SDE",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SamplerDPMAdaptative": {
    "input": {
      "required": {
        "order": [
          "INT",
          {
            "default": 3,
            "min": 2,
            "max": 3
          }
        ],
        "rtol": [
          "FLOAT",
          {
            "default": 0.05,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "atol": [
          "FLOAT",
          {
            "default": 0.0078,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "h_init": [
          "FLOAT",
          {
            "default": 0.05,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "pcoeff": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "icoeff": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "dcoeff": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "accept_safety": [
          "FLOAT",
          {
            "default": 0.81,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "eta": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ]
      }
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [false],
    "output_name": [
      "SAMPLER"
    ],
    "name": "SamplerDPMAdaptative",
    "display_name": "SamplerDPMAdaptative",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SplitSigmas": {
    "input": {
      "required": {
        "sigmas": [
          "SIGMAS"
        ],
        "step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "SIGMAS",
      "SIGMAS"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "high_sigmas",
      "low_sigmas"
    ],
    "name": "SplitSigmas",
    "display_name": "SplitSigmas",
    "description": "",
    "category": "sampling/custom_sampling/sigmas",
    "output_node": false
  },
  "SplitSigmasDenoise": {
    "input": {
      "required": {
        "sigmas": [
          "SIGMAS"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "SIGMAS",
      "SIGMAS"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "high_sigmas",
      "low_sigmas"
    ],
    "name": "SplitSigmasDenoise",
    "display_name": "SplitSigmasDenoise",
    "description": "",
    "category": "sampling/custom_sampling/sigmas",
    "output_node": false
  },
  "FlipSigmas": {
    "input": {
      "required": {
        "sigmas": [
          "SIGMAS"
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SIGMAS"
    ],
    "name": "FlipSigmas",
    "display_name": "FlipSigmas",
    "description": "",
    "category": "sampling/custom_sampling/sigmas",
    "output_node": false
  },
  "CFGGuider": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.1,
            "round": 0.01
          }
        ]
      }
    },
    "output": [
      "GUIDER"
    ],
    "output_is_list": [false],
    "output_name": [
      "GUIDER"
    ],
    "name": "CFGGuider",
    "display_name": "CFGGuider",
    "description": "",
    "category": "sampling/custom_sampling/guiders",
    "output_node": false
  },
  "DualCFGGuider": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "cond1": [
          "CONDITIONING"
        ],
        "cond2": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "cfg_conds": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.1,
            "round": 0.01
          }
        ],
        "cfg_cond2_negative": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.1,
            "round": 0.01
          }
        ]
      }
    },
    "output": [
      "GUIDER"
    ],
    "output_is_list": [false],
    "output_name": [
      "GUIDER"
    ],
    "name": "DualCFGGuider",
    "display_name": "DualCFGGuider",
    "description": "",
    "category": "sampling/custom_sampling/guiders",
    "output_node": false
  },
  "BasicGuider": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "conditioning": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "GUIDER"
    ],
    "output_is_list": [false],
    "output_name": [
      "GUIDER"
    ],
    "name": "BasicGuider",
    "display_name": "BasicGuider",
    "description": "",
    "category": "sampling/custom_sampling/guiders",
    "output_node": false
  },
  "RandomNoise": {
    "input": {
      "required": {
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "NOISE"
    ],
    "output_is_list": [false],
    "output_name": [
      "NOISE"
    ],
    "name": "RandomNoise",
    "display_name": "RandomNoise",
    "description": "",
    "category": "sampling/custom_sampling/noise",
    "output_node": false
  },
  "DisableNoise": {
    "input": {
      "required": {

      }
    },
    "output": [
      "NOISE"
    ],
    "output_is_list": [false],
    "output_name": [
      "NOISE"
    ],
    "name": "DisableNoise",
    "display_name": "DisableNoise",
    "description": "",
    "category": "sampling/custom_sampling/noise",
    "output_node": false
  },
  "AddNoise": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "noise": [
          "NOISE"
        ],
        "sigmas": [
          "SIGMAS"
        ],
        "latent_image": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "AddNoise",
    "display_name": "AddNoise",
    "description": "",
    "category": "_for_testing/custom_sampling/noise",
    "output_node": false
  },
  "SamplerCustomAdvanced": {
    "input": {
      "required": {
        "noise": [
          "NOISE"
        ],
        "guider": [
          "GUIDER"
        ],
        "sampler": [
          "SAMPLER"
        ],
        "sigmas": [
          "SIGMAS"
        ],
        "latent_image": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "output",
      "denoised_output"
    ],
    "name": "SamplerCustomAdvanced",
    "display_name": "SamplerCustomAdvanced",
    "description": "",
    "category": "sampling/custom_sampling",
    "output_node": false
  },
  "HyperTile": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "tile_size": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "max": 2048
          }
        ],
        "swap_size": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 128
          }
        ],
        "max_depth": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10
          }
        ],
        "scale_depth": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "HyperTile",
    "display_name": "HyperTile",
    "description": "",
    "category": "model_patches",
    "output_node": false
  },
  "ModelSamplingDiscrete": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "sampling": [
          [
            "eps",
            "v_prediction",
            "lcm",
            "x0"
          ]
        ],
        "zsnr": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelSamplingDiscrete",
    "display_name": "ModelSamplingDiscrete",
    "description": "",
    "category": "advanced/model",
    "output_node": false
  },
  "ModelSamplingContinuousEDM": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "sampling": [
          [
            "v_prediction",
            "edm_playground_v2.5",
            "eps"
          ]
        ],
        "sigma_max": [
          "FLOAT",
          {
            "default": 120,
            "min": 0,
            "max": 1000,
            "step": 0.001,
            "round": false
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "default": 0.002,
            "min": 0,
            "max": 1000,
            "step": 0.001,
            "round": false
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelSamplingContinuousEDM",
    "display_name": "ModelSamplingContinuousEDM",
    "description": "",
    "category": "advanced/model",
    "output_node": false
  },
  "ModelSamplingStableCascade": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "shift": [
          "FLOAT",
          {
            "default": 2,
            "min": 0,
            "max": 100,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelSamplingStableCascade",
    "display_name": "ModelSamplingStableCascade",
    "description": "",
    "category": "advanced/model",
    "output_node": false
  },
  "RescaleCFG": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "RescaleCFG",
    "display_name": "RescaleCFG",
    "description": "",
    "category": "advanced/model",
    "output_node": false
  },
  "PatchModelAddDownscale": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "block_number": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 32,
            "step": 1
          }
        ],
        "downscale_factor": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.1,
            "max": 9,
            "step": 0.001
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 0.35,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "downscale_after_skip": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "downscale_method": [
          [
            "bicubic",
            "nearest-exact",
            "bilinear",
            "area",
            "bislerp"
          ]
        ],
        "upscale_method": [
          [
            "bicubic",
            "nearest-exact",
            "bilinear",
            "area",
            "bislerp"
          ]
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "PatchModelAddDownscale",
    "display_name": "PatchModelAddDownscale (Kohya Deep Shrink)",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "ImageCrop": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageCrop",
    "display_name": "ImageCrop",
    "description": "",
    "category": "image/transform",
    "output_node": false
  },
  "RepeatImageBatch": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "amount": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "RepeatImageBatch",
    "display_name": "RepeatImageBatch",
    "description": "",
    "category": "image/batch",
    "output_node": false
  },
  "ImageFromBatch": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "batch_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4095
          }
        ],
        "length": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageFromBatch",
    "display_name": "ImageFromBatch",
    "description": "",
    "category": "image/batch",
    "output_node": false
  },
  "SaveAnimatedWEBP": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ],
        "fps": [
          "FLOAT",
          {
            "default": 6,
            "min": 0.01,
            "max": 1000,
            "step": 0.01
          }
        ],
        "lossless": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "quality": [
          "INT",
          {
            "default": 80,
            "min": 0,
            "max": 100
          }
        ],
        "method": [
          [
            "default",
            "fastest",
            "slowest"
          ]
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SaveAnimatedWEBP",
    "display_name": "SaveAnimatedWEBP",
    "description": "",
    "category": "image/animation",
    "output_node": true
  },
  "SaveAnimatedPNG": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ],
        "fps": [
          "FLOAT",
          {
            "default": 6,
            "min": 0.01,
            "max": 1000,
            "step": 0.01
          }
        ],
        "compress_level": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 9
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SaveAnimatedPNG",
    "display_name": "SaveAnimatedPNG",
    "description": "",
    "category": "image/animation",
    "output_node": true
  },
  "ImageOnlyCheckpointLoader": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP_VISION",
      "VAE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CLIP_VISION",
      "VAE"
    ],
    "name": "ImageOnlyCheckpointLoader",
    "display_name": "Image Only Checkpoint Loader (img2vid model)",
    "description": "",
    "category": "loaders/video_models",
    "output_node": false
  },
  "SVD_img2vid_Conditioning": {
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "init_image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 576,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "video_frames": [
          "INT",
          {
            "default": 14,
            "min": 1,
            "max": 4096
          }
        ],
        "motion_bucket_id": [
          "INT",
          {
            "default": 127,
            "min": 1,
            "max": 1023
          }
        ],
        "fps": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 1024
          }
        ],
        "augmentation_level": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "name": "SVD_img2vid_Conditioning",
    "display_name": "SVD_img2vid_Conditioning",
    "description": "",
    "category": "conditioning/video_models",
    "output_node": false
  },
  "VideoLinearCFGGuidance": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "min_cfg": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.5,
            "round": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "VideoLinearCFGGuidance",
    "display_name": "VideoLinearCFGGuidance",
    "description": "",
    "category": "sampling/video_models",
    "output_node": false
  },
  "VideoTriangleCFGGuidance": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "min_cfg": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.5,
            "round": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "VideoTriangleCFGGuidance",
    "display_name": "VideoTriangleCFGGuidance",
    "description": "",
    "category": "sampling/video_models",
    "output_node": false
  },
  "ImageOnlyCheckpointSave": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ],
        "vae": [
          "VAE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "checkpoints/ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ImageOnlyCheckpointSave",
    "display_name": "ImageOnlyCheckpointSave",
    "description": "",
    "category": "_for_testing",
    "output_node": true
  },
  "SelfAttentionGuidance": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "scale": [
          "FLOAT",
          {
            "default": 0.5,
            "min": -2,
            "max": 5,
            "step": 0.1
          }
        ],
        "blur_sigma": [
          "FLOAT",
          {
            "default": 2,
            "min": 0,
            "max": 10,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "SelfAttentionGuidance",
    "display_name": "Self-Attention Guidance",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "PerpNeg": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "empty_conditioning": [
          "CONDITIONING"
        ],
        "neg_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "PerpNeg",
    "display_name": "Perp-Neg (DEPRECATED by PerpNegGuider)",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "PerpNegGuider": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "empty_conditioning": [
          "CONDITIONING"
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.1,
            "round": 0.01
          }
        ],
        "neg_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "GUIDER"
    ],
    "output_is_list": [false],
    "output_name": [
      "GUIDER"
    ],
    "name": "PerpNegGuider",
    "display_name": "PerpNegGuider",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "StableZero123_Conditioning": {
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "init_image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ],
        "elevation": [
          "FLOAT",
          {
            "default": 0,
            "min": -180,
            "max": 180,
            "step": 0.1,
            "round": false
          }
        ],
        "azimuth": [
          "FLOAT",
          {
            "default": 0,
            "min": -180,
            "max": 180,
            "step": 0.1,
            "round": false
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "name": "StableZero123_Conditioning",
    "display_name": "StableZero123_Conditioning",
    "description": "",
    "category": "conditioning/3d_models",
    "output_node": false
  },
  "StableZero123_Conditioning_Batched": {
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "init_image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ],
        "elevation": [
          "FLOAT",
          {
            "default": 0,
            "min": -180,
            "max": 180,
            "step": 0.1,
            "round": false
          }
        ],
        "azimuth": [
          "FLOAT",
          {
            "default": 0,
            "min": -180,
            "max": 180,
            "step": 0.1,
            "round": false
          }
        ],
        "elevation_batch_increment": [
          "FLOAT",
          {
            "default": 0,
            "min": -180,
            "max": 180,
            "step": 0.1,
            "round": false
          }
        ],
        "azimuth_batch_increment": [
          "FLOAT",
          {
            "default": 0,
            "min": -180,
            "max": 180,
            "step": 0.1,
            "round": false
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "name": "StableZero123_Conditioning_Batched",
    "display_name": "StableZero123_Conditioning_Batched",
    "description": "",
    "category": "conditioning/3d_models",
    "output_node": false
  },
  "SV3D_Conditioning": {
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "init_image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "default": 576,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 576,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "video_frames": [
          "INT",
          {
            "default": 21,
            "min": 1,
            "max": 4096
          }
        ],
        "elevation": [
          "FLOAT",
          {
            "default": 0,
            "min": -90,
            "max": 90,
            "step": 0.1,
            "round": false
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "name": "SV3D_Conditioning",
    "display_name": "SV3D_Conditioning",
    "description": "",
    "category": "conditioning/3d_models",
    "output_node": false
  },
  "SD_4XUpscale_Conditioning": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "scale_ratio": [
          "FLOAT",
          {
            "default": 4,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "noise_augmentation": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "name": "SD_4XUpscale_Conditioning",
    "display_name": "SD_4XUpscale_Conditioning",
    "description": "",
    "category": "conditioning/upscale_diffusion",
    "output_node": false
  },
  "PhotoMakerLoader": {
    "input": {
      "required": {
        "photomaker_model_name": [
          [
            "photomaker-v1.bin"
          ]
        ]
      }
    },
    "output": [
      "PHOTOMAKER"
    ],
    "output_is_list": [false],
    "output_name": [
      "PHOTOMAKER"
    ],
    "name": "PhotoMakerLoader",
    "display_name": "PhotoMakerLoader",
    "description": "",
    "category": "_for_testing/photomaker",
    "output_node": false
  },
  "PhotoMakerEncode": {
    "input": {
      "required": {
        "photomaker": [
          "PHOTOMAKER"
        ],
        "image": [
          "IMAGE"
        ],
        "clip": [
          "CLIP"
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": true,
            "default": "photograph of photomaker"
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "PhotoMakerEncode",
    "display_name": "PhotoMakerEncode",
    "description": "",
    "category": "_for_testing/photomaker",
    "output_node": false
  },
  "CLIPTextEncodeControlnet": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "conditioning": [
          "CONDITIONING"
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": true
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "CLIPTextEncodeControlnet",
    "display_name": "CLIPTextEncodeControlnet",
    "description": "",
    "category": "_for_testing/conditioning",
    "output_node": false
  },
  "Morphology": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "operation": [
          [
            "erode",
            "dilate",
            "open",
            "close",
            "gradient",
            "bottom_hat",
            "top_hat"
          ]
        ],
        "kernel_size": [
          "INT",
          {
            "default": 3,
            "min": 3,
            "max": 999,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Morphology",
    "display_name": "ImageMorphology",
    "description": "",
    "category": "image/postprocessing",
    "output_node": false
  },
  "StableCascade_EmptyLatentImage": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 256,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024,
            "min": 256,
            "max": 16384,
            "step": 8
          }
        ],
        "compression": [
          "INT",
          {
            "default": 42,
            "min": 4,
            "max": 128,
            "step": 1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "stage_c",
      "stage_b"
    ],
    "name": "StableCascade_EmptyLatentImage",
    "display_name": "StableCascade_EmptyLatentImage",
    "description": "",
    "category": "latent/stable_cascade",
    "output_node": false
  },
  "StableCascade_StageB_Conditioning": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "stage_c": [
          "LATENT"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "StableCascade_StageB_Conditioning",
    "display_name": "StableCascade_StageB_Conditioning",
    "description": "",
    "category": "conditioning/stable_cascade",
    "output_node": false
  },
  "StableCascade_StageC_VAEEncode": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "compression": [
          "INT",
          {
            "default": 42,
            "min": 4,
            "max": 128,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "stage_c",
      "stage_b"
    ],
    "name": "StableCascade_StageC_VAEEncode",
    "display_name": "StableCascade_StageC_VAEEncode",
    "description": "",
    "category": "latent/stable_cascade",
    "output_node": false
  },
  "StableCascade_SuperResolutionControlnet": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "controlnet_input",
      "stage_c",
      "stage_b"
    ],
    "name": "StableCascade_SuperResolutionControlnet",
    "display_name": "StableCascade_SuperResolutionControlnet",
    "description": "",
    "category": "_for_testing/stable_cascade",
    "output_node": false
  },
  "DifferentialDiffusion": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "DifferentialDiffusion",
    "display_name": "Differential Diffusion",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "InstructPixToPixConditioning": {
    "input": {
      "required": {
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "vae": [
          "VAE"
        ],
        "pixels": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "name": "InstructPixToPixConditioning",
    "display_name": "InstructPixToPixConditioning",
    "description": "",
    "category": "conditioning/instructpix2pix",
    "output_node": false
  },
  "ModelMergeSD1": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "time_embed.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "label_emb.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.3.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.6.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.9.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.10.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.11.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.6.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.7.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.8.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.9.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.10.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.11.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "out.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelMergeSD1",
    "display_name": "ModelMergeSD1",
    "description": "",
    "category": "advanced/model_merging/model_specific",
    "output_node": false
  },
  "ModelMergeSD2": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "time_embed.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "label_emb.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.3.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.6.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.9.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.10.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.11.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.6.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.7.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.8.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.9.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.10.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.11.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "out.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelMergeSD2",
    "display_name": "ModelMergeSD2",
    "description": "",
    "category": "advanced/model_merging/model_specific",
    "output_node": false
  },
  "ModelMergeSDXL": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "time_embed.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "label_emb.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.0": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.6": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.0": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.6": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.7": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.8": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "out.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelMergeSDXL",
    "display_name": "ModelMergeSDXL",
    "description": "",
    "category": "advanced/model_merging/model_specific",
    "output_node": false
  },
  "PerturbedAttentionGuidance": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "scale": [
          "FLOAT",
          {
            "default": 3,
            "min": 0,
            "max": 100,
            "step": 0.1,
            "round": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "PerturbedAttentionGuidance",
    "display_name": "PerturbedAttentionGuidance",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "AlignYourStepsScheduler": {
    "input": {
      "required": {
        "model_type": [
          [
            "SD1",
            "SDXL",
            "SVD"
          ]
        ],
        "steps": [
          "INT",
          {
            "default": 10,
            "min": 10,
            "max": 10000
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SIGMAS"
    ],
    "name": "AlignYourStepsScheduler",
    "display_name": "AlignYourStepsScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "UNetSelfAttentionMultiply": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "UNetSelfAttentionMultiply",
    "display_name": "UNetSelfAttentionMultiply",
    "description": "",
    "category": "_for_testing/attention_experiments",
    "output_node": false
  },
  "UNetCrossAttentionMultiply": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "UNetCrossAttentionMultiply",
    "display_name": "UNetCrossAttentionMultiply",
    "description": "",
    "category": "_for_testing/attention_experiments",
    "output_node": false
  },
  "CLIPAttentionMultiply": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIP"
    ],
    "name": "CLIPAttentionMultiply",
    "display_name": "CLIPAttentionMultiply",
    "description": "",
    "category": "_for_testing/attention_experiments",
    "output_node": false
  },
  "UNetTemporalAttentionMultiply": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "self_structural": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "self_temporal": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "cross_structural": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "cross_temporal": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "UNetTemporalAttentionMultiply",
    "display_name": "UNetTemporalAttentionMultiply",
    "description": "",
    "category": "_for_testing/attention_experiments",
    "output_node": false
  },
  "SamplerLCMUpscale": {
    "input": {
      "required": {
        "scale_ratio": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 20,
            "step": 0.01
          }
        ],
        "scale_steps": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "max": 1000,
            "step": 1
          }
        ],
        "upscale_method": [
          [
            "bislerp",
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic"
          ]
        ]
      }
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [false],
    "output_name": [
      "SAMPLER"
    ],
    "name": "SamplerLCMUpscale",
    "display_name": "SamplerLCMUpscale",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "WebcamCapture": {
    "input": {
      "required": {
        "image": [
          "WEBCAM",
          {

          }
        ],
        "width": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "capture_on_queue": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "WebcamCapture",
    "display_name": "Webcam Capture",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "SaveImageWebsocket": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SaveImageWebsocket",
    "display_name": "SaveImageWebsocket",
    "description": "",
    "category": "api/image",
    "output_node": true
  },
  "IPAdapter": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "weight_type": [
          [
            "standard",
            "prompt is more important",
            "style transfer"
          ]
        ]
      },
      "optional": {
        "attn_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "IPAdapter",
    "display_name": "IPAdapter",
    "description": "",
    "category": "ipadapter",
    "output_node": false
  },
  "IPAdapterAdvanced": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 5,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer",
            "composition",
            "strong style transfer"
          ]
        ],
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "IPAdapterAdvanced",
    "display_name": "IPAdapter Advanced",
    "description": "",
    "category": "ipadapter",
    "output_node": false
  },
  "IPAdapterBatch": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 5,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer",
            "composition",
            "strong style transfer"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ],
        "encode_batch_size": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096
          }
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "IPAdapterBatch",
    "display_name": "IPAdapter Batch (Adv.)",
    "description": "",
    "category": "ipadapter",
    "output_node": false
  },
  "IPAdapterFaceID": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_faceidv2": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 5,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer",
            "composition",
            "strong style transfer"
          ]
        ],
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ],
        "insightface": [
          "INSIGHTFACE"
        ]
      }
    },
    "output": [
      "MODEL",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL",
      "face_image"
    ],
    "name": "IPAdapterFaceID",
    "display_name": "IPAdapter FaceID",
    "description": "",
    "category": "ipadapter/faceid",
    "output_node": false
  },
  "IPAAdapterFaceIDBatch": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_faceidv2": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 5,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer",
            "composition",
            "strong style transfer"
          ]
        ],
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ],
        "insightface": [
          "INSIGHTFACE"
        ]
      }
    },
    "output": [
      "MODEL",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL",
      "face_image"
    ],
    "name": "IPAAdapterFaceIDBatch",
    "display_name": "IPAdapter FaceID Batch",
    "description": "",
    "category": "ipadapter/faceid",
    "output_node": false
  },
  "IPAdapterTiled": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer",
            "composition",
            "strong style transfer"
          ]
        ],
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "sharpening": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ]
      }
    },
    "output": [
      "MODEL",
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "tiles",
      "masks"
    ],
    "name": "IPAdapterTiled",
    "display_name": "IPAdapter Tiled",
    "description": "",
    "category": "ipadapter/tiled",
    "output_node": false
  },
  "IPAdapterTiledBatch": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer",
            "composition",
            "strong style transfer"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "sharpening": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ],
        "encode_batch_size": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096
          }
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ]
      }
    },
    "output": [
      "MODEL",
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "tiles",
      "masks"
    ],
    "name": "IPAdapterTiledBatch",
    "display_name": "IPAdapter Tiled Batch",
    "description": "",
    "category": "ipadapter/tiled",
    "output_node": false
  },
  "IPAdapterEmbeds": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "pos_embed": [
          "EMBEDS"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer",
            "composition",
            "strong style transfer"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ]
      },
      "optional": {
        "neg_embed": [
          "EMBEDS"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "IPAdapterEmbeds",
    "display_name": "IPAdapter Embeds",
    "description": "",
    "category": "ipadapter/embeds",
    "output_node": false
  },
  "IPAdapterEmbedsBatch": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "pos_embed": [
          "EMBEDS"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer",
            "composition",
            "strong style transfer"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ]
      },
      "optional": {
        "neg_embed": [
          "EMBEDS"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "IPAdapterEmbedsBatch",
    "display_name": "IPAdapter Embeds Batch",
    "description": "",
    "category": "ipadapter/embeds",
    "output_node": false
  },
  "IPAdapterStyleComposition": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image_style": [
          "IMAGE"
        ],
        "image_composition": [
          "IMAGE"
        ],
        "weight_style": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 5,
            "step": 0.05
          }
        ],
        "weight_composition": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 5,
            "step": 0.05
          }
        ],
        "expand_style": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average"
          ],
          {
            "default": "average"
          }
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "IPAdapterStyleComposition",
    "display_name": "IPAdapter Style & Composition SDXL",
    "description": "",
    "category": "ipadapter/style_composition",
    "output_node": false
  },
  "IPAdapterStyleCompositionBatch": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image_style": [
          "IMAGE"
        ],
        "image_composition": [
          "IMAGE"
        ],
        "weight_style": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 5,
            "step": 0.05
          }
        ],
        "weight_composition": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 5,
            "step": 0.05
          }
        ],
        "expand_style": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "IPAdapterStyleCompositionBatch",
    "display_name": "IPAdapter Style & Composition Batch SDXL",
    "description": "",
    "category": "ipadapter/style_composition",
    "output_node": false
  },
  "IPAdapterMS": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 5,
            "step": 0.05
          }
        ],
        "weight_faceidv2": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 5,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer",
            "composition",
            "strong style transfer"
          ]
        ],
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ],
        "layer_weights": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ],
        "insightface": [
          "INSIGHTFACE"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "IPAdapterMS",
    "display_name": "IPAdapter Mad Scientist",
    "description": "",
    "category": "ipadapter/dev",
    "output_node": false
  },
  "IPAdapterFromParams": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "ipadapter_params": [
          "IPADAPTER_PARAMS"
        ],
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average"
          ]
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "IPAdapterFromParams",
    "display_name": "IPAdapter from Params",
    "description": "",
    "category": "ipadapter/params",
    "output_node": false
  },
  "IPAdapterUnifiedLoader": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "preset": [
          [
            "LIGHT - SD1.5 only (low strength)",
            "STANDARD (medium strength)",
            "VIT-G (medium strength)",
            "PLUS (high strength)",
            "PLUS FACE (portraits)",
            "FULL FACE - SD1.5 only (portraits stronger)"
          ]
        ]
      },
      "optional": {
        "ipadapter": [
          "IPADAPTER"
        ]
      }
    },
    "output": [
      "MODEL",
      "IPADAPTER"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "model",
      "ipadapter"
    ],
    "name": "IPAdapterUnifiedLoader",
    "display_name": "IPAdapter Unified Loader",
    "description": "",
    "category": "ipadapter",
    "output_node": false
  },
  "IPAdapterUnifiedLoaderFaceID": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "preset": [
          [
            "FACEID",
            "FACEID PLUS - SD1.5 only",
            "FACEID PLUS V2",
            "FACEID PORTRAIT (style transfer)",
            "FACEID PORTRAIT UNNORM - SDXL only (strong)"
          ]
        ],
        "lora_strength": [
          "FLOAT",
          {
            "default": 0.6,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "provider": [
          [
            "CPU",
            "CUDA",
            "ROCM",
            "DirectML",
            "OpenVINO",
            "CoreML"
          ]
        ]
      },
      "optional": {
        "ipadapter": [
          "IPADAPTER"
        ]
      }
    },
    "output": [
      "MODEL",
      "IPADAPTER"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL",
      "ipadapter"
    ],
    "name": "IPAdapterUnifiedLoaderFaceID",
    "display_name": "IPAdapter Unified Loader FaceID",
    "description": "",
    "category": "ipadapter/faceid",
    "output_node": false
  },
  "IPAdapterModelLoader": {
    "input": {
      "required": {
        "ipadapter_file": [
          [
            "ip-adapter-faceid-plus_sd15.bin",
            "ip-adapter-faceid-plusv2_sd15.bin",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl.bin",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid-portrait-v11_sd15.bin",
            "ip-adapter-faceid-portrait_sdxl.bin",
            "ip-adapter-faceid_sd15.bin",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl.bin",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "ip-adapter-full-face_sd15.safetensors",
            "ip-adapter-plus-face_sd15.safetensors",
            "ip-adapter-plus-face_sdxl_vit-h.safetensors",
            "ip-adapter-plus_sd15.safetensors",
            "ip-adapter-plus_sdxl_vit-h.safetensors",
            "ip-adapter.bin",
            "ip-adapter_sd15.safetensors",
            "ip-adapter_sd15_light_v11.bin",
            "ip-adapter_sd15_vit-G.safetensors",
            "ip-adapter_sdxl.safetensors",
            "ip-adapter_sdxl_vit-h.safetensors"
          ]
        ]
      }
    },
    "output": [
      "IPADAPTER"
    ],
    "output_is_list": [false],
    "output_name": [
      "IPADAPTER"
    ],
    "name": "IPAdapterModelLoader",
    "display_name": "IPAdapter Model Loader",
    "description": "",
    "category": "ipadapter/loaders",
    "output_node": false
  },
  "IPAdapterInsightFaceLoader": {
    "input": {
      "required": {
        "provider": [
          [
            "CPU",
            "CUDA",
            "ROCM"
          ]
        ]
      }
    },
    "output": [
      "INSIGHTFACE"
    ],
    "output_is_list": [false],
    "output_name": [
      "INSIGHTFACE"
    ],
    "name": "IPAdapterInsightFaceLoader",
    "display_name": "IPAdapter InsightFace Loader",
    "description": "",
    "category": "ipadapter/loaders",
    "output_node": false
  },
  "IPAdapterUnifiedLoaderCommunity": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "preset": [
          [
            "Composition"
          ]
        ]
      },
      "optional": {
        "ipadapter": [
          "IPADAPTER"
        ]
      }
    },
    "output": [
      "MODEL",
      "IPADAPTER"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "model",
      "ipadapter"
    ],
    "name": "IPAdapterUnifiedLoaderCommunity",
    "display_name": "IPAdapter Unified Loader Community",
    "description": "",
    "category": "ipadapter/loaders",
    "output_node": false
  },
  "IPAdapterEncoder": {
    "input": {
      "required": {
        "ipadapter": [
          "IPADAPTER"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ]
      }
    },
    "output": [
      "EMBEDS",
      "EMBEDS"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "pos_embed",
      "neg_embed"
    ],
    "name": "IPAdapterEncoder",
    "display_name": "IPAdapter Encoder",
    "description": "",
    "category": "ipadapter/embeds",
    "output_node": false
  },
  "IPAdapterCombineEmbeds": {
    "input": {
      "required": {
        "embed1": [
          "EMBEDS"
        ],
        "method": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average",
            "max",
            "min"
          ]
        ]
      },
      "optional": {
        "embed2": [
          "EMBEDS"
        ],
        "embed3": [
          "EMBEDS"
        ],
        "embed4": [
          "EMBEDS"
        ],
        "embed5": [
          "EMBEDS"
        ]
      }
    },
    "output": [
      "EMBEDS"
    ],
    "output_is_list": [false],
    "output_name": [
      "EMBEDS"
    ],
    "name": "IPAdapterCombineEmbeds",
    "display_name": "IPAdapter Combine Embeds",
    "description": "",
    "category": "ipadapter/embeds",
    "output_node": false
  },
  "IPAdapterNoise": {
    "input": {
      "required": {
        "type": [
          [
            "fade",
            "dissolve",
            "gaussian",
            "shuffle"
          ]
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "blur": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 32,
            "step": 1
          }
        ]
      },
      "optional": {
        "image_optional": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "IPAdapterNoise",
    "display_name": "IPAdapter Noise",
    "description": "",
    "category": "ipadapter/utils",
    "output_node": false
  },
  "PrepImageForClipVision": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "interpolation": [
          [
            "LANCZOS",
            "BICUBIC",
            "HAMMING",
            "BILINEAR",
            "BOX",
            "NEAREST"
          ]
        ],
        "crop_position": [
          [
            "top",
            "bottom",
            "left",
            "right",
            "center",
            "pad"
          ]
        ],
        "sharpening": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "PrepImageForClipVision",
    "display_name": "Prep Image For ClipVision",
    "description": "",
    "category": "ipadapter/utils",
    "output_node": false
  },
  "IPAdapterSaveEmbeds": {
    "input": {
      "required": {
        "embeds": [
          "EMBEDS"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "IP_embeds"
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "IPAdapterSaveEmbeds",
    "display_name": "IPAdapter Save Embeds",
    "description": "",
    "category": "ipadapter/embeds",
    "output_node": true
  },
  "IPAdapterLoadEmbeds": {
    "input": {
      "required": {
        "embeds": [
          []
        ]
      }
    },
    "output": [
      "EMBEDS"
    ],
    "output_is_list": [false],
    "output_name": [
      "EMBEDS"
    ],
    "name": "IPAdapterLoadEmbeds",
    "display_name": "IPAdapter Load Embeds",
    "description": "",
    "category": "ipadapter/embeds",
    "output_node": false
  },
  "IPAdapterWeights": {
    "input": {
      "required": {
        "weights": [
          "STRING",
          {
            "default": "1.0, 0.0",
            "multiline": true
          }
        ],
        "timing": [
          [
            "custom",
            "linear",
            "ease_in_out",
            "ease_in",
            "ease_out",
            "random"
          ],
          {
            "default": "linear"
          }
        ],
        "frames": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "start_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "end_frame": [
          "INT",
          {
            "default": 9999,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "add_starting_frames": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "add_ending_frames": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "method": [
          [
            "full batch",
            "shift batches",
            "alternate batches"
          ],
          {
            "default": "full batch"
          }
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "FLOAT",
      "FLOAT",
      "INT",
      "IMAGE",
      "IMAGE",
      "WEIGHTS_STRATEGY"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "weights",
      "weights_invert",
      "total_frames",
      "image_1",
      "image_2",
      "weights_strategy"
    ],
    "name": "IPAdapterWeights",
    "display_name": "IPAdapter Weights",
    "description": "",
    "category": "ipadapter/weights",
    "output_node": false
  },
  "IPAdapterCombineWeights": {
    "input": {
      "required": {
        "weights_1": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "weights_2": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "weights",
      "count"
    ],
    "name": "IPAdapterCombineWeights",
    "display_name": "IPAdapter Combine Weights",
    "description": "",
    "category": "ipadapter/utils",
    "output_node": false
  },
  "IPAdapterWeightsFromStrategy": {
    "input": {
      "required": {
        "weights_strategy": [
          "WEIGHTS_STRATEGY"
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "FLOAT",
      "FLOAT",
      "INT",
      "IMAGE",
      "IMAGE",
      "WEIGHTS_STRATEGY"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "weights",
      "weights_invert",
      "total_frames",
      "image_1",
      "image_2",
      "weights_strategy"
    ],
    "name": "IPAdapterWeightsFromStrategy",
    "display_name": "IPAdapter Weights From Strategy",
    "description": "",
    "category": "ipadapter/weights",
    "output_node": false
  },
  "IPAdapterPromptScheduleFromWeightsStrategy": {
    "input": {
      "required": {
        "weights_strategy": [
          "WEIGHTS_STRATEGY"
        ],
        "prompt": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "prompt_schedule"
    ],
    "name": "IPAdapterPromptScheduleFromWeightsStrategy",
    "display_name": "Prompt Schedule From Weights Strategy",
    "description": "",
    "category": "ipadapter/weights",
    "output_node": false
  },
  "IPAdapterRegionalConditioning": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "image_weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "prompt_weight": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer",
            "composition",
            "strong style transfer"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "IPADAPTER_PARAMS",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "IPADAPTER_PARAMS",
      "POSITIVE",
      "NEGATIVE"
    ],
    "name": "IPAdapterRegionalConditioning",
    "display_name": "IPAdapter Regional Conditioning",
    "description": "",
    "category": "ipadapter/params",
    "output_node": false
  },
  "IPAdapterCombineParams": {
    "input": {
      "required": {
        "params_1": [
          "IPADAPTER_PARAMS"
        ],
        "params_2": [
          "IPADAPTER_PARAMS"
        ]
      },
      "optional": {
        "params_3": [
          "IPADAPTER_PARAMS"
        ],
        "params_4": [
          "IPADAPTER_PARAMS"
        ],
        "params_5": [
          "IPADAPTER_PARAMS"
        ]
      }
    },
    "output": [
      "IPADAPTER_PARAMS"
    ],
    "output_is_list": [false],
    "output_name": [
      "IPADAPTER_PARAMS"
    ],
    "name": "IPAdapterCombineParams",
    "display_name": "IPAdapter Combine Params",
    "description": "",
    "category": "ipadapter/params",
    "output_node": false
  },
  "BLIP Model Loader": {
    "input": {
      "required": {
        "blip_model": [
          "STRING",
          {
            "default": "Salesforce/blip-image-captioning-base"
          }
        ],
        "vqa_model_id": [
          "STRING",
          {
            "default": "Salesforce/blip-vqa-base"
          }
        ],
        "device": [
          [
            "cuda",
            "cpu"
          ]
        ]
      }
    },
    "output": [
      "BLIP_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "BLIP_MODEL"
    ],
    "name": "BLIP Model Loader",
    "display_name": "BLIP Model Loader",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "Blend Latents": {
    "input": {
      "required": {
        "latent_a": [
          "LATENT"
        ],
        "latent_b": [
          "LATENT"
        ],
        "operation": [
          [
            "add",
            "multiply",
            "divide",
            "subtract",
            "overlay",
            "hard_light",
            "soft_light",
            "screen",
            "linear_dodge",
            "difference",
            "exclusion",
            "random"
          ]
        ],
        "blend": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.01,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "Blend Latents",
    "display_name": "Blend Latents",
    "description": "",
    "category": "WAS Suite/Latent",
    "output_node": false
  },
  "Bus Node": {
    "input": {
      "required": {

      },
      "optional": {
        "bus": [
          "BUS"
        ],
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "BUS",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "bus",
      "model",
      "clip",
      "vae",
      "positive",
      "negative"
    ],
    "name": "Bus Node",
    "display_name": "Bus Node",
    "description": "",
    "category": "WAS Suite/Utilities",
    "output_node": false
  },
  "Cache Node": {
    "input": {
      "required": {
        "latent_suffix": [
          "STRING",
          {
            "default": "89374767_cache",
            "multiline": false
          }
        ],
        "image_suffix": [
          "STRING",
          {
            "default": "5914214_cache",
            "multiline": false
          }
        ],
        "conditioning_suffix": [
          "STRING",
          {
            "default": "49548391_cache",
            "multiline": false
          }
        ]
      },
      "optional": {
        "output_path": [
          "STRING",
          {
            "default": "/home/ComfyUI/custom_nodes/was-node-suite-comfyui/cache",
            "multiline": false
          }
        ],
        "latent": [
          "LATENT"
        ],
        "image": [
          "IMAGE"
        ],
        "conditioning": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "latent_filename",
      "image_filename",
      "conditioning_filename"
    ],
    "name": "Cache Node",
    "display_name": "Cache Node",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": true
  },
  "Checkpoint Loader": {
    "input": {
      "required": {
        "config_name": [
          [
            "anything_v3.yaml",
            "v1-inference.yaml",
            "v1-inference_clip_skip_2.yaml",
            "v1-inference_clip_skip_2_fp16.yaml",
            "v1-inference_fp16.yaml",
            "v1-inpainting-inference.yaml",
            "v2-inference-v.yaml",
            "v2-inference-v_fp32.yaml",
            "v2-inference.yaml",
            "v2-inference_fp32.yaml",
            "v2-inpainting-inference.yaml"
          ]
        ],
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "STRING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "NAME_STRING"
    ],
    "name": "Checkpoint Loader",
    "display_name": "Checkpoint Loader",
    "description": "",
    "category": "WAS Suite/Loaders/Advanced",
    "output_node": false
  },
  "Checkpoint Loader (Simple)": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "STRING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "NAME_STRING"
    ],
    "name": "Checkpoint Loader (Simple)",
    "display_name": "Checkpoint Loader (Simple)",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "CLIPTextEncode (NSP)": {
    "input": {
      "required": {
        "mode": [
          [
            "Noodle Soup Prompts",
            "Wildcards"
          ]
        ],
        "noodle_key": [
          "STRING",
          {
            "default": "__",
            "multiline": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "clip": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "conditioning",
      "parsed_text",
      "raw_text"
    ],
    "name": "CLIPTextEncode (NSP)",
    "display_name": "CLIPTextEncode (NSP)",
    "description": "",
    "category": "WAS Suite/Conditioning",
    "output_node": true
  },
  "CLIP Input Switch": {
    "input": {
      "required": {
        "clip_a": [
          "CLIP"
        ],
        "clip_b": [
          "CLIP"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIP"
    ],
    "name": "CLIP Input Switch",
    "display_name": "CLIP Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "CLIP Vision Input Switch": {
    "input": {
      "required": {
        "clip_vision_a": [
          "CLIP_VISION"
        ],
        "clip_vision_b": [
          "CLIP_VISION"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "CLIP_VISION"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIP_VISION"
    ],
    "name": "CLIP Vision Input Switch",
    "display_name": "CLIP Vision Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Conditioning Input Switch": {
    "input": {
      "required": {
        "conditioning_a": [
          "CONDITIONING"
        ],
        "conditioning_b": [
          "CONDITIONING"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "Conditioning Input Switch",
    "display_name": "Conditioning Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Constant Number": {
    "input": {
      "required": {
        "number_type": [
          [
            "integer",
            "float",
            "bool"
          ]
        ],
        "number": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "number_as_text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "Constant Number",
    "display_name": "Constant Number",
    "description": "",
    "category": "WAS Suite/Number",
    "output_node": false
  },
  "Create Grid Image": {
    "input": {
      "required": {
        "images_path": [
          "STRING",
          {
            "default": "./ComfyUI/input/",
            "multiline": false
          }
        ],
        "pattern_glob": [
          "STRING",
          {
            "default": "*",
            "multiline": false
          }
        ],
        "include_subfolders": [
          [
            "false",
            "true"
          ]
        ],
        "border_width": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "number_of_columns": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 24,
            "step": 1
          }
        ],
        "max_cell_size": [
          "INT",
          {
            "default": 256,
            "min": 32,
            "max": 1280,
            "step": 1
          }
        ],
        "border_red": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "border_green": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "border_blue": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Create Grid Image",
    "display_name": "Create Grid Image",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Create Grid Image from Batch": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "border_width": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "number_of_columns": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 24,
            "step": 1
          }
        ],
        "max_cell_size": [
          "INT",
          {
            "default": 256,
            "min": 32,
            "max": 2048,
            "step": 1
          }
        ],
        "border_red": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "border_green": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "border_blue": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Create Grid Image from Batch",
    "display_name": "Create Grid Image from Batch",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Create Morph Image": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "transition_frames": [
          "INT",
          {
            "default": 30,
            "min": 2,
            "max": 60,
            "step": 1
          }
        ],
        "still_image_delay_ms": [
          "FLOAT",
          {
            "default": 2500,
            "min": 0.1,
            "max": 60000,
            "step": 0.1
          }
        ],
        "duration_ms": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.1,
            "max": 60000,
            "step": 0.1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "max_size": [
          "INT",
          {
            "default": 512,
            "min": 128,
            "max": 1280,
            "step": 1
          }
        ],
        "output_path": [
          "STRING",
          {
            "default": "./ComfyUI/output",
            "multiline": false
          }
        ],
        "filename": [
          "STRING",
          {
            "default": "morph",
            "multiline": false
          }
        ],
        "filetype": [
          [
            "GIF",
            "APNG"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "image_a_pass",
      "image_b_pass",
      "filepath_text",
      "filename_text"
    ],
    "name": "Create Morph Image",
    "display_name": "Create Morph Image",
    "description": "",
    "category": "WAS Suite/Animation",
    "output_node": false
  },
  "Create Morph Image from Path": {
    "input": {
      "required": {
        "transition_frames": [
          "INT",
          {
            "default": 30,
            "min": 2,
            "max": 60,
            "step": 1
          }
        ],
        "still_image_delay_ms": [
          "FLOAT",
          {
            "default": 2500,
            "min": 0.1,
            "max": 60000,
            "step": 0.1
          }
        ],
        "duration_ms": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.1,
            "max": 60000,
            "step": 0.1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "max_size": [
          "INT",
          {
            "default": 512,
            "min": 128,
            "max": 1280,
            "step": 1
          }
        ],
        "input_path": [
          "STRING",
          {
            "default": "./ComfyUI",
            "multiline": false
          }
        ],
        "input_pattern": [
          "STRING",
          {
            "default": "*",
            "multiline": false
          }
        ],
        "output_path": [
          "STRING",
          {
            "default": "./ComfyUI/output",
            "multiline": false
          }
        ],
        "filename": [
          "STRING",
          {
            "default": "morph",
            "multiline": false
          }
        ],
        "filetype": [
          [
            "GIF",
            "APNG"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "filepath_text",
      "filename_text"
    ],
    "name": "Create Morph Image from Path",
    "display_name": "Create Morph Image from Path",
    "description": "",
    "category": "WAS Suite/Animation",
    "output_node": false
  },
  "Create Video from Path": {
    "input": {
      "required": {
        "transition_frames": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 120,
            "step": 1
          }
        ],
        "image_delay_sec": [
          "FLOAT",
          {
            "default": 2.5,
            "min": 0.01,
            "max": 60000,
            "step": 0.01
          }
        ],
        "fps": [
          "INT",
          {
            "default": 30,
            "min": 1,
            "max": 60,
            "step": 1
          }
        ],
        "max_size": [
          "INT",
          {
            "default": 512,
            "min": 128,
            "max": 1920,
            "step": 1
          }
        ],
        "input_path": [
          "STRING",
          {
            "default": "./ComfyUI/input",
            "multiline": false
          }
        ],
        "output_path": [
          "STRING",
          {
            "default": "./ComfyUI/output",
            "multiline": false
          }
        ],
        "filename": [
          "STRING",
          {
            "default": "comfy_video",
            "multiline": false
          }
        ],
        "codec": [
          [
            "AVC1",
            "FFV1",
            "H264",
            "MP4V"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "filepath_text",
      "filename_text"
    ],
    "name": "Create Video from Path",
    "display_name": "Create Video from Path",
    "description": "",
    "category": "WAS Suite/Animation",
    "output_node": false
  },
  "CLIPSeg Masking": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      },
      "optional": {
        "clipseg_model": [
          "CLIPSEG_MODEL"
        ]
      }
    },
    "output": [
      "MASK",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MASK",
      "MASK_IMAGE"
    ],
    "name": "CLIPSeg Masking",
    "display_name": "CLIPSeg Masking",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "CLIPSeg Model Loader": {
    "input": {
      "required": {
        "model": [
          "STRING",
          {
            "default": "CIDAS/clipseg-rd64-refined",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "CLIPSEG_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "clipseg_model"
    ],
    "name": "CLIPSeg Model Loader",
    "display_name": "CLIPSeg Model Loader",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "CLIPSeg Batch Masking": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "text_a": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "text_b": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      },
      "optional": {
        "image_c": [
          "IMAGE"
        ],
        "image_d": [
          "IMAGE"
        ],
        "image_e": [
          "IMAGE"
        ],
        "image_f": [
          "IMAGE"
        ],
        "text_c": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "text_d": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "text_e": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "text_f": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "IMAGE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "IMAGES_BATCH",
      "MASKS_BATCH",
      "MASK_IMAGES_BATCH"
    ],
    "name": "CLIPSeg Batch Masking",
    "display_name": "CLIPSeg Batch Masking",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Convert Masks to Images": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGES"
    ],
    "name": "Convert Masks to Images",
    "display_name": "Convert Masks to Images",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Control Net Model Input Switch": {
    "input": {
      "required": {
        "control_net_a": [
          "CONTROL_NET"
        ],
        "control_net_b": [
          "CONTROL_NET"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "Control Net Model Input Switch",
    "display_name": "Control Net Model Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Debug Number to Console": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ],
        "label": [
          "STRING",
          {
            "default": "Debug to Console",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "NUMBER"
    ],
    "output_is_list": [false],
    "output_name": [
      "NUMBER"
    ],
    "name": "Debug Number to Console",
    "display_name": "Debug Number to Console",
    "description": "",
    "category": "WAS Suite/Debug",
    "output_node": true
  },
  "Dictionary to Console": {
    "input": {
      "required": {
        "dictionary": [
          "DICT"
        ],
        "label": [
          "STRING",
          {
            "default": "Dictionary Output",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "DICT"
    ],
    "output_is_list": [false],
    "output_name": [
      "DICT"
    ],
    "name": "Dictionary to Console",
    "display_name": "Dictionary to Console",
    "description": "",
    "category": "WAS Suite/Debug",
    "output_node": true
  },
  "Diffusers Model Loader": {
    "input": {
      "required": {
        "model_path": [
          []
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "STRING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "NAME_STRING"
    ],
    "name": "Diffusers Model Loader",
    "display_name": "Diffusers Model Loader",
    "description": "",
    "category": "WAS Suite/Loaders/Advanced",
    "output_node": false
  },
  "Diffusers Hub Model Down-Loader": {
    "input": {
      "required": {
        "repo_id": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "revision": [
          "STRING",
          {
            "default": "None",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "STRING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "NAME_STRING"
    ],
    "name": "Diffusers Hub Model Down-Loader",
    "display_name": "Diffusers Hub Model Down-Loader",
    "description": "",
    "category": "WAS Suite/Loaders/Advanced",
    "output_node": false
  },
  "Export API": {
    "input": {
      "required": {
        "save_prompt_api": [
          [
            "true",
            "true"
          ]
        ],
        "output_path": [
          "STRING",
          {
            "default": "./ComfyUI/output/",
            "multiline": false
          }
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI_Prompt"
          }
        ],
        "filename_delimiter": [
          "STRING",
          {
            "default": "_"
          }
        ],
        "filename_number_padding": [
          "INT",
          {
            "default": 4,
            "min": 2,
            "max": 9,
            "step": 1
          }
        ],
        "parse_text_tokens": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Export API",
    "display_name": "Export API",
    "description": "",
    "category": "WAS Suite/Debug",
    "output_node": true
  },
  "Latent Input Switch": {
    "input": {
      "required": {
        "latent_a": [
          "LATENT"
        ],
        "latent_b": [
          "LATENT"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "Latent Input Switch",
    "display_name": "Latent Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Load Cache": {
    "input": {
      "required": {
        "latent_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "image_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "conditioning_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "IMAGE",
      "CONDITIONING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "LATENT",
      "IMAGE",
      "CONDITIONING"
    ],
    "name": "Load Cache",
    "display_name": "Load Cache",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": false
  },
  "Logic Boolean": {
    "input": {
      "required": {
        "boolean": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "BOOLEAN",
      "NUMBER",
      "INT",
      "FLOAT"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "BOOLEAN",
      "NUMBER",
      "INT",
      "FLOAT"
    ],
    "name": "Logic Boolean",
    "display_name": "Logic Boolean",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Logic Boolean Primitive": {
    "input": {
      "required": {
        "boolean": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "Logic Boolean Primitive",
    "display_name": "Logic Boolean Primitive",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Logic Comparison OR": {
    "input": {
      "required": {
        "boolean_a": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "boolean_b": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "Logic Comparison OR",
    "display_name": "Logic Comparison OR",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Logic Comparison AND": {
    "input": {
      "required": {
        "boolean_a": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "boolean_b": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "Logic Comparison AND",
    "display_name": "Logic Comparison AND",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Logic Comparison XOR": {
    "input": {
      "required": {
        "boolean_a": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "boolean_b": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "Logic Comparison XOR",
    "display_name": "Logic Comparison XOR",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Logic NOT": {
    "input": {
      "required": {
        "boolean": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "Logic NOT",
    "display_name": "Logic NOT",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Lora Loader": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "NAME_STRING"
    ],
    "name": "Lora Loader",
    "display_name": "Lora Loader",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "Image SSAO (Ambient Occlusion)": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "depth_images": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "min": 0,
            "max": 5,
            "default": 1,
            "step": 0.01
          }
        ],
        "radius": [
          "FLOAT",
          {
            "min": 0.01,
            "max": 1024,
            "default": 30,
            "step": 0.01
          }
        ],
        "ao_blur": [
          "FLOAT",
          {
            "min": 0.01,
            "max": 1024,
            "default": 2.5,
            "step": 0.01
          }
        ],
        "specular_threshold": [
          "INT",
          {
            "min": 0,
            "max": 255,
            "default": 25,
            "step": 1
          }
        ],
        "enable_specular_masking": [
          [
            "True",
            "False"
          ]
        ],
        "tile_size": [
          "INT",
          {
            "min": 1,
            "max": 512,
            "default": 1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "composited_images",
      "ssao_images",
      "specular_mask_images"
    ],
    "name": "Image SSAO (Ambient Occlusion)",
    "display_name": "Image SSAO (Ambient Occlusion)",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image SSDO (Direct Occlusion)": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "depth_images": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "min": 0,
            "max": 5,
            "default": 1,
            "step": 0.01
          }
        ],
        "radius": [
          "FLOAT",
          {
            "min": 0.01,
            "max": 1024,
            "default": 30,
            "step": 0.01
          }
        ],
        "specular_threshold": [
          "INT",
          {
            "min": 0,
            "max": 255,
            "default": 128,
            "step": 1
          }
        ],
        "colored_occlusion": [
          [
            "True",
            "False"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "composited_images",
      "ssdo_images",
      "ssdo_image_masks",
      "light_source_image_masks"
    ],
    "name": "Image SSDO (Direct Occlusion)",
    "display_name": "Image SSDO (Direct Occlusion)",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Analyze": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mode": [
          [
            "Black White Levels",
            "RGB Levels"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Analyze",
    "display_name": "Image Analyze",
    "description": "",
    "category": "WAS Suite/Image/Analyze",
    "output_node": false
  },
  "Image Aspect Ratio": {
    "input": {
      "required": {

      },
      "optional": {
        "image": [
          "IMAGE"
        ],
        "width": [
          "NUMBER"
        ],
        "height": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "NUMBER",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "aspect_number",
      "aspect_float",
      "is_landscape_bool",
      "aspect_ratio_common",
      "aspect_type"
    ],
    "name": "Image Aspect Ratio",
    "display_name": "Image Aspect Ratio",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Image Batch": {
    "input": {
      "required": {

      },
      "optional": {
        "images_a": [
          "IMAGE"
        ],
        "images_b": [
          "IMAGE"
        ],
        "images_c": [
          "IMAGE"
        ],
        "images_d": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "Image Batch",
    "display_name": "Image Batch",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Image Blank": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 4096,
            "step": 1
          }
        ],
        "red": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "green": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Blank",
    "display_name": "Image Blank",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Image Blend by Mask": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "mask": [
          "IMAGE"
        ],
        "blend_percentage": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Blend by Mask",
    "display_name": "Image Blend by Mask",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Image Blend": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "blend_percentage": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "Image Blend",
    "display_name": "Image Blend",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Image Blending Mode": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "mode": [
          [
            "add",
            "color",
            "color_burn",
            "color_dodge",
            "darken",
            "difference",
            "exclusion",
            "hard_light",
            "hue",
            "lighten",
            "multiply",
            "overlay",
            "screen",
            "soft_light"
          ]
        ],
        "blend_percentage": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "Image Blending Mode",
    "display_name": "Image Blending Mode",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Image Bloom Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "radius": [
          "FLOAT",
          {
            "default": 10,
            "min": 0,
            "max": 1024,
            "step": 0.1
          }
        ],
        "intensity": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Bloom Filter",
    "display_name": "Image Bloom Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Canny Filter": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "enable_threshold": [
          [
            "false",
            "true"
          ]
        ],
        "threshold_low": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "threshold_high": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "Image Canny Filter",
    "display_name": "Image Canny Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Chromatic Aberration": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "red_offset": [
          "INT",
          {
            "default": 2,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "green_offset": [
          "INT",
          {
            "default": -1,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "blue_offset": [
          "INT",
          {
            "default": 1,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "intensity": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "fade_radius": [
          "INT",
          {
            "default": 12,
            "min": 0,
            "max": 1024,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Chromatic Aberration",
    "display_name": "Image Chromatic Aberration",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Color Palette": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "colors": [
          "INT",
          {
            "default": 16,
            "min": 8,
            "max": 256,
            "step": 1
          }
        ],
        "mode": [
          [
            "Chart",
            "back_to_back"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "LIST"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "color_palettes"
    ],
    "name": "Image Color Palette",
    "display_name": "Image Color Palette",
    "description": "",
    "category": "WAS Suite/Image/Analyze",
    "output_node": false
  },
  "Image Crop Face": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "crop_padding_factor": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0,
            "max": 2,
            "step": 0.01
          }
        ],
        "cascade_xml": [
          [
            "lbpcascade_animeface.xml",
            "haarcascade_frontalface_default.xml",
            "haarcascade_frontalface_alt.xml",
            "haarcascade_frontalface_alt2.xml",
            "haarcascade_frontalface_alt_tree.xml",
            "haarcascade_profileface.xml",
            "haarcascade_upperbody.xml",
            "haarcascade_eye.xml"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "CROP_DATA"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "CROP_DATA"
    ],
    "name": "Image Crop Face",
    "display_name": "Image Crop Face",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Crop Location": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "top": [
          "INT",
          {
            "default": 0,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "left": [
          "INT",
          {
            "default": 0,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "right": [
          "INT",
          {
            "default": 256,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "bottom": [
          "INT",
          {
            "default": 256,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "CROP_DATA"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "CROP_DATA"
    ],
    "name": "Image Crop Location",
    "display_name": "Image Crop Location",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Crop Square Location": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "max": 24576,
            "min": 0,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "max": 24576,
            "min": 0,
            "step": 1
          }
        ],
        "size": [
          "INT",
          {
            "default": 256,
            "max": 4096,
            "min": 5,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "CROP_DATA"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "CROP_DATA"
    ],
    "name": "Image Crop Square Location",
    "display_name": "Image Crop Square Location",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Displacement Warp": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "displacement_maps": [
          "IMAGE"
        ],
        "amplitude": [
          "FLOAT",
          {
            "default": 25,
            "min": -4096,
            "max": 4096,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "Image Displacement Warp",
    "display_name": "Image Displacement Warp",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image Lucy Sharpen": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "iterations": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 12,
            "step": 1
          }
        ],
        "kernel_size": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 16,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Lucy Sharpen",
    "display_name": "Image Lucy Sharpen",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Paste Face": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "crop_image": [
          "IMAGE"
        ],
        "crop_data": [
          "CROP_DATA"
        ],
        "crop_blending": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "crop_sharpening": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 3,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK_IMAGE"
    ],
    "name": "Image Paste Face",
    "display_name": "Image Paste Face",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Paste Crop": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "crop_image": [
          "IMAGE"
        ],
        "crop_data": [
          "CROP_DATA"
        ],
        "crop_blending": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "crop_sharpening": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 3,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "IMAGE"
    ],
    "name": "Image Paste Crop",
    "display_name": "Image Paste Crop",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Paste Crop by Location": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "crop_image": [
          "IMAGE"
        ],
        "top": [
          "INT",
          {
            "default": 0,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "left": [
          "INT",
          {
            "default": 0,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "right": [
          "INT",
          {
            "default": 256,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "bottom": [
          "INT",
          {
            "default": 256,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "crop_blending": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "crop_sharpening": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 3,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "IMAGE"
    ],
    "name": "Image Paste Crop by Location",
    "display_name": "Image Paste Crop by Location",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Pixelate": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "pixelation_size": [
          "FLOAT",
          {
            "default": 164,
            "min": 16,
            "max": 480,
            "step": 1
          }
        ],
        "num_colors": [
          "FLOAT",
          {
            "default": 16,
            "min": 2,
            "max": 256,
            "step": 1
          }
        ],
        "init_mode": [
          [
            "k-means++",
            "random",
            "none"
          ]
        ],
        "max_iterations": [
          "FLOAT",
          {
            "default": 100,
            "min": 1,
            "max": 256,
            "step": 1
          }
        ],
        "dither": [
          [
            "False",
            "True"
          ]
        ],
        "dither_mode": [
          [
            "FloydSteinberg",
            "Ordered"
          ]
        ]
      },
      "optional": {
        "color_palettes": [
          "LIST",
          {
            "forceInput": true
          }
        ],
        "color_palette_mode": [
          [
            "Brightness",
            "BrightnessAndTonal",
            "Linear",
            "Tonal"
          ]
        ],
        "reverse_palette": [
          [
            "False",
            "True"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "Image Pixelate",
    "display_name": "Image Pixelate",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Power Noise": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "max": 4096,
            "min": 64,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "max": 4096,
            "min": 64,
            "step": 1
          }
        ],
        "frequency": [
          "FLOAT",
          {
            "default": 0.5,
            "max": 10,
            "min": 0,
            "step": 0.01
          }
        ],
        "attenuation": [
          "FLOAT",
          {
            "default": 0.5,
            "max": 10,
            "min": 0,
            "step": 0.01
          }
        ],
        "noise_type": [
          [
            "grey",
            "white",
            "pink",
            "blue",
            "green",
            "mix"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "Image Power Noise",
    "display_name": "Image Power Noise",
    "description": "",
    "category": "WAS Suite/Image/Generate/Noise",
    "output_node": false
  },
  "Image Dragan Photography Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "saturation": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 16,
            "step": 0.01
          }
        ],
        "contrast": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 16,
            "step": 0.01
          }
        ],
        "brightness": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 16,
            "step": 0.01
          }
        ],
        "sharpness": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 6,
            "step": 0.01
          }
        ],
        "highpass_radius": [
          "FLOAT",
          {
            "default": 6,
            "min": 0,
            "max": 255,
            "step": 0.01
          }
        ],
        "highpass_samples": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 6,
            "step": 1
          }
        ],
        "highpass_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 3,
            "step": 0.01
          }
        ],
        "colorize": [
          [
            "true",
            "false"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Dragan Photography Filter",
    "display_name": "Image Dragan Photography Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Edge Detection Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mode": [
          [
            "normal",
            "laplacian"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Edge Detection Filter",
    "display_name": "Image Edge Detection Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Film Grain": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "density": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 1,
            "step": 0.01
          }
        ],
        "intensity": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 1,
            "step": 0.01
          }
        ],
        "highlights": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 255,
            "step": 0.01
          }
        ],
        "supersample_factor": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 8,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Film Grain",
    "display_name": "Image Film Grain",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Filter Adjustments": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "brightness": [
          "FLOAT",
          {
            "default": 0,
            "min": -1,
            "max": 1,
            "step": 0.01
          }
        ],
        "contrast": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 2,
            "step": 0.01
          }
        ],
        "saturation": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 5,
            "step": 0.01
          }
        ],
        "sharpness": [
          "FLOAT",
          {
            "default": 1,
            "min": -5,
            "max": 5,
            "step": 0.01
          }
        ],
        "blur": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16,
            "step": 1
          }
        ],
        "gaussian_blur": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1024,
            "step": 0.1
          }
        ],
        "edge_enhance": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "detail_enhance": [
          [
            "false",
            "true"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Filter Adjustments",
    "display_name": "Image Filter Adjustments",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Flip": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "mode": [
          [
            "horizontal",
            "vertical"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "Image Flip",
    "display_name": "Image Flip",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image Gradient Map": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "gradient_image": [
          "IMAGE"
        ],
        "flip_left_right": [
          [
            "false",
            "true"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Gradient Map",
    "display_name": "Image Gradient Map",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Generate Gradient": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "max": 4096,
            "min": 64,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "max": 4096,
            "min": 64,
            "step": 1
          }
        ],
        "direction": [
          [
            "horizontal",
            "vertical"
          ]
        ],
        "tolerance": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "min": 0,
            "step": 1
          }
        ],
        "gradient_stops": [
          "STRING",
          {
            "default": "0:255,0,0\n25:255,255,255\n50:0,255,0\n75:0,0,255",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Generate Gradient",
    "display_name": "Image Generate Gradient",
    "description": "",
    "category": "WAS Suite/Image/Generate",
    "output_node": false
  },
  "Image High Pass Filter": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "radius": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 500,
            "step": 1
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 0,
            "max": 255,
            "step": 0.1
          }
        ],
        "color_output": [
          [
            "true",
            "false"
          ]
        ],
        "neutral_background": [
          [
            "true",
            "false"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "Image High Pass Filter",
    "display_name": "Image High Pass Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image History Loader": {
    "input": {
      "required": {
        "image": [
          [
            "No History"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "filename_text"
    ],
    "name": "Image History Loader",
    "display_name": "Image History Loader",
    "description": "",
    "category": "WAS Suite/History",
    "output_node": false
  },
  "Image Input Switch": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Input Switch",
    "display_name": "Image Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Image Levels Adjustment": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "black_level": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 0.1
          }
        ],
        "mid_level": [
          "FLOAT",
          {
            "default": 127.5,
            "min": 0,
            "max": 255,
            "step": 0.1
          }
        ],
        "white_level": [
          "FLOAT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Levels Adjustment",
    "display_name": "Image Levels Adjustment",
    "description": "",
    "category": "WAS Suite/Image/Adjustment",
    "output_node": false
  },
  "Image Load": {
    "input": {
      "required": {
        "image_path": [
          "STRING",
          {
            "default": "./ComfyUI/input/example.png",
            "multiline": false
          }
        ],
        "RGBA": [
          [
            "false",
            "true"
          ]
        ]
      },
      "optional": {
        "filename_text_extension": [
          [
            "true",
            "false"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "image",
      "mask",
      "filename_text"
    ],
    "name": "Image Load",
    "display_name": "Image Load",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": false
  },
  "Image Median Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "diameter": [
          "INT",
          {
            "default": 2,
            "min": 0.1,
            "max": 255,
            "step": 1
          }
        ],
        "sigma_color": [
          "FLOAT",
          {
            "default": 10,
            "min": -255,
            "max": 255,
            "step": 0.1
          }
        ],
        "sigma_space": [
          "FLOAT",
          {
            "default": 10,
            "min": -255,
            "max": 255,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Median Filter",
    "display_name": "Image Median Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Mix RGB Channels": {
    "input": {
      "required": {
        "red_channel": [
          "IMAGE"
        ],
        "green_channel": [
          "IMAGE"
        ],
        "blue_channel": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Mix RGB Channels",
    "display_name": "Image Mix RGB Channels",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Monitor Effects Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mode": [
          [
            "Digital Distortion",
            "Signal Distortion",
            "TV Distortion"
          ]
        ],
        "amplitude": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ],
        "offset": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "Image Monitor Effects Filter",
    "display_name": "Image Monitor Effects Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Nova Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "amplitude": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "frequency": [
          "FLOAT",
          {
            "default": 3.14,
            "min": 0,
            "max": 100,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Nova Filter",
    "display_name": "Image Nova Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Padding": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "feathering": [
          "INT",
          {
            "default": 120,
            "min": 0,
            "max": 2048,
            "step": 1
          }
        ],
        "feather_second_pass": [
          [
            "true",
            "false"
          ]
        ],
        "left_padding": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 48000,
            "step": 1
          }
        ],
        "right_padding": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 48000,
            "step": 1
          }
        ],
        "top_padding": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 48000,
            "step": 1
          }
        ],
        "bottom_padding": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 48000,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "IMAGE"
    ],
    "name": "Image Padding",
    "display_name": "Image Padding",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image Perlin Noise": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "max": 2048,
            "min": 64,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "max": 2048,
            "min": 64,
            "step": 1
          }
        ],
        "scale": [
          "INT",
          {
            "default": 100,
            "max": 2048,
            "min": 2,
            "step": 1
          }
        ],
        "octaves": [
          "INT",
          {
            "default": 4,
            "max": 8,
            "min": 0,
            "step": 1
          }
        ],
        "persistence": [
          "FLOAT",
          {
            "default": 0.5,
            "max": 100,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "Image Perlin Noise",
    "display_name": "Image Perlin Noise",
    "description": "",
    "category": "WAS Suite/Image/Generate/Noise",
    "output_node": false
  },
  "Image Rembg (Remove Background)": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "transparency": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "model": [
          [
            "u2net",
            "u2netp",
            "u2net_human_seg",
            "silueta",
            "isnet-general-use",
            "isnet-anime"
          ]
        ],
        "post_processing": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "only_mask": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "alpha_matting": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "alpha_matting_foreground_threshold": [
          "INT",
          {
            "default": 240,
            "min": 0,
            "max": 255
          }
        ],
        "alpha_matting_background_threshold": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 255
          }
        ],
        "alpha_matting_erode_size": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 255
          }
        ],
        "background_color": [
          [
            "none",
            "black",
            "white",
            "magenta",
            "chroma green",
            "chroma blue"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "Image Rembg (Remove Background)",
    "display_name": "Image Rembg (Remove Background)",
    "description": "",
    "category": "WAS Suite/Image/AI",
    "output_node": false
  },
  "Image Perlin Power Fractal": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "max": 8192,
            "min": 64,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "max": 8192,
            "min": 64,
            "step": 1
          }
        ],
        "scale": [
          "INT",
          {
            "default": 100,
            "max": 2048,
            "min": 2,
            "step": 1
          }
        ],
        "octaves": [
          "INT",
          {
            "default": 4,
            "max": 8,
            "min": 0,
            "step": 1
          }
        ],
        "persistence": [
          "FLOAT",
          {
            "default": 0.5,
            "max": 100,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "lacunarity": [
          "FLOAT",
          {
            "default": 2,
            "max": 100,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "exponent": [
          "FLOAT",
          {
            "default": 2,
            "max": 100,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "Image Perlin Power Fractal",
    "display_name": "Image Perlin Power Fractal",
    "description": "",
    "category": "WAS Suite/Image/Generate/Noise",
    "output_node": false
  },
  "Image Remove Background (Alpha)": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "mode": [
          [
            "background",
            "foreground"
          ]
        ],
        "threshold": [
          "INT",
          {
            "default": 127,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "threshold_tolerance": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 24,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "Image Remove Background (Alpha)",
    "display_name": "Image Remove Background (Alpha)",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Remove Color": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "target_red": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "target_green": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "target_blue": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "replace_red": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "replace_green": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "replace_blue": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "clip_threshold": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Remove Color",
    "display_name": "Image Remove Color",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Resize": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mode": [
          [
            "rescale",
            "resize"
          ]
        ],
        "supersample": [
          [
            "true",
            "false"
          ]
        ],
        "resampling": [
          [
            "lanczos",
            "nearest",
            "bilinear",
            "bicubic"
          ]
        ],
        "rescale_factor": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.01,
            "max": 16,
            "step": 0.01
          }
        ],
        "resize_width": [
          "INT",
          {
            "default": 1024,
            "min": 1,
            "max": 48000,
            "step": 1
          }
        ],
        "resize_height": [
          "INT",
          {
            "default": 1536,
            "min": 1,
            "max": 48000,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Resize",
    "display_name": "Image Resize",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image Rotate": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "mode": [
          [
            "transpose",
            "internal"
          ]
        ],
        "rotation": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 360,
            "step": 90
          }
        ],
        "sampler": [
          [
            "nearest",
            "bilinear",
            "bicubic"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "Image Rotate",
    "display_name": "Image Rotate",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image Rotate Hue": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "hue_shift": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Rotate Hue",
    "display_name": "Image Rotate Hue",
    "description": "",
    "category": "WAS Suite/Image/Adjustment",
    "output_node": false
  },
  "Image Save": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "output_path": [
          "STRING",
          {
            "default": "[time(%Y-%m-%d)]",
            "multiline": false
          }
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ],
        "filename_delimiter": [
          "STRING",
          {
            "default": "_"
          }
        ],
        "filename_number_padding": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 9,
            "step": 1
          }
        ],
        "filename_number_start": [
          [
            "false",
            "true"
          ]
        ],
        "extension": [
          [
            "png",
            "jpg",
            "jpeg",
            "gif",
            "tiff",
            "webp",
            "bmp"
          ]
        ],
        "dpi": [
          "INT",
          {
            "default": 300,
            "min": 1,
            "max": 2400,
            "step": 1
          }
        ],
        "quality": [
          "INT",
          {
            "default": 100,
            "min": 1,
            "max": 100,
            "step": 1
          }
        ],
        "optimize_image": [
          [
            "true",
            "false"
          ]
        ],
        "lossless_webp": [
          [
            "false",
            "true"
          ]
        ],
        "overwrite_mode": [
          [
            "false",
            "prefix_as_filename"
          ]
        ],
        "show_history": [
          [
            "false",
            "true"
          ]
        ],
        "show_history_by_prefix": [
          [
            "true",
            "false"
          ]
        ],
        "embed_workflow": [
          [
            "true",
            "false"
          ]
        ],
        "show_previews": [
          [
            "true",
            "false"
          ]
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "Image Save",
    "display_name": "Image Save",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": true
  },
  "Image Seamless Texture": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "blending": [
          "FLOAT",
          {
            "default": 0.4,
            "max": 1,
            "min": 0,
            "step": 0.01
          }
        ],
        "tiled": [
          [
            "true",
            "false"
          ]
        ],
        "tiles": [
          "INT",
          {
            "default": 2,
            "max": 6,
            "min": 2,
            "step": 2
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "Image Seamless Texture",
    "display_name": "Image Seamless Texture",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Select Channel": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "channel": [
          [
            "red",
            "green",
            "blue"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Select Channel",
    "display_name": "Image Select Channel",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Select Color": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "red": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 0.1
          }
        ],
        "green": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 0.1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 0.1
          }
        ],
        "variance": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Select Color",
    "display_name": "Image Select Color",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Shadows and Highlights": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "shadow_threshold": [
          "FLOAT",
          {
            "default": 75,
            "min": 0,
            "max": 255,
            "step": 0.1
          }
        ],
        "shadow_factor": [
          "FLOAT",
          {
            "default": 1.5,
            "min": -12,
            "max": 12,
            "step": 0.1
          }
        ],
        "shadow_smoothing": [
          "FLOAT",
          {
            "default": 0.25,
            "min": -255,
            "max": 255,
            "step": 0.1
          }
        ],
        "highlight_threshold": [
          "FLOAT",
          {
            "default": 175,
            "min": 0,
            "max": 255,
            "step": 0.1
          }
        ],
        "highlight_factor": [
          "FLOAT",
          {
            "default": 0.5,
            "min": -12,
            "max": 12,
            "step": 0.1
          }
        ],
        "highlight_smoothing": [
          "FLOAT",
          {
            "default": 0.25,
            "min": -255,
            "max": 255,
            "step": 0.1
          }
        ],
        "simplify_isolation": [
          "FLOAT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "image",
      "shadow_map",
      "highlight_map"
    ],
    "name": "Image Shadows and Highlights",
    "display_name": "Image Shadows and Highlights",
    "description": "",
    "category": "WAS Suite/Image/Adjustment",
    "output_node": false
  },
  "Image Size to Number": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "NUMBER",
      "NUMBER",
      "FLOAT",
      "FLOAT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "width_num",
      "height_num",
      "width_float",
      "height_float",
      "width_int",
      "height_int"
    ],
    "name": "Image Size to Number",
    "display_name": "Image Size to Number",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Image Stitch": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "stitch": [
          [
            "top",
            "left",
            "bottom",
            "right"
          ]
        ],
        "feathering": [
          "INT",
          {
            "default": 50,
            "min": 0,
            "max": 2048,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Stitch",
    "display_name": "Image Stitch",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image Style Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "style": [
          [
            "1977",
            "aden",
            "brannan",
            "brooklyn",
            "clarendon",
            "earlybird",
            "fairy tale",
            "gingham",
            "hudson",
            "inkwell",
            "kelvin",
            "lark",
            "lofi",
            "maven",
            "mayfair",
            "moon",
            "nashville",
            "perpetua",
            "reyes",
            "rise",
            "slumber",
            "stinson",
            "toaster",
            "valencia",
            "walden",
            "willow",
            "xpro2"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Style Filter",
    "display_name": "Image Style Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Threshold": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Threshold",
    "display_name": "Image Threshold",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Tiled": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "num_tiles": [
          "INT",
          {
            "default": 4,
            "max": 64,
            "min": 2,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGES"
    ],
    "name": "Image Tiled",
    "display_name": "Image Tiled",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Transpose": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "image_overlay": [
          "IMAGE"
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": -48000,
            "max": 48000,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": -48000,
            "max": 48000,
            "step": 1
          }
        ],
        "X": [
          "INT",
          {
            "default": 0,
            "min": -48000,
            "max": 48000,
            "step": 1
          }
        ],
        "Y": [
          "INT",
          {
            "default": 0,
            "min": -48000,
            "max": 48000,
            "step": 1
          }
        ],
        "rotation": [
          "INT",
          {
            "default": 0,
            "min": -360,
            "max": 360,
            "step": 1
          }
        ],
        "feathering": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Transpose",
    "display_name": "Image Transpose",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image fDOF Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "depth": [
          "IMAGE"
        ],
        "mode": [
          [
            "mock",
            "gaussian",
            "box"
          ]
        ],
        "radius": [
          "INT",
          {
            "default": 8,
            "min": 1,
            "max": 128,
            "step": 1
          }
        ],
        "samples": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 3,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image fDOF Filter",
    "display_name": "Image fDOF Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image to Latent Mask": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "channel": [
          [
            "alpha",
            "red",
            "green",
            "blue"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Image to Latent Mask",
    "display_name": "Image to Latent Mask",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Image to Noise": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "num_colors": [
          "INT",
          {
            "default": 16,
            "max": 256,
            "min": 2,
            "step": 2
          }
        ],
        "black_mix": [
          "INT",
          {
            "default": 0,
            "max": 20,
            "min": 0,
            "step": 1
          }
        ],
        "gaussian_mix": [
          "FLOAT",
          {
            "default": 0,
            "max": 1024,
            "min": 0,
            "step": 0.1
          }
        ],
        "brightness": [
          "FLOAT",
          {
            "default": 1,
            "max": 2,
            "min": 0,
            "step": 0.01
          }
        ],
        "output_mode": [
          [
            "batch",
            "list"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "Image to Noise",
    "display_name": "Image to Noise",
    "description": "",
    "category": "WAS Suite/Image/Generate/Noise",
    "output_node": false
  },
  "Image to Seed": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [true],
    "output_name": [
      "INT"
    ],
    "name": "Image to Seed",
    "display_name": "Image to Seed",
    "description": "",
    "category": "WAS Suite/Image/Analyze",
    "output_node": false
  },
  "Images to RGB": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Images to RGB",
    "display_name": "Images to RGB",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Images to Linear": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Images to Linear",
    "display_name": "Images to Linear",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Integer place counter": {
    "input": {
      "required": {
        "int_input": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000000,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT_PLACES"
    ],
    "name": "Integer place counter",
    "display_name": "Integer place counter",
    "description": "",
    "category": "WAS Suite/Integer",
    "output_node": false
  },
  "Image Voronoi Noise Filter": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "max": 4096,
            "min": 64,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "max": 4096,
            "min": 64,
            "step": 1
          }
        ],
        "density": [
          "INT",
          {
            "default": 50,
            "max": 256,
            "min": 10,
            "step": 2
          }
        ],
        "modulator": [
          "INT",
          {
            "default": 0,
            "max": 8,
            "min": 0,
            "step": 1
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      },
      "optional": {
        "flat": [
          [
            "False",
            "True"
          ]
        ],
        "RGB_output": [
          [
            "True",
            "False"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "Image Voronoi Noise Filter",
    "display_name": "Image Voronoi Noise Filter",
    "description": "",
    "category": "WAS Suite/Image/Generate/Noise",
    "output_node": false
  },
  "KSampler (WAS)": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "SEED"
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "KSampler (WAS)",
    "display_name": "KSampler (WAS)",
    "description": "",
    "category": "WAS Suite/Sampling",
    "output_node": false
  },
  "KSampler Cycle": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "tiled_vae": [
          [
            "disable",
            "enable"
          ]
        ],
        "latent_upscale": [
          [
            "disable",
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.1,
            "max": 8,
            "step": 0.1
          }
        ],
        "upscale_cycles": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 12,
            "step": 1
          }
        ],
        "starting_denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "cycle_denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "scale_denoise": [
          [
            "enable",
            "disable"
          ]
        ],
        "scale_sampling": [
          [
            "bilinear",
            "bicubic",
            "nearest",
            "lanczos"
          ]
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": {
        "secondary_model": [
          "MODEL"
        ],
        "secondary_start_cycle": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 16,
            "step": 1
          }
        ],
        "upscale_model": [
          "UPSCALE_MODEL"
        ],
        "processor_model": [
          "UPSCALE_MODEL"
        ],
        "pos_additive": [
          "CONDITIONING"
        ],
        "neg_additive": [
          "CONDITIONING"
        ],
        "pos_add_mode": [
          [
            "increment",
            "decrement"
          ]
        ],
        "pos_add_strength": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.01,
            "max": 1,
            "step": 0.01
          }
        ],
        "pos_add_strength_scaling": [
          [
            "enable",
            "disable"
          ]
        ],
        "pos_add_strength_cutoff": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.01,
            "max": 10,
            "step": 0.01
          }
        ],
        "neg_add_mode": [
          [
            "increment",
            "decrement"
          ]
        ],
        "neg_add_strength": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.01,
            "max": 1,
            "step": 0.01
          }
        ],
        "neg_add_strength_scaling": [
          [
            "enable",
            "disable"
          ]
        ],
        "neg_add_strength_cutoff": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.01,
            "max": 10,
            "step": 0.01
          }
        ],
        "sharpen_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "sharpen_radius": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 12,
            "step": 1
          }
        ],
        "steps_scaling": [
          [
            "enable",
            "disable"
          ]
        ],
        "steps_control": [
          [
            "decrement",
            "increment"
          ]
        ],
        "steps_scaling_value": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 20,
            "step": 1
          }
        ],
        "steps_cutoff": [
          "INT",
          {
            "default": 20,
            "min": 4,
            "max": 1000,
            "step": 1
          }
        ],
        "denoise_cutoff": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.01,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "latent(s)"
    ],
    "name": "KSampler Cycle",
    "display_name": "KSampler Cycle",
    "description": "",
    "category": "WAS Suite/Sampling",
    "output_node": false
  },
  "Latent Batch": {
    "input": {
      "required": {

      },
      "optional": {
        "latent_a": [
          "LATENT"
        ],
        "latent_b": [
          "LATENT"
        ],
        "latent_c": [
          "LATENT"
        ],
        "latent_d": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "latent"
    ],
    "name": "Latent Batch",
    "display_name": "Latent Batch",
    "description": "",
    "category": "WAS Suite/Latent",
    "output_node": false
  },
  "Latent Noise Injection": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "noise_std": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "Latent Noise Injection",
    "display_name": "Latent Noise Injection",
    "description": "",
    "category": "WAS Suite/Latent/Generate",
    "output_node": false
  },
  "Latent Size to Number": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ]
      }
    },
    "output": [
      "NUMBER",
      "NUMBER",
      "FLOAT",
      "FLOAT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "tensor_w_num",
      "tensor_h_num"
    ],
    "name": "Latent Size to Number",
    "display_name": "Latent Size to Number",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Latent Upscale by Factor (WAS)": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "mode": [
          [
            "area",
            "bicubic",
            "bilinear",
            "nearest"
          ]
        ],
        "factor": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.1,
            "max": 8,
            "step": 0.01
          }
        ],
        "align": [
          [
            "true",
            "false"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "Latent Upscale by Factor (WAS)",
    "display_name": "Latent Upscale by Factor (WAS)",
    "description": "",
    "category": "WAS Suite/Latent/Transform",
    "output_node": false
  },
  "Load Image Batch": {
    "input": {
      "required": {
        "mode": [
          [
            "single_image",
            "incremental_image",
            "random"
          ]
        ],
        "index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 150000,
            "step": 1
          }
        ],
        "label": [
          "STRING",
          {
            "default": "Batch 001",
            "multiline": false
          }
        ],
        "path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "pattern": [
          "STRING",
          {
            "default": "*",
            "multiline": false
          }
        ],
        "allow_RGBA_output": [
          [
            "false",
            "true"
          ]
        ]
      },
      "optional": {
        "filename_text_extension": [
          [
            "true",
            "false"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "filename_text"
    ],
    "name": "Load Image Batch",
    "display_name": "Load Image Batch",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": false
  },
  "Load Text File": {
    "input": {
      "required": {
        "file_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "dictionary_name": [
          "STRING",
          {
            "default": "[filename]",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING",
      "DICT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "STRING",
      "DICT"
    ],
    "name": "Load Text File",
    "display_name": "Load Text File",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": false
  },
  "Load Lora": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "NAME_STRING"
    ],
    "name": "Load Lora",
    "display_name": "Load Lora",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "Lora Input Switch": {
    "input": {
      "required": {
        "model_a": [
          "MODEL"
        ],
        "clip_a": [
          "CLIP"
        ],
        "model_b": [
          "MODEL"
        ],
        "clip_b": [
          "CLIP"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL",
      "CLIP"
    ],
    "name": "Lora Input Switch",
    "display_name": "Lora Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Masks Add": {
    "input": {
      "required": {
        "masks_a": [
          "MASK"
        ],
        "masks_b": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Masks Add",
    "display_name": "Masks Add",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Masks Subtract": {
    "input": {
      "required": {
        "masks_a": [
          "MASK"
        ],
        "masks_b": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Masks Subtract",
    "display_name": "Masks Subtract",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Arbitrary Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "size": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "threshold": [
          "INT",
          {
            "default": 128,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Arbitrary Region",
    "display_name": "Mask Arbitrary Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Batch to Mask": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "batch_number": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 64,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "Mask Batch to Mask",
    "display_name": "Mask Batch to Mask",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Batch": {
    "input": {
      "optional": {
        "masks_a": [
          "MASK"
        ],
        "masks_b": [
          "MASK"
        ],
        "masks_c": [
          "MASK"
        ],
        "masks_d": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "masks"
    ],
    "name": "Mask Batch",
    "display_name": "Mask Batch",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Ceiling Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Ceiling Region",
    "display_name": "Mask Ceiling Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Crop Dominant Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "padding": [
          "INT",
          {
            "default": 24,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Crop Dominant Region",
    "display_name": "Mask Crop Dominant Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Crop Minority Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "padding": [
          "INT",
          {
            "default": 24,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Crop Minority Region",
    "display_name": "Mask Crop Minority Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Crop Region": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "padding": [
          "INT",
          {
            "default": 24,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "region_type": [
          [
            "dominant",
            "minority"
          ]
        ]
      }
    },
    "output": [
      "MASK",
      "CROP_DATA",
      "INT",
      "INT",
      "INT",
      "INT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false],
    "output_name": [
      "cropped_mask",
      "crop_data",
      "top_int",
      "left_int",
      "right_int",
      "bottom_int",
      "width_int",
      "height_int"
    ],
    "name": "Mask Crop Region",
    "display_name": "Mask Crop Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Paste Region": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "crop_mask": [
          "MASK"
        ],
        "crop_data": [
          "CROP_DATA"
        ],
        "crop_blending": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "crop_sharpening": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 3,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MASK",
      "MASK"
    ],
    "name": "Mask Paste Region",
    "display_name": "Mask Paste Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Dilate Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "iterations": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 64,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Dilate Region",
    "display_name": "Mask Dilate Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Dominant Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "threshold": [
          "INT",
          {
            "default": 128,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Dominant Region",
    "display_name": "Mask Dominant Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Erode Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "iterations": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 64,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Erode Region",
    "display_name": "Mask Erode Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Fill Holes": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Fill Holes",
    "display_name": "Mask Fill Holes",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Floor Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Floor Region",
    "display_name": "Mask Floor Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Gaussian Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "radius": [
          "FLOAT",
          {
            "default": 5,
            "min": 0,
            "max": 1024,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Gaussian Region",
    "display_name": "Mask Gaussian Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Invert": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Invert",
    "display_name": "Mask Invert",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Minority Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "threshold": [
          "INT",
          {
            "default": 128,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Minority Region",
    "display_name": "Mask Minority Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Smooth Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "sigma": [
          "FLOAT",
          {
            "default": 5,
            "min": 0,
            "max": 128,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Smooth Region",
    "display_name": "Mask Smooth Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Threshold Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "black_threshold": [
          "INT",
          {
            "default": 75,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "white_threshold": [
          "INT",
          {
            "default": 175,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Threshold Region",
    "display_name": "Mask Threshold Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Masks Combine Regions": {
    "input": {
      "required": {
        "mask_a": [
          "MASK"
        ],
        "mask_b": [
          "MASK"
        ]
      },
      "optional": {
        "mask_c": [
          "MASK"
        ],
        "mask_d": [
          "MASK"
        ],
        "mask_e": [
          "MASK"
        ],
        "mask_f": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "Masks Combine Regions",
    "display_name": "Masks Combine Regions",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Masks Combine Batch": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "Masks Combine Batch",
    "display_name": "Masks Combine Batch",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "MiDaS Model Loader": {
    "input": {
      "required": {
        "midas_model": [
          [
            "DPT_Large",
            "DPT_Hybrid"
          ]
        ]
      }
    },
    "output": [
      "MIDAS_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "midas_model"
    ],
    "name": "MiDaS Model Loader",
    "display_name": "MiDaS Model Loader",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "MiDaS Depth Approximation": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "use_cpu": [
          [
            "false",
            "true"
          ]
        ],
        "midas_type": [
          [
            "DPT_Large",
            "DPT_Hybrid"
          ]
        ],
        "invert_depth": [
          [
            "false",
            "true"
          ]
        ]
      },
      "optional": {
        "midas_model": [
          "MIDAS_MODEL"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "MiDaS Depth Approximation",
    "display_name": "MiDaS Depth Approximation",
    "description": "",
    "category": "WAS Suite/Image/AI",
    "output_node": false
  },
  "MiDaS Mask Image": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "use_cpu": [
          [
            "false",
            "true"
          ]
        ],
        "midas_model": [
          [
            "DPT_Large",
            "DPT_Hybrid",
            "DPT_Small"
          ]
        ],
        "remove": [
          [
            "background",
            "foregroud"
          ]
        ],
        "threshold": [
          [
            "false",
            "true"
          ]
        ],
        "threshold_low": [
          "FLOAT",
          {
            "default": 10,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "threshold_mid": [
          "FLOAT",
          {
            "default": 200,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "threshold_high": [
          "FLOAT",
          {
            "default": 210,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "smoothing": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0,
            "max": 16,
            "step": 0.01
          }
        ],
        "background_red": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "background_green": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "background_blue": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "IMAGE"
    ],
    "name": "MiDaS Mask Image",
    "display_name": "MiDaS Mask Image",
    "description": "",
    "category": "WAS Suite/Image/AI",
    "output_node": false
  },
  "Model Input Switch": {
    "input": {
      "required": {
        "model_a": [
          "MODEL"
        ],
        "model_b": [
          "MODEL"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "Model Input Switch",
    "display_name": "Model Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Number Counter": {
    "input": {
      "required": {
        "number_type": [
          [
            "integer",
            "float"
          ]
        ],
        "mode": [
          [
            "increment",
            "decrement",
            "increment_to_stop",
            "decrement_to_stop"
          ]
        ],
        "start": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19,
            "step": 0.01
          }
        ],
        "stop": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19,
            "step": 0.01
          }
        ],
        "step": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 99999,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "reset_bool": [
          "NUMBER"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "number",
      "float",
      "int"
    ],
    "name": "Number Counter",
    "display_name": "Number Counter",
    "description": "",
    "category": "WAS Suite/Number",
    "output_node": false
  },
  "Number Operation": {
    "input": {
      "required": {
        "number_a": [
          "NUMBER"
        ],
        "number_b": [
          "NUMBER"
        ],
        "operation": [
          [
            "addition",
            "subtraction",
            "division",
            "floor division",
            "multiplication",
            "exponentiation",
            "modulus",
            "greater-than",
            "greater-than or equals",
            "less-than",
            "less-than or equals",
            "equals",
            "does not equal"
          ]
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "Number Operation",
    "display_name": "Number Operation",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Number to Float": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "Number to Float",
    "display_name": "Number to Float",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Number Input Switch": {
    "input": {
      "required": {
        "number_a": [
          "NUMBER"
        ],
        "number_b": [
          "NUMBER"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "Number Input Switch",
    "display_name": "Number Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Number Input Condition": {
    "input": {
      "required": {
        "number_a": [
          "NUMBER"
        ],
        "number_b": [
          "NUMBER"
        ],
        "return_boolean": [
          [
            "false",
            "true"
          ]
        ],
        "comparison": [
          [
            "and",
            "or",
            "greater-than",
            "greater-than or equals",
            "less-than",
            "less-than or equals",
            "equals",
            "does not equal",
            "divisible by",
            "if A odd",
            "if A even",
            "if A prime",
            "factor of"
          ]
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "Number Input Condition",
    "display_name": "Number Input Condition",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Number Multiple Of": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ],
        "multiple": [
          "INT",
          {
            "default": 8,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "Number Multiple Of",
    "display_name": "Number Multiple Of",
    "description": "",
    "category": "WAS Suite/Number/Functions",
    "output_node": false
  },
  "Number PI": {
    "input": {
      "required": {

      }
    },
    "output": [
      "NUMBER",
      "FLOAT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "NUMBER",
      "FLOAT"
    ],
    "name": "Number PI",
    "display_name": "Number PI",
    "description": "",
    "category": "WAS Suite/Number",
    "output_node": false
  },
  "Number to Int": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "Number to Int",
    "display_name": "Number to Int",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Number to Seed": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "SEED"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEED"
    ],
    "name": "Number to Seed",
    "display_name": "Number to Seed",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Number to String": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Number to String",
    "display_name": "Number to String",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Number to Text": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Number to Text",
    "display_name": "Number to Text",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Boolean To Text": {
    "input": {
      "required": {
        "boolean": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Boolean To Text",
    "display_name": "Boolean To Text",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Prompt Styles Selector": {
    "input": {
      "required": {
        "style": [
          [
            "None"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "positive_string",
      "negative_string"
    ],
    "name": "Prompt Styles Selector",
    "display_name": "Prompt Styles Selector",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Prompt Multiple Styles Selector": {
    "input": {
      "required": {
        "style1": [
          [
            "None"
          ]
        ],
        "style2": [
          [
            "None"
          ]
        ],
        "style3": [
          [
            "None"
          ]
        ],
        "style4": [
          [
            "None"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "positive_string",
      "negative_string"
    ],
    "name": "Prompt Multiple Styles Selector",
    "display_name": "Prompt Multiple Styles Selector",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Random Number": {
    "input": {
      "required": {
        "number_type": [
          [
            "integer",
            "float",
            "bool"
          ]
        ],
        "minimum": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ],
        "maximum": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "Random Number",
    "display_name": "Random Number",
    "description": "",
    "category": "WAS Suite/Number",
    "output_node": false
  },
  "Save Text File": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "path": [
          "STRING",
          {
            "default": "./ComfyUI/output/[time(%Y-%m-%d)]",
            "multiline": false
          }
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ],
        "filename_delimiter": [
          "STRING",
          {
            "default": "_"
          }
        ],
        "filename_number_padding": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 9,
            "step": 1
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Save Text File",
    "display_name": "Save Text File",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": true
  },
  "Seed": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "SEED",
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "seed",
      "number",
      "float",
      "int"
    ],
    "name": "Seed",
    "display_name": "Seed",
    "description": "",
    "category": "WAS Suite/Number",
    "output_node": false
  },
  "Tensor Batch to Image": {
    "input": {
      "required": {
        "images_batch": [
          "IMAGE"
        ],
        "batch_image_number": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 64,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Tensor Batch to Image",
    "display_name": "Tensor Batch to Image",
    "description": "",
    "category": "WAS Suite/Latent/Transform",
    "output_node": false
  },
  "BLIP Analyze Image": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "mode": [
          [
            "caption",
            "interrogate"
          ]
        ],
        "question": [
          "STRING",
          {
            "default": "What does the background consist of?",
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "blip_model": [
          "BLIP_MODEL"
        ]
      },
      "optional": {
        "min_length": [
          "INT",
          {
            "min": 1,
            "max": 1024,
            "default": 24
          }
        ],
        "max_length": [
          "INT",
          {
            "min": 2,
            "max": 1024,
            "default": 64
          }
        ],
        "num_beams": [
          "INT",
          {
            "min": 1,
            "max": 12,
            "default": 5
          }
        ],
        "no_repeat_ngram_size": [
          "INT",
          {
            "min": 1,
            "max": 12,
            "default": 3
          }
        ],
        "early_stopping": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, true],
    "output_name": [
      "STRING",
      "STRING"
    ],
    "name": "BLIP Analyze Image",
    "display_name": "BLIP Analyze Image",
    "description": "",
    "category": "WAS Suite/Text/AI",
    "output_node": false
  },
  "SAM Model Loader": {
    "input": {
      "required": {
        "model_size": [
          [
            "ViT-H",
            "ViT-L",
            "ViT-B"
          ]
        ]
      }
    },
    "output": [
      "SAM_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "SAM_MODEL"
    ],
    "name": "SAM Model Loader",
    "display_name": "SAM Model Loader",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "SAM Parameters": {
    "input": {
      "required": {
        "points": [
          "STRING",
          {
            "default": "[128, 128]; [0, 0]",
            "multiline": false
          }
        ],
        "labels": [
          "STRING",
          {
            "default": "[1, 0]",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "SAM_PARAMETERS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SAM_PARAMETERS"
    ],
    "name": "SAM Parameters",
    "display_name": "SAM Parameters",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "SAM Parameters Combine": {
    "input": {
      "required": {
        "sam_parameters_a": [
          "SAM_PARAMETERS"
        ],
        "sam_parameters_b": [
          "SAM_PARAMETERS"
        ]
      }
    },
    "output": [
      "SAM_PARAMETERS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SAM_PARAMETERS"
    ],
    "name": "SAM Parameters Combine",
    "display_name": "SAM Parameters Combine",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "SAM Image Mask": {
    "input": {
      "required": {
        "sam_model": [
          "SAM_MODEL"
        ],
        "sam_parameters": [
          "SAM_PARAMETERS"
        ],
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "SAM Image Mask",
    "display_name": "SAM Image Mask",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Samples Passthrough (Stat System)": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "samples"
    ],
    "name": "Samples Passthrough (Stat System)",
    "display_name": "Samples Passthrough (Stat System)",
    "description": "",
    "category": "WAS Suite/Debug",
    "output_node": false
  },
  "String to Text": {
    "input": {
      "required": {
        "string": [
          "STRING",
          {

          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "String to Text",
    "display_name": "String to Text",
    "description": "",
    "category": "WAS Suite/Text/Operations",
    "output_node": false
  },
  "Image Bounds": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE_BOUNDS"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE_BOUNDS"
    ],
    "name": "Image Bounds",
    "display_name": "Image Bounds",
    "description": "",
    "category": "WAS Suite/Image/Bound",
    "output_node": false
  },
  "Inset Image Bounds": {
    "input": {
      "required": {
        "image_bounds": [
          "IMAGE_BOUNDS"
        ],
        "inset_left": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "inset_right": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "inset_top": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "inset_bottom": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "IMAGE_BOUNDS"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE_BOUNDS"
    ],
    "name": "Inset Image Bounds",
    "display_name": "Inset Image Bounds",
    "description": "",
    "category": "WAS Suite/Image/Bound",
    "output_node": false
  },
  "Bounded Image Blend": {
    "input": {
      "required": {
        "target": [
          "IMAGE"
        ],
        "target_bounds": [
          "IMAGE_BOUNDS"
        ],
        "source": [
          "IMAGE"
        ],
        "blend_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1
          }
        ],
        "feathering": [
          "INT",
          {
            "default": 16,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Bounded Image Blend",
    "display_name": "Bounded Image Blend",
    "description": "",
    "category": "WAS Suite/Image/Bound",
    "output_node": false
  },
  "Bounded Image Blend with Mask": {
    "input": {
      "required": {
        "target": [
          "IMAGE"
        ],
        "target_mask": [
          "MASK"
        ],
        "target_bounds": [
          "IMAGE_BOUNDS"
        ],
        "source": [
          "IMAGE"
        ],
        "blend_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1
          }
        ],
        "feathering": [
          "INT",
          {
            "default": 16,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Bounded Image Blend with Mask",
    "display_name": "Bounded Image Blend with Mask",
    "description": "",
    "category": "WAS Suite/Image/Bound",
    "output_node": false
  },
  "Bounded Image Crop": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "image_bounds": [
          "IMAGE_BOUNDS"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Bounded Image Crop",
    "display_name": "Bounded Image Crop",
    "description": "",
    "category": "WAS Suite/Image/Bound",
    "output_node": false
  },
  "Bounded Image Crop with Mask": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "padding_left": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "padding_right": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "padding_top": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "padding_bottom": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE_BOUNDS"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "IMAGE_BOUNDS"
    ],
    "name": "Bounded Image Crop with Mask",
    "display_name": "Bounded Image Crop with Mask",
    "description": "",
    "category": "WAS Suite/Image/Bound",
    "output_node": false
  },
  "Image Bounds to Console": {
    "input": {
      "required": {
        "image_bounds": [
          "IMAGE_BOUNDS"
        ],
        "label": [
          "STRING",
          {
            "default": "Debug to Console",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "IMAGE_BOUNDS"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE_BOUNDS"
    ],
    "name": "Image Bounds to Console",
    "display_name": "Image Bounds to Console",
    "description": "",
    "category": "WAS Suite/Debug",
    "output_node": true
  },
  "Text Dictionary Update": {
    "input": {
      "required": {
        "dictionary_a": [
          "DICT"
        ],
        "dictionary_b": [
          "DICT"
        ]
      },
      "optional": {
        "dictionary_c": [
          "DICT"
        ],
        "dictionary_d": [
          "DICT"
        ]
      }
    },
    "output": [
      "DICT"
    ],
    "output_is_list": [false],
    "output_name": [
      "DICT"
    ],
    "name": "Text Dictionary Update",
    "display_name": "Text Dictionary Update",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Dictionary Get": {
    "input": {
      "required": {
        "dictionary": [
          "DICT"
        ],
        "key": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      },
      "optional": {
        "default_value": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text Dictionary Get",
    "display_name": "Text Dictionary Get",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Dictionary Convert": {
    "input": {
      "required": {
        "dictionary_text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "DICT"
    ],
    "output_is_list": [false],
    "output_name": [
      "DICT"
    ],
    "name": "Text Dictionary Convert",
    "display_name": "Text Dictionary Convert",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Dictionary New": {
    "input": {
      "required": {
        "key_1": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "value_1": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      },
      "optional": {
        "key_2": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "value_2": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "key_3": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "value_3": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "key_4": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "value_4": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "key_5": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "value_5": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "DICT"
    ],
    "output_is_list": [false],
    "output_name": [
      "DICT"
    ],
    "name": "Text Dictionary New",
    "display_name": "Text Dictionary New",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Dictionary Keys": {
    "input": {
      "required": {
        "dictionary": [
          "DICT"
        ]
      },
      "optional": {

      }
    },
    "output": [
      "LIST"
    ],
    "output_is_list": [false],
    "output_name": [
      "LIST"
    ],
    "name": "Text Dictionary Keys",
    "display_name": "Text Dictionary Keys",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Dictionary To Text": {
    "input": {
      "required": {
        "dictionary": [
          "DICT"
        ]
      },
      "optional": {

      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text Dictionary To Text",
    "display_name": "Text Dictionary To Text",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Add Tokens": {
    "input": {
      "required": {
        "tokens": [
          "STRING",
          {
            "default": "[hello]: world",
            "multiline": true
          }
        ],
        "print_current_tokens": [
          [
            "false",
            "true"
          ]
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Text Add Tokens",
    "display_name": "Text Add Tokens",
    "description": "",
    "category": "WAS Suite/Text/Tokens",
    "output_node": true
  },
  "Text Add Token by Input": {
    "input": {
      "required": {
        "token_name": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "token_value": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "print_current_tokens": [
          [
            "false",
            "true"
          ]
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Text Add Token by Input",
    "display_name": "Text Add Token by Input",
    "description": "",
    "category": "WAS Suite/Text/Tokens",
    "output_node": true
  },
  "Text Compare": {
    "input": {
      "required": {
        "text_a": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_b": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "mode": [
          [
            "similarity",
            "difference"
          ]
        ],
        "tolerance": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "BOOLEAN",
      "NUMBER",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "TEXT_A_PASS",
      "TEXT_B_PASS",
      "BOOLEAN",
      "SCORE_NUMBER",
      "COMPARISON_TEXT"
    ],
    "name": "Text Compare",
    "display_name": "Text Compare",
    "description": "",
    "category": "WAS Suite/Text/Search",
    "output_node": false
  },
  "Text Concatenate": {
    "input": {
      "required": {
        "delimiter": [
          "STRING",
          {
            "default": ", "
          }
        ],
        "clean_whitespace": [
          [
            "true",
            "false"
          ]
        ]
      },
      "optional": {
        "text_a": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_b": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_c": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_d": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text Concatenate",
    "display_name": "Text Concatenate",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text File History Loader": {
    "input": {
      "required": {
        "file": [
          [
            "No History"
          ]
        ],
        "dictionary_name": [
          "STRING",
          {
            "default": "[filename]",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "DICT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "STRING",
      "DICT"
    ],
    "name": "Text File History Loader",
    "display_name": "Text File History Loader",
    "description": "",
    "category": "WAS Suite/History",
    "output_node": false
  },
  "Text Find and Replace by Dictionary": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "dictionary": [
          "DICT"
        ],
        "replacement_key": [
          "STRING",
          {
            "default": "__",
            "multiline": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text Find and Replace by Dictionary",
    "display_name": "Text Find and Replace by Dictionary",
    "description": "",
    "category": "WAS Suite/Text/Search",
    "output_node": false
  },
  "Text Find and Replace Input": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "find": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "replace": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "result_text",
      "replacement_count_number",
      "replacement_count_float",
      "replacement_count_int"
    ],
    "name": "Text Find and Replace Input",
    "display_name": "Text Find and Replace Input",
    "description": "",
    "category": "WAS Suite/Text/Search",
    "output_node": false
  },
  "Text Find and Replace": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "find": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING",
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "result_text",
      "replacement_count_number",
      "replacement_count_float",
      "replacement_count_int"
    ],
    "name": "Text Find and Replace",
    "display_name": "Text Find and Replace",
    "description": "",
    "category": "WAS Suite/Text/Search",
    "output_node": false
  },
  "Text Find": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "substring": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "pattern": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": "BOOLEAN",
    "output_is_list": [false, false, false, false, false, false, false],
    "output_name": "found",
    "name": "Text Find",
    "display_name": "Text Find",
    "description": "",
    "category": "WAS Suite/Text/Search",
    "output_node": false
  },
  "Text Input Switch": {
    "input": {
      "required": {
        "text_a": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_b": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text Input Switch",
    "display_name": "Text Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Text List": {
    "input": {
      "required": {

      },
      "optional": {
        "text_a": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_b": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_c": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_d": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_e": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_f": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_g": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "LIST"
    ],
    "output_is_list": [false],
    "output_name": [
      "LIST"
    ],
    "name": "Text List",
    "display_name": "Text List",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text List Concatenate": {
    "input": {
      "required": {

      },
      "optional": {
        "list_a": [
          "LIST",
          {
            "forceInput": true
          }
        ],
        "list_b": [
          "LIST",
          {
            "forceInput": true
          }
        ],
        "list_c": [
          "LIST",
          {
            "forceInput": true
          }
        ],
        "list_d": [
          "LIST",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "LIST"
    ],
    "output_is_list": [false],
    "output_name": [
      "LIST"
    ],
    "name": "Text List Concatenate",
    "display_name": "Text List Concatenate",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text List to Text": {
    "input": {
      "required": {
        "delimiter": [
          "STRING",
          {
            "default": ", "
          }
        ],
        "text_list": [
          "LIST",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text List to Text",
    "display_name": "Text List to Text",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Load Line From File": {
    "input": {
      "required": {
        "file_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "dictionary_name": [
          "STRING",
          {
            "default": "[filename]",
            "multiline": false
          }
        ],
        "label": [
          "STRING",
          {
            "default": "TextBatch",
            "multiline": false
          }
        ],
        "mode": [
          [
            "automatic",
            "index"
          ]
        ],
        "index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ]
      },
      "optional": {
        "multiline_text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "DICT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "line_text",
      "dictionary"
    ],
    "name": "Text Load Line From File",
    "display_name": "Text Load Line From File",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Multiline": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "dynamicPrompts": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text Multiline",
    "display_name": "Text Multiline",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Multiline (Code Compatible)": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "dynamicPrompts": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text Multiline (Code Compatible)",
    "display_name": "Text Multiline (Code Compatible)",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Parse A1111 Embeddings": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text Parse A1111 Embeddings",
    "display_name": "Text Parse A1111 Embeddings",
    "description": "",
    "category": "WAS Suite/Text/Parse",
    "output_node": false
  },
  "Text Parse Noodle Soup Prompts": {
    "input": {
      "required": {
        "mode": [
          [
            "Noodle Soup Prompts",
            "Wildcards"
          ]
        ],
        "noodle_key": [
          "STRING",
          {
            "default": "__",
            "multiline": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text Parse Noodle Soup Prompts",
    "display_name": "Text Parse Noodle Soup Prompts",
    "description": "",
    "category": "WAS Suite/Text/Parse",
    "output_node": true
  },
  "Text Parse Tokens": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text Parse Tokens",
    "display_name": "Text Parse Tokens",
    "description": "",
    "category": "WAS Suite/Text/Tokens",
    "output_node": false
  },
  "Text Random Line": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text Random Line",
    "display_name": "Text Random Line",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Random Prompt": {
    "input": {
      "required": {
        "search_seed": [
          "STRING",
          {
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text Random Prompt",
    "display_name": "Text Random Prompt",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text String": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      },
      "optional": {
        "text_b": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "text_c": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "text_d": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "name": "Text String",
    "display_name": "Text String",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Contains": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "sub_text": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      },
      "optional": {
        "case_insensitive": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "Text Contains",
    "display_name": "Text Contains",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Text Shuffle": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "separator": [
          "STRING",
          {
            "default": ",",
            "multiline": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text Shuffle",
    "display_name": "Text Shuffle",
    "description": "",
    "category": "WAS Suite/Text/Operations",
    "output_node": false
  },
  "Text to Conditioning": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "Text to Conditioning",
    "display_name": "Text to Conditioning",
    "description": "",
    "category": "WAS Suite/Text/Operations",
    "output_node": false
  },
  "Text to Console": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "label": [
          "STRING",
          {
            "default": "Text Output",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text to Console",
    "display_name": "Text to Console",
    "description": "",
    "category": "WAS Suite/Debug",
    "output_node": true
  },
  "Text to Number": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "NUMBER"
    ],
    "output_is_list": [false],
    "output_name": [
      "NUMBER"
    ],
    "name": "Text to Number",
    "display_name": "Text to Number",
    "description": "",
    "category": "WAS Suite/Text/Operations",
    "output_node": false
  },
  "Text to String": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text to String",
    "display_name": "Text to String",
    "description": "",
    "category": "WAS Suite/Text/Operations",
    "output_node": false
  },
  "Text String Truncate": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "truncate_by": [
          [
            "characters",
            "words"
          ]
        ],
        "truncate_from": [
          [
            "end",
            "beginning"
          ]
        ],
        "truncate_to": [
          "INT",
          {
            "default": 10,
            "min": -99999999,
            "max": 99999999,
            "step": 1
          }
        ]
      },
      "optional": {
        "text_b": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_c": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_d": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "name": "Text String Truncate",
    "display_name": "Text String Truncate",
    "description": "",
    "category": "WAS Suite/Text/Operations",
    "output_node": false
  },
  "True Random.org Number Generator": {
    "input": {
      "required": {
        "api_key": [
          "STRING",
          {
            "default": "00000000-0000-0000-0000-000000000000",
            "multiline": false
          }
        ],
        "minimum": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ],
        "maximum": [
          "FLOAT",
          {
            "default": 10000000,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ],
        "mode": [
          [
            "random",
            "fixed"
          ]
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "True Random.org Number Generator",
    "display_name": "True Random.org Number Generator",
    "description": "",
    "category": "WAS Suite/Number",
    "output_node": false
  },
  "unCLIP Checkpoint Loader": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "CLIP_VISION",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "CLIP_VISION",
      "NAME_STRING"
    ],
    "name": "unCLIP Checkpoint Loader",
    "display_name": "unCLIP Checkpoint Loader",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "Upscale Model Loader": {
    "input": {
      "required": {
        "model_name": [
          [
            "4x-lollypop.pth",
            "4xRealWebPhoto_v4_dat2.pth",
            "4x_NMKD-Siax_200k.pth",
            "RealESRGAN_x2.pth",
            "RealESRGAN_x4.pth",
            "RealESRGAN_x8.pth"
          ]
        ]
      }
    },
    "output": [
      "UPSCALE_MODEL",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "UPSCALE_MODEL",
      "MODEL_NAME_TEXT"
    ],
    "name": "Upscale Model Loader",
    "display_name": "Upscale Model Loader",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "Upscale Model Switch": {
    "input": {
      "required": {
        "upscale_model_a": [
          "UPSCALE_MODEL"
        ],
        "upscale_model_b": [
          "UPSCALE_MODEL"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "UPSCALE_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "UPSCALE_MODEL"
    ],
    "name": "Upscale Model Switch",
    "display_name": "Upscale Model Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Write to GIF": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "transition_frames": [
          "INT",
          {
            "default": 30,
            "min": 2,
            "max": 60,
            "step": 1
          }
        ],
        "image_delay_ms": [
          "FLOAT",
          {
            "default": 2500,
            "min": 0.1,
            "max": 60000,
            "step": 0.1
          }
        ],
        "duration_ms": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.1,
            "max": 60000,
            "step": 0.1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "max_size": [
          "INT",
          {
            "default": 512,
            "min": 128,
            "max": 1280,
            "step": 1
          }
        ],
        "output_path": [
          "STRING",
          {
            "default": "/home/ComfyUI/output",
            "multiline": false
          }
        ],
        "filename": [
          "STRING",
          {
            "default": "morph_writer",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "image_pass",
      "filepath_text",
      "filename_text"
    ],
    "name": "Write to GIF",
    "display_name": "Write to GIF",
    "description": "",
    "category": "WAS Suite/Animation/Writer",
    "output_node": false
  },
  "Write to Video": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "transition_frames": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 120,
            "step": 1
          }
        ],
        "image_delay_sec": [
          "FLOAT",
          {
            "default": 2.5,
            "min": 0.1,
            "max": 60000,
            "step": 0.1
          }
        ],
        "fps": [
          "INT",
          {
            "default": 30,
            "min": 1,
            "max": 60,
            "step": 1
          }
        ],
        "max_size": [
          "INT",
          {
            "default": 512,
            "min": 128,
            "max": 1920,
            "step": 1
          }
        ],
        "output_path": [
          "STRING",
          {
            "default": "./ComfyUI/output",
            "multiline": false
          }
        ],
        "filename": [
          "STRING",
          {
            "default": "comfy_writer",
            "multiline": false
          }
        ],
        "codec": [
          [
            "AVC1",
            "FFV1",
            "H264",
            "MP4V"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "IMAGE_PASS",
      "filepath_text",
      "filename_text"
    ],
    "name": "Write to Video",
    "display_name": "Write to Video",
    "description": "",
    "category": "WAS Suite/Animation/Writer",
    "output_node": false
  },
  "VAE Input Switch": {
    "input": {
      "required": {
        "vae_a": [
          "VAE"
        ],
        "vae_b": [
          "VAE"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "VAE"
    ],
    "output_is_list": [false],
    "output_name": [
      "VAE"
    ],
    "name": "VAE Input Switch",
    "display_name": "VAE Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Video Dump Frames": {
    "input": {
      "required": {
        "video_path": [
          "STRING",
          {
            "default": "./ComfyUI/input/MyVideo.mp4",
            "multiline": false
          }
        ],
        "output_path": [
          "STRING",
          {
            "default": "./ComfyUI/input/MyVideo",
            "multiline": false
          }
        ],
        "prefix": [
          "STRING",
          {
            "default": "frame_",
            "multiline": false
          }
        ],
        "filenumber_digits": [
          "INT",
          {
            "default": 4,
            "min": -1,
            "max": 8,
            "step": 1
          }
        ],
        "extension": [
          [
            "png",
            "jpg",
            "gif",
            "tiff"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "NUMBER"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "output_path",
      "processed_count"
    ],
    "name": "Video Dump Frames",
    "display_name": "Video Dump Frames",
    "description": "",
    "category": "WAS Suite/Animation",
    "output_node": false
  },
  "Inference_Core_ModelMergeBlockNumber": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "time_embed.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "label_emb.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.3.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.6.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.9.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.10.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.11.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.6.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.7.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.8.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.9.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.10.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.11.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "out.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "Inference_Core_ModelMergeBlockNumber",
    "display_name": "Inference_Core_ModelMergeBlockNumber",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "Inference_Core_ReferenceOnlySimple": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "reference": [
          "LATENT"
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "LATENT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL",
      "LATENT"
    ],
    "name": "Inference_Core_ReferenceOnlySimple",
    "display_name": "Inference_Core_ReferenceOnlySimple",
    "description": "",
    "category": "custom_node_experiments",
    "output_node": false
  },
  "Inference_Core_RescaleClassifierFreeGuidanceTest": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "Inference_Core_RescaleClassifierFreeGuidanceTest",
    "display_name": "Inference_Core_RescaleClassifierFreeGuidanceTest",
    "description": "",
    "category": "custom_node_experiments",
    "output_node": false
  },
  "Inference_Core_ModelSamplerTonemapNoiseTest": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "Inference_Core_ModelSamplerTonemapNoiseTest",
    "display_name": "Inference_Core_ModelSamplerTonemapNoiseTest",
    "description": "",
    "category": "custom_node_experiments",
    "output_node": false
  },
  "Inference_Core_TonemapNoiseWithRescaleCFG": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "tonemap_multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01
          }
        ],
        "rescale_multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "Inference_Core_TonemapNoiseWithRescaleCFG",
    "display_name": "Inference_Core_TonemapNoiseWithRescaleCFG",
    "description": "",
    "category": "custom_node_experiments",
    "output_node": false
  },
  "Inference_Core_ModelMergeSDXL": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "time_embed.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "label_emb.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.0": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.6": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.0": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.6": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.7": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.8": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "out.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "Inference_Core_ModelMergeSDXL",
    "display_name": "Inference_Core_ModelMergeSDXL",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "Inference_Core_ModelMergeSDXLTransformers": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "time_embed.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "label_emb.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.0.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.1.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.2.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.3.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.6.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.3.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.4.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.5.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.6.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.7.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.8.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.9.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.3.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.4.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.5.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.6.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.7.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.8.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.9.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.3.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.4.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.5.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.6.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.7.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.8.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.9.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.3.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.4.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.5.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.6.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.7.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.8.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.9.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.3.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.4.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.5.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.6.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.7.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.8.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.9.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.3.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.4.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.5.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.6.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.7.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.8.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.9.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.6.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.7.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.8.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "out.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "Inference_Core_ModelMergeSDXLTransformers",
    "display_name": "Inference_Core_ModelMergeSDXLTransformers",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "Inference_Core_ModelMergeSDXLDetailedTransformers": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "time_embed.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "label_emb.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.0.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.1.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.2.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.3.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.0.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.0.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.0.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.0.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.0.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.0.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.0.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.0.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.0.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.0.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.0.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.0.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.1.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.1.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.1.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.1.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.1.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.1.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.1.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.1.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.1.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.1.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.1.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.1.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.0.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.0.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.0.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.0.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.0.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.0.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.0.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.0.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.0.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.0.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.0.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.0.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.1.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.1.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.1.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.1.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.1.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.1.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.1.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.1.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.1.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.1.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.1.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.1.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.6.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.0.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.0.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.0.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.0.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.0.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.0.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.0.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.0.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.0.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.0.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.0.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.0.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.1.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.1.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.1.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.1.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.1.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.1.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.1.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.1.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.1.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.1.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.1.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.1.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.2.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.2.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.2.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.2.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.2.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.2.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.2.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.2.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.2.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.2.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.2.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.2.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.3.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.3.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.3.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.3.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.3.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.3.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.3.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.3.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.3.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.3.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.3.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.3.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.4.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.4.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.4.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.4.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.4.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.4.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.4.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.4.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.4.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.4.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.4.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.4.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.5.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.5.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.5.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.5.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.5.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.5.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.5.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.5.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.5.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.5.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.5.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.5.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.6.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.6.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.6.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.6.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.6.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.6.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.6.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.6.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.6.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.6.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.6.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.6.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.7.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.7.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.7.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.7.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.7.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.7.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.7.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.7.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.7.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.7.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.7.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.7.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.8.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.8.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.8.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.8.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.8.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.8.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.8.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.8.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.8.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.8.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.8.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.8.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.9.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.9.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.9.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.9.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.9.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.9.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.9.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.9.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.9.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.9.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.9.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.9.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.0.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.0.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.0.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.0.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.0.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.0.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.0.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.0.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.0.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.0.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.0.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.0.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.1.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.1.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.1.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.1.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.1.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.1.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.1.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.1.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.1.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.1.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.1.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.1.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.2.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.2.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.2.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.2.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.2.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.2.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.2.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.2.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.2.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.2.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.2.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.2.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.3.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.3.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.3.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.3.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.3.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.3.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.3.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.3.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.3.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.3.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.3.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.3.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.4.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.4.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.4.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.4.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.4.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.4.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.4.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.4.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.4.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.4.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.4.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.4.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.5.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.5.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.5.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.5.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.5.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.5.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.5.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.5.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.5.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.5.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.5.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.5.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.6.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.6.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.6.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.6.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.6.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.6.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.6.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.6.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.6.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.6.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.6.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.6.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.7.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.7.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.7.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.7.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.7.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.7.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.7.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.7.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.7.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.7.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.7.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.7.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.8.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.8.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.8.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.8.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.8.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.8.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.8.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.8.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.8.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.8.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.8.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.8.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.9.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.9.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.9.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.9.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.9.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.9.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.9.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.9.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.9.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.9.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.9.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.9.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.0.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.0.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.0.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.0.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.0.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.0.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.0.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.0.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.0.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.0.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.0.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.0.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.1.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.1.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.1.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.1.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.1.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.1.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.1.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.1.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.1.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.1.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.1.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.1.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.2.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.2.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.2.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.2.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.2.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.2.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.2.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.2.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.2.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.2.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.2.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.2.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.3.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.3.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.3.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.3.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.3.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.3.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.3.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.3.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.3.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.3.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.3.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.3.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.4.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.4.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.4.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.4.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.4.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.4.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.4.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.4.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.4.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.4.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.4.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.4.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.5.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.5.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.5.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.5.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.5.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.5.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.5.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.5.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.5.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.5.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.5.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.5.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.6.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.6.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.6.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.6.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.6.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.6.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.6.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.6.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.6.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.6.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.6.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.6.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.7.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.7.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.7.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.7.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.7.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.7.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.7.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.7.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.7.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.7.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.7.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.7.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.8.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.8.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.8.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.8.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.8.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.8.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.8.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.8.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.8.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.8.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.8.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.8.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.9.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.9.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.9.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.9.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.9.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.9.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.9.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.9.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.9.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.9.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.9.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.9.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.0.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.0.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.0.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.0.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.0.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.0.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.0.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.0.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.0.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.0.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.0.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.0.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.1.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.1.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.1.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.1.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.1.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.1.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.1.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.1.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.1.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.1.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.1.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.1.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.2.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.2.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.2.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.2.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.2.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.2.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.2.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.2.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.2.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.2.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.2.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.2.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.3.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.3.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.3.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.3.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.3.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.3.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.3.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.3.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.3.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.3.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.3.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.3.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.4.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.4.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.4.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.4.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.4.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.4.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.4.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.4.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.4.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.4.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.4.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.4.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.5.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.5.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.5.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.5.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.5.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.5.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.5.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.5.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.5.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.5.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.5.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.5.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.6.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.6.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.6.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.6.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.6.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.6.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.6.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.6.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.6.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.6.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.6.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.6.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.7.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.7.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.7.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.7.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.7.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.7.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.7.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.7.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.7.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.7.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.7.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.7.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.8.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.8.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.8.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.8.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.8.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.8.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.8.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.8.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.8.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.8.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.8.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.8.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.9.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.9.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.9.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.9.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.9.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.9.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.9.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.9.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.9.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.9.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.9.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.9.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.0.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.0.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.0.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.0.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.0.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.0.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.0.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.0.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.0.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.0.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.0.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.0.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.1.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.1.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.1.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.1.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.1.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.1.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.1.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.1.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.1.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.1.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.1.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.1.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.2.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.2.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.2.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.2.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.2.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.2.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.2.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.2.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.2.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.2.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.2.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.2.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.3.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.3.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.3.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.3.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.3.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.3.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.3.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.3.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.3.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.3.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.3.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.3.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.4.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.4.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.4.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.4.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.4.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.4.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.4.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.4.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.4.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.4.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.4.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.4.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.5.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.5.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.5.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.5.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.5.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.5.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.5.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.5.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.5.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.5.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.5.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.5.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.6.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.6.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.6.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.6.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.6.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.6.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.6.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.6.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.6.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.6.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.6.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.6.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.7.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.7.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.7.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.7.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.7.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.7.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.7.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.7.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.7.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.7.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.7.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.7.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.8.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.8.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.8.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.8.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.8.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.8.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.8.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.8.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.8.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.8.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.8.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.8.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.9.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.9.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.9.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.9.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.9.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.9.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.9.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.9.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.9.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.9.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.9.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.9.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.0.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.0.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.0.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.0.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.0.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.0.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.0.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.0.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.0.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.0.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.0.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.0.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.1.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.1.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.1.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.1.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.1.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.1.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.1.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.1.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.1.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.1.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.1.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.1.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.2.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.2.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.2.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.2.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.2.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.2.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.2.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.2.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.2.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.2.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.2.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.2.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.3.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.3.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.3.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.3.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.3.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.3.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.3.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.3.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.3.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.3.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.3.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.3.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.4.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.4.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.4.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.4.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.4.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.4.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.4.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.4.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.4.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.4.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.4.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.4.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.5.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.5.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.5.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.5.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.5.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.5.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.5.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.5.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.5.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.5.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.5.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.5.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.6.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.6.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.6.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.6.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.6.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.6.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.6.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.6.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.6.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.6.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.6.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.6.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.7.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.7.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.7.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.7.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.7.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.7.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.7.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.7.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.7.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.7.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.7.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.7.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.8.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.8.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.8.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.8.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.8.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.8.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.8.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.8.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.8.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.8.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.8.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.8.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.9.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.9.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.9.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.9.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.9.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.9.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.9.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.9.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.9.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.9.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.9.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.9.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.0.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.0.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.0.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.0.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.0.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.0.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.0.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.0.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.0.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.0.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.0.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.0.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.1.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.1.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.1.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.1.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.1.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.1.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.1.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.1.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.1.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.1.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.1.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.1.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.0.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.0.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.0.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.0.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.0.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.0.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.0.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.0.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.0.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.0.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.0.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.0.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.1.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.1.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.1.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.1.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.1.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.1.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.1.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.1.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.1.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.1.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.1.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.1.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.0.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.0.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.0.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.0.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.0.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.0.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.0.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.0.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.0.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.0.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.0.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.0.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.1.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.1.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.1.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.1.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.1.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.1.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.1.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.1.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.1.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.1.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.1.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.1.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.6.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.7.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.8.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "out.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "Inference_Core_ModelMergeSDXLDetailedTransformers",
    "display_name": "Inference_Core_ModelMergeSDXLDetailedTransformers",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "Inference_Core_DepthAnythingPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "ckpt_name": [
          [
            "depth_anything_vitl14.pth",
            "depth_anything_vitb14.pth",
            "depth_anything_vits14.pth"
          ],
          {
            "default": "depth_anything_vitl14.pth"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_DepthAnythingPreprocessor",
    "display_name": "[Inference.Core] Depth Anything",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "Inference_Core_Zoe_DepthAnythingPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "environment": [
          [
            "indoor",
            "outdoor"
          ],
          {
            "default": "indoor"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_Zoe_DepthAnythingPreprocessor",
    "display_name": "[Inference.Core] Zoe Depth Anything",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "Inference_Core_CannyEdgePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "low_threshold": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "high_threshold": [
          "INT",
          {
            "default": 200,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_CannyEdgePreprocessor",
    "display_name": "[Inference.Core] Canny Edge",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_Unimatch_OptFlowPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "ckpt_name": [
          [
            "gmflow-scale1-mixdata.pth",
            "gmflow-scale2-mixdata.pth",
            "gmflow-scale2-regrefine6-mixdata.pth"
          ],
          {
            "default": "gmflow-scale2-regrefine6-mixdata.pth"
          }
        ],
        "backward_flow": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "bidirectional_flow": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "OPTICAL_FLOW",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "OPTICAL_FLOW",
      "PREVIEW_IMAGE"
    ],
    "name": "Inference_Core_Unimatch_OptFlowPreprocessor",
    "display_name": "[Inference.Core] Unimatch Optical Flow",
    "description": "",
    "category": "ControlNet Preprocessors/Optical Flow",
    "output_node": false
  },
  "Inference_Core_MaskOptFlow": {
    "input": {
      "required": {
        "optical_flow": [
          "OPTICAL_FLOW"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "OPTICAL_FLOW",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "OPTICAL_FLOW",
      "PREVIEW_IMAGE"
    ],
    "name": "Inference_Core_MaskOptFlow",
    "display_name": "[Inference.Core] Mask Optical Flow (DragNUWA)",
    "description": "",
    "category": "ControlNet Preprocessors/Optical Flow",
    "output_node": false
  },
  "Inference_Core_AnimeFace_SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "remove_background_using_abg": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 512,
            "max": 512,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "ABG_CHARACTER_MASK (MASK)"
    ],
    "name": "Inference_Core_AnimeFace_SemSegPreprocessor",
    "display_name": "[Inference.Core] Anime Face Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "Inference_Core_HEDPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "safe": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_HEDPreprocessor",
    "display_name": "[Inference.Core] HED Soft-Edge Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_FakeScribblePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "safe": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_FakeScribblePreprocessor",
    "display_name": "[Inference.Core] Fake Scribble Lines (aka scribble_hed)",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_TEEDPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "safe_steps": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "max": 10
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_TEEDPreprocessor",
    "display_name": "Inference_Core_TEEDPreprocessor",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_LineartStandardPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "guassian_sigma": [
          "FLOAT",
          {
            "default": 6,
            "min": 0,
            "max": 100
          }
        ],
        "intensity_threshold": [
          "INT",
          {
            "default": 8,
            "min": 0,
            "max": 16
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_LineartStandardPreprocessor",
    "display_name": "[Inference.Core] Standard Lineart",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_Zoe-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_Zoe-DepthMapPreprocessor",
    "display_name": "[Inference.Core] Zoe Depth Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "Inference_Core_MediaPipe-FaceMeshPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "max_faces": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 50,
            "step": 1
          }
        ],
        "min_confidence": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.01,
            "max": 1,
            "step": 0.01
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_MediaPipe-FaceMeshPreprocessor",
    "display_name": "[Inference.Core] MediaPipe Face Mesh",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "Inference_Core_ScribblePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_ScribblePreprocessor",
    "display_name": "[Inference.Core] Scribble Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_Scribble_XDoG_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "threshold": [
          "INT",
          {
            "default": 32,
            "min": 1,
            "max": 64,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_Scribble_XDoG_Preprocessor",
    "display_name": "[Inference.Core] Scribble XDoG Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_UniFormer-SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_UniFormer-SemSegPreprocessor",
    "display_name": "[Inference.Core] UniFormer Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "Inference_Core_SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_SemSegPreprocessor",
    "display_name": "[Inference.Core] Semantic Segmentor (legacy, alias for UniFormer)",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "Inference_Core_BAE-NormalMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_BAE-NormalMapPreprocessor",
    "display_name": "[Inference.Core] BAE Normal Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "Inference_Core_SavePoseKpsAsJsonFile": {
    "input": {
      "required": {
        "pose_kps": [
          "POSE_KEYPOINT"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "PoseKeypoint"
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Inference_Core_SavePoseKpsAsJsonFile",
    "display_name": "[Inference.Core] Save Pose Keypoints",
    "description": "",
    "category": "ControlNet Preprocessors/Pose Keypoint Postprocess",
    "output_node": true
  },
  "Inference_Core_FacialPartColoringFromPoseKps": {
    "input": {
      "required": {
        "pose_kps": [
          "POSE_KEYPOINT"
        ],
        "mode": [
          [
            "point",
            "polygon"
          ],
          {
            "default": "polygon"
          }
        ],
        "skin": [
          "STRING",
          {
            "default": "rgb(0, 153, 255)",
            "multiline": false
          }
        ],
        "left_eye": [
          "STRING",
          {
            "default": "rgb(0, 204, 153)",
            "multiline": false
          }
        ],
        "right_eye": [
          "STRING",
          {
            "default": "rgb(255, 153, 0)",
            "multiline": false
          }
        ],
        "nose": [
          "STRING",
          {
            "default": "rgb(255, 102, 255)",
            "multiline": false
          }
        ],
        "upper_lip": [
          "STRING",
          {
            "default": "rgb(102, 0, 51)",
            "multiline": false
          }
        ],
        "inner_mouth": [
          "STRING",
          {
            "default": "rgb(255, 204, 255)",
            "multiline": false
          }
        ],
        "lower_lip": [
          "STRING",
          {
            "default": "rgb(255, 0, 102)",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_FacialPartColoringFromPoseKps",
    "display_name": "[Inference.Core] Colorize Facial Parts from PoseKPS",
    "description": "",
    "category": "ControlNet Preprocessors/Pose Keypoint Postprocess",
    "output_node": false
  },
  "Inference_Core_DensePosePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "model": [
          [
            "densepose_r50_fpn_dl.torchscript",
            "densepose_r101_fpn_dl.torchscript"
          ],
          {
            "default": "densepose_r50_fpn_dl.torchscript"
          }
        ],
        "cmap": [
          [
            "Viridis (MagicAnimate)",
            "Parula (CivitAI)"
          ],
          {
            "default": "Viridis (MagicAnimate)"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_DensePosePreprocessor",
    "display_name": "[Inference.Core] DensePose Estimator",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "Inference_Core_OneFormer-COCO-SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_OneFormer-COCO-SemSegPreprocessor",
    "display_name": "[Inference.Core] OneFormer COCO Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "Inference_Core_OneFormer-ADE20K-SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_OneFormer-ADE20K-SemSegPreprocessor",
    "display_name": "[Inference.Core] OneFormer ADE20K Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "Inference_Core_DiffusionEdge_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "environment": [
          [
            "indoor",
            "urban",
            "natrual"
          ],
          {
            "default": "indoor"
          }
        ],
        "patch_batch_size": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 16
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_DiffusionEdge_Preprocessor",
    "display_name": "[Inference.Core] Diffusion Edge (batch size ↑ =\u003E speed ↑, VRAM ↑)",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_DWPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "detect_hand": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "detect_body": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "detect_face": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ],
        "bbox_detector": [
          [
            "yolox_l.torchscript.pt",
            "yolox_l.onnx",
            "yolo_nas_l_fp16.onnx",
            "yolo_nas_m_fp16.onnx",
            "yolo_nas_s_fp16.onnx"
          ],
          {
            "default": "yolox_l.onnx"
          }
        ],
        "pose_estimator": [
          [
            "dw-ll_ucoco_384_bs5.torchscript.pt",
            "dw-ll_ucoco_384.onnx",
            "dw-ll_ucoco.onnx"
          ],
          {
            "default": "dw-ll_ucoco_384_bs5.torchscript.pt"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "name": "Inference_Core_DWPreprocessor",
    "display_name": "[Inference.Core] DWPose Estimator",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "Inference_Core_AnimalPosePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "bbox_detector": [
          [
            "yolox_l.torchscript.pt",
            "yolox_l.onnx",
            "yolo_nas_l_fp16.onnx",
            "yolo_nas_m_fp16.onnx",
            "yolo_nas_s_fp16.onnx"
          ],
          {
            "default": "yolox_l.torchscript.pt"
          }
        ],
        "pose_estimator": [
          [
            "rtmpose-m_ap10k_256_bs5.torchscript.pt",
            "rtmpose-m_ap10k_256.onnx"
          ],
          {
            "default": "rtmpose-m_ap10k_256_bs5.torchscript.pt"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "name": "Inference_Core_AnimalPosePreprocessor",
    "display_name": "[Inference.Core] AnimalPose Estimator (AP10K)",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "Inference_Core_AnimeLineArtPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_AnimeLineArtPreprocessor",
    "display_name": "[Inference.Core] Anime Lineart",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_ColorPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_ColorPreprocessor",
    "display_name": "[Inference.Core] Color Pallete",
    "description": "",
    "category": "ControlNet Preprocessors/T2IAdapter-only",
    "output_node": false
  },
  "Inference_Core_LeReS-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "rm_nearest": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.1
          }
        ],
        "rm_background": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.1
          }
        ],
        "boost": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "disable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_LeReS-DepthMapPreprocessor",
    "display_name": "[Inference.Core] LeReS Depth Map (enable boost for leres++)",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "Inference_Core_Manga2Anime_LineArt_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_Manga2Anime_LineArt_Preprocessor",
    "display_name": "[Inference.Core] Manga Lineart (aka lineart_anime_denoise)",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_InpaintPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_InpaintPreprocessor",
    "display_name": "[Inference.Core] Inpaint Preprocessor",
    "description": "",
    "category": "ControlNet Preprocessors/others",
    "output_node": false
  },
  "Inference_Core_SAMPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_SAMPreprocessor",
    "display_name": "[Inference.Core] SAM Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/others",
    "output_node": false
  },
  "Inference_Core_OpenposePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "detect_hand": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "detect_body": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "detect_face": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "name": "Inference_Core_OpenposePreprocessor",
    "display_name": "[Inference.Core] OpenPose Pose",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "Inference_Core_LineArtPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "coarse": [
          [
            "disable",
            "enable"
          ],
          {
            "default": "disable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_LineArtPreprocessor",
    "display_name": "[Inference.Core] Realistic Lineart",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_ShufflePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_ShufflePreprocessor",
    "display_name": "[Inference.Core] Content Shuffle",
    "description": "",
    "category": "ControlNet Preprocessors/T2IAdapter-only",
    "output_node": false
  },
  "Inference_Core_TilePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "pyrUp_iters": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_TilePreprocessor",
    "display_name": "[Inference.Core] Tile",
    "description": "",
    "category": "ControlNet Preprocessors/others",
    "output_node": false
  },
  "Inference_Core_BinaryPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "bin_threshold": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_BinaryPreprocessor",
    "display_name": "[Inference.Core] Binary Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_MiDaS-NormalMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "a": [
          "FLOAT",
          {
            "default": 6.28318530717959,
            "min": 0,
            "max": 15.707963267949,
            "step": 0.05
          }
        ],
        "bg_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_MiDaS-NormalMapPreprocessor",
    "display_name": "[Inference.Core] MiDaS Normal Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "Inference_Core_MiDaS-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "a": [
          "FLOAT",
          {
            "default": 6.28318530717959,
            "min": 0,
            "max": 15.707963267949,
            "step": 0.05
          }
        ],
        "bg_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_MiDaS-DepthMapPreprocessor",
    "display_name": "[Inference.Core] MiDaS Depth Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "Inference_Core_M-LSDPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "score_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.01,
            "max": 2,
            "step": 0.01
          }
        ],
        "dist_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.01,
            "max": 20,
            "step": 0.01
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_M-LSDPreprocessor",
    "display_name": "[Inference.Core] M-LSD Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_MeshGraphormer-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "mask_bbox_padding": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 100
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ],
        "mask_type": [
          [
            "based_on_depth",
            "tight_bboxes",
            "original"
          ],
          {
            "default": "based_on_depth"
          }
        ],
        "mask_expand": [
          "INT",
          {
            "default": 5,
            "min": -2048,
            "max": 2048,
            "step": 1
          }
        ],
        "rand_seed": [
          "INT",
          {
            "default": 88,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "INPAINTING_MASK"
    ],
    "name": "Inference_Core_MeshGraphormer-DepthMapPreprocessor",
    "display_name": "[Inference.Core] MeshGraphormer Hand Refiner",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "Inference_Core_PiDiNetPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "safe": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_PiDiNetPreprocessor",
    "display_name": "[Inference.Core] PiDiNet Soft-Edge Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_ImageLuminanceDetector": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "gamma_correction": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 2,
            "step": 0.001
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_ImageLuminanceDetector",
    "display_name": "[Inference.Core] Image Luminance",
    "description": "",
    "category": "ControlNet Preprocessors/Recolor",
    "output_node": false
  },
  "Inference_Core_ImageIntensityDetector": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "gamma_correction": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 2,
            "step": 0.001
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_ImageIntensityDetector",
    "display_name": "[Inference.Core] Image Intensity",
    "description": "",
    "category": "ControlNet Preprocessors/Recolor",
    "output_node": false
  },
  "Inference_Core_AIO_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "preprocessor": [
          [
            "none",
            "DepthAnythingPreprocessor",
            "Zoe_DepthAnythingPreprocessor",
            "CannyEdgePreprocessor",
            "Unimatch_OptFlowPreprocessor",
            "MaskOptFlow",
            "AnimeFace_SemSegPreprocessor",
            "HEDPreprocessor",
            "FakeScribblePreprocessor",
            "TEEDPreprocessor",
            "LineartStandardPreprocessor",
            "Zoe-DepthMapPreprocessor",
            "MediaPipe-FaceMeshPreprocessor",
            "ScribblePreprocessor",
            "Scribble_XDoG_Preprocessor",
            "UniFormer-SemSegPreprocessor",
            "SemSegPreprocessor",
            "BAE-NormalMapPreprocessor",
            "SavePoseKpsAsJsonFile",
            "FacialPartColoringFromPoseKps",
            "DensePosePreprocessor",
            "OneFormer-COCO-SemSegPreprocessor",
            "OneFormer-ADE20K-SemSegPreprocessor",
            "DiffusionEdge_Preprocessor",
            "DWPreprocessor",
            "AnimalPosePreprocessor",
            "AnimeLineArtPreprocessor",
            "ColorPreprocessor",
            "LeReS-DepthMapPreprocessor",
            "Manga2Anime_LineArt_Preprocessor",
            "SAMPreprocessor",
            "OpenposePreprocessor",
            "LineArtPreprocessor",
            "ShufflePreprocessor",
            "TilePreprocessor",
            "BinaryPreprocessor",
            "MiDaS-NormalMapPreprocessor",
            "MiDaS-DepthMapPreprocessor",
            "M-LSDPreprocessor",
            "MeshGraphormer-DepthMapPreprocessor",
            "PiDiNetPreprocessor",
            "ImageLuminanceDetector",
            "ImageIntensityDetector"
          ],
          {
            "default": "none"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_AIO_Preprocessor",
    "display_name": "[Inference.Core] AIO Aux Preprocessor",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "Inference_Core_PixelPerfectResolution": {
    "input": {
      "required": {
        "original_image": [
          "IMAGE"
        ],
        "image_gen_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "image_gen_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "resize_mode": [
          [
            "Just Resize",
            "Crop and Resize",
            "Resize and Fill"
          ],
          {
            "default": "Just Resize"
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "RESOLUTION (INT)"
    ],
    "name": "Inference_Core_PixelPerfectResolution",
    "display_name": "[Inference.Core] Pixel Perfect Resolution",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "Inference_Core_ImageGenResolutionFromImage": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE_GEN_WIDTH (INT)",
      "IMAGE_GEN_HEIGHT (INT)"
    ],
    "name": "Inference_Core_ImageGenResolutionFromImage",
    "display_name": "[Inference.Core] Generation Resolution From Image",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "Inference_Core_ImageGenResolutionFromLatent": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE_GEN_WIDTH (INT)",
      "IMAGE_GEN_HEIGHT (INT)"
    ],
    "name": "Inference_Core_ImageGenResolutionFromLatent",
    "display_name": "[Inference.Core] Generation Resolution From Latent",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "Inference_Core_HintImageEnchance": {
    "input": {
      "required": {
        "hint_image": [
          "IMAGE"
        ],
        "image_gen_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "image_gen_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "resize_mode": [
          [
            "Just Resize",
            "Crop and Resize",
            "Resize and Fill"
          ],
          {
            "default": "Just Resize"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_HintImageEnchance",
    "display_name": "[Inference.Core] Enchance And Resize Hint Images",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "Inference_Core_LayeredDiffusionApply": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "config": [
          [
            "SDXL, Attention Injection",
            "SDXL, Conv Injection",
            "SD15, Attention Injection, attn_sharing"
          ]
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "Inference_Core_LayeredDiffusionApply",
    "display_name": "[Inference.Core] Layer Diffuse Apply",
    "description": "",
    "category": "layer_diffuse",
    "output_node": false
  },
  "Inference_Core_LayeredDiffusionJointApply": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "config": [
          [
            "SD15, attn_sharing, Batch size (3N)"
          ]
        ]
      },
      "optional": {
        "fg_cond": [
          "CONDITIONING"
        ],
        "bg_cond": [
          "CONDITIONING"
        ],
        "blended_cond": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "Inference_Core_LayeredDiffusionJointApply",
    "display_name": "[Inference.Core] Layer Diffuse Joint Apply",
    "description": "",
    "category": "layer_diffuse",
    "output_node": false
  },
  "Inference_Core_LayeredDiffusionCondApply": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "cond": [
          "CONDITIONING"
        ],
        "uncond": [
          "CONDITIONING"
        ],
        "latent": [
          "LATENT"
        ],
        "config": [
          [
            "SDXL, Foreground",
            "SDXL, Background"
          ]
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "name": "Inference_Core_LayeredDiffusionCondApply",
    "display_name": "[Inference.Core] Layer Diffuse Cond Apply",
    "description": "",
    "category": "layer_diffuse",
    "output_node": false
  },
  "Inference_Core_LayeredDiffusionCondJointApply": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "image": [
          "IMAGE"
        ],
        "config": [
          [
            "SD15, Foreground, attn_sharing, Batch size (2N)",
            "SD15, Background, attn_sharing, Batch size (2N)"
          ]
        ]
      },
      "optional": {
        "cond": [
          "CONDITIONING"
        ],
        "blended_cond": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "Inference_Core_LayeredDiffusionCondJointApply",
    "display_name": "[Inference.Core] Layer Diffuse Cond Joint Apply",
    "description": "",
    "category": "layer_diffuse",
    "output_node": false
  },
  "Inference_Core_LayeredDiffusionDiffApply": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "cond": [
          "CONDITIONING"
        ],
        "uncond": [
          "CONDITIONING"
        ],
        "blended_latent": [
          "LATENT"
        ],
        "latent": [
          "LATENT"
        ],
        "config": [
          [
            "SDXL, Foreground",
            "SDXL, Background"
          ]
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "name": "Inference_Core_LayeredDiffusionDiffApply",
    "display_name": "[Inference.Core] Layer Diffuse Diff Apply",
    "description": "",
    "category": "layer_diffuse",
    "output_node": false
  },
  "Inference_Core_LayeredDiffusionDecode": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "images": [
          "IMAGE"
        ],
        "sd_version": [
          [
            "SD15",
            "SDXL"
          ],
          {
            "default": "SDXL"
          }
        ],
        "sub_batch_size": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "Inference_Core_LayeredDiffusionDecode",
    "display_name": "[Inference.Core] Layer Diffuse Decode",
    "description": "",
    "category": "layer_diffuse",
    "output_node": false
  },
  "Inference_Core_LayeredDiffusionDecodeRGBA": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "images": [
          "IMAGE"
        ],
        "sd_version": [
          [
            "SD15",
            "SDXL"
          ],
          {
            "default": "SDXL"
          }
        ],
        "sub_batch_size": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_LayeredDiffusionDecodeRGBA",
    "display_name": "[Inference.Core] Layer Diffuse Decode (RGBA)",
    "description": "",
    "category": "layer_diffuse",
    "output_node": false
  },
  "Inference_Core_LayeredDiffusionDecodeSplit": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "images": [
          "IMAGE"
        ],
        "frames": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 3,
            "step": 1
          }
        ],
        "sd_version": [
          [
            "SD15",
            "SDXL"
          ],
          {
            "default": "SDXL"
          }
        ],
        "sub_batch_size": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "name": "Inference_Core_LayeredDiffusionDecodeSplit",
    "display_name": "[Inference.Core] Layer Diffuse Decode (Split)",
    "description": "",
    "category": "layer_diffuse",
    "output_node": false
  },
  "Inference_Core_PromptExpansion": {
    "input": {
      "required": {
        "model_name": [
          []
        ],
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4294967295
          }
        ],
        "log_prompt": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "STRING",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "expanded_prompt",
      "seed"
    ],
    "name": "Inference_Core_PromptExpansion",
    "display_name": "[Inference.Core] [Inference.Core] Prompt Expansion",
    "description": "",
    "category": "utils",
    "output_node": false
  },
  "SAMLoader": {
    "input": {
      "required": {
        "model_name": [
          [
            "sam_vit_b_01ec64.pth",
            "sam_vit_h_4b8939.pth",
            "ESAM"
          ]
        ],
        "device_mode": [
          [
            "AUTO",
            "Prefer GPU",
            "CPU"
          ]
        ]
      }
    },
    "output": [
      "SAM_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "SAM_MODEL"
    ],
    "name": "SAMLoader",
    "display_name": "SAMLoader (Impact)",
    "description": "",
    "category": "ImpactPack",
    "output_node": false
  },
  "CLIPSegDetectorProvider": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "blur": [
          "FLOAT",
          {
            "min": 0,
            "max": 15,
            "step": 0.1,
            "default": 7
          }
        ],
        "threshold": [
          "FLOAT",
          {
            "min": 0,
            "max": 1,
            "step": 0.05,
            "default": 0.4
          }
        ],
        "dilation_factor": [
          "INT",
          {
            "min": 0,
            "max": 10,
            "step": 1,
            "default": 4
          }
        ]
      }
    },
    "output": [
      "BBOX_DETECTOR"
    ],
    "output_is_list": [false],
    "output_name": [
      "BBOX_DETECTOR"
    ],
    "name": "CLIPSegDetectorProvider",
    "display_name": "CLIPSegDetectorProvider",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ONNXDetectorProvider": {
    "input": {
      "required": {
        "model_name": [
          []
        ]
      }
    },
    "output": [
      "BBOX_DETECTOR"
    ],
    "output_is_list": [false],
    "output_name": [
      "BBOX_DETECTOR"
    ],
    "name": "ONNXDetectorProvider",
    "display_name": "ONNXDetectorProvider",
    "description": "",
    "category": "ImpactPack",
    "output_node": false
  },
  "BitwiseAndMaskForEach": {
    "input": {
      "required": {
        "base_segs": [
          "SEGS"
        ],
        "mask_segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "BitwiseAndMaskForEach",
    "display_name": "Pixelwise(SEGS & SEGS)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "SubtractMaskForEach": {
    "input": {
      "required": {
        "base_segs": [
          "SEGS"
        ],
        "mask_segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "SubtractMaskForEach",
    "display_name": "Pixelwise(SEGS - SEGS)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "DetailerForEach": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "detailer_hook": [
          "DETAILER_HOOK"
        ],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "DetailerForEach",
    "display_name": "Detailer (SEGS)",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "DetailerForEachDebug": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "detailer_hook": [
          "DETAILER_HOOK"
        ],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, true, true, true, true],
    "output_name": [
      "image",
      "cropped",
      "cropped_refined",
      "cropped_refined_alpha",
      "cnet_images"
    ],
    "name": "DetailerForEachDebug",
    "display_name": "DetailerDebug (SEGS)",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "DetailerForEachPipe": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 1
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "detailer_hook": [
          "DETAILER_HOOK"
        ],
        "refiner_basic_pipe_opt": [
          "BASIC_PIPE"
        ],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "SEGS",
      "BASIC_PIPE",
      "IMAGE"
    ],
    "output_is_list": [false, false, false, true],
    "output_name": [
      "image",
      "segs",
      "basic_pipe",
      "cnet_images"
    ],
    "name": "DetailerForEachPipe",
    "display_name": "Detailer (SEGS/pipe)",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "DetailerForEachDebugPipe": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 1
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "detailer_hook": [
          "DETAILER_HOOK"
        ],
        "refiner_basic_pipe_opt": [
          "BASIC_PIPE"
        ],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "SEGS",
      "BASIC_PIPE",
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false, false, true, true, true, true],
    "output_name": [
      "image",
      "segs",
      "basic_pipe",
      "cropped",
      "cropped_refined",
      "cropped_refined_alpha",
      "cnet_images"
    ],
    "name": "DetailerForEachDebugPipe",
    "display_name": "DetailerDebug (SEGS/pipe)",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "DetailerForEachPipeForAnimateDiff": {
    "input": {
      "required": {
        "image_frames": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 1
          }
        ]
      },
      "optional": {
        "detailer_hook": [
          "DETAILER_HOOK"
        ],
        "refiner_basic_pipe_opt": [
          "BASIC_PIPE"
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "SEGS",
      "BASIC_PIPE",
      "IMAGE"
    ],
    "output_is_list": [false, false, false, true],
    "output_name": [
      "image",
      "segs",
      "basic_pipe",
      "cnet_images"
    ],
    "name": "DetailerForEachPipeForAnimateDiff",
    "display_name": "Detailer For AnimateDiff (SEGS/pipe)",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "SAMDetectorCombined": {
    "input": {
      "required": {
        "sam_model": [
          "SAM_MODEL"
        ],
        "segs": [
          "SEGS"
        ],
        "image": [
          "IMAGE"
        ],
        "detection_hint": [
          [
            "center-1",
            "horizontal-2",
            "vertical-2",
            "rect-4",
            "diamond-4",
            "mask-area",
            "mask-points",
            "mask-point-bbox",
            "none"
          ]
        ],
        "dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.93,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "mask_hint_use_negative": [
          [
            "False",
            "Small",
            "Outter"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "SAMDetectorCombined",
    "display_name": "SAMDetector (combined)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "SAMDetectorSegmented": {
    "input": {
      "required": {
        "sam_model": [
          "SAM_MODEL"
        ],
        "segs": [
          "SEGS"
        ],
        "image": [
          "IMAGE"
        ],
        "detection_hint": [
          [
            "center-1",
            "horizontal-2",
            "vertical-2",
            "rect-4",
            "diamond-4",
            "mask-area",
            "mask-points",
            "mask-point-bbox",
            "none"
          ]
        ],
        "dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.93,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "mask_hint_use_negative": [
          [
            "False",
            "Small",
            "Outter"
          ]
        ]
      }
    },
    "output": [
      "MASK",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "combined_mask",
      "batch_masks"
    ],
    "name": "SAMDetectorSegmented",
    "display_name": "SAMDetector (segmented)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "FaceDetailer": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "bbox_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "bbox_dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "bbox_crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 10,
            "step": 0.1
          }
        ],
        "sam_detection_hint": [
          [
            "center-1",
            "horizontal-2",
            "vertical-2",
            "rect-4",
            "diamond-4",
            "mask-area",
            "mask-points",
            "mask-point-bbox",
            "none"
          ]
        ],
        "sam_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "sam_threshold": [
          "FLOAT",
          {
            "default": 0.93,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "sam_bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "sam_mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "sam_mask_hint_use_negative": [
          [
            "False",
            "Small",
            "Outter"
          ]
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 16384,
            "step": 1,
            "default": 10
          }
        ],
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "sam_model_opt": [
          "SAM_MODEL"
        ],
        "segm_detector_opt": [
          "SEGM_DETECTOR"
        ],
        "detailer_hook": [
          "DETAILER_HOOK"
        ],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "MASK",
      "DETAILER_PIPE",
      "IMAGE"
    ],
    "output_is_list": [false, true, true, false, false, true],
    "output_name": [
      "image",
      "cropped_refined",
      "cropped_enhanced_alpha",
      "mask",
      "detailer_pipe",
      "cnet_images"
    ],
    "name": "FaceDetailer",
    "display_name": "FaceDetailer",
    "description": "",
    "category": "ImpactPack/Simple",
    "output_node": false
  },
  "FaceDetailerPipe": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "detailer_pipe": [
          "DETAILER_PIPE"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "bbox_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "bbox_dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "bbox_crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 10,
            "step": 0.1
          }
        ],
        "sam_detection_hint": [
          [
            "center-1",
            "horizontal-2",
            "vertical-2",
            "rect-4",
            "diamond-4",
            "mask-area",
            "mask-points",
            "mask-point-bbox",
            "none"
          ]
        ],
        "sam_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "sam_threshold": [
          "FLOAT",
          {
            "default": 0.93,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "sam_bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "sam_mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "sam_mask_hint_use_negative": [
          [
            "False",
            "Small",
            "Outter"
          ]
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 16384,
            "step": 1,
            "default": 10
          }
        ],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 1
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "MASK",
      "DETAILER_PIPE",
      "IMAGE"
    ],
    "output_is_list": [false, true, true, false, false, true],
    "output_name": [
      "image",
      "cropped_refined",
      "cropped_enhanced_alpha",
      "mask",
      "detailer_pipe",
      "cnet_images"
    ],
    "name": "FaceDetailerPipe",
    "display_name": "FaceDetailer (pipe)",
    "description": "",
    "category": "ImpactPack/Simple",
    "output_node": false
  },
  "MaskDetailerPipe": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "mask bbox",
            "label_off": "crop region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "mask_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "masked only",
            "label_off": "whole"
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 10,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 16384,
            "step": 1,
            "default": 10
          }
        ],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 100
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "refiner_basic_pipe_opt": [
          "BASIC_PIPE"
        ],
        "detailer_hook": [
          "DETAILER_HOOK"
        ],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "BASIC_PIPE",
      "BASIC_PIPE"
    ],
    "output_is_list": [false, true, true, false, false],
    "output_name": [
      "image",
      "cropped_refined",
      "cropped_enhanced_alpha",
      "basic_pipe",
      "refiner_basic_pipe_opt"
    ],
    "name": "MaskDetailerPipe",
    "display_name": "MaskDetailer (pipe)",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "ToDetailerPipe": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ]
      },
      "optional": {
        "sam_model_opt": [
          "SAM_MODEL"
        ],
        "segm_detector_opt": [
          "SEGM_DETECTOR"
        ],
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "DETAILER_PIPE"
    ],
    "output_is_list": [false],
    "output_name": [
      "detailer_pipe"
    ],
    "name": "ToDetailerPipe",
    "display_name": "ToDetailerPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "ToDetailerPipeSDXL": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "refiner_model": [
          "MODEL"
        ],
        "refiner_clip": [
          "CLIP"
        ],
        "refiner_positive": [
          "CONDITIONING"
        ],
        "refiner_negative": [
          "CONDITIONING"
        ],
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ]
      },
      "optional": {
        "sam_model_opt": [
          "SAM_MODEL"
        ],
        "segm_detector_opt": [
          "SEGM_DETECTOR"
        ],
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "DETAILER_PIPE"
    ],
    "output_is_list": [false],
    "output_name": [
      "detailer_pipe"
    ],
    "name": "ToDetailerPipeSDXL",
    "display_name": "ToDetailerPipeSDXL",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "FromDetailerPipe": {
    "input": {
      "required": {
        "detailer_pipe": [
          "DETAILER_PIPE"
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "BBOX_DETECTOR",
      "SAM_MODEL",
      "SEGM_DETECTOR",
      "DETAILER_HOOK"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false, false],
    "output_name": [
      "model",
      "clip",
      "vae",
      "positive",
      "negative",
      "bbox_detector",
      "sam_model_opt",
      "segm_detector_opt",
      "detailer_hook"
    ],
    "name": "FromDetailerPipe",
    "display_name": "FromDetailerPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "FromDetailerPipe_v2": {
    "input": {
      "required": {
        "detailer_pipe": [
          "DETAILER_PIPE"
        ]
      }
    },
    "output": [
      "DETAILER_PIPE",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "BBOX_DETECTOR",
      "SAM_MODEL",
      "SEGM_DETECTOR",
      "DETAILER_HOOK"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false, false, false],
    "output_name": [
      "detailer_pipe",
      "model",
      "clip",
      "vae",
      "positive",
      "negative",
      "bbox_detector",
      "sam_model_opt",
      "segm_detector_opt",
      "detailer_hook"
    ],
    "name": "FromDetailerPipe_v2",
    "display_name": "FromDetailerPipe_v2",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "FromDetailerPipeSDXL": {
    "input": {
      "required": {
        "detailer_pipe": [
          "DETAILER_PIPE"
        ]
      }
    },
    "output": [
      "DETAILER_PIPE",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "BBOX_DETECTOR",
      "SAM_MODEL",
      "SEGM_DETECTOR",
      "DETAILER_HOOK",
      "MODEL",
      "CLIP",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false],
    "output_name": [
      "detailer_pipe",
      "model",
      "clip",
      "vae",
      "positive",
      "negative",
      "bbox_detector",
      "sam_model_opt",
      "segm_detector_opt",
      "detailer_hook",
      "refiner_model",
      "refiner_clip",
      "refiner_positive",
      "refiner_negative"
    ],
    "name": "FromDetailerPipeSDXL",
    "display_name": "FromDetailer (SDXL/pipe)",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "ToBasicPipe": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "BASIC_PIPE"
    ],
    "output_is_list": [false],
    "output_name": [
      "basic_pipe"
    ],
    "name": "ToBasicPipe",
    "display_name": "ToBasicPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "FromBasicPipe": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "model",
      "clip",
      "vae",
      "positive",
      "negative"
    ],
    "name": "FromBasicPipe",
    "display_name": "FromBasicPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "FromBasicPipe_v2": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ]
      }
    },
    "output": [
      "BASIC_PIPE",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "basic_pipe",
      "model",
      "clip",
      "vae",
      "positive",
      "negative"
    ],
    "name": "FromBasicPipe_v2",
    "display_name": "FromBasicPipe_v2",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "BasicPipeToDetailerPipe": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ]
      },
      "optional": {
        "sam_model_opt": [
          "SAM_MODEL"
        ],
        "segm_detector_opt": [
          "SEGM_DETECTOR"
        ],
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "DETAILER_PIPE"
    ],
    "output_is_list": [false],
    "output_name": [
      "detailer_pipe"
    ],
    "name": "BasicPipeToDetailerPipe",
    "display_name": "BasicPipe -\u003E DetailerPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "BasicPipeToDetailerPipeSDXL": {
    "input": {
      "required": {
        "base_basic_pipe": [
          "BASIC_PIPE"
        ],
        "refiner_basic_pipe": [
          "BASIC_PIPE"
        ],
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ]
      },
      "optional": {
        "sam_model_opt": [
          "SAM_MODEL"
        ],
        "segm_detector_opt": [
          "SEGM_DETECTOR"
        ],
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "DETAILER_PIPE"
    ],
    "output_is_list": [false],
    "output_name": [
      "detailer_pipe"
    ],
    "name": "BasicPipeToDetailerPipeSDXL",
    "display_name": "BasicPipe -\u003E DetailerPipe (SDXL)",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "DetailerPipeToBasicPipe": {
    "input": {
      "required": {
        "detailer_pipe": [
          "DETAILER_PIPE"
        ]
      }
    },
    "output": [
      "BASIC_PIPE",
      "BASIC_PIPE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "base_basic_pipe",
      "refiner_basic_pipe"
    ],
    "name": "DetailerPipeToBasicPipe",
    "display_name": "DetailerPipe -\u003E BasicPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "EditBasicPipe": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ]
      },
      "optional": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "BASIC_PIPE"
    ],
    "output_is_list": [false],
    "output_name": [
      "basic_pipe"
    ],
    "name": "EditBasicPipe",
    "display_name": "Edit BasicPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "EditDetailerPipe": {
    "input": {
      "required": {
        "detailer_pipe": [
          "DETAILER_PIPE"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ]
      },
      "optional": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "sam_model": [
          "SAM_MODEL"
        ],
        "segm_detector": [
          "SEGM_DETECTOR"
        ],
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "DETAILER_PIPE"
    ],
    "output_is_list": [false],
    "output_name": [
      "detailer_pipe"
    ],
    "name": "EditDetailerPipe",
    "display_name": "Edit DetailerPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "EditDetailerPipeSDXL": {
    "input": {
      "required": {
        "detailer_pipe": [
          "DETAILER_PIPE"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ]
      },
      "optional": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "refiner_model": [
          "MODEL"
        ],
        "refiner_clip": [
          "CLIP"
        ],
        "refiner_positive": [
          "CONDITIONING"
        ],
        "refiner_negative": [
          "CONDITIONING"
        ],
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "sam_model": [
          "SAM_MODEL"
        ],
        "segm_detector": [
          "SEGM_DETECTOR"
        ],
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "DETAILER_PIPE"
    ],
    "output_is_list": [false],
    "output_name": [
      "detailer_pipe"
    ],
    "name": "EditDetailerPipeSDXL",
    "display_name": "Edit DetailerPipe (SDXL)",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "LatentPixelScale": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "lanczos",
            "area"
          ]
        ],
        "scale_factor": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 0.1,
            "max": 10000,
            "step": 0.1
          }
        ],
        "vae": [
          "VAE"
        ],
        "use_tiled_vae": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ]
      },
      "optional": {
        "upscale_model_opt": [
          "UPSCALE_MODEL"
        ]
      }
    },
    "output": [
      "LATENT",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "LATENT",
      "IMAGE"
    ],
    "name": "LatentPixelScale",
    "display_name": "Latent Scale (on Pixel Space)",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "PixelKSampleUpscalerProvider": {
    "input": {
      "required": {
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "lanczos",
            "area"
          ]
        ],
        "model": [
          "MODEL"
        ],
        "vae": [
          "VAE"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "use_tiled_vae": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      },
      "optional": {
        "upscale_model_opt": [
          "UPSCALE_MODEL"
        ],
        "pk_hook_opt": [
          "PK_HOOK"
        ]
      }
    },
    "output": [
      "UPSCALER"
    ],
    "output_is_list": [false],
    "output_name": [
      "UPSCALER"
    ],
    "name": "PixelKSampleUpscalerProvider",
    "display_name": "PixelKSampleUpscalerProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "PixelKSampleUpscalerProviderPipe": {
    "input": {
      "required": {
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "lanczos",
            "area"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "use_tiled_vae": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      },
      "optional": {
        "upscale_model_opt": [
          "UPSCALE_MODEL"
        ],
        "pk_hook_opt": [
          "PK_HOOK"
        ]
      }
    },
    "output": [
      "UPSCALER"
    ],
    "output_is_list": [false],
    "output_name": [
      "UPSCALER"
    ],
    "name": "PixelKSampleUpscalerProviderPipe",
    "display_name": "PixelKSampleUpscalerProviderPipe",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "IterativeLatentUpscale": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 1,
            "max": 10000,
            "step": 0.1
          }
        ],
        "steps": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 10000,
            "step": 1
          }
        ],
        "temp_prefix": [
          "STRING",
          {
            "default": ""
          }
        ],
        "upscaler": [
          "UPSCALER"
        ],
        "step_mode": [
          [
            "simple",
            "geometric"
          ],
          {
            "default": "simple"
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "LATENT",
      "VAE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "latent",
      "vae"
    ],
    "name": "IterativeLatentUpscale",
    "display_name": "Iterative Upscale (Latent/on Pixel Space)",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "IterativeImageUpscale": {
    "input": {
      "required": {
        "pixels": [
          "IMAGE"
        ],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 1,
            "max": 10000,
            "step": 0.1
          }
        ],
        "steps": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 10000,
            "step": 1
          }
        ],
        "temp_prefix": [
          "STRING",
          {
            "default": ""
          }
        ],
        "upscaler": [
          "UPSCALER"
        ],
        "vae": [
          "VAE"
        ],
        "step_mode": [
          [
            "simple",
            "geometric"
          ],
          {
            "default": "simple"
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "IterativeImageUpscale",
    "display_name": "Iterative Upscale (Image)",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "PixelTiledKSampleUpscalerProvider": {
    "input": {
      "required": {
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "lanczos",
            "area"
          ]
        ],
        "model": [
          "MODEL"
        ],
        "vae": [
          "VAE"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "tile_width": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 16384,
            "step": 64
          }
        ],
        "tile_height": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 16384,
            "step": 64
          }
        ],
        "tiling_strategy": [
          [
            "random",
            "padded",
            "simple"
          ]
        ]
      },
      "optional": {
        "upscale_model_opt": [
          "UPSCALE_MODEL"
        ],
        "pk_hook_opt": [
          "PK_HOOK"
        ],
        "tile_cnet_opt": [
          "CONTROL_NET"
        ]
      }
    },
    "output": [
      "UPSCALER"
    ],
    "output_is_list": [false],
    "output_name": [
      "UPSCALER"
    ],
    "name": "PixelTiledKSampleUpscalerProvider",
    "display_name": "PixelTiledKSampleUpscalerProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "PixelTiledKSampleUpscalerProviderPipe": {
    "input": {
      "required": {
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "lanczos",
            "area"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "tile_width": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 16384,
            "step": 64
          }
        ],
        "tile_height": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 16384,
            "step": 64
          }
        ],
        "tiling_strategy": [
          [
            "random",
            "padded",
            "simple"
          ]
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ]
      },
      "optional": {
        "upscale_model_opt": [
          "UPSCALE_MODEL"
        ],
        "pk_hook_opt": [
          "PK_HOOK"
        ],
        "tile_cnet_opt": [
          "CONTROL_NET"
        ]
      }
    },
    "output": [
      "UPSCALER"
    ],
    "output_is_list": [false],
    "output_name": [
      "UPSCALER"
    ],
    "name": "PixelTiledKSampleUpscalerProviderPipe",
    "display_name": "PixelTiledKSampleUpscalerProviderPipe",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "TwoSamplersForMaskUpscalerProvider": {
    "input": {
      "required": {
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "lanczos",
            "area"
          ]
        ],
        "full_sample_schedule": [
          [
            "none",
            "interleave1",
            "interleave2",
            "interleave3",
            "last1",
            "last2",
            "interleave1+last1",
            "interleave2+last1",
            "interleave3+last1"
          ]
        ],
        "use_tiled_vae": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "base_sampler": [
          "KSAMPLER"
        ],
        "mask_sampler": [
          "KSAMPLER"
        ],
        "mask": [
          "MASK"
        ],
        "vae": [
          "VAE"
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      },
      "optional": {
        "full_sampler_opt": [
          "KSAMPLER"
        ],
        "upscale_model_opt": [
          "UPSCALE_MODEL"
        ],
        "pk_hook_base_opt": [
          "PK_HOOK"
        ],
        "pk_hook_mask_opt": [
          "PK_HOOK"
        ],
        "pk_hook_full_opt": [
          "PK_HOOK"
        ]
      }
    },
    "output": [
      "UPSCALER"
    ],
    "output_is_list": [false],
    "output_name": [
      "UPSCALER"
    ],
    "name": "TwoSamplersForMaskUpscalerProvider",
    "display_name": "TwoSamplersForMask Upscaler Provider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "TwoSamplersForMaskUpscalerProviderPipe": {
    "input": {
      "required": {
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "lanczos",
            "area"
          ]
        ],
        "full_sample_schedule": [
          [
            "none",
            "interleave1",
            "interleave2",
            "interleave3",
            "last1",
            "last2",
            "interleave1+last1",
            "interleave2+last1",
            "interleave3+last1"
          ]
        ],
        "use_tiled_vae": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "base_sampler": [
          "KSAMPLER"
        ],
        "mask_sampler": [
          "KSAMPLER"
        ],
        "mask": [
          "MASK"
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      },
      "optional": {
        "full_sampler_opt": [
          "KSAMPLER"
        ],
        "upscale_model_opt": [
          "UPSCALE_MODEL"
        ],
        "pk_hook_base_opt": [
          "PK_HOOK"
        ],
        "pk_hook_mask_opt": [
          "PK_HOOK"
        ],
        "pk_hook_full_opt": [
          "PK_HOOK"
        ]
      }
    },
    "output": [
      "UPSCALER"
    ],
    "output_is_list": [false],
    "output_name": [
      "UPSCALER"
    ],
    "name": "TwoSamplersForMaskUpscalerProviderPipe",
    "display_name": "TwoSamplersForMask Upscaler Provider (pipe)",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "PixelKSampleHookCombine": {
    "input": {
      "required": {
        "hook1": [
          "PK_HOOK"
        ],
        "hook2": [
          "PK_HOOK"
        ]
      }
    },
    "output": [
      "PK_HOOK"
    ],
    "output_is_list": [false],
    "output_name": [
      "PK_HOOK"
    ],
    "name": "PixelKSampleHookCombine",
    "display_name": "PixelKSampleHookCombine",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "DenoiseScheduleHookProvider": {
    "input": {
      "required": {
        "schedule_for_iteration": [
          [
            "simple"
          ]
        ],
        "target_denoise": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "PK_HOOK"
    ],
    "output_is_list": [false],
    "output_name": [
      "PK_HOOK"
    ],
    "name": "DenoiseScheduleHookProvider",
    "display_name": "DenoiseScheduleHookProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "StepsScheduleHookProvider": {
    "input": {
      "required": {
        "schedule_for_iteration": [
          [
            "simple"
          ]
        ],
        "target_steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "PK_HOOK"
    ],
    "output_is_list": [false],
    "output_name": [
      "PK_HOOK"
    ],
    "name": "StepsScheduleHookProvider",
    "display_name": "StepsScheduleHookProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "CfgScheduleHookProvider": {
    "input": {
      "required": {
        "schedule_for_iteration": [
          [
            "simple"
          ]
        ],
        "target_cfg": [
          "FLOAT",
          {
            "default": 3,
            "min": 0,
            "max": 100
          }
        ]
      }
    },
    "output": [
      "PK_HOOK"
    ],
    "output_is_list": [false],
    "output_name": [
      "PK_HOOK"
    ],
    "name": "CfgScheduleHookProvider",
    "display_name": "CfgScheduleHookProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "NoiseInjectionHookProvider": {
    "input": {
      "required": {
        "schedule_for_iteration": [
          [
            "simple"
          ]
        ],
        "source": [
          [
            "CPU",
            "GPU"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "start_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 200,
            "step": 0.01
          }
        ],
        "end_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 200,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "PK_HOOK"
    ],
    "output_is_list": [false],
    "output_name": [
      "PK_HOOK"
    ],
    "name": "NoiseInjectionHookProvider",
    "display_name": "NoiseInjectionHookProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "UnsamplerHookProvider": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "steps": [
          "INT",
          {
            "default": 25,
            "min": 1,
            "max": 10000
          }
        ],
        "start_end_at_step": [
          "INT",
          {
            "default": 21,
            "min": 0,
            "max": 10000
          }
        ],
        "end_end_at_step": [
          "INT",
          {
            "default": 24,
            "min": 0,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "normalize": [
          [
            "disable",
            "enable"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "schedule_for_iteration": [
          [
            "simple"
          ]
        ]
      }
    },
    "output": [
      "PK_HOOK"
    ],
    "output_is_list": [false],
    "output_name": [
      "PK_HOOK"
    ],
    "name": "UnsamplerHookProvider",
    "display_name": "UnsamplerHookProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "CoreMLDetailerHookProvider": {
    "input": {
      "required": {
        "mode": [
          [
            "512x512",
            "768x768",
            "512x768",
            "768x512"
          ]
        ]
      }
    },
    "output": [
      "DETAILER_HOOK"
    ],
    "output_is_list": [false],
    "output_name": [
      "DETAILER_HOOK"
    ],
    "name": "CoreMLDetailerHookProvider",
    "display_name": "CoreMLDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "PreviewDetailerHookProvider": {
    "input": {
      "required": {
        "quality": [
          "INT",
          {
            "default": 95,
            "min": 20,
            "max": 100
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "DETAILER_HOOK",
      "UPSCALER_HOOK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "DETAILER_HOOK",
      "UPSCALER_HOOK"
    ],
    "name": "PreviewDetailerHookProvider",
    "display_name": "PreviewDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "DetailerHookCombine": {
    "input": {
      "required": {
        "hook1": [
          "DETAILER_HOOK"
        ],
        "hook2": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "DETAILER_HOOK"
    ],
    "output_is_list": [false],
    "output_name": [
      "DETAILER_HOOK"
    ],
    "name": "DetailerHookCombine",
    "display_name": "DetailerHookCombine",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "NoiseInjectionDetailerHookProvider": {
    "input": {
      "required": {
        "schedule_for_cycle": [
          [
            "skip_start",
            "from_start"
          ]
        ],
        "source": [
          [
            "CPU",
            "GPU"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "start_strength": [
          "FLOAT",
          {
            "default": 2,
            "min": 0,
            "max": 200,
            "step": 0.01
          }
        ],
        "end_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 200,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "DETAILER_HOOK"
    ],
    "output_is_list": [false],
    "output_name": [
      "DETAILER_HOOK"
    ],
    "name": "NoiseInjectionDetailerHookProvider",
    "display_name": "NoiseInjectionDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "UnsamplerDetailerHookProvider": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "steps": [
          "INT",
          {
            "default": 25,
            "min": 1,
            "max": 10000
          }
        ],
        "start_end_at_step": [
          "INT",
          {
            "default": 21,
            "min": 0,
            "max": 10000
          }
        ],
        "end_end_at_step": [
          "INT",
          {
            "default": 24,
            "min": 0,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "normalize": [
          [
            "disable",
            "enable"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "schedule_for_cycle": [
          [
            "skip_start",
            "from_start"
          ]
        ]
      }
    },
    "output": [
      "DETAILER_HOOK"
    ],
    "output_is_list": [false],
    "output_name": [
      "DETAILER_HOOK"
    ],
    "name": "UnsamplerDetailerHookProvider",
    "display_name": "UnsamplerDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "DenoiseSchedulerDetailerHookProvider": {
    "input": {
      "required": {
        "schedule_for_cycle": [
          [
            "simple"
          ]
        ],
        "target_denoise": [
          "FLOAT",
          {
            "default": 0.3,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "DETAILER_HOOK"
    ],
    "output_is_list": [false],
    "output_name": [
      "DETAILER_HOOK"
    ],
    "name": "DenoiseSchedulerDetailerHookProvider",
    "display_name": "DenoiseSchedulerDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "SEGSOrderedFilterDetailerHookProvider": {
    "input": {
      "required": {
        "target": [
          [
            "area(=w*h)",
            "width",
            "height",
            "x1",
            "y1",
            "x2",
            "y2"
          ]
        ],
        "order": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "descending",
            "label_off": "ascending"
          }
        ],
        "take_start": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ],
        "take_count": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "DETAILER_HOOK"
    ],
    "output_is_list": [false],
    "output_name": [
      "DETAILER_HOOK"
    ],
    "name": "SEGSOrderedFilterDetailerHookProvider",
    "display_name": "SEGSOrderedFilterDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "SEGSRangeFilterDetailerHookProvider": {
    "input": {
      "required": {
        "target": [
          [
            "area(=w*h)",
            "width",
            "height",
            "x1",
            "y1",
            "x2",
            "y2",
            "length_percent"
          ]
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "inside",
            "label_off": "outside"
          }
        ],
        "min_value": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ],
        "max_value": [
          "INT",
          {
            "default": 67108864,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "DETAILER_HOOK"
    ],
    "output_is_list": [false],
    "output_name": [
      "DETAILER_HOOK"
    ],
    "name": "SEGSRangeFilterDetailerHookProvider",
    "display_name": "SEGSRangeFilterDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "SEGSLabelFilterDetailerHookProvider": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "preset": [
          [
            "all",
            "hand",
            "face",
            "mouth",
            "eyes",
            "eyebrows",
            "pupils",
            "left_eyebrow",
            "left_eye",
            "left_pupil",
            "right_eyebrow",
            "right_eye",
            "right_pupil",
            "short_sleeved_shirt",
            "long_sleeved_shirt",
            "short_sleeved_outwear",
            "long_sleeved_outwear",
            "vest",
            "sling",
            "shorts",
            "trousers",
            "skirt",
            "short_sleeved_dress",
            "long_sleeved_dress",
            "vest_dress",
            "sling_dress",
            "person",
            "bicycle",
            "car",
            "motorcycle",
            "airplane",
            "bus",
            "train",
            "truck",
            "boat",
            "traffic light",
            "fire hydrant",
            "stop sign",
            "parking meter",
            "bench",
            "bird",
            "cat",
            "dog",
            "horse",
            "sheep",
            "cow",
            "elephant",
            "bear",
            "zebra",
            "giraffe",
            "backpack",
            "umbrella",
            "handbag",
            "tie",
            "suitcase",
            "frisbee",
            "skis",
            "snowboard",
            "sports ball",
            "kite",
            "baseball bat",
            "baseball glove",
            "skateboard",
            "surfboard",
            "tennis racket",
            "bottle",
            "wine glass",
            "cup",
            "fork",
            "knife",
            "spoon",
            "bowl",
            "banana",
            "apple",
            "sandwich",
            "orange",
            "broccoli",
            "carrot",
            "hot dog",
            "pizza",
            "donut",
            "cake",
            "chair",
            "couch",
            "potted plant",
            "bed",
            "dining table",
            "toilet",
            "tv",
            "laptop",
            "mouse",
            "remote",
            "keyboard",
            "cell phone",
            "microwave",
            "oven",
            "toaster",
            "sink",
            "refrigerator",
            "book",
            "clock",
            "vase",
            "scissors",
            "teddy bear",
            "hair drier",
            "toothbrush"
          ]
        ],
        "labels": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "List the types of segments to be allowed, separated by commas"
          }
        ]
      }
    },
    "output": [
      "DETAILER_HOOK"
    ],
    "output_is_list": [false],
    "output_name": [
      "DETAILER_HOOK"
    ],
    "name": "SEGSLabelFilterDetailerHookProvider",
    "display_name": "SEGSLabelFilterDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "VariationNoiseDetailerHookProvider": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "DETAILER_HOOK"
    ],
    "output_is_list": [false],
    "output_name": [
      "DETAILER_HOOK"
    ],
    "name": "VariationNoiseDetailerHookProvider",
    "display_name": "VariationNoiseDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "BitwiseAndMask": {
    "input": {
      "required": {
        "mask1": [
          "MASK"
        ],
        "mask2": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "BitwiseAndMask",
    "display_name": "Pixelwise(MASK & MASK)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "SubtractMask": {
    "input": {
      "required": {
        "mask1": [
          "MASK"
        ],
        "mask2": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "SubtractMask",
    "display_name": "Pixelwise(MASK - MASK)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "AddMask": {
    "input": {
      "required": {
        "mask1": [
          "MASK"
        ],
        "mask2": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "AddMask",
    "display_name": "Pixelwise(MASK + MASK)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "ImpactSegsAndMask": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactSegsAndMask",
    "display_name": "Pixelwise(SEGS & MASK)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "ImpactSegsAndMaskForEach": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactSegsAndMaskForEach",
    "display_name": "Pixelwise(SEGS & MASKS ForEach)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "EmptySegs": {
    "input": {
      "required": {

      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "EmptySegs",
    "display_name": "EmptySegs",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "MediaPipeFaceMeshToSEGS": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 100,
            "step": 0.1
          }
        ],
        "bbox_fill": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "crop_min_size": [
          "INT",
          {
            "min": 10,
            "max": 16384,
            "step": 1,
            "default": 50
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 16384,
            "step": 1,
            "default": 1
          }
        ],
        "dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "face": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "mouth": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "left_eyebrow": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "left_eye": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "left_pupil": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "right_eyebrow": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "right_eye": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "right_pupil": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "MediaPipeFaceMeshToSEGS",
    "display_name": "MediaPipe FaceMesh to SEGS",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "MaskToSEGS": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "combined": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "True",
            "label_off": "False"
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 100,
            "step": 0.1
          }
        ],
        "bbox_fill": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 16384,
            "step": 1,
            "default": 10
          }
        ],
        "contour_fill": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "MaskToSEGS",
    "display_name": "MASK to SEGS",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "MaskToSEGS_for_AnimateDiff": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "combined": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "True",
            "label_off": "False"
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 100,
            "step": 0.1
          }
        ],
        "bbox_fill": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 16384,
            "step": 1,
            "default": 10
          }
        ],
        "contour_fill": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "MaskToSEGS_for_AnimateDiff",
    "display_name": "MASK to SEGS for AnimateDiff",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "ToBinaryMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "threshold": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "ToBinaryMask",
    "display_name": "ToBinaryMask",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "MasksToMaskList": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [true],
    "output_name": [
      "MASK"
    ],
    "name": "MasksToMaskList",
    "display_name": "Masks to Mask List",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "MaskListToMaskBatch": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "MaskListToMaskBatch",
    "display_name": "Mask List to Masks",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "ImageListToImageBatch": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageListToImageBatch",
    "display_name": "Image List to Image Batch",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "SetDefaultImageForSEGS": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "image": [
          "IMAGE"
        ],
        "override": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "SetDefaultImageForSEGS",
    "display_name": "Set Default Image for SEGS",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "RemoveImageFromSEGS": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "RemoveImageFromSEGS",
    "display_name": "Remove Image from SEGS",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "BboxDetectorSEGS": {
    "input": {
      "required": {
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "image": [
          "IMAGE"
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 100,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 16384,
            "step": 1,
            "default": 10
          }
        ],
        "labels": [
          "STRING",
          {
            "multiline": true,
            "default": "all",
            "placeholder": "List the types of segments to be allowed, separated by commas"
          }
        ]
      },
      "optional": {
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "BboxDetectorSEGS",
    "display_name": "BBOX Detector (SEGS)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "SegmDetectorSEGS": {
    "input": {
      "required": {
        "segm_detector": [
          "SEGM_DETECTOR"
        ],
        "image": [
          "IMAGE"
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 100,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 16384,
            "step": 1,
            "default": 10
          }
        ],
        "labels": [
          "STRING",
          {
            "multiline": true,
            "default": "all",
            "placeholder": "List the types of segments to be allowed, separated by commas"
          }
        ]
      },
      "optional": {
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "SegmDetectorSEGS",
    "display_name": "SEGM Detector (SEGS)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "ONNXDetectorSEGS": {
    "input": {
      "required": {
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "image": [
          "IMAGE"
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 100,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 16384,
            "step": 1,
            "default": 10
          }
        ],
        "labels": [
          "STRING",
          {
            "multiline": true,
            "default": "all",
            "placeholder": "List the types of segments to be allowed, separated by commas"
          }
        ]
      },
      "optional": {
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "ONNXDetectorSEGS",
    "display_name": "ONNX Detector (SEGS/legacy) - use BBOXDetector",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "ImpactSimpleDetectorSEGS_for_AD": {
    "input": {
      "required": {
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "image_frames": [
          "IMAGE"
        ],
        "bbox_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "bbox_dilation": [
          "INT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 100,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 16384,
            "step": 1,
            "default": 10
          }
        ],
        "sub_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "sub_dilation": [
          "INT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "sub_bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "sam_mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "masking_mode": [
          [
            "Pivot SEGS",
            "Combine neighboring frames",
            "Don't combine"
          ]
        ],
        "segs_pivot": [
          [
            "Combined mask",
            "1st frame mask"
          ]
        ],
        "sam_model_opt": [
          "SAM_MODEL"
        ],
        "segm_detector_opt": [
          "SEGM_DETECTOR"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactSimpleDetectorSEGS_for_AD",
    "display_name": "Simple Detector for AnimateDiff (SEGS)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "ImpactSimpleDetectorSEGS": {
    "input": {
      "required": {
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "image": [
          "IMAGE"
        ],
        "bbox_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "bbox_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 100,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 16384,
            "step": 1,
            "default": 10
          }
        ],
        "sub_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "sub_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "sub_bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "sam_mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "post_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "sam_model_opt": [
          "SAM_MODEL"
        ],
        "segm_detector_opt": [
          "SEGM_DETECTOR"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactSimpleDetectorSEGS",
    "display_name": "Simple Detector (SEGS)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "ImpactSimpleDetectorSEGSPipe": {
    "input": {
      "required": {
        "detailer_pipe": [
          "DETAILER_PIPE"
        ],
        "image": [
          "IMAGE"
        ],
        "bbox_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "bbox_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 100,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 16384,
            "step": 1,
            "default": 10
          }
        ],
        "sub_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "sub_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "sub_bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "sam_mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "post_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactSimpleDetectorSEGSPipe",
    "display_name": "Simple Detector (SEGS/pipe)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "ImpactControlNetApplySEGS": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "control_net": [
          "CONTROL_NET"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "segs_preprocessor": [
          "SEGS_PREPROCESSOR"
        ],
        "control_image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactControlNetApplySEGS",
    "display_name": "ControlNetApply (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactControlNetApplyAdvancedSEGS": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "control_net": [
          "CONTROL_NET"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "segs_preprocessor": [
          "SEGS_PREPROCESSOR"
        ],
        "control_image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactControlNetApplyAdvancedSEGS",
    "display_name": "ControlNetApplyAdvanced (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactControlNetClearSEGS": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactControlNetClearSEGS",
    "display_name": "ImpactControlNetClearSEGS",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactIPAdapterApplySEGS": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "ipadapter_pipe": [
          "IPADAPTER_PIPE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0.7,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "noise": [
          "FLOAT",
          {
            "default": 0.4,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "weight_type": [
          [
            "original",
            "linear",
            "channel penalty"
          ],
          {
            "default": "channel penalty"
          }
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 0.9,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "unfold_batch": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "faceid_v2": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "weight_v2": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "context_crop_factor": [
          "FLOAT",
          {
            "default": 1.2,
            "min": 1,
            "max": 100,
            "step": 0.1
          }
        ],
        "reference_image": [
          "IMAGE"
        ]
      },
      "optional": {
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average"
          ]
        ],
        "neg_image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactIPAdapterApplySEGS",
    "display_name": "IPAdapterApply (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactDecomposeSEGS": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "SEGS_HEADER",
      "SEG_ELT"
    ],
    "output_is_list": [false, true],
    "output_name": [
      "SEGS_HEADER",
      "SEG_ELT"
    ],
    "name": "ImpactDecomposeSEGS",
    "display_name": "Decompose (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactAssembleSEGS": {
    "input": {
      "required": {
        "seg_header": [
          "SEGS_HEADER"
        ],
        "seg_elt": [
          "SEG_ELT"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactAssembleSEGS",
    "display_name": "Assemble (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactFrom_SEG_ELT": {
    "input": {
      "required": {
        "seg_elt": [
          "SEG_ELT"
        ]
      }
    },
    "output": [
      "SEG_ELT",
      "IMAGE",
      "MASK",
      "SEG_ELT_crop_region",
      "SEG_ELT_bbox",
      "SEG_ELT_control_net_wrapper",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false],
    "output_name": [
      "seg_elt",
      "cropped_image",
      "cropped_mask",
      "crop_region",
      "bbox",
      "control_net_wrapper",
      "confidence",
      "label"
    ],
    "name": "ImpactFrom_SEG_ELT",
    "display_name": "From SEG_ELT",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactEdit_SEG_ELT": {
    "input": {
      "required": {
        "seg_elt": [
          "SEG_ELT"
        ]
      },
      "optional": {
        "cropped_image_opt": [
          "IMAGE"
        ],
        "cropped_mask_opt": [
          "MASK"
        ],
        "crop_region_opt": [
          "SEG_ELT_crop_region"
        ],
        "bbox_opt": [
          "SEG_ELT_bbox"
        ],
        "control_net_wrapper_opt": [
          "SEG_ELT_control_net_wrapper"
        ],
        "confidence_opt": [
          "FLOAT",
          {
            "min": 0,
            "max": 1,
            "step": 0.1,
            "forceInput": true
          }
        ],
        "label_opt": [
          "STRING",
          {
            "multiline": false,
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "SEG_ELT"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEG_ELT"
    ],
    "name": "ImpactEdit_SEG_ELT",
    "display_name": "Edit SEG_ELT",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactDilate_Mask_SEG_ELT": {
    "input": {
      "required": {
        "seg_elt": [
          "SEG_ELT"
        ],
        "dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "SEG_ELT"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEG_ELT"
    ],
    "name": "ImpactDilate_Mask_SEG_ELT",
    "display_name": "Dilate Mask (SEG_ELT)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactDilateMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "ImpactDilateMask",
    "display_name": "Dilate Mask",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactGaussianBlurMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "kernel_size": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "sigma": [
          "FLOAT",
          {
            "default": 10,
            "min": 0.1,
            "max": 100,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "ImpactGaussianBlurMask",
    "display_name": "Gaussian Blur Mask",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactDilateMaskInSEGS": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactDilateMaskInSEGS",
    "display_name": "Dilate Mask (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactGaussianBlurMaskInSEGS": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "kernel_size": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "sigma": [
          "FLOAT",
          {
            "default": 10,
            "min": 0.1,
            "max": 100,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactGaussianBlurMaskInSEGS",
    "display_name": "Gaussian Blur Mask (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactScaleBy_BBOX_SEG_ELT": {
    "input": {
      "required": {
        "seg": [
          "SEG_ELT"
        ],
        "scale_by": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 8,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "SEG_ELT"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEG_ELT"
    ],
    "name": "ImpactScaleBy_BBOX_SEG_ELT",
    "display_name": "ScaleBy BBOX (SEG_ELT)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactFrom_SEG_ELT_bbox": {
    "input": {
      "required": {
        "bbox": [
          "SEG_ELT_bbox"
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "left",
      "top",
      "right",
      "bottom"
    ],
    "name": "ImpactFrom_SEG_ELT_bbox",
    "display_name": "From SEG_ELT bbox",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactFrom_SEG_ELT_crop_region": {
    "input": {
      "required": {
        "crop_region": [
          "SEG_ELT_crop_region"
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "left",
      "top",
      "right",
      "bottom"
    ],
    "name": "ImpactFrom_SEG_ELT_crop_region",
    "display_name": "From SEG_ELT crop_region",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "BboxDetectorCombined_v2": {
    "input": {
      "required": {
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "image": [
          "IMAGE"
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "dilation": [
          "INT",
          {
            "default": 4,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "BboxDetectorCombined_v2",
    "display_name": "BBOX Detector (combined)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "SegmDetectorCombined_v2": {
    "input": {
      "required": {
        "segm_detector": [
          "SEGM_DETECTOR"
        ],
        "image": [
          "IMAGE"
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "SegmDetectorCombined_v2",
    "display_name": "SEGM Detector (combined)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "SegsToCombinedMask": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "SegsToCombinedMask",
    "display_name": "SEGS to MASK (combined)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "KSamplerProvider": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ]
      }
    },
    "output": [
      "KSAMPLER"
    ],
    "output_is_list": [false],
    "output_name": [
      "KSAMPLER"
    ],
    "name": "KSamplerProvider",
    "display_name": "KSamplerProvider",
    "description": "",
    "category": "ImpactPack/Sampler",
    "output_node": false
  },
  "TwoSamplersForMask": {
    "input": {
      "required": {
        "latent_image": [
          "LATENT"
        ],
        "base_sampler": [
          "KSAMPLER"
        ],
        "mask_sampler": [
          "KSAMPLER"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "TwoSamplersForMask",
    "display_name": "TwoSamplersForMask",
    "description": "",
    "category": "ImpactPack/Sampler",
    "output_node": false
  },
  "TiledKSamplerProvider": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "tile_width": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 16384,
            "step": 64
          }
        ],
        "tile_height": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 16384,
            "step": 64
          }
        ],
        "tiling_strategy": [
          [
            "random",
            "padded",
            "simple"
          ]
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ]
      }
    },
    "output": [
      "KSAMPLER"
    ],
    "output_is_list": [false],
    "output_name": [
      "KSAMPLER"
    ],
    "name": "TiledKSamplerProvider",
    "display_name": "TiledKSamplerProvider",
    "description": "",
    "category": "ImpactPack/Sampler",
    "output_node": false
  },
  "KSamplerAdvancedProvider": {
    "input": {
      "required": {
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "sigma_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ]
      },
      "optional": {
        "sampler_opt": [
          "SAMPLER"
        ]
      }
    },
    "output": [
      "KSAMPLER_ADVANCED"
    ],
    "output_is_list": [false],
    "output_name": [
      "KSAMPLER_ADVANCED"
    ],
    "name": "KSamplerAdvancedProvider",
    "display_name": "KSamplerAdvancedProvider",
    "description": "",
    "category": "ImpactPack/Sampler",
    "output_node": false
  },
  "TwoAdvancedSamplersForMask": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "samples": [
          "LATENT"
        ],
        "base_sampler": [
          "KSAMPLER_ADVANCED"
        ],
        "mask_sampler": [
          "KSAMPLER_ADVANCED"
        ],
        "mask": [
          "MASK"
        ],
        "overlap_factor": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "TwoAdvancedSamplersForMask",
    "display_name": "TwoAdvancedSamplersForMask",
    "description": "",
    "category": "ImpactPack/Sampler",
    "output_node": false
  },
  "PreviewBridge": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "image": [
          "STRING",
          {
            "default": ""
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "PreviewBridge",
    "display_name": "Preview Bridge (Image)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "PreviewBridgeLatent": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ],
        "image": [
          "STRING",
          {
            "default": ""
          }
        ],
        "preview_method": [
          [
            "Latent2RGB-SDXL",
            "Latent2RGB-SD15",
            "TAESDXL",
            "TAESD15"
          ]
        ]
      },
      "optional": {
        "vae_opt": [
          "VAE"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "LATENT",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "LATENT",
      "MASK"
    ],
    "name": "PreviewBridgeLatent",
    "display_name": "Preview Bridge (Latent)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "ImageSender": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ImgSender"
          }
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ImageSender",
    "display_name": "Image Sender",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "ImageReceiver": {
    "input": {
      "required": {
        "image": [
          [
            "example.png"
          ]
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ],
        "save_to_workflow": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "image_data": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "trigger_always": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "ImageReceiver",
    "display_name": "Image Receiver",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "LatentSender": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "latents/LatentSender"
          }
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ],
        "preview_method": [
          [
            "Latent2RGB-SDXL",
            "Latent2RGB-SD15",
            "TAESDXL",
            "TAESD15"
          ]
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "LatentSender",
    "display_name": "LatentSender",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "LatentReceiver": {
    "input": {
      "required": {
        "latent": [
          []
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ],
        "trigger_always": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentReceiver",
    "display_name": "LatentReceiver",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImageMaskSwitch": {
    "input": {
      "required": {
        "select": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4,
            "step": 1
          }
        ],
        "images1": [
          "IMAGE"
        ]
      },
      "optional": {
        "mask1_opt": [
          "MASK"
        ],
        "images2_opt": [
          "IMAGE"
        ],
        "mask2_opt": [
          "MASK"
        ],
        "images3_opt": [
          "IMAGE"
        ],
        "mask3_opt": [
          "MASK"
        ],
        "images4_opt": [
          "IMAGE"
        ],
        "mask4_opt": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "ImageMaskSwitch",
    "display_name": "Switch (images, mask)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "LatentSwitch": {
    "input": {
      "required": {
        "select": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 999999,
            "step": 1
          }
        ],
        "sel_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "select_on_prompt",
            "label_off": "select_on_execution",
            "forceInput": false
          }
        ]
      },
      "optional": {
        "input1": [
          "*"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "*",
      "STRING",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "selected_value",
      "selected_label",
      "selected_index"
    ],
    "name": "LatentSwitch",
    "display_name": "Switch (latent/legacy)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "SEGSSwitch": {
    "input": {
      "required": {
        "select": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 999999,
            "step": 1
          }
        ],
        "sel_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "select_on_prompt",
            "label_off": "select_on_execution",
            "forceInput": false
          }
        ]
      },
      "optional": {
        "input1": [
          "*"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "*",
      "STRING",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "selected_value",
      "selected_label",
      "selected_index"
    ],
    "name": "SEGSSwitch",
    "display_name": "Switch (SEGS/legacy)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSwitch": {
    "input": {
      "required": {
        "select": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 999999,
            "step": 1
          }
        ],
        "sel_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "select_on_prompt",
            "label_off": "select_on_execution",
            "forceInput": false
          }
        ]
      },
      "optional": {
        "input1": [
          "*"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "*",
      "STRING",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "selected_value",
      "selected_label",
      "selected_index"
    ],
    "name": "ImpactSwitch",
    "display_name": "Switch (Any)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactInversedSwitch": {
    "input": {
      "required": {
        "select": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 999999,
            "step": 1
          }
        ],
        "input": [
          "*"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": [
      "*"
    ],
    "name": "ImpactInversedSwitch",
    "display_name": "Inversed Switch (Any)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactWildcardProcessor": {
    "input": {
      "required": {
        "wildcard_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "populated_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Populate",
            "label_off": "Fixed"
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "ImpactWildcardProcessor",
    "display_name": "ImpactWildcardProcessor",
    "description": "",
    "category": "ImpactPack/Prompt",
    "output_node": false
  },
  "ImpactWildcardEncode": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "wildcard_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "populated_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Populate",
            "label_off": "Fixed"
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "CONDITIONING",
      "STRING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "model",
      "clip",
      "conditioning",
      "populated_text"
    ],
    "name": "ImpactWildcardEncode",
    "display_name": "ImpactWildcardEncode",
    "description": "",
    "category": "ImpactPack/Prompt",
    "output_node": false
  },
  "SEGSUpscaler": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "rescale_factor": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.01,
            "max": 100,
            "step": 0.01
          }
        ],
        "resampling_method": [
          [
            "lanczos",
            "nearest",
            "bilinear",
            "bicubic"
          ]
        ],
        "supersample": [
          [
            "true",
            "false"
          ]
        ],
        "rounding_modulus": [
          "INT",
          {
            "default": 8,
            "min": 8,
            "max": 1024,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      },
      "optional": {
        "upscale_model_opt": [
          "UPSCALE_MODEL"
        ],
        "upscaler_hook_opt": [
          "UPSCALER_HOOK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "SEGSUpscaler",
    "display_name": "Upscaler (SEGS)",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "SEGSUpscalerPipe": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "rescale_factor": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.01,
            "max": 100,
            "step": 0.01
          }
        ],
        "resampling_method": [
          [
            "lanczos",
            "nearest",
            "bilinear",
            "bicubic"
          ]
        ],
        "supersample": [
          [
            "true",
            "false"
          ]
        ],
        "rounding_modulus": [
          "INT",
          {
            "default": 8,
            "min": 8,
            "max": 1024,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      },
      "optional": {
        "upscale_model_opt": [
          "UPSCALE_MODEL"
        ],
        "upscaler_hook_opt": [
          "UPSCALER_HOOK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "SEGSUpscalerPipe",
    "display_name": "Upscaler (SEGS/pipe)",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "SEGSDetailer": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 256,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 768,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 100
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "refiner_basic_pipe_opt": [
          "BASIC_PIPE"
        ],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "SEGS",
      "IMAGE"
    ],
    "output_is_list": [false, true],
    "output_name": [
      "segs",
      "cnet_images"
    ],
    "name": "SEGSDetailer",
    "display_name": "SEGSDetailer",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "SEGSPaste": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "alpha": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      },
      "optional": {
        "ref_image_opt": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "SEGSPaste",
    "display_name": "SEGSPaste",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "SEGSPreview": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "alpha_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "min_alpha": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "fallback_image_opt": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [true],
    "output_name": [
      "IMAGE"
    ],
    "name": "SEGSPreview",
    "display_name": "SEGSPreview",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "SEGSPreviewCNet": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [true],
    "output_name": [
      "IMAGE"
    ],
    "name": "SEGSPreviewCNet",
    "display_name": "SEGSPreview (CNET Image)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "SEGSToImageList": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ]
      },
      "optional": {
        "fallback_image_opt": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [true],
    "output_name": [
      "IMAGE"
    ],
    "name": "SEGSToImageList",
    "display_name": "SEGSToImageList",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSToMaskList": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [true],
    "output_name": [
      "MASK"
    ],
    "name": "ImpactSEGSToMaskList",
    "display_name": "SEGS to Mask List",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSToMaskBatch": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "ImpactSEGSToMaskBatch",
    "display_name": "SEGS to Mask Batch",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSConcat": {
    "input": {
      "required": {
        "segs1": [
          "SEGS"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactSEGSConcat",
    "display_name": "SEGS Concat",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSPicker": {
    "input": {
      "required": {
        "picks": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "pysssss.autocomplete": false
          }
        ],
        "segs": [
          "SEGS"
        ]
      },
      "optional": {
        "fallback_image_opt": [
          "IMAGE"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactSEGSPicker",
    "display_name": "Picker (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "ImpactMakeTileSEGS": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "bbox_size": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096,
            "step": 8
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 10,
            "step": 0.1
          }
        ],
        "min_overlap": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 512,
            "step": 1
          }
        ],
        "filter_segs_dilation": [
          "INT",
          {
            "default": 20,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "mask_irregularity": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "irregular_mask_mode": [
          [
            "Reuse fast",
            "Reuse quality",
            "All random fast",
            "All random quality"
          ]
        ]
      },
      "optional": {
        "filter_in_segs_opt": [
          "SEGS"
        ],
        "filter_out_segs_opt": [
          "SEGS"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactMakeTileSEGS",
    "display_name": "Make Tile SEGS",
    "description": "",
    "category": "ImpactPack/__for_testing",
    "output_node": false
  },
  "SEGSDetailerForAnimateDiff": {
    "input": {
      "required": {
        "image_frames": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 256,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 768,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 1
          }
        ]
      },
      "optional": {
        "refiner_basic_pipe_opt": [
          "BASIC_PIPE"
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "SEGS",
      "IMAGE"
    ],
    "output_is_list": [false, true],
    "output_name": [
      "segs",
      "cnet_images"
    ],
    "name": "SEGSDetailerForAnimateDiff",
    "display_name": "SEGSDetailer For AnimateDiff (SEGS/pipe)",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "ImpactKSamplerBasicPipe": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "BASIC_PIPE",
      "LATENT",
      "VAE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "BASIC_PIPE",
      "LATENT",
      "VAE"
    ],
    "name": "ImpactKSamplerBasicPipe",
    "display_name": "KSampler (pipe)",
    "description": "",
    "category": "sampling",
    "output_node": false
  },
  "ImpactKSamplerAdvancedBasicPipe": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "add_noise": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "latent_image": [
          "LATENT"
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "return_with_leftover_noise": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "BASIC_PIPE",
      "LATENT",
      "VAE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "BASIC_PIPE",
      "LATENT",
      "VAE"
    ],
    "name": "ImpactKSamplerAdvancedBasicPipe",
    "display_name": "KSampler (Advanced/pipe)",
    "description": "",
    "category": "sampling",
    "output_node": false
  },
  "ReencodeLatent": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "tile_mode": [
          [
            "None",
            "Both",
            "Decode(input) only",
            "Encode(output) only"
          ]
        ],
        "input_vae": [
          "VAE"
        ],
        "output_vae": [
          "VAE"
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "ReencodeLatent",
    "display_name": "Reencode Latent",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ReencodeLatentPipe": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "tile_mode": [
          [
            "None",
            "Both",
            "Decode(input) only",
            "Encode(output) only"
          ]
        ],
        "input_basic_pipe": [
          "BASIC_PIPE"
        ],
        "output_basic_pipe": [
          "BASIC_PIPE"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "ReencodeLatentPipe",
    "display_name": "Reencode Latent (pipe)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactImageBatchToImageList": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [true],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImpactImageBatchToImageList",
    "display_name": "Image batch to Image List",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactMakeImageList": {
    "input": {
      "required": {
        "image1": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [true],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImpactMakeImageList",
    "display_name": "Make Image List",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactMakeImageBatch": {
    "input": {
      "required": {
        "image1": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImpactMakeImageBatch",
    "display_name": "Make Image Batch",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "RegionalSampler": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "seed_2nd": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "seed_2nd_mode": [
          [
            "ignore",
            "fixed",
            "seed+seed_2nd",
            "seed-seed_2nd",
            "increment",
            "decrement",
            "randomize"
          ]
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "base_only_steps": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "max": 10000
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "samples": [
          "LATENT"
        ],
        "base_sampler": [
          "KSAMPLER_ADVANCED"
        ],
        "regional_prompts": [
          "REGIONAL_PROMPTS"
        ],
        "overlap_factor": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 10000
          }
        ],
        "restore_latent": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "additional_mode": [
          [
            "DISABLE",
            "ratio additional",
            "ratio between"
          ],
          {
            "default": "ratio between"
          }
        ],
        "additional_sampler": [
          [
            "AUTO",
            "euler",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_fast",
            "dpmpp_2m",
            "ddpm"
          ]
        ],
        "additional_sigma_ratio": [
          "FLOAT",
          {
            "default": 0.3,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "RegionalSampler",
    "display_name": "RegionalSampler",
    "description": "",
    "category": "ImpactPack/Regional",
    "output_node": false
  },
  "RegionalSamplerAdvanced": {
    "input": {
      "required": {
        "add_noise": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "overlap_factor": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 10000
          }
        ],
        "restore_latent": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "return_with_leftover_noise": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "latent_image": [
          "LATENT"
        ],
        "base_sampler": [
          "KSAMPLER_ADVANCED"
        ],
        "regional_prompts": [
          "REGIONAL_PROMPTS"
        ],
        "additional_mode": [
          [
            "DISABLE",
            "ratio additional",
            "ratio between"
          ],
          {
            "default": "ratio between"
          }
        ],
        "additional_sampler": [
          [
            "AUTO",
            "euler",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_fast",
            "dpmpp_2m",
            "ddpm"
          ]
        ],
        "additional_sigma_ratio": [
          "FLOAT",
          {
            "default": 0.3,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "RegionalSamplerAdvanced",
    "display_name": "RegionalSamplerAdvanced",
    "description": "",
    "category": "ImpactPack/Regional",
    "output_node": false
  },
  "CombineRegionalPrompts": {
    "input": {
      "required": {
        "regional_prompts1": [
          "REGIONAL_PROMPTS"
        ]
      }
    },
    "output": [
      "REGIONAL_PROMPTS"
    ],
    "output_is_list": [false],
    "output_name": [
      "REGIONAL_PROMPTS"
    ],
    "name": "CombineRegionalPrompts",
    "display_name": "CombineRegionalPrompts",
    "description": "",
    "category": "ImpactPack/Regional",
    "output_node": false
  },
  "RegionalPrompt": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "advanced_sampler": [
          "KSAMPLER_ADVANCED"
        ]
      },
      "optional": {
        "variation_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "variation_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "variation_method": [
          [
            "linear",
            "slerp"
          ]
        ]
      }
    },
    "output": [
      "REGIONAL_PROMPTS"
    ],
    "output_is_list": [false],
    "output_name": [
      "REGIONAL_PROMPTS"
    ],
    "name": "RegionalPrompt",
    "display_name": "RegionalPrompt",
    "description": "",
    "category": "ImpactPack/Regional",
    "output_node": false
  },
  "ImpactCombineConditionings": {
    "input": {
      "required": {
        "conditioning1": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ImpactCombineConditionings",
    "display_name": "Combine Conditionings",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactConcatConditionings": {
    "input": {
      "required": {
        "conditioning1": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ImpactConcatConditionings",
    "display_name": "Concat Conditionings",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSLabelAssign": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "labels": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "List the label to be assigned in order of segs, separated by commas"
          }
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactSEGSLabelAssign",
    "display_name": "SEGS Assign (label)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSLabelFilter": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "preset": [
          [
            "all",
            "hand",
            "face",
            "mouth",
            "eyes",
            "eyebrows",
            "pupils",
            "left_eyebrow",
            "left_eye",
            "left_pupil",
            "right_eyebrow",
            "right_eye",
            "right_pupil",
            "short_sleeved_shirt",
            "long_sleeved_shirt",
            "short_sleeved_outwear",
            "long_sleeved_outwear",
            "vest",
            "sling",
            "shorts",
            "trousers",
            "skirt",
            "short_sleeved_dress",
            "long_sleeved_dress",
            "vest_dress",
            "sling_dress",
            "person",
            "bicycle",
            "car",
            "motorcycle",
            "airplane",
            "bus",
            "train",
            "truck",
            "boat",
            "traffic light",
            "fire hydrant",
            "stop sign",
            "parking meter",
            "bench",
            "bird",
            "cat",
            "dog",
            "horse",
            "sheep",
            "cow",
            "elephant",
            "bear",
            "zebra",
            "giraffe",
            "backpack",
            "umbrella",
            "handbag",
            "tie",
            "suitcase",
            "frisbee",
            "skis",
            "snowboard",
            "sports ball",
            "kite",
            "baseball bat",
            "baseball glove",
            "skateboard",
            "surfboard",
            "tennis racket",
            "bottle",
            "wine glass",
            "cup",
            "fork",
            "knife",
            "spoon",
            "bowl",
            "banana",
            "apple",
            "sandwich",
            "orange",
            "broccoli",
            "carrot",
            "hot dog",
            "pizza",
            "donut",
            "cake",
            "chair",
            "couch",
            "potted plant",
            "bed",
            "dining table",
            "toilet",
            "tv",
            "laptop",
            "mouse",
            "remote",
            "keyboard",
            "cell phone",
            "microwave",
            "oven",
            "toaster",
            "sink",
            "refrigerator",
            "book",
            "clock",
            "vase",
            "scissors",
            "teddy bear",
            "hair drier",
            "toothbrush"
          ]
        ],
        "labels": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "List the types of segments to be allowed, separated by commas"
          }
        ]
      }
    },
    "output": [
      "SEGS",
      "SEGS"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "filtered_SEGS",
      "remained_SEGS"
    ],
    "name": "ImpactSEGSLabelFilter",
    "display_name": "SEGS Filter (label)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSRangeFilter": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "target": [
          [
            "area(=w*h)",
            "width",
            "height",
            "x1",
            "y1",
            "x2",
            "y2",
            "length_percent",
            "confidence(0-100)"
          ]
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "inside",
            "label_off": "outside"
          }
        ],
        "min_value": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ],
        "max_value": [
          "INT",
          {
            "default": 67108864,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "SEGS",
      "SEGS"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "filtered_SEGS",
      "remained_SEGS"
    ],
    "name": "ImpactSEGSRangeFilter",
    "display_name": "SEGS Filter (range)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSOrderedFilter": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "target": [
          [
            "area(=w*h)",
            "width",
            "height",
            "x1",
            "y1",
            "x2",
            "y2",
            "confidence"
          ]
        ],
        "order": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "descending",
            "label_off": "ascending"
          }
        ],
        "take_start": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ],
        "take_count": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "SEGS",
      "SEGS"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "filtered_SEGS",
      "remained_SEGS"
    ],
    "name": "ImpactSEGSOrderedFilter",
    "display_name": "SEGS Filter (ordered)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactCompare": {
    "input": {
      "required": {
        "cmp": [
          [
            "a = b",
            "a \u003C\u003E b",
            "a \u003E b",
            "a \u003C b",
            "a \u003E= b",
            "a \u003C= b",
            "tt",
            "ff"
          ]
        ],
        "a": [
          "*"
        ],
        "b": [
          "*"
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "ImpactCompare",
    "display_name": "ImpactCompare",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactConditionalBranch": {
    "input": {
      "required": {
        "cond": [
          "BOOLEAN"
        ],
        "tt_value": [
          "*"
        ],
        "ff_value": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": [
      "*"
    ],
    "name": "ImpactConditionalBranch",
    "display_name": "ImpactConditionalBranch",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactConditionalBranchSelMode": {
    "input": {
      "required": {
        "cond": [
          "BOOLEAN"
        ],
        "sel_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "select_on_prompt",
            "label_off": "select_on_execution"
          }
        ]
      },
      "optional": {
        "tt_value": [
          "*"
        ],
        "ff_value": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": [
      "*"
    ],
    "name": "ImpactConditionalBranchSelMode",
    "display_name": "ImpactConditionalBranchSelMode",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactIfNone": {
    "input": {
      "required": {

      },
      "optional": {
        "signal": [
          "*"
        ],
        "any_input": [
          "*"
        ]
      }
    },
    "output": [
      "*",
      "BOOLEAN"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "signal_opt",
      "bool"
    ],
    "name": "ImpactIfNone",
    "display_name": "ImpactIfNone",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactConvertDataType": {
    "input": {
      "required": {
        "value": [
          "*"
        ]
      }
    },
    "output": [
      "STRING",
      "FLOAT",
      "INT",
      "BOOLEAN"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "STRING",
      "FLOAT",
      "INT",
      "BOOLEAN"
    ],
    "name": "ImpactConvertDataType",
    "display_name": "ImpactConvertDataType",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactLogicalOperators": {
    "input": {
      "required": {
        "operator": [
          [
            "and",
            "or",
            "xor"
          ]
        ],
        "bool_a": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ],
        "bool_b": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "ImpactLogicalOperators",
    "display_name": "ImpactLogicalOperators",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactInt": {
    "input": {
      "required": {
        "value": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "ImpactInt",
    "display_name": "ImpactInt",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactFloat": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 1,
            "min": -3.402823466e+38,
            "max": 3.402823466e+38
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "ImpactFloat",
    "display_name": "ImpactFloat",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactValueSender": {
    "input": {
      "required": {
        "value": [
          "*"
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ]
      },
      "optional": {
        "signal_opt": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": [
      "signal"
    ],
    "name": "ImpactValueSender",
    "display_name": "ImpactValueSender",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": true
  },
  "ImpactValueReceiver": {
    "input": {
      "required": {
        "typ": [
          [
            "STRING",
            "INT",
            "FLOAT",
            "BOOLEAN"
          ]
        ],
        "value": [
          "STRING",
          {
            "default": ""
          }
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": [
      "*"
    ],
    "name": "ImpactValueReceiver",
    "display_name": "ImpactValueReceiver",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactImageInfo": {
    "input": {
      "required": {
        "value": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "batch",
      "height",
      "width",
      "channel"
    ],
    "name": "ImpactImageInfo",
    "display_name": "ImpactImageInfo",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": false
  },
  "ImpactLatentInfo": {
    "input": {
      "required": {
        "value": [
          "LATENT"
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "batch",
      "height",
      "width",
      "channel"
    ],
    "name": "ImpactLatentInfo",
    "display_name": "ImpactLatentInfo",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": false
  },
  "ImpactMinMax": {
    "input": {
      "required": {
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "max",
            "label_off": "min"
          }
        ],
        "a": [
          "*"
        ],
        "b": [
          "*"
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "ImpactMinMax",
    "display_name": "ImpactMinMax",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": false
  },
  "ImpactNeg": {
    "input": {
      "required": {
        "value": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "ImpactNeg",
    "display_name": "ImpactNeg",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactConditionalStopIteration": {
    "input": {
      "required": {
        "cond": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ImpactConditionalStopIteration",
    "display_name": "ImpactConditionalStopIteration",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": true
  },
  "ImpactStringSelector": {
    "input": {
      "required": {
        "strings": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "multiline": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "select": [
          "INT",
          {
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1,
            "default": 0
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "ImpactStringSelector",
    "display_name": "String Selector",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "StringListToString": {
    "input": {
      "required": {
        "join_with": [
          "STRING",
          {
            "default": "\\n"
          }
        ],
        "string_list": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "StringListToString",
    "display_name": "String List to String",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "WildcardPromptFromString": {
    "input": {
      "required": {
        "string": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "delimiter": [
          "STRING",
          {
            "multiline": false,
            "default": "\\n"
          }
        ],
        "prefix_all": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "postfix_all": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "restrict_to_tags": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "exclude_tags": [
          "STRING",
          {
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "wildcard",
      "segs_labels"
    ],
    "name": "WildcardPromptFromString",
    "display_name": "Wildcard Prompt from String",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "RemoveNoiseMask": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "RemoveNoiseMask",
    "display_name": "Remove Noise Mask",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactLogger": {
    "input": {
      "required": {
        "data": [
          "*",
          ""
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ImpactLogger",
    "display_name": "ImpactLogger",
    "description": "",
    "category": "ImpactPack/Debug",
    "output_node": true
  },
  "ImpactDummyInput": {
    "input": {
      "required": {

      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": [
      "*"
    ],
    "name": "ImpactDummyInput",
    "display_name": "ImpactDummyInput",
    "description": "",
    "category": "ImpactPack/Debug",
    "output_node": false
  },
  "ImpactQueueTrigger": {
    "input": {
      "required": {
        "signal": [
          "*"
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Trigger",
            "label_off": "Don't trigger"
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": [
      "signal_opt"
    ],
    "name": "ImpactQueueTrigger",
    "display_name": "Queue Trigger",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactQueueTriggerCountdown": {
    "input": {
      "required": {
        "count": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "total": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 1.8446744073709552e+19
          }
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Trigger",
            "label_off": "Don't trigger"
          }
        ]
      },
      "optional": {
        "signal": [
          "*"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "*",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "signal_opt",
      "count",
      "total"
    ],
    "name": "ImpactQueueTriggerCountdown",
    "display_name": "Queue Trigger (Countdown)",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactSetWidgetValue": {
    "input": {
      "required": {
        "signal": [
          "*"
        ],
        "node_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "widget_name": [
          "STRING",
          {
            "multiline": false
          }
        ]
      },
      "optional": {
        "boolean_value": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ],
        "int_value": [
          "INT",
          {
            "forceInput": true
          }
        ],
        "float_value": [
          "FLOAT",
          {
            "forceInput": true
          }
        ],
        "string_value": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": [
      "signal_opt"
    ],
    "name": "ImpactSetWidgetValue",
    "display_name": "Set Widget Value",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactNodeSetMuteState": {
    "input": {
      "required": {
        "signal": [
          "*"
        ],
        "node_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "set_state": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "active",
            "label_off": "mute"
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": [
      "signal_opt"
    ],
    "name": "ImpactNodeSetMuteState",
    "display_name": "Set Mute State",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactControlBridge": {
    "input": {
      "required": {
        "value": [
          "*"
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Active",
            "label_off": "Mute/Bypass"
          }
        ],
        "behavior": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Mute",
            "label_off": "Bypass"
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": [
      "value"
    ],
    "name": "ImpactControlBridge",
    "display_name": "Control Bridge",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactIsNotEmptySEGS": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "ImpactIsNotEmptySEGS",
    "display_name": "SEGS isn't Empty",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactSleep": {
    "input": {
      "required": {
        "signal": [
          "*"
        ],
        "seconds": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 3600
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": [
      "signal_opt"
    ],
    "name": "ImpactSleep",
    "display_name": "Sleep",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactRemoteBoolean": {
    "input": {
      "required": {
        "node_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "widget_name": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "value": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "True",
            "label_off": "False"
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ImpactRemoteBoolean",
    "display_name": "Remote Boolean (on prompt)",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactRemoteInt": {
    "input": {
      "required": {
        "node_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "widget_name": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "value": [
          "INT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ImpactRemoteInt",
    "display_name": "Remote Int (on prompt)",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactHFTransformersClassifierProvider": {
    "input": {
      "required": {
        "preset_repo_id": [
          [
            "rizvandwiki/gender-classification-2",
            "NTQAI/pedestrian_gender_recognition",
            "Leilab/gender_class",
            "ProjectPersonal/GenderClassifier",
            "crangana/trained-gender",
            "cledoux42/GenderNew_v002",
            "ivensamdh/genderage2",
            "Manual repo id"
          ]
        ],
        "manual_repo_id": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "device_mode": [
          [
            "AUTO",
            "Prefer GPU",
            "CPU"
          ]
        ]
      }
    },
    "output": [
      "TRANSFORMERS_CLASSIFIER"
    ],
    "output_is_list": [false],
    "output_name": [
      "TRANSFORMERS_CLASSIFIER"
    ],
    "name": "ImpactHFTransformersClassifierProvider",
    "display_name": "HF Transformers Classifier Provider",
    "description": "",
    "category": "ImpactPack/HuggingFace",
    "output_node": false
  },
  "ImpactSEGSClassify": {
    "input": {
      "required": {
        "classifier": [
          "TRANSFORMERS_CLASSIFIER"
        ],
        "segs": [
          "SEGS"
        ],
        "preset_expr": [
          [
            "#Female \u003E #Male",
            "#Female \u003C #Male",
            "female \u003E 0.5",
            "male \u003E 0.5",
            "Age16to25 \u003E 0.1",
            "Age50to69 \u003E 0.1",
            "Manual expr"
          ]
        ],
        "manual_expr": [
          "STRING",
          {
            "multiline": false
          }
        ]
      },
      "optional": {
        "ref_image_opt": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "SEGS",
      "SEGS"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "filtered_SEGS",
      "remained_SEGS"
    ],
    "name": "ImpactSEGSClassify",
    "display_name": "SEGS Classify",
    "description": "",
    "category": "ImpactPack/HuggingFace",
    "output_node": false
  },
  "ImpactSchedulerAdapter": {
    "input": {
      "required": {
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ],
          {
            "defaultInput": true
          }
        ],
        "ays_scheduler": [
          [
            "None",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ]
      }
    },
    "output": [
      [
        "normal",
        "karras",
        "exponential",
        "sgm_uniform",
        "simple",
        "ddim_uniform",
        "AYS SDXL",
        "AYS SD1",
        "AYS SVD"
      ]
    ],
    "output_is_list": [false],
    "output_name": [
      "scheduler"
    ],
    "name": "ImpactSchedulerAdapter",
    "display_name": "Impact Scheduler Adapter",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "UltralyticsDetectorProvider": {
    "input": {
      "required": {
        "model_name": [
          [
            "bbox/face_yolov8m.pt",
            "bbox/hand_yolov8s.pt",
            "segm/person_yolov8m-seg.pt"
          ]
        ]
      }
    },
    "output": [
      "BBOX_DETECTOR",
      "SEGM_DETECTOR"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "BBOX_DETECTOR",
      "SEGM_DETECTOR"
    ],
    "name": "UltralyticsDetectorProvider",
    "display_name": "UltralyticsDetectorProvider",
    "description": "",
    "category": "ImpactPack",
    "output_node": false
  },
  "AnimeFace_SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "remove_background_using_abg": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 512,
            "max": 512,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "ABG_CHARACTER_MASK (MASK)"
    ],
    "name": "AnimeFace_SemSegPreprocessor",
    "display_name": "Anime Face Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "AnyLineArtPreprocessor_aux": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "merge_with_lineart": [
          [
            "lineart_standard",
            "lineart_realisitic",
            "lineart_anime",
            "manga_line"
          ],
          {
            "default": "lineart_standard"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 1280,
            "min": 512,
            "max": 16384,
            "step": 8
          }
        ]
      },
      "optional": {
        "lineart_lower_bound": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "lineart_upper_bound": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "object_min_size": [
          "INT",
          {
            "default": 36,
            "min": 1,
            "max": 16384
          }
        ],
        "object_connectivity": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 16384
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "AnyLineArtPreprocessor_aux",
    "display_name": "AnyLine Lineart",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "BinaryPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "bin_threshold": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "BinaryPreprocessor",
    "display_name": "Binary Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "CannyEdgePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "low_threshold": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "high_threshold": [
          "INT",
          {
            "default": 200,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "CannyEdgePreprocessor",
    "display_name": "Canny Edge",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "ColorPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ColorPreprocessor",
    "display_name": "Color Pallete",
    "description": "",
    "category": "ControlNet Preprocessors/T2IAdapter-only",
    "output_node": false
  },
  "DensePosePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "model": [
          [
            "densepose_r50_fpn_dl.torchscript",
            "densepose_r101_fpn_dl.torchscript"
          ],
          {
            "default": "densepose_r50_fpn_dl.torchscript"
          }
        ],
        "cmap": [
          [
            "Viridis (MagicAnimate)",
            "Parula (CivitAI)"
          ],
          {
            "default": "Viridis (MagicAnimate)"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "DensePosePreprocessor",
    "display_name": "DensePose Estimator",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "DepthAnythingPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "ckpt_name": [
          [
            "depth_anything_vitl14.pth",
            "depth_anything_vitb14.pth",
            "depth_anything_vits14.pth"
          ],
          {
            "default": "depth_anything_vitl14.pth"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "DepthAnythingPreprocessor",
    "display_name": "Depth Anything",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "Zoe_DepthAnythingPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "environment": [
          [
            "indoor",
            "outdoor"
          ],
          {
            "default": "indoor"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Zoe_DepthAnythingPreprocessor",
    "display_name": "Zoe Depth Anything",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "DiffusionEdge_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "environment": [
          [
            "indoor",
            "urban",
            "natrual"
          ],
          {
            "default": "indoor"
          }
        ],
        "patch_batch_size": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 16
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "DiffusionEdge_Preprocessor",
    "display_name": "Diffusion Edge (batch size ↑ =\u003E speed ↑, VRAM ↑)",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "DSINE-NormalMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "fov": [
          "FLOAT",
          {
            "min": 0,
            "max": 365,
            "step": 0.05,
            "default": 60
          }
        ],
        "iterations": [
          "INT",
          {
            "min": 1,
            "max": 20,
            "step": 1,
            "default": 5
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "DSINE-NormalMapPreprocessor",
    "display_name": "DSINE Normal Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "DWPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "detect_hand": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "detect_body": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "detect_face": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ],
        "bbox_detector": [
          [
            "yolox_l.torchscript.pt",
            "yolox_l.onnx",
            "yolo_nas_l_fp16.onnx",
            "yolo_nas_m_fp16.onnx",
            "yolo_nas_s_fp16.onnx"
          ],
          {
            "default": "yolox_l.onnx"
          }
        ],
        "pose_estimator": [
          [
            "dw-ll_ucoco_384_bs5.torchscript.pt",
            "dw-ll_ucoco_384.onnx",
            "dw-ll_ucoco.onnx"
          ],
          {
            "default": "dw-ll_ucoco_384_bs5.torchscript.pt"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "name": "DWPreprocessor",
    "display_name": "DWPose Estimator",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "AnimalPosePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "bbox_detector": [
          [
            "yolox_l.torchscript.pt",
            "yolox_l.onnx",
            "yolo_nas_l_fp16.onnx",
            "yolo_nas_m_fp16.onnx",
            "yolo_nas_s_fp16.onnx"
          ],
          {
            "default": "yolox_l.torchscript.pt"
          }
        ],
        "pose_estimator": [
          [
            "rtmpose-m_ap10k_256_bs5.torchscript.pt",
            "rtmpose-m_ap10k_256.onnx"
          ],
          {
            "default": "rtmpose-m_ap10k_256_bs5.torchscript.pt"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "name": "AnimalPosePreprocessor",
    "display_name": "AnimalPose Estimator (AP10K)",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "HEDPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "safe": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "HEDPreprocessor",
    "display_name": "HED Soft-Edge Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "FakeScribblePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "safe": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "FakeScribblePreprocessor",
    "display_name": "Fake Scribble Lines (aka scribble_hed)",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "InpaintPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "InpaintPreprocessor",
    "display_name": "Inpaint Preprocessor",
    "description": "",
    "category": "ControlNet Preprocessors/others",
    "output_node": false
  },
  "LeReS-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "rm_nearest": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.1
          }
        ],
        "rm_background": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.1
          }
        ],
        "boost": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "disable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "LeReS-DepthMapPreprocessor",
    "display_name": "LeReS Depth Map (enable boost for leres++)",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "LineArtPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "coarse": [
          [
            "disable",
            "enable"
          ],
          {
            "default": "disable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "LineArtPreprocessor",
    "display_name": "Realistic Lineart",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "AnimeLineArtPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "AnimeLineArtPreprocessor",
    "display_name": "Anime Lineart",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "LineartStandardPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "guassian_sigma": [
          "FLOAT",
          {
            "default": 6,
            "min": 0,
            "max": 100
          }
        ],
        "intensity_threshold": [
          "INT",
          {
            "default": 8,
            "min": 0,
            "max": 16
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "LineartStandardPreprocessor",
    "display_name": "Standard Lineart",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Manga2Anime_LineArt_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Manga2Anime_LineArt_Preprocessor",
    "display_name": "Manga Lineart (aka lineart_anime_denoise)",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "MediaPipe-FaceMeshPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "max_faces": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 50,
            "step": 1
          }
        ],
        "min_confidence": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.01,
            "max": 1,
            "step": 0.01
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "MediaPipe-FaceMeshPreprocessor",
    "display_name": "MediaPipe Face Mesh",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "MeshGraphormer-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "mask_bbox_padding": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 100
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ],
        "mask_type": [
          [
            "based_on_depth",
            "tight_bboxes",
            "original"
          ],
          {
            "default": "based_on_depth"
          }
        ],
        "mask_expand": [
          "INT",
          {
            "default": 5,
            "min": -16384,
            "max": 16384,
            "step": 1
          }
        ],
        "rand_seed": [
          "INT",
          {
            "default": 88,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "detect_thr": [
          "FLOAT",
          {
            "default": 0.6,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "presence_thr": [
          "FLOAT",
          {
            "default": 0.6,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "INPAINTING_MASK"
    ],
    "name": "MeshGraphormer-DepthMapPreprocessor",
    "display_name": "MeshGraphormer Hand Refiner",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "MeshGraphormer+ImpactDetector-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "bbox_detector": [
          "BBOX_DETECTOR"
        ]
      },
      "optional": {
        "bbox_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "bbox_dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "bbox_crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 10,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 16384,
            "step": 1,
            "default": 10
          }
        ],
        "mask_bbox_padding": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 100
          }
        ],
        "mask_type": [
          [
            "based_on_depth",
            "tight_bboxes",
            "original"
          ],
          {
            "default": "based_on_depth"
          }
        ],
        "mask_expand": [
          "INT",
          {
            "default": 5,
            "min": -16384,
            "max": 16384,
            "step": 1
          }
        ],
        "rand_seed": [
          "INT",
          {
            "default": 88,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "INPAINTING_MASK"
    ],
    "name": "MeshGraphormer+ImpactDetector-DepthMapPreprocessor",
    "display_name": "MeshGraphormer Hand Refiner With External Detector",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "Metric3D-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "backbone": [
          [
            "vit-small",
            "vit-large",
            "vit-giant2"
          ],
          {
            "default": "vit-small"
          }
        ],
        "fx": [
          "INT",
          {
            "default": 1000,
            "min": 1,
            "max": 16384
          }
        ],
        "fy": [
          "INT",
          {
            "default": 1000,
            "min": 1,
            "max": 16384
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Metric3D-DepthMapPreprocessor",
    "display_name": "Metric3D Depth Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "Metric3D-NormalMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "backbone": [
          [
            "vit-small",
            "vit-large",
            "vit-giant2"
          ],
          {
            "default": "vit-small"
          }
        ],
        "fx": [
          "INT",
          {
            "default": 1000,
            "min": 1,
            "max": 16384
          }
        ],
        "fy": [
          "INT",
          {
            "default": 1000,
            "min": 1,
            "max": 16384
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Metric3D-NormalMapPreprocessor",
    "display_name": "Metric3D Normal Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "MiDaS-NormalMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "a": [
          "FLOAT",
          {
            "default": 6.28318530717959,
            "min": 0,
            "max": 15.707963267949,
            "step": 0.05
          }
        ],
        "bg_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "MiDaS-NormalMapPreprocessor",
    "display_name": "MiDaS Normal Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "MiDaS-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "a": [
          "FLOAT",
          {
            "default": 6.28318530717959,
            "min": 0,
            "max": 15.707963267949,
            "step": 0.05
          }
        ],
        "bg_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "MiDaS-DepthMapPreprocessor",
    "display_name": "MiDaS Depth Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "M-LSDPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "score_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.01,
            "max": 2,
            "step": 0.01
          }
        ],
        "dist_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.01,
            "max": 20,
            "step": 0.01
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "M-LSDPreprocessor",
    "display_name": "M-LSD Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "BAE-NormalMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "BAE-NormalMapPreprocessor",
    "display_name": "BAE Normal Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "OneFormer-COCO-SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "OneFormer-COCO-SemSegPreprocessor",
    "display_name": "OneFormer COCO Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "OneFormer-ADE20K-SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "OneFormer-ADE20K-SemSegPreprocessor",
    "display_name": "OneFormer ADE20K Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "OpenposePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "detect_hand": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "detect_body": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "detect_face": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "name": "OpenposePreprocessor",
    "display_name": "OpenPose Pose",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "PiDiNetPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "safe": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "PiDiNetPreprocessor",
    "display_name": "PiDiNet Soft-Edge Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "SavePoseKpsAsJsonFile": {
    "input": {
      "required": {
        "pose_kps": [
          "POSE_KEYPOINT"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "PoseKeypoint"
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SavePoseKpsAsJsonFile",
    "display_name": "Save Pose Keypoints",
    "description": "",
    "category": "ControlNet Preprocessors/Pose Keypoint Postprocess",
    "output_node": true
  },
  "FacialPartColoringFromPoseKps": {
    "input": {
      "required": {
        "pose_kps": [
          "POSE_KEYPOINT"
        ],
        "mode": [
          [
            "point",
            "polygon"
          ],
          {
            "default": "polygon"
          }
        ],
        "skin": [
          "STRING",
          {
            "default": "rgb(0, 153, 255)",
            "multiline": false
          }
        ],
        "left_eye": [
          "STRING",
          {
            "default": "rgb(0, 204, 153)",
            "multiline": false
          }
        ],
        "right_eye": [
          "STRING",
          {
            "default": "rgb(255, 153, 0)",
            "multiline": false
          }
        ],
        "nose": [
          "STRING",
          {
            "default": "rgb(255, 102, 255)",
            "multiline": false
          }
        ],
        "upper_lip": [
          "STRING",
          {
            "default": "rgb(102, 0, 51)",
            "multiline": false
          }
        ],
        "inner_mouth": [
          "STRING",
          {
            "default": "rgb(255, 204, 255)",
            "multiline": false
          }
        ],
        "lower_lip": [
          "STRING",
          {
            "default": "rgb(255, 0, 102)",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "FacialPartColoringFromPoseKps",
    "display_name": "Colorize Facial Parts from PoseKPS",
    "description": "",
    "category": "ControlNet Preprocessors/Pose Keypoint Postprocess",
    "output_node": false
  },
  "UpperBodyTrackingFromPoseKps": {
    "input": {
      "required": {
        "pose_kps": [
          "POSE_KEYPOINT"
        ],
        "id_include": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "Head_width_height": [
          "STRING",
          {
            "default": "256, 256",
            "multiline": false
          }
        ],
        "Neck_width_height": [
          "STRING",
          {
            "default": "100, 100",
            "multiline": false
          }
        ],
        "Shoulder_width_height": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "Torso_width_height": [
          "STRING",
          {
            "default": "350, 450",
            "multiline": false
          }
        ],
        "RArm_width_height": [
          "STRING",
          {
            "default": "128, 256",
            "multiline": false
          }
        ],
        "RForearm_width_height": [
          "STRING",
          {
            "default": "128, 256",
            "multiline": false
          }
        ],
        "LArm_width_height": [
          "STRING",
          {
            "default": "128, 256",
            "multiline": false
          }
        ],
        "LForearm_width_height": [
          "STRING",
          {
            "default": "128, 256",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "TRACKING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "tracking",
      "prompt"
    ],
    "name": "UpperBodyTrackingFromPoseKps",
    "display_name": "Upper Body Tracking From PoseKps (InstanceDiffusion)",
    "description": "",
    "category": "ControlNet Preprocessors/Pose Keypoint Postprocess",
    "output_node": false
  },
  "ImageLuminanceDetector": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "gamma_correction": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 2,
            "step": 0.001
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageLuminanceDetector",
    "display_name": "Image Luminance",
    "description": "",
    "category": "ControlNet Preprocessors/Recolor",
    "output_node": false
  },
  "ImageIntensityDetector": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "gamma_correction": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 2,
            "step": 0.001
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageIntensityDetector",
    "display_name": "Image Intensity",
    "description": "",
    "category": "ControlNet Preprocessors/Recolor",
    "output_node": false
  },
  "ScribblePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ScribblePreprocessor",
    "display_name": "Scribble Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Scribble_XDoG_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "threshold": [
          "INT",
          {
            "default": 32,
            "min": 1,
            "max": 64,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Scribble_XDoG_Preprocessor",
    "display_name": "Scribble XDoG Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Scribble_PiDiNet_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "safe": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Scribble_PiDiNet_Preprocessor",
    "display_name": "Scribble PiDiNet Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "SAMPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "SAMPreprocessor",
    "display_name": "SAM Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/others",
    "output_node": false
  },
  "ShufflePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ShufflePreprocessor",
    "display_name": "Content Shuffle",
    "description": "",
    "category": "ControlNet Preprocessors/T2IAdapter-only",
    "output_node": false
  },
  "TEEDPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "safe_steps": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "max": 10
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "TEEDPreprocessor",
    "display_name": "TEEDPreprocessor",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "TilePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "pyrUp_iters": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "TilePreprocessor",
    "display_name": "Tile",
    "description": "",
    "category": "ControlNet Preprocessors/tile",
    "output_node": false
  },
  "TTPlanet_TileGF_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "scale_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 1,
            "max": 8,
            "step": 0.05
          }
        ],
        "blur_strength": [
          "FLOAT",
          {
            "default": 2,
            "min": 1,
            "max": 10,
            "step": 0.1
          }
        ],
        "radius": [
          "INT",
          {
            "default": 7,
            "min": 1,
            "max": 20,
            "step": 1
          }
        ],
        "eps": [
          "FLOAT",
          {
            "default": 0.01,
            "min": 0.001,
            "max": 0.1,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "TTPlanet_TileGF_Preprocessor",
    "display_name": "TTPlanet Tile GuidedFilter",
    "description": "",
    "category": "ControlNet Preprocessors/tile",
    "output_node": false
  },
  "TTPlanet_TileSimple_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "scale_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 1,
            "max": 8,
            "step": 0.05
          }
        ],
        "blur_strength": [
          "FLOAT",
          {
            "default": 2,
            "min": 1,
            "max": 10,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "TTPlanet_TileSimple_Preprocessor",
    "display_name": "TTPlanet Tile Simple",
    "description": "",
    "category": "ControlNet Preprocessors/tile",
    "output_node": false
  },
  "UniFormer-SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "UniFormer-SemSegPreprocessor",
    "display_name": "UniFormer Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "SemSegPreprocessor",
    "display_name": "Semantic Segmentor (legacy, alias for UniFormer)",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "Unimatch_OptFlowPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "ckpt_name": [
          [
            "gmflow-scale1-mixdata.pth",
            "gmflow-scale2-mixdata.pth",
            "gmflow-scale2-regrefine6-mixdata.pth"
          ],
          {
            "default": "gmflow-scale2-regrefine6-mixdata.pth"
          }
        ],
        "backward_flow": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "bidirectional_flow": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "OPTICAL_FLOW",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "OPTICAL_FLOW",
      "PREVIEW_IMAGE"
    ],
    "name": "Unimatch_OptFlowPreprocessor",
    "display_name": "Unimatch Optical Flow",
    "description": "",
    "category": "ControlNet Preprocessors/Optical Flow",
    "output_node": false
  },
  "MaskOptFlow": {
    "input": {
      "required": {
        "optical_flow": [
          "OPTICAL_FLOW"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "OPTICAL_FLOW",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "OPTICAL_FLOW",
      "PREVIEW_IMAGE"
    ],
    "name": "MaskOptFlow",
    "display_name": "Mask Optical Flow (DragNUWA)",
    "description": "",
    "category": "ControlNet Preprocessors/Optical Flow",
    "output_node": false
  },
  "Zoe-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Zoe-DepthMapPreprocessor",
    "display_name": "Zoe Depth Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "AIO_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "preprocessor": [
          [
            "none",
            "AnimeFace_SemSegPreprocessor",
            "AnyLineArtPreprocessor_aux",
            "BinaryPreprocessor",
            "CannyEdgePreprocessor",
            "ColorPreprocessor",
            "DensePosePreprocessor",
            "DepthAnythingPreprocessor",
            "Zoe_DepthAnythingPreprocessor",
            "DiffusionEdge_Preprocessor",
            "DSINE-NormalMapPreprocessor",
            "DWPreprocessor",
            "AnimalPosePreprocessor",
            "HEDPreprocessor",
            "FakeScribblePreprocessor",
            "LeReS-DepthMapPreprocessor",
            "LineArtPreprocessor",
            "AnimeLineArtPreprocessor",
            "LineartStandardPreprocessor",
            "Manga2Anime_LineArt_Preprocessor",
            "MediaPipe-FaceMeshPreprocessor",
            "MeshGraphormer-DepthMapPreprocessor",
            "MeshGraphormer+ImpactDetector-DepthMapPreprocessor",
            "Metric3D-DepthMapPreprocessor",
            "Metric3D-NormalMapPreprocessor",
            "MiDaS-NormalMapPreprocessor",
            "MiDaS-DepthMapPreprocessor",
            "M-LSDPreprocessor",
            "BAE-NormalMapPreprocessor",
            "OneFormer-COCO-SemSegPreprocessor",
            "OneFormer-ADE20K-SemSegPreprocessor",
            "OpenposePreprocessor",
            "PiDiNetPreprocessor",
            "SavePoseKpsAsJsonFile",
            "FacialPartColoringFromPoseKps",
            "UpperBodyTrackingFromPoseKps",
            "ImageLuminanceDetector",
            "ImageIntensityDetector",
            "ScribblePreprocessor",
            "Scribble_XDoG_Preprocessor",
            "Scribble_PiDiNet_Preprocessor",
            "SAMPreprocessor",
            "ShufflePreprocessor",
            "TEEDPreprocessor",
            "TilePreprocessor",
            "TTPlanet_TileGF_Preprocessor",
            "TTPlanet_TileSimple_Preprocessor",
            "UniFormer-SemSegPreprocessor",
            "SemSegPreprocessor",
            "Unimatch_OptFlowPreprocessor",
            "MaskOptFlow",
            "Zoe-DepthMapPreprocessor"
          ],
          {
            "default": "none"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "AIO_Preprocessor",
    "display_name": "AIO Aux Preprocessor",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "ControlNetPreprocessorSelector": {
    "input": {
      "required": {
        "preprocessor": [
          [
            "none",
            "AnimeFace_SemSegPreprocessor",
            "AnyLineArtPreprocessor_aux",
            "BinaryPreprocessor",
            "CannyEdgePreprocessor",
            "ColorPreprocessor",
            "DensePosePreprocessor",
            "DepthAnythingPreprocessor",
            "Zoe_DepthAnythingPreprocessor",
            "DiffusionEdge_Preprocessor",
            "DSINE-NormalMapPreprocessor",
            "DWPreprocessor",
            "AnimalPosePreprocessor",
            "HEDPreprocessor",
            "FakeScribblePreprocessor",
            "LeReS-DepthMapPreprocessor",
            "LineArtPreprocessor",
            "AnimeLineArtPreprocessor",
            "LineartStandardPreprocessor",
            "Manga2Anime_LineArt_Preprocessor",
            "MediaPipe-FaceMeshPreprocessor",
            "MeshGraphormer-DepthMapPreprocessor",
            "MeshGraphormer+ImpactDetector-DepthMapPreprocessor",
            "Metric3D-DepthMapPreprocessor",
            "Metric3D-NormalMapPreprocessor",
            "MiDaS-NormalMapPreprocessor",
            "MiDaS-DepthMapPreprocessor",
            "M-LSDPreprocessor",
            "BAE-NormalMapPreprocessor",
            "OneFormer-COCO-SemSegPreprocessor",
            "OneFormer-ADE20K-SemSegPreprocessor",
            "OpenposePreprocessor",
            "PiDiNetPreprocessor",
            "SavePoseKpsAsJsonFile",
            "FacialPartColoringFromPoseKps",
            "UpperBodyTrackingFromPoseKps",
            "ImageLuminanceDetector",
            "ImageIntensityDetector",
            "ScribblePreprocessor",
            "Scribble_XDoG_Preprocessor",
            "Scribble_PiDiNet_Preprocessor",
            "SAMPreprocessor",
            "ShufflePreprocessor",
            "TEEDPreprocessor",
            "TilePreprocessor",
            "TTPlanet_TileGF_Preprocessor",
            "TTPlanet_TileSimple_Preprocessor",
            "UniFormer-SemSegPreprocessor",
            "SemSegPreprocessor",
            "Unimatch_OptFlowPreprocessor",
            "MaskOptFlow",
            "Zoe-DepthMapPreprocessor"
          ]
        ]
      }
    },
    "output": [
      [
        "none",
        "AnimeFace_SemSegPreprocessor",
        "AnyLineArtPreprocessor_aux",
        "BinaryPreprocessor",
        "CannyEdgePreprocessor",
        "ColorPreprocessor",
        "DensePosePreprocessor",
        "DepthAnythingPreprocessor",
        "Zoe_DepthAnythingPreprocessor",
        "DiffusionEdge_Preprocessor",
        "DSINE-NormalMapPreprocessor",
        "DWPreprocessor",
        "AnimalPosePreprocessor",
        "HEDPreprocessor",
        "FakeScribblePreprocessor",
        "LeReS-DepthMapPreprocessor",
        "LineArtPreprocessor",
        "AnimeLineArtPreprocessor",
        "LineartStandardPreprocessor",
        "Manga2Anime_LineArt_Preprocessor",
        "MediaPipe-FaceMeshPreprocessor",
        "MeshGraphormer-DepthMapPreprocessor",
        "MeshGraphormer+ImpactDetector-DepthMapPreprocessor",
        "Metric3D-DepthMapPreprocessor",
        "Metric3D-NormalMapPreprocessor",
        "MiDaS-NormalMapPreprocessor",
        "MiDaS-DepthMapPreprocessor",
        "M-LSDPreprocessor",
        "BAE-NormalMapPreprocessor",
        "OneFormer-COCO-SemSegPreprocessor",
        "OneFormer-ADE20K-SemSegPreprocessor",
        "OpenposePreprocessor",
        "PiDiNetPreprocessor",
        "SavePoseKpsAsJsonFile",
        "FacialPartColoringFromPoseKps",
        "UpperBodyTrackingFromPoseKps",
        "ImageLuminanceDetector",
        "ImageIntensityDetector",
        "ScribblePreprocessor",
        "Scribble_XDoG_Preprocessor",
        "Scribble_PiDiNet_Preprocessor",
        "SAMPreprocessor",
        "ShufflePreprocessor",
        "TEEDPreprocessor",
        "TilePreprocessor",
        "TTPlanet_TileGF_Preprocessor",
        "TTPlanet_TileSimple_Preprocessor",
        "UniFormer-SemSegPreprocessor",
        "SemSegPreprocessor",
        "Unimatch_OptFlowPreprocessor",
        "MaskOptFlow",
        "Zoe-DepthMapPreprocessor"
      ]
    ],
    "output_is_list": [false],
    "output_name": [
      "preprocessor"
    ],
    "name": "ControlNetPreprocessorSelector",
    "display_name": "Preprocessor Selector",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "PixelPerfectResolution": {
    "input": {
      "required": {
        "original_image": [
          "IMAGE"
        ],
        "image_gen_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "image_gen_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "resize_mode": [
          [
            "Just Resize",
            "Crop and Resize",
            "Resize and Fill"
          ],
          {
            "default": "Just Resize"
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "RESOLUTION (INT)"
    ],
    "name": "PixelPerfectResolution",
    "display_name": "Pixel Perfect Resolution",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "ImageGenResolutionFromImage": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE_GEN_WIDTH (INT)",
      "IMAGE_GEN_HEIGHT (INT)"
    ],
    "name": "ImageGenResolutionFromImage",
    "display_name": "Generation Resolution From Image",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "ImageGenResolutionFromLatent": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE_GEN_WIDTH (INT)",
      "IMAGE_GEN_HEIGHT (INT)"
    ],
    "name": "ImageGenResolutionFromLatent",
    "display_name": "Generation Resolution From Latent",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "HintImageEnchance": {
    "input": {
      "required": {
        "hint_image": [
          "IMAGE"
        ],
        "image_gen_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "image_gen_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "resize_mode": [
          [
            "Just Resize",
            "Crop and Resize",
            "Resize and Fill"
          ],
          {
            "default": "Just Resize"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "HintImageEnchance",
    "display_name": "Enchance And Resize Hint Images",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "KSampler (Efficient)": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 7,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "preview_method": [
          [
            "auto",
            "latent2rgb",
            "taesd",
            "vae_decoded_only",
            "none"
          ]
        ],
        "vae_decode": [
          [
            "true",
            "true (tiled)",
            "false"
          ]
        ]
      },
      "optional": {
        "optional_vae": [
          "VAE"
        ],
        "script": [
          "SCRIPT"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "MODEL",
      "CONDITIONING+",
      "CONDITIONING-",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "name": "KSampler (Efficient)",
    "display_name": "KSampler (Efficient)",
    "description": "",
    "category": "Efficiency Nodes/Sampling",
    "output_node": true
  },
  "KSampler Adv. (Efficient)": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "add_noise": [
          [
            "enable",
            "disable"
          ]
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 7,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "return_with_leftover_noise": [
          [
            "disable",
            "enable"
          ]
        ],
        "preview_method": [
          [
            "auto",
            "latent2rgb",
            "taesd",
            "none"
          ]
        ],
        "vae_decode": [
          [
            "true",
            "true (tiled)",
            "false",
            "output only",
            "output only (tiled)"
          ]
        ]
      },
      "optional": {
        "optional_vae": [
          "VAE"
        ],
        "script": [
          "SCRIPT"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "MODEL",
      "CONDITIONING+",
      "CONDITIONING-",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "name": "KSampler Adv. (Efficient)",
    "display_name": "KSampler Adv. (Efficient)",
    "description": "",
    "category": "Efficiency Nodes/Sampling",
    "output_node": true
  },
  "KSampler SDXL (Eff.)": {
    "input": {
      "required": {
        "sdxl_tuple": [
          "SDXL_TUPLE"
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 7,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "latent_image": [
          "LATENT"
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "refine_at_step": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "max": 10000
          }
        ],
        "preview_method": [
          [
            "auto",
            "latent2rgb",
            "taesd",
            "none"
          ]
        ],
        "vae_decode": [
          [
            "true",
            "true (tiled)",
            "false",
            "output only",
            "output only (tiled)"
          ]
        ]
      },
      "optional": {
        "optional_vae": [
          "VAE"
        ],
        "script": [
          "SCRIPT"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "SDXL_TUPLE",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "SDXL_TUPLE",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "name": "KSampler SDXL (Eff.)",
    "display_name": "KSampler SDXL (Eff.)",
    "description": "",
    "category": "Efficiency Nodes/Sampling",
    "output_node": true
  },
  "Efficient Loader": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "vae_name": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "clip_skip": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "lora_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_model_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_clip_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "positive": [
          "STRING",
          {
            "default": "CLIP_POSITIVE",
            "multiline": true
          }
        ],
        "negative": [
          "STRING",
          {
            "default": "CLIP_NEGATIVE",
            "multiline": true
          }
        ],
        "token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "weight_interpretation": [
          [
            "comfy",
            "A1111",
            "compel",
            "comfy++",
            "down_weight"
          ]
        ],
        "empty_latent_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ],
        "empty_latent_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 262144
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ],
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "CLIP",
      "DEPENDENCIES"
    ],
    "output_is_list": [false, false, false, false, false, false, false],
    "output_name": [
      "MODEL",
      "CONDITIONING+",
      "CONDITIONING-",
      "LATENT",
      "VAE",
      "CLIP",
      "DEPENDENCIES"
    ],
    "name": "Efficient Loader",
    "display_name": "Efficient Loader",
    "description": "",
    "category": "Efficiency Nodes/Loaders",
    "output_node": false
  },
  "Eff. Loader SDXL": {
    "input": {
      "required": {
        "base_ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "base_clip_skip": [
          "INT",
          {
            "default": -2,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "refiner_ckpt_name": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "refiner_clip_skip": [
          "INT",
          {
            "default": -2,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "positive_ascore": [
          "FLOAT",
          {
            "default": 6,
            "min": 0,
            "max": 1000,
            "step": 0.01
          }
        ],
        "negative_ascore": [
          "FLOAT",
          {
            "default": 2,
            "min": 0,
            "max": 1000,
            "step": 0.01
          }
        ],
        "vae_name": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "positive": [
          "STRING",
          {
            "default": "CLIP_POSITIVE",
            "multiline": true
          }
        ],
        "negative": [
          "STRING",
          {
            "default": "CLIP_NEGATIVE",
            "multiline": true
          }
        ],
        "token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "weight_interpretation": [
          [
            "comfy",
            "A1111",
            "compel",
            "comfy++",
            "down_weight"
          ]
        ],
        "empty_latent_width": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ],
        "empty_latent_height": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ],
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "SDXL_TUPLE",
      "LATENT",
      "VAE",
      "DEPENDENCIES"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "SDXL_TUPLE",
      "LATENT",
      "VAE",
      "DEPENDENCIES"
    ],
    "name": "Eff. Loader SDXL",
    "display_name": "Eff. Loader SDXL",
    "description": "",
    "category": "Efficiency Nodes/Loaders",
    "output_node": false
  },
  "LoRA Stacker": {
    "input": {
      "required": {
        "input_mode": [
          [
            "simple",
            "advanced"
          ]
        ],
        "lora_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50,
            "step": 1
          }
        ],
        "lora_name_1": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_1": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_1": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_1": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_2": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_2": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_2": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_2": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_3": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_3": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_3": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_3": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_4": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_4": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_4": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_4": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_5": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_5": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_5": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_5": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_6": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_6": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_6": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_6": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_7": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_7": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_7": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_7": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_8": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_8": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_8": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_8": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_9": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_9": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_9": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_9": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_10": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_10": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_10": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_10": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_11": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_11": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_11": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_11": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_12": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_12": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_12": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_12": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_13": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_13": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_13": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_13": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_14": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_14": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_14": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_14": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_15": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_15": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_15": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_15": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_16": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_16": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_16": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_16": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_17": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_17": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_17": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_17": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_18": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_18": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_18": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_18": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_19": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_19": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_19": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_19": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_20": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_20": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_20": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_20": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_21": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_21": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_21": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_21": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_22": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_22": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_22": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_22": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_23": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_23": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_23": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_23": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_24": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_24": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_24": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_24": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_25": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_25": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_25": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_25": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_26": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_26": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_26": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_26": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_27": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_27": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_27": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_27": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_28": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_28": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_28": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_28": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_29": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_29": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_29": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_29": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_30": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_30": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_30": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_30": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_31": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_31": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_31": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_31": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_32": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_32": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_32": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_32": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_33": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_33": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_33": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_33": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_34": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_34": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_34": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_34": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_35": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_35": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_35": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_35": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_36": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_36": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_36": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_36": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_37": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_37": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_37": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_37": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_38": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_38": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_38": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_38": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_39": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_39": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_39": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_39": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_40": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_40": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_40": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_40": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_41": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_41": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_41": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_41": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_42": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_42": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_42": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_42": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_43": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_43": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_43": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_43": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_44": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_44": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_44": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_44": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_45": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_45": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_45": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_45": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_46": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_46": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_46": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_46": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_47": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_47": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_47": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_47": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_48": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_48": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_48": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_48": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_49": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_wt_49": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_49": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_49": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "LORA_STACK"
    ],
    "output_is_list": [false],
    "output_name": [
      "LORA_STACK"
    ],
    "name": "LoRA Stacker",
    "display_name": "LoRA Stacker",
    "description": "",
    "category": "Efficiency Nodes/Stackers",
    "output_node": false
  },
  "Control Net Stacker": {
    "input": {
      "required": {
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ]
      }
    },
    "output": [
      "CONTROL_NET_STACK"
    ],
    "output_is_list": [false],
    "output_name": [
      "CNET_STACK"
    ],
    "name": "Control Net Stacker",
    "display_name": "Control Net Stacker",
    "description": "",
    "category": "Efficiency Nodes/Stackers",
    "output_node": false
  },
  "Apply ControlNet Stack": {
    "input": {
      "required": {
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ]
      },
      "optional": {
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CONDITIONING+",
      "CONDITIONING-"
    ],
    "name": "Apply ControlNet Stack",
    "display_name": "Apply ControlNet Stack",
    "description": "",
    "category": "Efficiency Nodes/Stackers",
    "output_node": false
  },
  "Unpack SDXL Tuple": {
    "input": {
      "required": {
        "sdxl_tuple": [
          "SDXL_TUPLE"
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "CONDITIONING",
      "CONDITIONING",
      "MODEL",
      "CLIP",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false],
    "output_name": [
      "BASE_MODEL",
      "BASE_CLIP",
      "BASE_CONDITIONING+",
      "BASE_CONDITIONING-",
      "REFINER_MODEL",
      "REFINER_CLIP",
      "REFINER_CONDITIONING+",
      "REFINER_CONDITIONING-"
    ],
    "name": "Unpack SDXL Tuple",
    "display_name": "Unpack SDXL Tuple",
    "description": "",
    "category": "Efficiency Nodes/Misc",
    "output_node": false
  },
  "Pack SDXL Tuple": {
    "input": {
      "required": {
        "base_model": [
          "MODEL"
        ],
        "base_clip": [
          "CLIP"
        ],
        "base_positive": [
          "CONDITIONING"
        ],
        "base_negative": [
          "CONDITIONING"
        ],
        "refiner_model": [
          "MODEL"
        ],
        "refiner_clip": [
          "CLIP"
        ],
        "refiner_positive": [
          "CONDITIONING"
        ],
        "refiner_negative": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "SDXL_TUPLE"
    ],
    "output_is_list": [false],
    "output_name": [
      "SDXL_TUPLE"
    ],
    "name": "Pack SDXL Tuple",
    "display_name": "Pack SDXL Tuple",
    "description": "",
    "category": "Efficiency Nodes/Misc",
    "output_node": false
  },
  "XY Plot": {
    "input": {
      "required": {
        "grid_spacing": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 500,
            "step": 5
          }
        ],
        "XY_flip": [
          [
            "False",
            "True"
          ]
        ],
        "Y_label_orientation": [
          [
            "Horizontal",
            "Vertical"
          ]
        ],
        "cache_models": [
          [
            "True",
            "False"
          ]
        ],
        "ksampler_output_image": [
          [
            "Images",
            "Plot"
          ]
        ]
      },
      "optional": {
        "dependencies": [
          "DEPENDENCIES"
        ],
        "X": [
          "XY"
        ],
        "Y": [
          "XY"
        ]
      },
      "hidden": {
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "SCRIPT"
    ],
    "output_is_list": [false],
    "output_name": [
      "SCRIPT"
    ],
    "name": "XY Plot",
    "display_name": "XY Plot",
    "description": "",
    "category": "Efficiency Nodes/Scripts",
    "output_node": false
  },
  "XY Input: Seeds++ Batch": {
    "input": {
      "required": {
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Seeds++ Batch",
    "display_name": "XY Input: Seeds++ Batch",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Add/Return Noise": {
    "input": {
      "required": {
        "XY_type": [
          [
            "add_noise",
            "return_with_leftover_noise"
          ]
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Add/Return Noise",
    "display_name": "XY Input: Add/Return Noise",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Steps": {
    "input": {
      "required": {
        "target_parameter": [
          [
            "steps",
            "start_at_step",
            "end_at_step",
            "refine_at_step"
          ]
        ],
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_step": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 10000
          }
        ],
        "last_step": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "first_start_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "last_start_step": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 10000
          }
        ],
        "first_end_step": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 10000
          }
        ],
        "last_end_step": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 10000
          }
        ],
        "first_refine_step": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 10000
          }
        ],
        "last_refine_step": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Steps",
    "display_name": "XY Input: Steps",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: CFG Scale": {
    "input": {
      "required": {
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_cfg": [
          "FLOAT",
          {
            "default": 7,
            "min": 0,
            "max": 100
          }
        ],
        "last_cfg": [
          "FLOAT",
          {
            "default": 9,
            "min": 0,
            "max": 100
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: CFG Scale",
    "display_name": "XY Input: CFG Scale",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Sampler/Scheduler": {
    "input": {
      "required": {
        "target_parameter": [
          [
            "sampler",
            "scheduler",
            "sampler & scheduler"
          ]
        ],
        "input_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50,
            "step": 1
          }
        ],
        "sampler_1": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_1": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_2": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_2": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_3": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_3": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_4": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_4": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_5": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_5": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_6": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_6": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_7": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_7": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_8": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_8": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_9": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_9": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_10": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_10": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_11": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_11": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_12": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_12": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_13": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_13": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_14": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_14": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_15": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_15": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_16": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_16": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_17": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_17": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_18": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_18": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_19": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_19": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_20": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_20": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_21": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_21": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_22": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_22": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_23": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_23": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_24": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_24": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_25": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_25": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_26": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_26": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_27": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_27": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_28": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_28": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_29": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_29": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_30": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_30": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_31": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_31": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_32": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_32": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_33": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_33": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_34": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_34": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_35": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_35": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_36": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_36": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_37": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_37": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_38": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_38": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_39": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_39": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_40": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_40": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_41": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_41": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_42": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_42": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_43": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_43": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_44": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_44": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_45": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_45": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_46": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_46": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_47": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_47": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_48": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_48": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_49": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_49": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_50": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_50": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Sampler/Scheduler",
    "display_name": "XY Input: Sampler/Scheduler",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Denoise": {
    "input": {
      "required": {
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_denoise": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "last_denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Denoise",
    "display_name": "XY Input: Denoise",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: VAE": {
    "input": {
      "required": {
        "input_mode": [
          [
            "VAE Names",
            "VAE Batch"
          ]
        ],
        "batch_path": [
          "STRING",
          {
            "default": "/example_folder",
            "multiline": false
          }
        ],
        "subdirectories": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "batch_sort": [
          [
            "ascending",
            "descending"
          ]
        ],
        "batch_max": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "max": 50,
            "step": 1
          }
        ],
        "vae_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50,
            "step": 1
          }
        ],
        "vae_name_1": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_2": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_3": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_4": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_5": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_6": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_7": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_8": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_9": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_10": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_11": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_12": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_13": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_14": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_15": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_16": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_17": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_18": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_19": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_20": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_21": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_22": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_23": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_24": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_25": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_26": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_27": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_28": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_29": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_30": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_31": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_32": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_33": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_34": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_35": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_36": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_37": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_38": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_39": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_40": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_41": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_42": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_43": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_44": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_45": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_46": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_47": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_48": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_49": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "vae_name_50": [
          [
            "None",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: VAE",
    "display_name": "XY Input: VAE",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Prompt S/R": {
    "input": {
      "required": {
        "target_prompt": [
          [
            "positive",
            "negative"
          ]
        ],
        "search_txt": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 49
          }
        ],
        "replace_1": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_2": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_3": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_4": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_5": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_6": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_7": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_8": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_9": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_10": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_11": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_12": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_13": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_14": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_15": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_16": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_17": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_18": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_19": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_20": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_21": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_22": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_23": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_24": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_25": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_26": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_27": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_28": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_29": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_30": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_31": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_32": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_33": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_34": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_35": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_36": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_37": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_38": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_39": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_40": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_41": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_42": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_43": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_44": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_45": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_46": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_47": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_48": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_49": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Prompt S/R",
    "display_name": "XY Input: Prompt S/R",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Aesthetic Score": {
    "input": {
      "required": {
        "target_ascore": [
          [
            "positive",
            "negative"
          ]
        ],
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_ascore": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 0.01
          }
        ],
        "last_ascore": [
          "FLOAT",
          {
            "default": 10,
            "min": 0,
            "max": 1000,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Aesthetic Score",
    "display_name": "XY Input: Aesthetic Score",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Refiner On/Off": {
    "input": {
      "required": {
        "refine_at_percent": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Refiner On/Off",
    "display_name": "XY Input: Refiner On/Off",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Checkpoint": {
    "input": {
      "required": {
        "target_ckpt": [
          [
            "Base",
            "Refiner"
          ]
        ],
        "input_mode": [
          [
            "Ckpt Names",
            "Ckpt Names+ClipSkip",
            "Ckpt Names+ClipSkip+VAE",
            "Checkpoint Batch"
          ]
        ],
        "batch_path": [
          "STRING",
          {
            "default": "/example_folder",
            "multiline": false
          }
        ],
        "subdirectories": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "batch_sort": [
          [
            "ascending",
            "descending"
          ]
        ],
        "batch_max": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "max": 50,
            "step": 1
          }
        ],
        "ckpt_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50,
            "step": 1
          }
        ],
        "ckpt_name_1": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_1": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_1": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_2": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_2": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_2": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_3": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_3": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_3": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_4": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_4": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_4": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_5": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_5": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_5": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_6": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_6": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_6": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_7": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_7": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_7": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_8": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_8": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_8": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_9": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_9": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_9": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_10": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_10": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_10": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_11": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_11": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_11": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_12": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_12": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_12": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_13": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_13": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_13": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_14": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_14": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_14": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_15": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_15": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_15": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_16": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_16": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_16": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_17": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_17": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_17": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_18": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_18": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_18": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_19": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_19": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_19": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_20": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_20": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_20": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_21": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_21": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_21": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_22": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_22": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_22": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_23": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_23": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_23": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_24": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_24": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_24": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_25": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_25": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_25": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_26": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_26": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_26": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_27": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_27": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_27": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_28": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_28": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_28": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_29": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_29": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_29": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_30": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_30": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_30": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_31": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_31": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_31": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_32": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_32": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_32": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_33": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_33": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_33": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_34": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_34": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_34": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_35": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_35": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_35": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_36": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_36": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_36": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_37": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_37": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_37": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_38": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_38": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_38": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_39": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_39": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_39": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_40": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_40": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_40": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_41": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_41": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_41": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_42": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_42": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_42": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_43": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_43": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_43": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_44": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_44": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_44": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_45": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_45": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_45": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_46": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_46": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_46": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_47": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_47": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_47": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_48": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_48": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_48": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_49": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_49": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_49": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_50": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_50": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_50": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Checkpoint",
    "display_name": "XY Input: Checkpoint",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Clip Skip": {
    "input": {
      "required": {
        "target_ckpt": [
          [
            "Base",
            "Refiner"
          ]
        ],
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_clip_skip": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "last_clip_skip": [
          "INT",
          {
            "default": -3,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Clip Skip",
    "display_name": "XY Input: Clip Skip",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: LoRA": {
    "input": {
      "required": {
        "input_mode": [
          [
            "LoRA Names",
            "LoRA Names+Weights",
            "LoRA Batch"
          ]
        ],
        "batch_path": [
          "STRING",
          {
            "default": "/example_folder",
            "multiline": false
          }
        ],
        "subdirectories": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "batch_sort": [
          [
            "ascending",
            "descending"
          ]
        ],
        "batch_max": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "max": 50,
            "step": 1
          }
        ],
        "lora_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50,
            "step": 1
          }
        ],
        "model_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_1": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_1": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_1": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_2": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_2": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_2": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_3": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_3": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_3": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_4": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_4": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_4": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_5": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_5": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_5": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_6": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_6": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_6": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_7": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_7": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_7": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_8": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_8": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_8": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_9": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_9": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_9": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_10": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_10": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_10": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_11": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_11": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_11": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_12": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_12": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_12": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_13": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_13": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_13": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_14": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_14": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_14": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_15": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_15": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_15": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_16": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_16": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_16": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_17": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_17": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_17": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_18": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_18": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_18": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_19": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_19": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_19": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_20": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_20": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_20": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_21": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_21": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_21": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_22": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_22": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_22": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_23": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_23": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_23": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_24": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_24": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_24": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_25": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_25": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_25": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_26": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_26": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_26": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_27": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_27": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_27": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_28": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_28": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_28": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_29": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_29": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_29": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_30": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_30": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_30": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_31": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_31": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_31": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_32": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_32": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_32": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_33": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_33": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_33": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_34": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_34": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_34": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_35": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_35": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_35": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_36": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_36": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_36": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_37": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_37": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_37": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_38": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_38": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_38": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_39": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_39": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_39": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_40": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_40": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_40": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_41": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_41": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_41": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_42": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_42": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_42": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_43": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_43": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_43": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_44": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_44": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_44": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_45": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_45": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_45": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_46": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_46": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_46": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_47": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_47": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_47": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_48": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_48": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_48": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_49": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_49": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_49": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_50": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_50": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_50": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: LoRA",
    "display_name": "XY Input: LoRA",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: LoRA Plot": {
    "input": {
      "required": {
        "input_mode": [
          [
            "X: LoRA Batch, Y: LoRA Weight",
            "X: LoRA Batch, Y: Model Strength",
            "X: LoRA Batch, Y: Clip Strength",
            "X: Model Strength, Y: Clip Strength"
          ]
        ],
        "lora_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "X_batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "X_batch_path": [
          "STRING",
          {
            "default": "/example_folder",
            "multiline": false
          }
        ],
        "X_subdirectories": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "X_batch_sort": [
          [
            "ascending",
            "descending"
          ]
        ],
        "X_first_value": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "X_last_value": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "Y_batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "Y_first_value": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "Y_last_value": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "XY",
      "XY"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "X",
      "Y"
    ],
    "name": "XY Input: LoRA Plot",
    "display_name": "XY Input: LoRA Plot",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: LoRA Stacks": {
    "input": {
      "required": {
        "node_state": [
          [
            "Enabled"
          ]
        ]
      },
      "optional": {
        "lora_stack_1": [
          "LORA_STACK"
        ],
        "lora_stack_2": [
          "LORA_STACK"
        ],
        "lora_stack_3": [
          "LORA_STACK"
        ],
        "lora_stack_4": [
          "LORA_STACK"
        ],
        "lora_stack_5": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: LoRA Stacks",
    "display_name": "XY Input: LoRA Stacks",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Control Net": {
    "input": {
      "required": {
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "target_parameter": [
          [
            "strength",
            "start_percent",
            "end_percent"
          ]
        ],
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "last_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "first_start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "last_start_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "first_end_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "last_end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Control Net",
    "display_name": "XY Input: Control Net",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Control Net Plot": {
    "input": {
      "required": {
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "plot_type": [
          [
            "X: Strength, Y: Start%",
            "X: Strength, Y: End%",
            "X: Start%, Y: Strength",
            "X: Start%, Y: End%",
            "X: End%, Y: Strength",
            "X: End%, Y: Start%"
          ]
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "X_batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "X_first_value": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "X_last_value": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "Y_batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "Y_first_value": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "Y_last_value": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ]
      }
    },
    "output": [
      "XY",
      "XY"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "X",
      "Y"
    ],
    "name": "XY Input: Control Net Plot",
    "display_name": "XY Input: Control Net Plot",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Manual XY Entry": {
    "input": {
      "required": {
        "plot_type": [
          [
            "Nothing",
            "Seeds++ Batch",
            "Steps",
            "StartStep",
            "EndStep",
            "CFG Scale",
            "Sampler",
            "Scheduler",
            "Denoise",
            "VAE",
            "Positive Prompt S/R",
            "Negative Prompt S/R",
            "Checkpoint",
            "Clip Skip",
            "LoRA"
          ]
        ],
        "plot_value": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Manual XY Entry",
    "display_name": "XY Input: Manual XY Entry",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "Manual XY Entry Info": {
    "input": {
      "required": {
        "notes": [
          "STRING",
          {
            "default": "_____________SYNTAX_____________\n(X/Y_types)     (X/Y_values)\nSeeds++ Batch   batch_count\nSteps           steps_1;steps_2;...\nStartStep       start_step_1;start_step_2;...\nEndStep         end_step_1;end_step_2;...\nCFG Scale       cfg_1;cfg_2;...\nSampler(1)      sampler_1;sampler_2;...\nSampler(2)      sampler_1,scheduler_1;...\nSampler(3)      sampler_1;...;,default_scheduler\nScheduler       scheduler_1;scheduler_2;...\nDenoise         denoise_1;denoise_2;...\nVAE             vae_1;vae_2;vae_3;...\n+Prompt S/R     search_txt;replace_1;replace_2;...\n-Prompt S/R     search_txt;replace_1;replace_2;...\nCheckpoint(1)   ckpt_1;ckpt_2;ckpt_3;...\nCheckpoint(2)   ckpt_1,clip_skip_1;...\nCheckpoint(3)   ckpt_1;ckpt_2;...;,default_clip_skip\nClip Skip       clip_skip_1;clip_skip_2;...\nLoRA(1)         lora_1;lora_2;lora_3;...\nLoRA(2)         lora_1;...;,default_model_str,default_clip_str\nLoRA(3)         lora_1,model_str_1,clip_str_1;...\n\n____________SAMPLERS____________\neuler;\neuler_ancestral;\nheun;\nheunpp2;\ndpm_2;\ndpm_2_ancestral;\nlms;\ndpm_fast;\ndpm_adaptive;\ndpmpp_2s_ancestral;\ndpmpp_sde;\ndpmpp_sde_gpu;\ndpmpp_2m;\ndpmpp_2m_sde;\ndpmpp_2m_sde_gpu;\ndpmpp_3m_sde;\ndpmpp_3m_sde_gpu;\nddpm;\nlcm;\nddim;\nuni_pc;\nuni_pc_bh2\n\n___________SCHEDULERS___________\nnormal;\nkarras;\nexponential;\nsgm_uniform;\nsimple;\nddim_uniform\n\n_____________VAES_______________\nBerrysMix.vae.safetensors;\nkl-f8-anime2.ckpt;\nsdxl_vae.safetensors;\nstage_a.safetensors;\nvae-ft-mse-840000-ema-pruned.ckpt\n\n___________CHECKPOINTS__________\nsd1.5/AOM3A1.safetensors;\nsd1.5/CounterfeitV30_v30.safetensors;\nsd1.5/Deliberate_v3.safetensors;\nsd1.5/Deliberate_v4-inpainting.safetensors;\nsd1.5/ProteusV0.4.safetensors;\nsd1.5/abyssorangemix3AOM3_aom3a1b.safetensors;\nsd1.5/allInOnePixelModel_v1.ckpt;\nsd1.5/analogDiffusion_10Safetensors.safetensors;\nsd1.5/anythingV3Inpainting_1-inpainting.ckpt;\nsd1.5/anythingV3_fp16.ckpt;\nsd1.5/arcaneDiffusion_v3.ckpt;\nsd1.5/archer-v1.ckpt;\nsd1.5/cardosAnime_v10.safetensors;\nsd1.5/chilloutmix_NiPrunedFp32Fix.safetensors;\nsd1.5/classicAnim-v1.ckpt;\nsd1.5/comic-diffusion-V2.ckpt;\nsd1.5/complexLineart_v1.ckpt;\nsd1.5/ddosmix_V2.safetensors;\nsd1.5/deepSpaceDiffusion_v1.ckpt;\nsd1.5/deliberate_v2.safetensors;\nsd1.5/dosmix_.safetensors;\nsd1.5/dreamshaper_631BakedVae.safetensors;\nsd1.5/dreamshaper_8.safetensors;\nsd1.5/eldenRingStyle_v3.ckpt;\nsd1.5/elldrethsLucidMix_v10.safetensors;\nsd1.5/elldrethsOG4060Mix_v10.ckpt;\nsd1.5/elldrethsRetroMix_v10.safetensors;\nsd1.5/epicrealism_naturalSinRC1VAE.safetensors;\nsd1.5/f222_v1.ckpt;\nsd1.5/helloyoung25d_V10f.safetensors;\nsd1.5/inkpunkDiffusion_v2.ckpt;\nsd1.5/instruct-pix2pix-00-22000.ckpt;\nsd1.5/juggernaut_reborn.safetensors;\nsd1.5/landscapeAnimePro_v20W768.safetensors;\nsd1.5/meinamix_meinaV10.safetensors;\nsd1.5/meinamix_meinaV11.safetensors;\nsd1.5/microworlds_v1.ckpt;\nsd1.5/midjourneyPapercut_v1.ckpt;\nsd1.5/model.ckpt;\nsd1.5/modelshootStyle_modelshoot10.ckpt;\nsd1.5/modernDisney_v1.ckpt;\nsd1.5/neverendingDreamNED_v122BakedVae.safetensors;\nsd1.5/openjourney_V4.ckpt;\nsd1.5/papercut_v1.ckpt;\nsd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors;\nsd1.5/perfectWorld_v6Baked.safetensors;\nsd1.5/photonLCM_v10.safetensors;\nsd1.5/photon_v1.safetensors;\nsd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors;\nsd1.5/portrait_10.ckpt;\nsd1.5/protogenX34Photorealism_protogenX34.safetensors;\nsd1.5/realdosmix_.safetensors;\nsd1.5/realisticVisionV13_v13.safetensors;\nsd1.5/realisticVisionV60B1_v60B1VAE.safetensors;\nsd1.5/redshiftDiffusion_v1.ckpt;\nsd1.5/roboeticsMix_rmix01Ckpt.ckpt;\nsd1.5/rpg_V4.safetensors;\nsd1.5/samdoesartV3_v3.ckpt;\nsd1.5/samdoesartsUltmerge_v1.ckpt;\nsd1.5/samdoessexyBlend_safetensor.safetensors;\nsd1.5/sd-v1-5-inpainting.ckpt;\nsd1.5/superhero-diffusion.ckpt;\nsd1.5/supermixPreLineart_v1.safetensors;\nsd1.5/svd.safetensors;\nsd1.5/synthwavepunk_v2.ckpt;\nsd1.5/theAllysMix_v10Safetensors.safetensors;\nsd1.5/toonAme_version10.safetensors;\nsd1.5/v1-5-pruned-emaonly.ckpt;\nsd1.5/v1-5-pruned-emaonly.safetensors;\nsd1.5/v1-5-pruned.ckpt;\nsd1.5/v2-1_512-ema-pruned.safetensors;\nsd1.5/v2-1_768-ema-pruned.safetensors;\nsd1.5/vintedois-diffusion-v0-2.safetensors;\nsd1.5/vinteprotogenmix_V20.safetensors;\nsd1.5/waifuDiffusion_v13Fp32.ckpt;\nsd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors;\nsdxl/albedobaseXL_v21.safetensors;\nsdxl/cosxl.safetensors;\nsdxl/juggernautXL_v8Rundiffusion.safetensors;\nsdxl/juggernautXL_v9Rundiffusionphoto2.safetensors;\nsdxl/juggernautXL_version6Rundiffusion.safetensors;\nsdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors;\nsdxl/realvisxlV40_v40LightningBakedvae.safetensors;\nsdxl/sd_xl_base_1.0.safetensors;\nsdxl/sd_xl_refiner_1.0.safetensors;\nsdxl/sd_xl_turbo_1.0_fp16.safetensors;\nsdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors;\nstable_cascade/stable_cascade_stage_b.safetensors;\nstable_cascade/stable_cascade_stage_c.safetensors;\nstable_cascade/stage_b_bf16.safetensors;\nstable_cascade/stage_c_bf16.safetensors;\nsupir/SUPIR-v0F.ckpt;\nsupir/SUPIR-v0Q.ckpt\n\n_____________LORAS______________\nCLAYMATE_V2.03_.safetensors;\nDD-made-of-clay-XL-v2.safetensors;\nHyper-SD15-12steps-CFG-lora.safetensors;\nHyper-SD15-8steps-lora.safetensors;\nHyper-SDXL-8steps-lora.safetensors;\nInstantPhotoX3.safetensors;\nJuggerCineXL2.safetensors;\nLCMTurboMix_Euler_A_fix.safetensors;\nYaeMiko_Test.safetensors;\nadd_detail.safetensors;\nanimemix_v3_offset.safetensors;\ncharsheet.safetensors;\nec.safetensors;\nepiNoiseoffset_v2.safetensors;\nghibli_style_offset.safetensors;\nhipoly_3dcg_v7-epoch-000012.safetensors;\nhowlbgsv3.safetensors;\nip-adapter-faceid-plus_sd15_lora.safetensors;\nip-adapter-faceid-plusv2_sd15_lora.safetensors;\nip-adapter-faceid-plusv2_sdxl_lora.safetensors;\nip-adapter-faceid_sd15_lora.safetensors;\nip-adapter-faceid_sdxl_lora.safetensors;\njirai_v2.safetensors;\nleosamHelloworldTurbo_20TurboLCM.safetensors;\nmore_details.safetensors;\nmouth_slider_v1.safetensors;\npytorch_lora_weights.safetensors;\nroom.safetensors;\nsd15_lora_beta.safetensors;\nsdxl_lightning_4step_lora.safetensors;\nshirt_tug.safetensors;\ntheovercomer8sContrastFix_sd15.safetensors;\nv2_lora_ZoomIn.ckpt;\nv2_lora_ZoomOut.ckpt;\nv3_sd15_mm.ckpt;\nvtuber-poses-05.safetensors;\nxl_more_art-full_v1.safetensors;\nzoom_slider_v1.safetensors\n",
            "multiline": true
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Manual XY Entry Info",
    "display_name": "Manual XY Entry Info",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "Join XY Inputs of Same Type": {
    "input": {
      "required": {
        "XY_1": [
          "XY"
        ],
        "XY_2": [
          "XY"
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "Join XY Inputs of Same Type",
    "display_name": "Join XY Inputs of Same Type",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "Image Overlay": {
    "input": {
      "required": {
        "base_image": [
          "IMAGE"
        ],
        "overlay_image": [
          "IMAGE"
        ],
        "overlay_resize": [
          [
            "None",
            "Fit",
            "Resize by rescale_factor",
            "Resize to width & heigth"
          ]
        ],
        "resize_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ]
        ],
        "rescale_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 16,
            "step": 0.1
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 64
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 64
          }
        ],
        "x_offset": [
          "INT",
          {
            "default": 0,
            "min": -48000,
            "max": 48000,
            "step": 10
          }
        ],
        "y_offset": [
          "INT",
          {
            "default": 0,
            "min": -48000,
            "max": 48000,
            "step": 10
          }
        ],
        "rotation": [
          "INT",
          {
            "default": 0,
            "min": -180,
            "max": 180,
            "step": 5
          }
        ],
        "opacity": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 5
          }
        ]
      },
      "optional": {
        "optional_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Overlay",
    "display_name": "Image Overlay",
    "description": "",
    "category": "Efficiency Nodes/Image",
    "output_node": false
  },
  "Noise Control Script": {
    "input": {
      "required": {
        "rng_source": [
          [
            "cpu",
            "gpu",
            "nv"
          ]
        ],
        "cfg_denoiser": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "add_seed_noise": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0.015,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "script": [
          "SCRIPT"
        ]
      }
    },
    "output": [
      "SCRIPT"
    ],
    "output_is_list": [false],
    "output_name": [
      "SCRIPT"
    ],
    "name": "Noise Control Script",
    "display_name": "Noise Control Script",
    "description": "",
    "category": "Efficiency Nodes/Scripts",
    "output_node": false
  },
  "HighRes-Fix Script": {
    "input": {
      "required": {
        "upscale_type": [
          [
            "latent",
            "pixel",
            "both"
          ]
        ],
        "hires_ckpt_name": [
          [
            "(use same)",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "latent_upscaler": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp",
            "city96.v1",
            "city96.xl",
            "ttl_nn.SDXL",
            "ttl_nn.SD 1.x"
          ]
        ],
        "pixel_upscaler": [
          [
            "4x-lollypop.pth",
            "4xRealWebPhoto_v4_dat2.pth",
            "4x_NMKD-Siax_200k.pth",
            "RealESRGAN_x2.pth",
            "RealESRGAN_x4.pth",
            "RealESRGAN_x8.pth"
          ]
        ],
        "upscale_by": [
          "FLOAT",
          {
            "default": 1.25,
            "min": 0.01,
            "max": 8,
            "step": 0.05
          }
        ],
        "use_same_seed": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "hires_steps": [
          "INT",
          {
            "default": 12,
            "min": 1,
            "max": 10000
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.56,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "iterations": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 5,
            "step": 1
          }
        ],
        "use_controlnet": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "control_net_name": [
          [
            "SD1.5/animatediff/v3_sd15_sparsectrl_rgb.ckpt",
            "canny.safetensors",
            "control-lora-canny-rank256.safetensors",
            "control-lora-depth-rank256.safetensors",
            "control-lora-sketch-rank256.safetensors",
            "control_v11e_sd15_ip2p.pth",
            "control_v11f1e_sd15_tile.safetensors",
            "control_v11f1p_sd15_depth.pth",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny.pth",
            "control_v11p_sd15_lineart.pth",
            "control_v11p_sd15_openpose.pth",
            "control_v11p_sd15_seg.pth",
            "control_v1p_sd15_qrcode_monster.safetensors",
            "controlnet-canny-sdxl-1.0-mid.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusion_pytorch_model.fp16.safetensors",
            "mistoLine_fp16.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_softedge.safetensors"
          ]
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "preprocessor": [
          [
            "none",
            "AnimeFace_SemSegPreprocessor",
            "AnyLineArtPreprocessor_aux",
            "BinaryPreprocessor",
            "CannyEdgePreprocessor",
            "ColorPreprocessor",
            "DensePosePreprocessor",
            "DepthAnythingPreprocessor",
            "Zoe_DepthAnythingPreprocessor",
            "DiffusionEdge_Preprocessor",
            "DSINE-NormalMapPreprocessor",
            "DWPreprocessor",
            "AnimalPosePreprocessor",
            "HEDPreprocessor",
            "FakeScribblePreprocessor",
            "LeReS-DepthMapPreprocessor",
            "LineArtPreprocessor",
            "AnimeLineArtPreprocessor",
            "LineartStandardPreprocessor",
            "Manga2Anime_LineArt_Preprocessor",
            "MediaPipe-FaceMeshPreprocessor",
            "MeshGraphormer-DepthMapPreprocessor",
            "MeshGraphormer+ImpactDetector-DepthMapPreprocessor",
            "Metric3D-DepthMapPreprocessor",
            "Metric3D-NormalMapPreprocessor",
            "MiDaS-NormalMapPreprocessor",
            "MiDaS-DepthMapPreprocessor",
            "M-LSDPreprocessor",
            "BAE-NormalMapPreprocessor",
            "OneFormer-COCO-SemSegPreprocessor",
            "OneFormer-ADE20K-SemSegPreprocessor",
            "OpenposePreprocessor",
            "PiDiNetPreprocessor",
            "SavePoseKpsAsJsonFile",
            "FacialPartColoringFromPoseKps",
            "UpperBodyTrackingFromPoseKps",
            "ImageLuminanceDetector",
            "ImageIntensityDetector",
            "ScribblePreprocessor",
            "Scribble_XDoG_Preprocessor",
            "Scribble_PiDiNet_Preprocessor",
            "SAMPreprocessor",
            "ShufflePreprocessor",
            "TEEDPreprocessor",
            "TilePreprocessor",
            "TTPlanet_TileGF_Preprocessor",
            "TTPlanet_TileSimple_Preprocessor",
            "UniFormer-SemSegPreprocessor",
            "SemSegPreprocessor",
            "Unimatch_OptFlowPreprocessor",
            "MaskOptFlow",
            "Zoe-DepthMapPreprocessor"
          ],
          {
            "default": "none"
          }
        ],
        "preprocessor_imgs": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "script": [
          "SCRIPT"
        ]
      },
      "hidden": {
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "SCRIPT"
    ],
    "output_is_list": [false],
    "output_name": [
      "SCRIPT"
    ],
    "name": "HighRes-Fix Script",
    "display_name": "HighRes-Fix Script",
    "description": "",
    "category": "Efficiency Nodes/Scripts",
    "output_node": false
  },
  "Tiled Upscaler Script": {
    "input": {
      "required": {
        "upscale_by": [
          "FLOAT",
          {
            "default": 1.25,
            "min": 0.01,
            "max": 8,
            "step": 0.05
          }
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 256,
            "max": 16384,
            "step": 64
          }
        ],
        "tiling_strategy": [
          [
            "random",
            "random strict",
            "padded",
            "simple",
            "none"
          ]
        ],
        "tiling_steps": [
          "INT",
          {
            "default": 30,
            "min": 1,
            "max": 10000
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.4,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "use_controlnet": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "tile_controlnet": [
          [
            "SD1.5/animatediff/v3_sd15_sparsectrl_rgb.ckpt",
            "canny.safetensors",
            "control-lora-canny-rank256.safetensors",
            "control-lora-depth-rank256.safetensors",
            "control-lora-sketch-rank256.safetensors",
            "control_v11e_sd15_ip2p.pth",
            "control_v11f1e_sd15_tile.safetensors",
            "control_v11f1p_sd15_depth.pth",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny.pth",
            "control_v11p_sd15_lineart.pth",
            "control_v11p_sd15_openpose.pth",
            "control_v11p_sd15_seg.pth",
            "control_v1p_sd15_qrcode_monster.safetensors",
            "controlnet-canny-sdxl-1.0-mid.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusion_pytorch_model.fp16.safetensors",
            "mistoLine_fp16.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_softedge.safetensors"
          ]
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "script": [
          "SCRIPT"
        ]
      }
    },
    "output": [
      "SCRIPT"
    ],
    "output_is_list": [false],
    "output_name": [
      "SCRIPT"
    ],
    "name": "Tiled Upscaler Script",
    "display_name": "Tiled Upscaler Script",
    "description": "",
    "category": "Efficiency Nodes/Scripts",
    "output_node": false
  },
  "LoRA Stack to String converter": {
    "input": {
      "required": {
        "lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "LoRA string"
    ],
    "name": "LoRA Stack to String converter",
    "display_name": "LoRA Stack to String converter",
    "description": "",
    "category": "Efficiency Nodes/Misc",
    "output_node": false
  },
  "Evaluate Integers": {
    "input": {
      "required": {
        "python_expression": [
          "STRING",
          {
            "default": "((a + b) - c) / 2",
            "multiline": false
          }
        ],
        "print_to_console": [
          [
            "False",
            "True"
          ]
        ]
      },
      "optional": {
        "a": [
          "INT",
          {
            "default": 0,
            "min": -48000,
            "max": 48000,
            "step": 1
          }
        ],
        "b": [
          "INT",
          {
            "default": 0,
            "min": -48000,
            "max": 48000,
            "step": 1
          }
        ],
        "c": [
          "INT",
          {
            "default": 0,
            "min": -48000,
            "max": 48000,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "INT",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "INT",
      "FLOAT",
      "STRING"
    ],
    "name": "Evaluate Integers",
    "display_name": "Evaluate Integers",
    "description": "",
    "category": "Efficiency Nodes/Simple Eval",
    "output_node": true
  },
  "Evaluate Floats": {
    "input": {
      "required": {
        "python_expression": [
          "STRING",
          {
            "default": "((a + b) - c) / 2",
            "multiline": false
          }
        ],
        "print_to_console": [
          [
            "False",
            "True"
          ]
        ]
      },
      "optional": {
        "a": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 1
          }
        ],
        "b": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 1
          }
        ],
        "c": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "INT",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "INT",
      "FLOAT",
      "STRING"
    ],
    "name": "Evaluate Floats",
    "display_name": "Evaluate Floats",
    "description": "",
    "category": "Efficiency Nodes/Simple Eval",
    "output_node": true
  },
  "Evaluate Strings": {
    "input": {
      "required": {
        "python_expression": [
          "STRING",
          {
            "default": "a + b + c",
            "multiline": false
          }
        ],
        "print_to_console": [
          [
            "False",
            "True"
          ]
        ]
      },
      "optional": {
        "a": [
          "STRING",
          {
            "default": "Hello",
            "multiline": false
          }
        ],
        "b": [
          "STRING",
          {
            "default": " World",
            "multiline": false
          }
        ],
        "c": [
          "STRING",
          {
            "default": "!",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Evaluate Strings",
    "display_name": "Evaluate Strings",
    "description": "",
    "category": "Efficiency Nodes/Simple Eval",
    "output_node": true
  },
  "Simple Eval Examples": {
    "input": {
      "required": {
        "models_text": [
          "STRING",
          {
            "default": "The Evaluate Integers, Floats, and Strings nodes \nnow employ the SimpleEval library, enabling secure \ncreation and execution of custom Python expressions.\n\n(https://github.com/danthedeckie/simpleeval)\n\nBelow is a short list of what is possible.\n______________________________________________\n\n\"EVALUATE INTEGERS/FLOATS\" NODE EXPRESSION EXAMPLES:\n\nAddition: a + b + c\nSubtraction: a - b - c\nMultiplication: a * b * c\nDivision: a / b / c\nModulo: a % b % c\nExponentiation: a ** b ** c\nFloor Division: a // b // c\nAbsolute Value: abs(a) + abs(b) + abs(c)\nMaximum: max(a, b, c)\nMinimum: min(a, b, c)\nSum of Squares: a**2 + b**2 + c**2\nBitwise And: a & b & c\nBitwise Or: a | b | c\nBitwise Xor: a ^ b ^ c\nLeft Shift: a \u003C\u003C 1 + b \u003C\u003C 1 + c \u003C\u003C 1\nRight Shift: a \u003E\u003E 1 + b \u003E\u003E 1 + c \u003E\u003E 1\nGreater Than Comparison: a \u003E b \u003E c\nLess Than Comparison: a \u003C b \u003C c\nEqual To Comparison: a == b == c\nNot Equal To Comparison: a != b != c\n______________________________________________\n\n\"EVALUATE STRINGS\" NODE EXPRESSION EXAMPLES:\n\nConcatenate: a + b + c\nFormat: f'{a} {b} {c}'\nLength: len(a) + len(b) + len(c)\nUppercase: a.upper() + b.upper() + c.upper()\nLowercase: a.lower() + b.lower() + c.lower()\nCapitalize: a.capitalize() + b.capitalize() + c.capitalize()\nTitle Case: a.title() + b.title() + c.title()\nStrip: a.strip() + b.strip() + c.strip()\nFind Substring: a.find('sub') + b.find('sub') + c.find('sub')\nReplace Substring: a.replace('old', 'new') + b.replace('old', 'new') + c.replace('old', 'new')\nCount Substring: a.count('sub') + b.count('sub') + c.count('sub')\nCheck Numeric: a.isnumeric() + b.isnumeric() + c.isnumeric()\nCheck Alphabetic: a.isalpha() + b.isalpha() + c.isalpha()\nCheck Alphanumeric: a.isalnum() + b.isalnum() + c.isalnum()\nCheck Start: a.startswith('prefix') + b.startswith('prefix') + c.startswith('prefix')\nCheck End: a.endswith('suffix') + b.endswith('suffix') + c.endswith('suffix')\nSplit: a.split(' ') + b.split(' ') + c.split(' ')\nZero Fill: a.zfill(5) + b.zfill(5) + c.zfill(5)\nSlice: a[:5] + b[:5] + c[:5]\nReverse: a[::-1] + b[::-1] + c[::-1]\n______________________________________________",
            "multiline": true
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Simple Eval Examples",
    "display_name": "Simple Eval Examples",
    "description": "",
    "category": "Efficiency Nodes/Simple Eval",
    "output_node": false
  },
  "JWImageLoadRGB": {
    "input": {
      "required": {
        "path": [
          "STRING",
          {
            "default": "./image.png"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "JWImageLoadRGB",
    "display_name": "Image Load RGB",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWImageLoadRGBA": {
    "input": {
      "required": {
        "path": [
          "STRING",
          {
            "default": "./image.png"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "JWImageLoadRGBA",
    "display_name": "Image Load RGBA",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWLoadImagesFromString": {
    "input": {
      "required": {
        "paths": [
          "STRING",
          {
            "default": "./frame000001.png\n./frame000002.png\n./frame000003.png",
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "ignore_missing_images": [
          [
            "false",
            "true"
          ],
          {
            "default": "false"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "JWLoadImagesFromString",
    "display_name": "Load Images From String",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWImageSaveToPath": {
    "input": {
      "required": {
        "path": [
          "STRING",
          {
            "default": "./image.png"
          }
        ],
        "image": [
          "IMAGE"
        ],
        "overwrite": [
          [
            "false",
            "true"
          ],
          {
            "default": "true"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "JWImageSaveToPath",
    "display_name": "Image Save To Path",
    "description": "",
    "category": "jamesWalker55",
    "output_node": true
  },
  "JWImageExtractFromBatch": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "JWImageExtractFromBatch",
    "display_name": "Image Extract From Batch",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWImageBatchCount": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "JWImageBatchCount",
    "display_name": "Get Image Batch Count",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWImageResize": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "step": 1,
            "max": 99999
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "step": 1,
            "max": 99999
          }
        ],
        "interpolation_mode": [
          [
            "bicubic",
            "bilinear",
            "nearest",
            "nearest exact"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "JWImageResize",
    "display_name": "Image Resize",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWImageFlip": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "direction": [
          [
            "horizontal",
            "vertical"
          ],
          {
            "default": "hotizontal"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "JWImageFlip",
    "display_name": "Image Flip",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWMaskResize": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "step": 1,
            "max": 99999
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "step": 1,
            "max": 99999
          }
        ],
        "interpolation_mode": [
          [
            "bicubic",
            "bilinear",
            "nearest",
            "nearest exact"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "JWMaskResize",
    "display_name": "Mask Resize",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWMaskLikeImageSize": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "value": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "JWMaskLikeImageSize",
    "display_name": "Mask Like Image Size",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWImageResizeToSquare": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "size": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "step": 1,
            "max": 99999
          }
        ],
        "interpolation_mode": [
          [
            "bicubic",
            "bilinear",
            "nearest",
            "nearest exact"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "JWImageResizeToSquare",
    "display_name": "Image Resize to Square",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWImageResizeByFactor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "step": 0.01,
            "max": 99999
          }
        ],
        "interpolation_mode": [
          [
            "bicubic",
            "bilinear",
            "nearest",
            "nearest exact"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "JWImageResizeByFactor",
    "display_name": "Image Resize by Factor",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWImageResizeByShorterSide": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "size": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "step": 1,
            "max": 99999
          }
        ],
        "interpolation_mode": [
          [
            "bicubic",
            "bilinear",
            "nearest",
            "nearest exact"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "JWImageResizeByShorterSide",
    "display_name": "Image Resize by Shorter Side",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWImageResizeByLongerSide": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "size": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "step": 1,
            "max": 99999
          }
        ],
        "interpolation_mode": [
          [
            "bicubic",
            "bilinear",
            "nearest",
            "nearest exact"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "JWImageResizeByLongerSide",
    "display_name": "Image Resize by Longer Side",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWInteger": {
    "input": {
      "required": {
        "value": [
          "INT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "JWInteger",
    "display_name": "Integer",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWIntegerToFloat": {
    "input": {
      "required": {
        "value": [
          "INT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "JWIntegerToFloat",
    "display_name": "Integer to Float",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWIntegerToString": {
    "input": {
      "required": {
        "value": [
          "INT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ],
        "format_string": [
          "STRING",
          {
            "default": "{:04d}",
            "multiline": false,
            "dynamicPrompts": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "JWIntegerToString",
    "display_name": "Integer to String",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWIntegerAdd": {
    "input": {
      "required": {
        "a": [
          "INT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ],
        "b": [
          "INT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "JWIntegerAdd",
    "display_name": "Integer Add",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWIntegerSub": {
    "input": {
      "required": {
        "a": [
          "INT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ],
        "b": [
          "INT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "JWIntegerSub",
    "display_name": "Integer Subtract",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWIntegerMul": {
    "input": {
      "required": {
        "a": [
          "INT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ],
        "b": [
          "INT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "JWIntegerMul",
    "display_name": "Integer Multiply",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWIntegerDiv": {
    "input": {
      "required": {
        "a": [
          "INT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ],
        "b": [
          "INT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "JWIntegerDiv",
    "display_name": "Integer Divide",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWIntegerAbsolute": {
    "input": {
      "required": {
        "value": [
          "INT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "JWIntegerAbsolute",
    "display_name": "Integer Absolute Value",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWIntegerMin": {
    "input": {
      "required": {
        "a": [
          "INT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ],
        "b": [
          "INT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "JWIntegerMin",
    "display_name": "Integer Minimum",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWIntegerMax": {
    "input": {
      "required": {
        "a": [
          "INT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ],
        "b": [
          "INT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "JWIntegerMax",
    "display_name": "Integer Maximum",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWFloat": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 0,
            "min": -100000000000000000,
            "max": 100000000000000000
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "JWFloat",
    "display_name": "Float",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWFloatToInteger": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 0,
            "min": -100000000000000000,
            "max": 100000000000000000
          }
        ],
        "mode": [
          [
            "round",
            "floor",
            "ceiling"
          ]
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "JWFloatToInteger",
    "display_name": "Float to Integer",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWFloatToString": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 0,
            "min": -100000000000000000,
            "max": 100000000000000000
          }
        ],
        "format_string": [
          "STRING",
          {
            "default": "{:.6g}",
            "multiline": false,
            "dynamicPrompts": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "JWFloatToString",
    "display_name": "Float to String",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWFloatAdd": {
    "input": {
      "required": {
        "a": [
          "FLOAT",
          {
            "default": 0,
            "min": -100000000000000000,
            "max": 100000000000000000
          }
        ],
        "b": [
          "FLOAT",
          {
            "default": 0,
            "min": -100000000000000000,
            "max": 100000000000000000
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "JWFloatAdd",
    "display_name": "Float Add",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWFloatSub": {
    "input": {
      "required": {
        "a": [
          "FLOAT",
          {
            "default": 0,
            "min": -100000000000000000,
            "max": 100000000000000000
          }
        ],
        "b": [
          "FLOAT",
          {
            "default": 0,
            "min": -100000000000000000,
            "max": 100000000000000000
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "JWFloatSub",
    "display_name": "Float Subtract",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWFloatMul": {
    "input": {
      "required": {
        "a": [
          "FLOAT",
          {
            "default": 0,
            "min": -100000000000000000,
            "max": 100000000000000000
          }
        ],
        "b": [
          "FLOAT",
          {
            "default": 0,
            "min": -100000000000000000,
            "max": 100000000000000000
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "JWFloatMul",
    "display_name": "Float Multiply",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWFloatDiv": {
    "input": {
      "required": {
        "a": [
          "FLOAT",
          {
            "default": 0,
            "min": -100000000000000000,
            "max": 100000000000000000
          }
        ],
        "b": [
          "FLOAT",
          {
            "default": 0,
            "min": -100000000000000000,
            "max": 100000000000000000
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "JWFloatDiv",
    "display_name": "Float Divide",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWFloatAbsolute": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 0,
            "min": -100000000000000000,
            "max": 100000000000000000
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "JWFloatAbsolute",
    "display_name": "Float Absolute Value",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWFloatMin": {
    "input": {
      "required": {
        "a": [
          "FLOAT",
          {
            "default": 0,
            "min": -100000000000000000,
            "max": 100000000000000000
          }
        ],
        "b": [
          "FLOAT",
          {
            "default": 0,
            "min": -100000000000000000,
            "max": 100000000000000000
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "JWFloatMin",
    "display_name": "Float Minimum",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWFloatMax": {
    "input": {
      "required": {
        "a": [
          "FLOAT",
          {
            "default": 0,
            "min": -100000000000000000,
            "max": 100000000000000000
          }
        ],
        "b": [
          "FLOAT",
          {
            "default": 0,
            "min": -100000000000000000,
            "max": 100000000000000000
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "JWFloatMax",
    "display_name": "Float Maximum",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWString": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "dynamicPrompts": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "JWString",
    "display_name": "String",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWStringToInteger": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "0",
            "multiline": false,
            "dynamicPrompts": false
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "JWStringToInteger",
    "display_name": "String to Integer",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWStringToFloat": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "0.0",
            "multiline": false,
            "dynamicPrompts": false
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "JWStringToFloat",
    "display_name": "String to Float",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWStringMultiline": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "dynamicPrompts": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "JWStringMultiline",
    "display_name": "String (Multiline)",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWStringConcat": {
    "input": {
      "required": {
        "a": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "dynamicPrompts": false
          }
        ],
        "b": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "dynamicPrompts": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "JWStringConcat",
    "display_name": "String Concatenate",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWStringReplace": {
    "input": {
      "required": {
        "source": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "dynamicPrompts": false
          }
        ],
        "to_replace": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "dynamicPrompts": false
          }
        ],
        "replace_with": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "dynamicPrompts": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "JWStringReplace",
    "display_name": "String Replace",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWStringSplit": {
    "input": {
      "required": {
        "source": [
          "STRING",
          {
            "default": "a,b",
            "multiline": false,
            "dynamicPrompts": false
          }
        ],
        "split_by": [
          "STRING",
          {
            "default": ",",
            "multiline": false,
            "dynamicPrompts": false
          }
        ],
        "from_right": [
          [
            "false",
            "true"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "STRING",
      "STRING"
    ],
    "name": "JWStringSplit",
    "display_name": "String Split",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWStringGetLine": {
    "input": {
      "required": {
        "source": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "dynamicPrompts": false
          }
        ],
        "line_index": [
          "INT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "JWStringGetLine",
    "display_name": "String Get Line",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWStringUnescape": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "dynamicPrompts": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "JWStringUnescape",
    "display_name": "String Unescape",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "RAFTEstimate": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "RAFT_FLOW"
    ],
    "output_is_list": [false],
    "output_name": [
      "RAFT_FLOW"
    ],
    "name": "RAFTEstimate",
    "display_name": "RAFT Estimate",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "RAFTFlowToImage": {
    "input": {
      "required": {
        "raft_flow": [
          "RAFT_FLOW"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "RAFTFlowToImage",
    "display_name": "RAFT Flow to Image",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "RAFTLoadFlowFromEXRChannels": {
    "input": {
      "required": {
        "path": [
          "STRING",
          {
            "default": ""
          }
        ],
        "x_channel": [
          [
            "R",
            "G",
            "B",
            "A"
          ],
          {
            "default": "R"
          }
        ],
        "y_channel": [
          [
            "R",
            "G",
            "B",
            "A"
          ],
          {
            "default": "G"
          }
        ],
        "invert_x": [
          [
            "false",
            "true"
          ],
          {
            "default": "true"
          }
        ],
        "invert_y": [
          [
            "false",
            "true"
          ],
          {
            "default": "false"
          }
        ]
      }
    },
    "output": [
      "RAFT_FLOW"
    ],
    "output_is_list": [false],
    "output_name": [
      "RAFT_FLOW"
    ],
    "name": "RAFTLoadFlowFromEXRChannels",
    "display_name": "RAFT Load Flow from EXR Channels",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWImageStackChannels": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "JWImageStackChannels",
    "display_name": "Image Stack Channels",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWImageMix": {
    "input": {
      "required": {
        "blend_type": [
          [
            "mix",
            "multiply"
          ],
          {
            "default": "mix"
          }
        ],
        "factor": [
          "FLOAT",
          {
            "min": 0,
            "max": 1,
            "step": 0.01,
            "default": 0.5
          }
        ],
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "JWImageMix",
    "display_name": "Image Mix",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWImageContrast": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 2,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "JWImageContrast",
    "display_name": "Image Contrast",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWImageSaturation": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 2,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "JWImageSaturation",
    "display_name": "Image Saturation",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWImageLevels": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "min": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "max": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "JWImageLevels",
    "display_name": "Image Levels",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWDatetimeString": {
    "input": {
      "required": {
        "format": [
          "STRING",
          {
            "default": "%Y-%m-%dT%H:%M:%S"
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "JWDatetimeString",
    "display_name": "Datetime String",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWLoadImageSequence": {
    "input": {
      "required": {
        "path_pattern": [
          "STRING",
          {
            "default": "./frame{:06d}.png",
            "multiline": false
          }
        ],
        "start_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "frame_count": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "step": 1
          }
        ],
        "ignore_missing_images": [
          [
            "false",
            "true"
          ],
          {
            "default": "false"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "JWLoadImageSequence",
    "display_name": "Batch Load Image Sequence",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWLoadImageSequenceWithStopIndex": {
    "input": {
      "required": {
        "path_pattern": [
          "STRING",
          {
            "default": "./frame{:06d}.png",
            "multiline": false
          }
        ],
        "start_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1,
            "max": 999999
          }
        ],
        "stop_index": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "step": 1,
            "max": 999999
          }
        ],
        "inclusive": [
          [
            "false",
            "true"
          ],
          {
            "default": "false"
          }
        ],
        "ignore_missing_images": [
          [
            "false",
            "true"
          ],
          {
            "default": "false"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "JWLoadImageSequenceWithStopIndex",
    "display_name": "Batch Load Image Sequence With Stop Index",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWImageSequenceExtractFromBatch": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "i_start": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "i_stop": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "inclusive": [
          [
            "false",
            "true"
          ],
          {
            "default": "false"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "JWImageSequenceExtractFromBatch",
    "display_name": "Extract Image Sequence From Batch",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWSaveImageSequence": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "path_pattern": [
          "STRING",
          {
            "default": "./frame{:06d}.png",
            "multiline": false
          }
        ],
        "start_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "overwrite": [
          [
            "false",
            "true"
          ],
          {
            "default": "true"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "JWSaveImageSequence",
    "display_name": "Batch Save Image Sequence",
    "description": "",
    "category": "jamesWalker55",
    "output_node": true
  },
  "JWLoopImageSequence": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "target_frames": [
          "INT",
          {
            "default": 16,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "JWLoopImageSequence",
    "display_name": "Loop Image Sequence",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWMaskSequenceFromMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK_SEQUENCE"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK_SEQUENCE"
    ],
    "name": "JWMaskSequenceFromMask",
    "display_name": "Mask Sequence From Mask",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWMaskSequenceJoin": {
    "input": {
      "required": {
        "mask_sequence_1": [
          "MASK_SEQUENCE"
        ],
        "mask_sequence_2": [
          "MASK_SEQUENCE"
        ]
      }
    },
    "output": [
      "MASK_SEQUENCE"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK_SEQUENCE"
    ],
    "name": "JWMaskSequenceJoin",
    "display_name": "Join Mask Sequence",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWMaskSequenceApplyToLatent": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "mask_sequence": [
          "MASK_SEQUENCE"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "JWMaskSequenceApplyToLatent",
    "display_name": "Apply Mask Sequence to Latent",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "JWImageLoadRGBIfExists": {
    "input": {
      "required": {
        "default": [
          "IMAGE"
        ],
        "path": [
          "STRING",
          {
            "default": "./image.png"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "JWImageLoadRGBIfExists",
    "display_name": "Image Load RGB If Exists",
    "description": "",
    "category": "jamesWalker55",
    "output_node": false
  },
  "LoraLoader|pysssss": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_name": [
          [
            {
              "content": "add_detail.safetensors",
              "image": null
            },
            {
              "content": "animemix_v3_offset.safetensors",
              "image": null
            },
            {
              "content": "charsheet.safetensors",
              "image": null
            },
            {
              "content": "CLAYMATE_V2.03_.safetensors",
              "image": null
            },
            {
              "content": "DD-made-of-clay-XL-v2.safetensors",
              "image": null
            },
            {
              "content": "ec.safetensors",
              "image": null
            },
            {
              "content": "epiNoiseoffset_v2.safetensors",
              "image": null
            },
            {
              "content": "ghibli_style_offset.safetensors",
              "image": null
            },
            {
              "content": "hipoly_3dcg_v7-epoch-000012.safetensors",
              "image": null
            },
            {
              "content": "howlbgsv3.safetensors",
              "image": null
            },
            {
              "content": "Hyper-SD15-12steps-CFG-lora.safetensors",
              "image": null
            },
            {
              "content": "Hyper-SD15-8steps-lora.safetensors",
              "image": null
            },
            {
              "content": "Hyper-SDXL-8steps-lora.safetensors",
              "image": null
            },
            {
              "content": "InstantPhotoX3.safetensors",
              "image": null
            },
            {
              "content": "ip-adapter-faceid-plus_sd15_lora.safetensors",
              "image": null
            },
            {
              "content": "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
              "image": null
            },
            {
              "content": "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
              "image": null
            },
            {
              "content": "ip-adapter-faceid_sd15_lora.safetensors",
              "image": null
            },
            {
              "content": "ip-adapter-faceid_sdxl_lora.safetensors",
              "image": null
            },
            {
              "content": "jirai_v2.safetensors",
              "image": null
            },
            {
              "content": "JuggerCineXL2.safetensors",
              "image": null
            },
            {
              "content": "LCMTurboMix_Euler_A_fix.safetensors",
              "image": null
            },
            {
              "content": "leosamHelloworldTurbo_20TurboLCM.safetensors",
              "image": null
            },
            {
              "content": "more_details.safetensors",
              "image": null
            },
            {
              "content": "mouth_slider_v1.safetensors",
              "image": null
            },
            {
              "content": "pytorch_lora_weights.safetensors",
              "image": null
            },
            {
              "content": "room.safetensors",
              "image": null
            },
            {
              "content": "sd15_lora_beta.safetensors",
              "image": null
            },
            {
              "content": "sdxl_lightning_4step_lora.safetensors",
              "image": null
            },
            {
              "content": "shirt_tug.safetensors",
              "image": null
            },
            {
              "content": "theovercomer8sContrastFix_sd15.safetensors",
              "image": null
            },
            {
              "content": "v2_lora_ZoomIn.ckpt",
              "image": null
            },
            {
              "content": "v2_lora_ZoomOut.ckpt",
              "image": null
            },
            {
              "content": "v3_sd15_mm.ckpt",
              "image": null
            },
            {
              "content": "vtuber-poses-05.safetensors",
              "image": null
            },
            {
              "content": "xl_more_art-full_v1.safetensors",
              "image": null
            },
            {
              "content": "YaeMiko_Test.safetensors",
              "image": null
            },
            {
              "content": "zoom_slider_v1.safetensors",
              "image": null
            }
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -100,
            "max": 100,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1,
            "min": -100,
            "max": 100,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL",
      "CLIP"
    ],
    "name": "LoraLoader|pysssss",
    "display_name": "Lora Loader 🐍",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "CheckpointLoader|pysssss": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            {
              "content": "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/allInOnePixelModel_v1.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/analogDiffusion_10Safetensors.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/anythingV3_fp16.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/AOM3A1.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/arcaneDiffusion_v3.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/archer-v1.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/cardosAnime_v10.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/classicAnim-v1.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/comic-diffusion-V2.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/complexLineart_v1.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/CounterfeitV30_v30.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/ddosmix_V2.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/deepSpaceDiffusion_v1.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/deliberate_v2.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/Deliberate_v3.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/Deliberate_v4-inpainting.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/dosmix_.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/dreamshaper_631BakedVae.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/dreamshaper_8.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/eldenRingStyle_v3.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/elldrethsLucidMix_v10.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/elldrethsOG4060Mix_v10.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/elldrethsRetroMix_v10.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/f222_v1.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/helloyoung25d_V10f.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/inkpunkDiffusion_v2.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/instruct-pix2pix-00-22000.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/juggernaut_reborn.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/landscapeAnimePro_v20W768.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/meinamix_meinaV10.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/meinamix_meinaV11.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/microworlds_v1.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/midjourneyPapercut_v1.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/model.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/modelshootStyle_modelshoot10.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/modernDisney_v1.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/openjourney_V4.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/papercut_v1.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/perfectWorld_v6Baked.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/photon_v1.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/photonLCM_v10.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/portrait_10.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/ProteusV0.4.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/realdosmix_.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/realisticVisionV13_v13.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/redshiftDiffusion_v1.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/rpg_V4.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/samdoesartsUltmerge_v1.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/samdoesartV3_v3.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/samdoessexyBlend_safetensor.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/sd-v1-5-inpainting.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/superhero-diffusion.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/supermixPreLineart_v1.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/svd.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/synthwavepunk_v2.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/theAllysMix_v10Safetensors.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/toonAme_version10.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/v1-5-pruned-emaonly.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/v1-5-pruned-emaonly.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/v1-5-pruned.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/v2-1_512-ema-pruned.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/v2-1_768-ema-pruned.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/vintedois-diffusion-v0-2.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/vinteprotogenmix_V20.safetensors",
              "image": null
            },
            {
              "content": "sd1.5/waifuDiffusion_v13Fp32.ckpt",
              "image": null
            },
            {
              "content": "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
              "image": null
            },
            {
              "content": "sdxl/albedobaseXL_v21.safetensors",
              "image": null
            },
            {
              "content": "sdxl/cosxl.safetensors",
              "image": null
            },
            {
              "content": "sdxl/juggernautXL_v8Rundiffusion.safetensors",
              "image": null
            },
            {
              "content": "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
              "image": null
            },
            {
              "content": "sdxl/juggernautXL_version6Rundiffusion.safetensors",
              "image": null
            },
            {
              "content": "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
              "image": null
            },
            {
              "content": "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
              "image": null
            },
            {
              "content": "sdxl/sd_xl_base_1.0.safetensors",
              "image": null
            },
            {
              "content": "sdxl/sd_xl_refiner_1.0.safetensors",
              "image": null
            },
            {
              "content": "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
              "image": null
            },
            {
              "content": "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
              "image": null
            },
            {
              "content": "stable_cascade/stable_cascade_stage_b.safetensors",
              "image": null
            },
            {
              "content": "stable_cascade/stable_cascade_stage_c.safetensors",
              "image": null
            },
            {
              "content": "stable_cascade/stage_b_bf16.safetensors",
              "image": null
            },
            {
              "content": "stable_cascade/stage_c_bf16.safetensors",
              "image": null
            },
            {
              "content": "supir/SUPIR-v0F.ckpt",
              "image": null
            },
            {
              "content": "supir/SUPIR-v0Q.ckpt",
              "image": null
            }
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "name": "CheckpointLoader|pysssss",
    "display_name": "Checkpoint Loader 🐍",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "ConstrainImage|pysssss": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "max_width": [
          "INT",
          {
            "default": 1024,
            "min": 0
          }
        ],
        "max_height": [
          "INT",
          {
            "default": 1024,
            "min": 0
          }
        ],
        "min_width": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ],
        "min_height": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ],
        "crop_if_required": [
          [
            "yes",
            "no"
          ],
          {
            "default": "no"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [true],
    "output_name": [
      "IMAGE"
    ],
    "name": "ConstrainImage|pysssss",
    "display_name": "Constrain Image 🐍",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "ConstrainImageforVideo|pysssss": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "max_width": [
          "INT",
          {
            "default": 1024,
            "min": 0
          }
        ],
        "max_height": [
          "INT",
          {
            "default": 1024,
            "min": 0
          }
        ],
        "min_width": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ],
        "min_height": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ],
        "crop_if_required": [
          [
            "yes",
            "no"
          ],
          {
            "default": "no"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ConstrainImageforVideo|pysssss",
    "display_name": "Constrain Image for Video 🐍",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "MathExpression|pysssss": {
    "input": {
      "required": {
        "expression": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "pysssss.autocomplete": {
              "words": [
                {
                  "text": "round",
                  "value": "round()",
                  "showValue": false,
                  "hint": "number, dp? = 0",
                  "caretOffset": -1
                },
                {
                  "text": "ceil",
                  "value": "ceil()",
                  "showValue": false,
                  "hint": "number",
                  "caretOffset": -1
                },
                {
                  "text": "floor",
                  "value": "floor()",
                  "showValue": false,
                  "hint": "number",
                  "caretOffset": -1
                },
                {
                  "text": "min",
                  "value": "min()",
                  "showValue": false,
                  "hint": "...numbers",
                  "caretOffset": -1
                },
                {
                  "text": "max",
                  "value": "max()",
                  "showValue": false,
                  "hint": "...numbers",
                  "caretOffset": -1
                },
                {
                  "text": "randomint",
                  "value": "randomint()",
                  "showValue": false,
                  "hint": "min, max",
                  "caretOffset": -1
                },
                {
                  "text": "randomchoice",
                  "value": "randomchoice()",
                  "showValue": false,
                  "hint": "...numbers",
                  "caretOffset": -1
                },
                {
                  "text": "sqrt",
                  "value": "sqrt()",
                  "showValue": false,
                  "hint": "number",
                  "caretOffset": -1
                },
                {
                  "text": "int",
                  "value": "int()",
                  "showValue": false,
                  "hint": "number",
                  "caretOffset": -1
                },
                {
                  "text": "iif",
                  "value": "iif()",
                  "showValue": false,
                  "hint": "value, truepart, falsepart",
                  "caretOffset": -1
                }
              ],
              "separator": ""
            }
          }
        ]
      },
      "optional": {
        "a": [
          "INT,FLOAT,IMAGE,LATENT"
        ],
        "b": [
          "INT,FLOAT,IMAGE,LATENT"
        ],
        "c": [
          "INT,FLOAT,IMAGE,LATENT"
        ]
      },
      "hidden": {
        "extra_pnginfo": "EXTRA_PNGINFO",
        "prompt": "PROMPT"
      }
    },
    "output": [
      "INT",
      "FLOAT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "INT",
      "FLOAT"
    ],
    "name": "MathExpression|pysssss",
    "display_name": "Math Expression 🐍",
    "description": "",
    "category": "utils",
    "output_node": true
  },
  "PlaySound|pysssss": {
    "input": {
      "required": {
        "any": [
          "*",
          {

          }
        ],
        "mode": [
          [
            "always",
            "on empty queue"
          ],
          {

          }
        ],
        "volume": [
          "FLOAT",
          {
            "min": 0,
            "max": 1,
            "step": 0.1,
            "default": 0.5
          }
        ],
        "file": [
          "STRING",
          {
            "default": "notify.mp3"
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [true],
    "output_name": [
      "*"
    ],
    "name": "PlaySound|pysssss",
    "display_name": "PlaySound 🐍",
    "description": "",
    "category": "utils",
    "output_node": true
  },
  "Repeater|pysssss": {
    "input": {
      "required": {
        "source": [
          "*",
          {

          }
        ],
        "repeats": [
          "INT",
          {
            "min": 0,
            "max": 5000,
            "default": 2
          }
        ],
        "output": [
          [
            "single",
            "multi"
          ],
          {

          }
        ],
        "node_mode": [
          [
            "reuse",
            "create"
          ],
          {

          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [true],
    "output_name": [
      "*"
    ],
    "name": "Repeater|pysssss",
    "display_name": "Repeater 🐍",
    "description": "",
    "category": "utils",
    "output_node": false
  },
  "ReroutePrimitive|pysssss": {
    "input": {
      "required": {
        "value": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": [
      "*"
    ],
    "name": "ReroutePrimitive|pysssss",
    "display_name": "Reroute Primitive 🐍",
    "description": "",
    "category": "utils",
    "output_node": false
  },
  "ShowText|pysssss": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [true],
    "output_name": [
      "STRING"
    ],
    "name": "ShowText|pysssss",
    "display_name": "✴️ U-NAI Get Text",
    "description": "",
    "category": "✴️ Universal NAI Nodes",
    "output_node": true
  },
  "StringFunction|pysssss": {
    "input": {
      "required": {
        "action": [
          [
            "append",
            "replace"
          ],
          {

          }
        ],
        "tidy_tags": [
          [
            "yes",
            "no"
          ],
          {

          }
        ]
      },
      "optional": {
        "text_a": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "text_b": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "text_c": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "StringFunction|pysssss",
    "display_name": "String Function 🐍",
    "description": "",
    "category": "utils",
    "output_node": true
  },
  "SystemNotification|pysssss": {
    "input": {
      "required": {
        "message": [
          "STRING",
          {
            "default": "Your notification has triggered."
          }
        ],
        "any": [
          "*",
          {

          }
        ],
        "mode": [
          [
            "always",
            "on empty queue"
          ],
          {

          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [true],
    "output_name": [
      "*"
    ],
    "name": "SystemNotification|pysssss",
    "display_name": "SystemNotification 🐍",
    "description": "",
    "category": "utils",
    "output_node": true
  },
  "LoadText|pysssss": {
    "input": {
      "required": {
        "root_dir": [
          [
            "input",
            "output",
            "temp"
          ],
          {

          }
        ],
        "file": [
          [
            "[none]"
          ],
          {
            "pysssss.binding": [
              {
                "source": "root_dir",
                "callback": [
                  {
                    "type": "set",
                    "target": "$this.disabled",
                    "value": true
                  },
                  {
                    "type": "fetch",
                    "url": "/pysssss/text-file/{$source.value}",
                    "then": [
                      {
                        "type": "set",
                        "target": "$this.options.values",
                        "value": "$result"
                      },
                      {
                        "type": "validate-combo"
                      },
                      {
                        "type": "set",
                        "target": "$this.disabled",
                        "value": false
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "LoadText|pysssss",
    "display_name": "Load Text 🐍",
    "description": "",
    "category": "utils",
    "output_node": false
  },
  "SaveText|pysssss": {
    "input": {
      "required": {
        "root_dir": [
          [
            "input",
            "output",
            "temp"
          ],
          {

          }
        ],
        "file": [
          "STRING",
          {
            "default": "file.txt"
          }
        ],
        "append": [
          [
            "append",
            "overwrite",
            "new only"
          ],
          {

          }
        ],
        "insert": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "new line",
            "label_off": "none",
            "pysssss.binding": [
              {
                "source": "append",
                "callback": [
                  {
                    "type": "if",
                    "condition": [
                      {
                        "left": "$source.value",
                        "op": "eq",
                        "right": "\"append\""
                      }
                    ],
                    "true": [
                      {
                        "type": "set",
                        "target": "$this.disabled",
                        "value": false
                      }
                    ],
                    "false": [
                      {
                        "type": "set",
                        "target": "$this.disabled",
                        "value": true
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "text": [
          "STRING",
          {
            "forceInput": true,
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "SaveText|pysssss",
    "display_name": "Save Text 🐍",
    "description": "",
    "category": "utils",
    "output_node": true
  },
  "VHS_VideoCombine": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "frame_rate": [
          "FLOAT",
          {
            "default": 8,
            "min": 1,
            "step": 1
          }
        ],
        "loop_count": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "AnimateDiff"
          }
        ],
        "format": [
          [
            "image/gif",
            "image/webp",
            "video/16bit-png",
            "video/ProRes",
            [
              "video/av1-webm",
              [
                [
                  "pix_fmt",
                  [
                    "yuv420p10le",
                    "yuv420p"
                  ]
                ],
                [
                  "crf",
                  "INT",
                  {
                    "default": 23,
                    "min": 0,
                    "max": 100,
                    "step": 1
                  }
                ],
                [
                  "input_color_depth",
                  [
                    "8bit",
                    "16bit"
                  ]
                ],
                [
                  "save_metadata",
                  "BOOLEAN",
                  {
                    "default": true
                  }
                ]
              ]
            ],
            [
              "video/ffmpeg-gif",
              [
                [
                  "dither",
                  [
                    "bayer",
                    "heckbert",
                    "floyd_steinberg",
                    "sierra2",
                    "sierra2_4a",
                    "sierra3",
                    "burkes",
                    "atkinson",
                    "none"
                  ],
                  {
                    "default": "sierra2_4a"
                  },
                  "[0:v] split [a][b]; [a] palettegen=reserve_transparent=on:transparency_color=ffffff [p]; [b][p] paletteuse=dither=$val"
                ]
              ]
            ],
            [
              "video/h264-mp4",
              [
                [
                  "pix_fmt",
                  [
                    "yuv420p",
                    "yuv420p10le"
                  ]
                ],
                [
                  "crf",
                  "INT",
                  {
                    "default": 19,
                    "min": 0,
                    "max": 100,
                    "step": 1
                  }
                ],
                [
                  "save_metadata",
                  "BOOLEAN",
                  {
                    "default": true
                  }
                ]
              ]
            ],
            [
              "video/h265-mp4",
              [
                [
                  "pix_fmt",
                  [
                    "yuv420p10le",
                    "yuv420p"
                  ]
                ],
                [
                  "crf",
                  "INT",
                  {
                    "default": 22,
                    "min": 0,
                    "max": 100,
                    "step": 1
                  }
                ],
                [
                  "save_metadata",
                  "BOOLEAN",
                  {
                    "default": true
                  }
                ]
              ]
            ],
            [
              "video/nvenc_h264-mp4",
              [
                [
                  "pix_fmt",
                  [
                    "yuv420p",
                    "yuv420p10le"
                  ]
                ],
                [
                  "bitrate",
                  "INT",
                  {
                    "default": 10,
                    "min": 1,
                    "max": 999,
                    "step": 1
                  }
                ],
                [
                  "megabit",
                  "BOOLEAN",
                  {
                    "default": true
                  }
                ],
                [
                  "save_metadata",
                  "BOOLEAN",
                  {
                    "default": true
                  }
                ]
              ]
            ],
            [
              "video/nvenc_hevc-mp4",
              [
                [
                  "pix_fmt",
                  [
                    "yuv420p",
                    "yuv420p10le"
                  ]
                ],
                [
                  "bitrate",
                  "INT",
                  {
                    "default": 10,
                    "min": 1,
                    "max": 999,
                    "step": 1
                  }
                ],
                [
                  "megabit",
                  "BOOLEAN",
                  {
                    "default": true
                  }
                ],
                [
                  "save_metadata",
                  "BOOLEAN",
                  {
                    "default": true
                  }
                ]
              ]
            ],
            [
              "video/webm",
              [
                [
                  "crf",
                  "INT",
                  {
                    "default": 20,
                    "min": 0,
                    "max": 100,
                    "step": 1
                  }
                ],
                [
                  "save_metadata",
                  "BOOLEAN",
                  {
                    "default": true
                  }
                ]
              ]
            ]
          ]
        ],
        "pingpong": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "save_output": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      },
      "optional": {
        "audio": [
          "VHS_AUDIO"
        ],
        "meta_batch": [
          "VHS_BatchManager"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "VHS_FILENAMES"
    ],
    "output_is_list": [false],
    "output_name": [
      "Filenames"
    ],
    "name": "VHS_VideoCombine",
    "display_name": "Video Combine 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢",
    "output_node": true
  },
  "VHS_LoadVideo": {
    "input": {
      "required": {
        "video": [
          []
        ],
        "force_rate": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 60,
            "step": 1
          }
        ],
        "force_size": [
          [
            "Disabled",
            "Custom Height",
            "Custom Width",
            "Custom",
            "256x?",
            "?x256",
            "256x256",
            "512x?",
            "?x512",
            "512x512"
          ]
        ],
        "custom_width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "custom_height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "frame_load_cap": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "skip_first_frames": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "select_every_nth": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 9007199254740991,
            "step": 1
          }
        ]
      },
      "optional": {
        "meta_batch": [
          "VHS_BatchManager"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "IMAGE",
      "INT",
      "VHS_AUDIO",
      "VHS_VIDEOINFO"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "IMAGE",
      "frame_count",
      "audio",
      "video_info"
    ],
    "name": "VHS_LoadVideo",
    "display_name": "Load Video (Upload) 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢",
    "output_node": false
  },
  "VHS_LoadVideoPath": {
    "input": {
      "required": {
        "video": [
          "STRING",
          {
            "default": "X://insert/path/here.mp4",
            "vhs_path_extensions": [
              "webm",
              "mp4",
              "mkv",
              "gif"
            ]
          }
        ],
        "force_rate": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 60,
            "step": 1
          }
        ],
        "force_size": [
          [
            "Disabled",
            "Custom Height",
            "Custom Width",
            "Custom",
            "256x?",
            "?x256",
            "256x256",
            "512x?",
            "?x512",
            "512x512"
          ]
        ],
        "custom_width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "custom_height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "frame_load_cap": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "skip_first_frames": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "select_every_nth": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 9007199254740991,
            "step": 1
          }
        ]
      },
      "optional": {
        "meta_batch": [
          "VHS_BatchManager"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "IMAGE",
      "INT",
      "VHS_AUDIO",
      "VHS_VIDEOINFO"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "IMAGE",
      "frame_count",
      "audio",
      "video_info"
    ],
    "name": "VHS_LoadVideoPath",
    "display_name": "Load Video (Path) 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢",
    "output_node": false
  },
  "VHS_LoadImages": {
    "input": {
      "required": {
        "directory": [
          []
        ]
      },
      "optional": {
        "image_load_cap": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "skip_first_images": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "select_every_nth": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "meta_batch": [
          "VHS_BatchManager"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "IMAGE",
      "MASK",
      "INT"
    ],
    "name": "VHS_LoadImages",
    "display_name": "Load Images (Upload) 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢",
    "output_node": false
  },
  "VHS_LoadImagesPath": {
    "input": {
      "required": {
        "directory": [
          "STRING",
          {
            "default": "X://path/to/images",
            "vhs_path_extensions": []
          }
        ]
      },
      "optional": {
        "image_load_cap": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "skip_first_images": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "select_every_nth": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "meta_batch": [
          "VHS_BatchManager"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "IMAGE",
      "MASK",
      "INT"
    ],
    "name": "VHS_LoadImagesPath",
    "display_name": "Load Images (Path) 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢",
    "output_node": false
  },
  "VHS_LoadAudio": {
    "input": {
      "required": {
        "audio_file": [
          "STRING",
          {
            "default": "input/",
            "vhs_path_extensions": [
              "wav",
              "mp3",
              "ogg",
              "m4a",
              "flac"
            ]
          }
        ]
      },
      "optional": {
        "seek_seconds": [
          "FLOAT",
          {
            "default": 0,
            "min": 0
          }
        ]
      }
    },
    "output": [
      "VHS_AUDIO"
    ],
    "output_is_list": [false],
    "output_name": [
      "audio"
    ],
    "name": "VHS_LoadAudio",
    "display_name": "Load Audio (Path)🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢",
    "output_node": false
  },
  "VHS_LoadAudioUpload": {
    "input": {
      "required": {
        "audio": [
          []
        ],
        "start_time": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10000000,
            "step": 0.01
          }
        ],
        "duration": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10000000,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "VHS_AUDIO"
    ],
    "output_is_list": [false],
    "output_name": [
      "audio"
    ],
    "name": "VHS_LoadAudioUpload",
    "display_name": "Load Audio (Upload)🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢",
    "output_node": false
  },
  "VHS_PruneOutputs": {
    "input": {
      "required": {
        "filenames": [
          "VHS_FILENAMES"
        ],
        "options": [
          [
            "Intermediate",
            "Intermediate and Utility"
          ]
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "VHS_PruneOutputs",
    "display_name": "Prune Outputs 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢",
    "output_node": true
  },
  "VHS_BatchManager": {
    "input": {
      "required": {
        "frames_per_batch": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 128,
            "step": 1
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "VHS_BatchManager"
    ],
    "output_is_list": [false],
    "output_name": [
      "meta_batch"
    ],
    "name": "VHS_BatchManager",
    "display_name": "Meta Batch Manager 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢",
    "output_node": false
  },
  "VHS_VideoInfo": {
    "input": {
      "required": {
        "video_info": [
          "VHS_VIDEOINFO"
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT",
      "FLOAT",
      "INT",
      "INT",
      "FLOAT",
      "INT",
      "FLOAT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false, false, false],
    "output_name": [
      "source_fps🟨",
      "source_frame_count🟨",
      "source_duration🟨",
      "source_width🟨",
      "source_height🟨",
      "loaded_fps🟦",
      "loaded_frame_count🟦",
      "loaded_duration🟦",
      "loaded_width🟦",
      "loaded_height🟦"
    ],
    "name": "VHS_VideoInfo",
    "display_name": "Video Info 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢",
    "output_node": false
  },
  "VHS_VideoInfoSource": {
    "input": {
      "required": {
        "video_info": [
          "VHS_VIDEOINFO"
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT",
      "FLOAT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "fps🟨",
      "frame_count🟨",
      "duration🟨",
      "width🟨",
      "height🟨"
    ],
    "name": "VHS_VideoInfoSource",
    "display_name": "Video Info (Source) 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢",
    "output_node": false
  },
  "VHS_VideoInfoLoaded": {
    "input": {
      "required": {
        "video_info": [
          "VHS_VIDEOINFO"
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT",
      "FLOAT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "fps🟦",
      "frame_count🟦",
      "duration🟦",
      "width🟦",
      "height🟦"
    ],
    "name": "VHS_VideoInfoLoaded",
    "display_name": "Video Info (Loaded) 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢",
    "output_node": false
  },
  "VHS_SplitLatents": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ],
        "split_index": [
          "INT",
          {
            "default": 0,
            "step": 1,
            "min": -9007199254740991,
            "max": 9007199254740991
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "INT",
      "LATENT",
      "INT"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "LATENT_A",
      "A_count",
      "LATENT_B",
      "B_count"
    ],
    "name": "VHS_SplitLatents",
    "display_name": "Split Latent Batch 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢/latent",
    "output_node": false
  },
  "VHS_SplitImages": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "split_index": [
          "INT",
          {
            "default": 0,
            "step": 1,
            "min": -9007199254740991,
            "max": 9007199254740991
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "INT",
      "IMAGE",
      "INT"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "IMAGE_A",
      "A_count",
      "IMAGE_B",
      "B_count"
    ],
    "name": "VHS_SplitImages",
    "display_name": "Split Image Batch 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢/image",
    "output_node": false
  },
  "VHS_SplitMasks": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "split_index": [
          "INT",
          {
            "default": 0,
            "step": 1,
            "min": -9007199254740991,
            "max": 9007199254740991
          }
        ]
      }
    },
    "output": [
      "MASK",
      "INT",
      "MASK",
      "INT"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "MASK_A",
      "A_count",
      "MASK_B",
      "B_count"
    ],
    "name": "VHS_SplitMasks",
    "display_name": "Split Mask Batch 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢/mask",
    "output_node": false
  },
  "VHS_MergeLatents": {
    "input": {
      "required": {
        "latents_A": [
          "LATENT"
        ],
        "latents_B": [
          "LATENT"
        ],
        "merge_strategy": [
          [
            "match A",
            "match B",
            "match smaller",
            "match larger"
          ]
        ],
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "LATENT",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "LATENT",
      "count"
    ],
    "name": "VHS_MergeLatents",
    "display_name": "Merge Latent Batches 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢/latent",
    "output_node": false
  },
  "VHS_MergeImages": {
    "input": {
      "required": {
        "images_A": [
          "IMAGE"
        ],
        "images_B": [
          "IMAGE"
        ],
        "merge_strategy": [
          [
            "match A",
            "match B",
            "match smaller",
            "match larger"
          ]
        ],
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "count"
    ],
    "name": "VHS_MergeImages",
    "display_name": "Merge Image Batches 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢/image",
    "output_node": false
  },
  "VHS_MergeMasks": {
    "input": {
      "required": {
        "mask_A": [
          "MASK"
        ],
        "mask_B": [
          "MASK"
        ],
        "merge_strategy": [
          [
            "match A",
            "match B",
            "match smaller",
            "match larger"
          ]
        ],
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "MASK",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MASK",
      "count"
    ],
    "name": "VHS_MergeMasks",
    "display_name": "Merge Mask Batches 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢/mask",
    "output_node": false
  },
  "VHS_SelectEveryNthLatent": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ],
        "select_every_nth": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 9007199254740991,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "LATENT",
      "count"
    ],
    "name": "VHS_SelectEveryNthLatent",
    "display_name": "Select Every Nth Latent 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢/latent",
    "output_node": false
  },
  "VHS_SelectEveryNthImage": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "select_every_nth": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 9007199254740991,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "count"
    ],
    "name": "VHS_SelectEveryNthImage",
    "display_name": "Select Every Nth Image 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢/image",
    "output_node": false
  },
  "VHS_SelectEveryNthMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "select_every_nth": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 9007199254740991,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MASK",
      "count"
    ],
    "name": "VHS_SelectEveryNthMask",
    "display_name": "Select Every Nth Mask 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢/mask",
    "output_node": false
  },
  "VHS_GetLatentCount": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "count"
    ],
    "name": "VHS_GetLatentCount",
    "display_name": "Get Latent Count 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢/latent",
    "output_node": false
  },
  "VHS_GetImageCount": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "count"
    ],
    "name": "VHS_GetImageCount",
    "display_name": "Get Image Count 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢/image",
    "output_node": false
  },
  "VHS_GetMaskCount": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "count"
    ],
    "name": "VHS_GetMaskCount",
    "display_name": "Get Mask Count 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢/mask",
    "output_node": false
  },
  "VHS_DuplicateLatents": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ],
        "multiply_by": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 9007199254740991,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "LATENT",
      "count"
    ],
    "name": "VHS_DuplicateLatents",
    "display_name": "Duplicate Latent Batch 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢/latent",
    "output_node": false
  },
  "VHS_DuplicateImages": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "multiply_by": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 9007199254740991,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "count"
    ],
    "name": "VHS_DuplicateImages",
    "display_name": "Duplicate Image Batch 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢/image",
    "output_node": false
  },
  "VHS_DuplicateMasks": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "multiply_by": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 9007199254740991,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MASK",
      "count"
    ],
    "name": "VHS_DuplicateMasks",
    "display_name": "Duplicate Mask Batch 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢/mask",
    "output_node": false
  },
  "VHS_VAEEncodeBatched": {
    "input": {
      "required": {
        "pixels": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "per_batch": [
          "INT",
          {
            "default": 16,
            "min": 1
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "VHS_VAEEncodeBatched",
    "display_name": "VAE Encode Batched 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢/batched nodes",
    "output_node": false
  },
  "VHS_VAEDecodeBatched": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "vae": [
          "VAE"
        ],
        "per_batch": [
          "INT",
          {
            "default": 16,
            "min": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "VHS_VAEDecodeBatched",
    "display_name": "VAE Decode Batched 🎥🅥🅗🅢",
    "description": "",
    "category": "Video Helper Suite 🎥🅥🅗🅢/batched nodes",
    "output_node": false
  },
  "AV_CheckpointModelsToParametersPipe": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ]
      },
      "optional": {
        "pipe": [
          "PIPE"
        ],
        "secondary_ckpt_name": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "vae_name": [
          [
            "None",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "upscaler_name": [
          [
            "None",
            "4x-lollypop.pth",
            "4xRealWebPhoto_v4_dat2.pth",
            "4x_NMKD-Siax_200k.pth",
            "RealESRGAN_x2.pth",
            "RealESRGAN_x4.pth",
            "RealESRGAN_x8.pth"
          ]
        ],
        "secondary_upscaler_name": [
          [
            "None",
            "4x-lollypop.pth",
            "4xRealWebPhoto_v4_dat2.pth",
            "4x_NMKD-Siax_200k.pth",
            "RealESRGAN_x2.pth",
            "RealESRGAN_x4.pth",
            "RealESRGAN_x8.pth"
          ]
        ],
        "lora_1_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_2_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_3_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ]
      }
    },
    "output": [
      "PIPE"
    ],
    "output_is_list": [false],
    "output_name": [
      "PIPE"
    ],
    "name": "AV_CheckpointModelsToParametersPipe",
    "display_name": "Checkpoint Models to Pipe",
    "description": "",
    "category": "Art Venture/Parameters",
    "output_node": false
  },
  "AV_PromptsToParametersPipe": {
    "input": {
      "required": {
        "positive": [
          "STRING",
          {
            "multiline": true,
            "default": "Positive"
          }
        ],
        "negative": [
          "STRING",
          {
            "multiline": true,
            "default": "Negative"
          }
        ]
      },
      "optional": {
        "pipe": [
          "PIPE"
        ],
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "PIPE"
    ],
    "output_is_list": [false],
    "output_name": [
      "PIPE"
    ],
    "name": "AV_PromptsToParametersPipe",
    "display_name": "Prompts to Pipe",
    "description": "",
    "category": "Art Venture/Parameters",
    "output_node": false
  },
  "AV_ParametersPipeToCheckpointModels": {
    "input": {
      "required": {
        "pipe": [
          "PIPE"
        ]
      }
    },
    "output": [
      "PIPE",
      "CHECKPOINT_NAME",
      "CHECKPOINT_NAME",
      "VAE_NAME",
      "UPSCALER_NAME",
      "UPSCALER_NAME",
      "LORA_NAME",
      "LORA_NAME",
      "LORA_NAME"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false, false],
    "output_name": [
      "pipe",
      "ckpt_name",
      "secondary_ckpt_name",
      "vae_name",
      "upscaler_name",
      "secondary_upscaler_name",
      "lora_1_name",
      "lora_2_name",
      "lora_3_name"
    ],
    "name": "AV_ParametersPipeToCheckpointModels",
    "display_name": "Pipe to Checkpoint Models",
    "description": "",
    "category": "Art Venture/Parameters",
    "output_node": false
  },
  "AV_ParametersPipeToPrompts": {
    "input": {
      "required": {
        "pipe": [
          "PIPE"
        ]
      }
    },
    "output": [
      "PIPE",
      "STRING",
      "STRING",
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "pipe",
      "positive",
      "negative",
      "image",
      "mask"
    ],
    "name": "AV_ParametersPipeToPrompts",
    "display_name": "Pipe to Prompts",
    "description": "",
    "category": "Art Venture/Parameters",
    "output_node": false
  },
  "AV_VAELoader": {
    "input": {
      "required": {
        "vae_name": [
          [
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ]
      },
      "optional": {
        "vae_override": [
          "STRING",
          {
            "default": "None"
          }
        ]
      }
    },
    "output": [
      "VAE"
    ],
    "output_is_list": [false],
    "output_name": [
      "VAE"
    ],
    "name": "AV_VAELoader",
    "display_name": "VAE Loader",
    "description": "",
    "category": "Art Venture/Loaders",
    "output_node": false
  },
  "AV_LoraLoader": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_name": [
          [
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -100,
            "max": 100,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1,
            "min": -100,
            "max": 100,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "lora_override": [
          "STRING",
          {
            "default": "None"
          }
        ],
        "enabled": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL",
      "CLIP"
    ],
    "name": "AV_LoraLoader",
    "display_name": "Lora Loader",
    "description": "",
    "category": "Art Venture/Loaders",
    "output_node": false
  },
  "AV_LoraListLoader": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "data": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "dynamicPrompts": false
          }
        ]
      },
      "optional": {
        "base_url": [
          "STRING",
          {
            "default": "https://cdn.artventure.ai"
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL",
      "CLIP"
    ],
    "name": "AV_LoraListLoader",
    "display_name": "Lora List Loader",
    "description": "",
    "category": "Art Venture/Loaders",
    "output_node": false
  },
  "AV_LoraListStacker": {
    "input": {
      "required": {
        "data": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "dynamicPrompts": false
          }
        ]
      },
      "optional": {
        "base_url": [
          "STRING",
          {
            "default": "https://cdn.artventure.ai"
          }
        ],
        "lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "LORA_STACK"
    ],
    "output_is_list": [false],
    "output_name": [
      "LORA_STACK"
    ],
    "name": "AV_LoraListStacker",
    "display_name": "Lora List Stacker",
    "description": "",
    "category": "Art Venture/Loaders",
    "output_node": false
  },
  "AV_CheckpointMerge": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "model1_weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 1,
            "step": 0.01
          }
        ],
        "model2_weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "AV_CheckpointMerge",
    "display_name": "Checkpoint Merge",
    "description": "",
    "category": "Art Venture/Model Merging",
    "output_node": false
  },
  "AV_CheckpointSave": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "checkpoints/ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      },
      "optional": {
        "dtype": [
          [
            "float16",
            "float32"
          ],
          {
            "default": "float16"
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "AV_CheckpointSave",
    "display_name": "Checkpoint Save",
    "description": "",
    "category": "Art Venture/Model Merging",
    "output_node": true
  },
  "LoadImageFromUrl": {
    "input": {
      "required": {

      },
      "optional": {
        "image": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "keep_alpha_channel": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "output_mode": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "list",
            "label_off": "batch"
          }
        ],
        "url": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "dynamicPrompts": false
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "BOOLEAN"
    ],
    "output_is_list": [true, true, false],
    "output_name": [
      "images",
      "masks",
      "has_image"
    ],
    "name": "LoadImageFromUrl",
    "display_name": "Load Image From URL",
    "description": "",
    "category": "Art Venture/Image",
    "output_node": false
  },
  "LoadImageAsMaskFromUrl": {
    "input": {
      "required": {
        "image": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "channel": [
          [
            "alpha",
            "red",
            "green",
            "blue"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [true, true, false],
    "output_name": [
      "masks"
    ],
    "name": "LoadImageAsMaskFromUrl",
    "display_name": "Load Image (as Mask) From URL",
    "description": "",
    "category": "Art Venture/Image",
    "output_node": false
  },
  "StringToInt": {
    "input": {
      "required": {
        "string": [
          "STRING",
          {
            "default": "0"
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "StringToInt",
    "display_name": "String to Int",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": false
  },
  "StringToNumber": {
    "input": {
      "required": {
        "string": [
          "STRING",
          {
            "default": "0"
          }
        ],
        "rounding": [
          [
            "round",
            "floor",
            "ceil"
          ],
          {
            "default": "round"
          }
        ]
      }
    },
    "output": [
      "INT",
      "FLOAT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "INT",
      "FLOAT"
    ],
    "name": "StringToNumber",
    "display_name": "String to Number",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": false
  },
  "BooleanPrimitive": {
    "input": {
      "required": {
        "value": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "reverse": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "BOOLEAN",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "BOOLEAN",
      "STRING"
    ],
    "name": "BooleanPrimitive",
    "display_name": "Boolean",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": false
  },
  "ImageMuxer": {
    "input": {
      "required": {
        "image_1": [
          "IMAGE"
        ],
        "image_2": [
          "IMAGE"
        ],
        "input_selector": [
          "INT",
          {
            "default": 0
          }
        ]
      },
      "optional": {
        "image_3": [
          "IMAGE"
        ],
        "image_4": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageMuxer",
    "display_name": "Image Muxer",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": false
  },
  "ImageScaleDown": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8192,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8192,
            "step": 1
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageScaleDown",
    "display_name": "Scale Down",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": false
  },
  "ImageScaleDownBy": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "scale_by": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.01,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageScaleDownBy",
    "display_name": "Scale Down By",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": false
  },
  "ImageScaleDownToSize": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "size": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8192,
            "step": 1
          }
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "max",
            "label_off": "min"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageScaleDownToSize",
    "display_name": "Scale Down To Size",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": false
  },
  "ImageScaleToMegapixels": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "megapixels": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 100,
            "step": 0.05
          }
        ]
      },
      "optional": {
        "upscale_model_opt": [
          "UPSCALE_MODEL"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageScaleToMegapixels",
    "display_name": "Scale To Megapixels",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": false
  },
  "ImageAlphaComposite": {
    "input": {
      "required": {
        "image_1": [
          "IMAGE"
        ],
        "image_2": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageAlphaComposite",
    "display_name": "Image Alpha Composite",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": false
  },
  "ImageGaussianBlur": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "radius": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 100
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageGaussianBlur",
    "display_name": "Image Gaussian Blur",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": false
  },
  "ImageRepeat": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "amount": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 1024
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageRepeat",
    "display_name": "Repeat Images",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": false
  },
  "ImageExtractChannel": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "channel": [
          [
            "R",
            "G",
            "B",
            "A"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "channel_data"
    ],
    "name": "ImageExtractChannel",
    "display_name": "Image Extract Channel",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": false
  },
  "ImageApplyChannel": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "channel_data": [
          "MASK"
        ],
        "channel": [
          [
            "R",
            "G",
            "B",
            "A"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageApplyChannel",
    "display_name": "Image Apply Channel",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": false
  },
  "QRCodeGenerator": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "size": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096,
            "step": 64
          }
        ],
        "qr_version": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 40,
            "step": 1
          }
        ],
        "error_correction": [
          [
            "L",
            "M",
            "Q",
            "H"
          ],
          {
            "default": "H"
          }
        ],
        "box_size": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 100,
            "step": 1
          }
        ],
        "border": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "QRCodeGenerator",
    "display_name": "QR Code Generator",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": false
  },
  "DependenciesEdit": {
    "input": {
      "required": {
        "dependencies": [
          "DEPENDENCIES"
        ]
      },
      "optional": {
        "ckpt_name": [
          [
            "Original",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "vae_name": [
          [
            "Original",
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "clip": [
          "CLIP"
        ],
        "clip_skip": [
          "INT",
          {
            "default": 0,
            "min": -24,
            "max": 0,
            "step": 1
          }
        ],
        "positive": [
          "STRING",
          {
            "default": "Original",
            "multiline": true
          }
        ],
        "negative": [
          "STRING",
          {
            "default": "Original",
            "multiline": true
          }
        ],
        "lora_stack": [
          "LORA_STACK"
        ],
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ]
      }
    },
    "output": [
      "DEPENDENCIES"
    ],
    "output_is_list": [false],
    "output_name": [
      "DEPENDENCIES"
    ],
    "name": "DependenciesEdit",
    "display_name": "Dependencies Edit",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": false
  },
  "AspectRatioSelector": {
    "input": {
      "required": {
        "aspect_ratio": [
          [
            "1:1",
            "2:3",
            "3:4",
            "9:16",
            "3:2",
            "4:3",
            "16:9"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "ratio",
      "width",
      "height"
    ],
    "name": "AspectRatioSelector",
    "display_name": "Aspect Ratio",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": false
  },
  "SDXLAspectRatioSelector": {
    "input": {
      "required": {
        "aspect_ratio": [
          [
            "1:1",
            "2:3",
            "3:4",
            "5:8",
            "9:16",
            "9:19",
            "9:21",
            "3:2",
            "4:3",
            "8:5",
            "16:9",
            "19:9",
            "21:9"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "ratio",
      "width",
      "height"
    ],
    "name": "SDXLAspectRatioSelector",
    "display_name": "SDXL Aspect Ratio",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": false
  },
  "SeedSelector": {
    "input": {
      "required": {
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "random",
            "label_off": "fixed"
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "fixed_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "seed"
    ],
    "name": "SeedSelector",
    "display_name": "Seed Selector",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": false
  },
  "CheckpointNameSelector": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ]
      }
    },
    "output": [
      [
        "sd1.5/AOM3A1.safetensors",
        "sd1.5/CounterfeitV30_v30.safetensors",
        "sd1.5/Deliberate_v3.safetensors",
        "sd1.5/Deliberate_v4-inpainting.safetensors",
        "sd1.5/ProteusV0.4.safetensors",
        "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
        "sd1.5/allInOnePixelModel_v1.ckpt",
        "sd1.5/analogDiffusion_10Safetensors.safetensors",
        "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
        "sd1.5/anythingV3_fp16.ckpt",
        "sd1.5/arcaneDiffusion_v3.ckpt",
        "sd1.5/archer-v1.ckpt",
        "sd1.5/cardosAnime_v10.safetensors",
        "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
        "sd1.5/classicAnim-v1.ckpt",
        "sd1.5/comic-diffusion-V2.ckpt",
        "sd1.5/complexLineart_v1.ckpt",
        "sd1.5/ddosmix_V2.safetensors",
        "sd1.5/deepSpaceDiffusion_v1.ckpt",
        "sd1.5/deliberate_v2.safetensors",
        "sd1.5/dosmix_.safetensors",
        "sd1.5/dreamshaper_631BakedVae.safetensors",
        "sd1.5/dreamshaper_8.safetensors",
        "sd1.5/eldenRingStyle_v3.ckpt",
        "sd1.5/elldrethsLucidMix_v10.safetensors",
        "sd1.5/elldrethsOG4060Mix_v10.ckpt",
        "sd1.5/elldrethsRetroMix_v10.safetensors",
        "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
        "sd1.5/f222_v1.ckpt",
        "sd1.5/helloyoung25d_V10f.safetensors",
        "sd1.5/inkpunkDiffusion_v2.ckpt",
        "sd1.5/instruct-pix2pix-00-22000.ckpt",
        "sd1.5/juggernaut_reborn.safetensors",
        "sd1.5/landscapeAnimePro_v20W768.safetensors",
        "sd1.5/meinamix_meinaV10.safetensors",
        "sd1.5/meinamix_meinaV11.safetensors",
        "sd1.5/microworlds_v1.ckpt",
        "sd1.5/midjourneyPapercut_v1.ckpt",
        "sd1.5/model.ckpt",
        "sd1.5/modelshootStyle_modelshoot10.ckpt",
        "sd1.5/modernDisney_v1.ckpt",
        "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
        "sd1.5/openjourney_V4.ckpt",
        "sd1.5/papercut_v1.ckpt",
        "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
        "sd1.5/perfectWorld_v6Baked.safetensors",
        "sd1.5/photonLCM_v10.safetensors",
        "sd1.5/photon_v1.safetensors",
        "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
        "sd1.5/portrait_10.ckpt",
        "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
        "sd1.5/realdosmix_.safetensors",
        "sd1.5/realisticVisionV13_v13.safetensors",
        "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
        "sd1.5/redshiftDiffusion_v1.ckpt",
        "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
        "sd1.5/rpg_V4.safetensors",
        "sd1.5/samdoesartV3_v3.ckpt",
        "sd1.5/samdoesartsUltmerge_v1.ckpt",
        "sd1.5/samdoessexyBlend_safetensor.safetensors",
        "sd1.5/sd-v1-5-inpainting.ckpt",
        "sd1.5/superhero-diffusion.ckpt",
        "sd1.5/supermixPreLineart_v1.safetensors",
        "sd1.5/svd.safetensors",
        "sd1.5/synthwavepunk_v2.ckpt",
        "sd1.5/theAllysMix_v10Safetensors.safetensors",
        "sd1.5/toonAme_version10.safetensors",
        "sd1.5/v1-5-pruned-emaonly.ckpt",
        "sd1.5/v1-5-pruned-emaonly.safetensors",
        "sd1.5/v1-5-pruned.ckpt",
        "sd1.5/v2-1_512-ema-pruned.safetensors",
        "sd1.5/v2-1_768-ema-pruned.safetensors",
        "sd1.5/vintedois-diffusion-v0-2.safetensors",
        "sd1.5/vinteprotogenmix_V20.safetensors",
        "sd1.5/waifuDiffusion_v13Fp32.ckpt",
        "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
        "sdxl/albedobaseXL_v21.safetensors",
        "sdxl/cosxl.safetensors",
        "sdxl/juggernautXL_v8Rundiffusion.safetensors",
        "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
        "sdxl/juggernautXL_version6Rundiffusion.safetensors",
        "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
        "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
        "sdxl/sd_xl_base_1.0.safetensors",
        "sdxl/sd_xl_refiner_1.0.safetensors",
        "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
        "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
        "stable_cascade/stable_cascade_stage_b.safetensors",
        "stable_cascade/stable_cascade_stage_c.safetensors",
        "stable_cascade/stage_b_bf16.safetensors",
        "stable_cascade/stage_c_bf16.safetensors",
        "supir/SUPIR-v0F.ckpt",
        "supir/SUPIR-v0Q.ckpt"
      ],
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "ckpt_name",
      "ckpt_name_str"
    ],
    "name": "CheckpointNameSelector",
    "display_name": "Checkpoint Name Selector",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": false
  },
  "LoadJsonFromUrl": {
    "input": {
      "required": {
        "url": [
          "STRING",
          {
            "default": ""
          }
        ]
      },
      "optional": {
        "print_to_console": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "JSON"
    ],
    "output_is_list": [false],
    "output_name": [
      "JSON"
    ],
    "name": "LoadJsonFromUrl",
    "display_name": "Load JSON From URL",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": false
  },
  "GetObjectFromJson": {
    "input": {
      "required": {
        "json": [
          "JSON"
        ],
        "key": [
          "STRING",
          {
            "default": ""
          }
        ]
      }
    },
    "output": [
      "JSON"
    ],
    "output_is_list": [false],
    "output_name": [
      "JSON"
    ],
    "name": "GetObjectFromJson",
    "display_name": "Get Object From JSON",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": true
  },
  "GetTextFromJson": {
    "input": {
      "required": {
        "json": [
          "JSON"
        ],
        "key": [
          "STRING",
          {
            "default": ""
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "GetTextFromJson",
    "display_name": "Get Text From JSON",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": true
  },
  "GetFloatFromJson": {
    "input": {
      "required": {
        "json": [
          "JSON"
        ],
        "key": [
          "STRING",
          {
            "default": ""
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "GetFloatFromJson",
    "display_name": "Get Float From JSON",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": true
  },
  "GetIntFromJson": {
    "input": {
      "required": {
        "json": [
          "JSON"
        ],
        "key": [
          "STRING",
          {
            "default": ""
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "GetIntFromJson",
    "display_name": "Get Int From JSON",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": true
  },
  "GetBoolFromJson": {
    "input": {
      "required": {
        "json": [
          "JSON"
        ],
        "key": [
          "STRING",
          {
            "default": ""
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "GetBoolFromJson",
    "display_name": "Get Bool From JSON",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": true
  },
  "RandomInt": {
    "input": {
      "required": {
        "min": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "max": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "INT",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "INT",
      "STRING"
    ],
    "name": "RandomInt",
    "display_name": "Random Int",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": false
  },
  "RandomFloat": {
    "input": {
      "required": {
        "min": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "max": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "FLOAT",
      "STRING"
    ],
    "name": "RandomFloat",
    "display_name": "Random Float",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": false
  },
  "NumberScaler": {
    "input": {
      "required": {
        "min": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "max": [
          "FLOAT",
          {
            "default": 10,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "scale_to_min": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "scale_to_max": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "value": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "NumberScaler",
    "display_name": "Number Scaler",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": false
  },
  "MergeModels": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "ratio": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "MergeModels",
    "display_name": "Merge Models",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": false
  },
  "SDXLPromptStyler": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "base",
            "sai-3d-model",
            "sai-analog film",
            "sai-anime",
            "sai-cinematic",
            "sai-comic book",
            "sai-craft clay",
            "sai-digital art",
            "sai-enhance",
            "sai-fantasy art",
            "sai-isometric",
            "sai-line art",
            "sai-lowpoly",
            "sai-neonpunk",
            "sai-origami",
            "sai-photographic",
            "sai-pixel art",
            "sai-texture",
            "ads-advertising",
            "ads-automotive",
            "ads-corporate",
            "ads-fashion editorial",
            "ads-food photography",
            "ads-gourmet food photography",
            "ads-luxury",
            "ads-real estate",
            "ads-retail",
            "artstyle-abstract",
            "artstyle-abstract expressionism",
            "artstyle-art deco",
            "artstyle-art nouveau",
            "artstyle-constructivist",
            "artstyle-cubist",
            "artstyle-expressionist",
            "artstyle-graffiti",
            "artstyle-hyperrealism",
            "artstyle-impressionist",
            "artstyle-pointillism",
            "artstyle-pop art",
            "artstyle-psychedelic",
            "artstyle-renaissance",
            "artstyle-steampunk",
            "artstyle-surrealist",
            "artstyle-typography",
            "artstyle-watercolor",
            "futuristic-biomechanical",
            "futuristic-biomechanical cyberpunk",
            "futuristic-cybernetic",
            "futuristic-cybernetic robot",
            "futuristic-cyberpunk cityscape",
            "futuristic-futuristic",
            "futuristic-retro cyberpunk",
            "futuristic-retro futurism",
            "futuristic-sci-fi",
            "futuristic-vaporwave",
            "game-bubble bobble",
            "game-cyberpunk game",
            "game-fighting game",
            "game-gta",
            "game-mario",
            "game-minecraft",
            "game-pokemon",
            "game-retro arcade",
            "game-retro game",
            "game-rpg fantasy game",
            "game-strategy game",
            "game-streetfighter",
            "game-zelda",
            "misc-architectural",
            "misc-disco",
            "misc-dreamscape",
            "misc-dystopian",
            "misc-fairy tale",
            "misc-gothic",
            "misc-grunge",
            "misc-horror",
            "misc-kawaii",
            "misc-lovecraftian",
            "misc-macabre",
            "misc-manga",
            "misc-metropolis",
            "misc-minimalist",
            "misc-monochrome",
            "misc-nautical",
            "misc-space",
            "misc-stained glass",
            "misc-techwear fashion",
            "misc-tribal",
            "misc-zentangle",
            "papercraft-collage",
            "papercraft-flat papercut",
            "papercraft-kirigami",
            "papercraft-paper mache",
            "papercraft-paper quilling",
            "papercraft-papercut collage",
            "papercraft-papercut shadow box",
            "papercraft-stacked papercut",
            "papercraft-thick layered papercut",
            "photo-alien",
            "photo-film noir",
            "photo-glamour",
            "photo-hdr",
            "photo-iphone photographic",
            "photo-long exposure",
            "photo-neon noir",
            "photo-silhouette",
            "photo-tilt-shift"
          ]
        ],
        "log_prompt": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "yes",
            "label_off": "no"
          }
        ],
        "style_positive": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "yes",
            "label_off": "no"
          }
        ],
        "style_negative": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "yes",
            "label_off": "no"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "text_positive",
      "text_negative"
    ],
    "name": "SDXLPromptStyler",
    "display_name": "SDXL Prompt Styler",
    "description": "",
    "category": "utils",
    "output_node": false
  },
  "BLIPLoader": {
    "input": {
      "required": {
        "model_name": [
          [
            "model_base_capfilt_large.pth"
          ]
        ]
      }
    },
    "output": [
      "BLIP_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "BLIP_MODEL"
    ],
    "name": "BLIPLoader",
    "display_name": "BLIP Loader",
    "description": "",
    "category": "Art Venture/Captioning",
    "output_node": false
  },
  "BLIPCaption": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "min_length": [
          "INT",
          {
            "default": 24,
            "min": 0,
            "max": 200,
            "step": 1
          }
        ],
        "max_length": [
          "INT",
          {
            "default": 48,
            "min": 0,
            "max": 200,
            "step": 1
          }
        ]
      },
      "optional": {
        "device_mode": [
          [
            "AUTO",
            "Prefer GPU",
            "CPU"
          ]
        ],
        "prefix": [
          "STRING",
          {
            "default": ""
          }
        ],
        "suffix": [
          "STRING",
          {
            "default": ""
          }
        ],
        "enabled": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "blip_model": [
          "BLIP_MODEL"
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [true],
    "output_name": [
      "caption"
    ],
    "name": "BLIPCaption",
    "display_name": "BLIP Caption",
    "description": "",
    "category": "Art Venture/Captioning",
    "output_node": false
  },
  "DeepDanbooruCaption": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "sort_alpha": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "use_spaces": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "escape": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "filter_tags": [
          "STRING",
          {
            "default": "blacklist",
            "multiline": true
          }
        ]
      },
      "optional": {
        "device_mode": [
          [
            "AUTO",
            "Prefer GPU",
            "CPU"
          ]
        ],
        "prefix": [
          "STRING",
          {
            "default": ""
          }
        ],
        "suffix": [
          "STRING",
          {
            "default": ""
          }
        ],
        "enabled": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [true],
    "output_name": [
      "caption"
    ],
    "name": "DeepDanbooruCaption",
    "display_name": "Deep Danbooru Caption",
    "description": "",
    "category": "Art Venture/Utils",
    "output_node": false
  },
  "Fooocus_KSampler": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.1,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "sharpness": [
          "FLOAT",
          {
            "default": 2,
            "min": 0,
            "max": 100,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "Fooocus_KSampler",
    "display_name": "KSampler Fooocus",
    "description": "",
    "category": "Art Venture/Sampling",
    "output_node": false
  },
  "Fooocus_KSamplerAdvanced": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "add_noise": [
          [
            "enable",
            "disable"
          ]
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.1,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "return_with_leftover_noise": [
          [
            "disable",
            "enable"
          ]
        ]
      },
      "optional": {
        "sharpness": [
          "FLOAT",
          {
            "default": 2,
            "min": 0,
            "max": 100,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "Fooocus_KSamplerAdvanced",
    "display_name": "KSampler Adv. Fooocus",
    "description": "",
    "category": "Art Venture/Sampling",
    "output_node": false
  },
  "Fooocus_KSamplerEfficient": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 7,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "preview_method": [
          [
            "auto",
            "latent2rgb",
            "taesd",
            "vae_decoded_only",
            "none"
          ]
        ],
        "vae_decode": [
          [
            "true",
            "true (tiled)",
            "false"
          ]
        ]
      },
      "optional": {
        "optional_vae": [
          "VAE"
        ],
        "script": [
          "SCRIPT"
        ],
        "sharpness": [
          "FLOAT",
          {
            "default": 2,
            "min": 0,
            "max": 100,
            "step": 0.01
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "MODEL",
      "CONDITIONING+",
      "CONDITIONING-",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "name": "Fooocus_KSamplerEfficient",
    "display_name": "KSampler Efficient Fooocus",
    "description": "",
    "category": "Art Venture/Sampling",
    "output_node": true
  },
  "Fooocus_KSamplerEfficientAdvanced": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 7,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "preview_method": [
          [
            "auto",
            "latent2rgb",
            "taesd",
            "vae_decoded_only",
            "none"
          ]
        ],
        "vae_decode": [
          [
            "true",
            "true (tiled)",
            "false"
          ]
        ]
      },
      "optional": {
        "optional_vae": [
          "VAE"
        ],
        "script": [
          "SCRIPT"
        ],
        "sharpness": [
          "FLOAT",
          {
            "default": 2,
            "min": 0,
            "max": 100,
            "step": 0.01
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "MODEL",
      "CONDITIONING+",
      "CONDITIONING-",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "name": "Fooocus_KSamplerEfficientAdvanced",
    "display_name": "KSampler Adv. Efficient Fooocus",
    "description": "",
    "category": "Art Venture/Sampling",
    "output_node": true
  },
  "AV_CheckpointLoader": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "vae_name": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "clip_skip": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "lora_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_model_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_clip_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "positive": [
          "STRING",
          {
            "default": "CLIP_POSITIVE",
            "multiline": true
          }
        ],
        "negative": [
          "STRING",
          {
            "default": "CLIP_NEGATIVE",
            "multiline": true
          }
        ],
        "token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "weight_interpretation": [
          [
            "comfy",
            "A1111",
            "compel",
            "comfy++",
            "down_weight"
          ]
        ],
        "empty_latent_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ],
        "empty_latent_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 262144
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ],
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ],
        "ckpt_override": [
          "STRING",
          {
            "default": "None"
          }
        ],
        "vae_override": [
          "STRING",
          {
            "default": "None"
          }
        ],
        "lora_override": [
          "STRING",
          {
            "default": "None"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "CLIP",
      "DEPENDENCIES"
    ],
    "output_is_list": [false, false, false, false, false, false, false],
    "output_name": [
      "MODEL",
      "CONDITIONING+",
      "CONDITIONING-",
      "LATENT",
      "VAE",
      "CLIP",
      "DEPENDENCIES"
    ],
    "name": "AV_CheckpointLoader",
    "display_name": "Checkpoint Loader",
    "description": "",
    "category": "Art Venture/Loaders",
    "output_node": false
  },
  "ColorBlend": {
    "input": {
      "required": {
        "bw_layer": [
          "IMAGE"
        ],
        "color_layer": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ColorBlend",
    "display_name": "Color Blend",
    "description": "",
    "category": "stability/image/postprocessing",
    "output_node": false
  },
  "ColorCorrect": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "temperature": [
          "FLOAT",
          {
            "default": 0,
            "min": -100,
            "max": 100,
            "step": 5
          }
        ],
        "hue": [
          "FLOAT",
          {
            "default": 0,
            "min": -90,
            "max": 90,
            "step": 5
          }
        ],
        "brightness": [
          "FLOAT",
          {
            "default": 0,
            "min": -100,
            "max": 100,
            "step": 5
          }
        ],
        "contrast": [
          "FLOAT",
          {
            "default": 0,
            "min": -100,
            "max": 100,
            "step": 5
          }
        ],
        "saturation": [
          "FLOAT",
          {
            "default": 0,
            "min": -100,
            "max": 100,
            "step": 5
          }
        ],
        "gamma": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.2,
            "max": 2.2,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ColorCorrect",
    "display_name": "Color Correct",
    "description": "",
    "category": "Art Venture/Post Processing",
    "output_node": false
  },
  "AV_ControlNetLoader": {
    "input": {
      "required": {
        "control_net_name": [
          [
            "SD1.5/animatediff/v3_sd15_sparsectrl_rgb.ckpt",
            "canny.safetensors",
            "control-lora-canny-rank256.safetensors",
            "control-lora-depth-rank256.safetensors",
            "control-lora-sketch-rank256.safetensors",
            "control_v11e_sd15_ip2p.pth",
            "control_v11f1e_sd15_tile.safetensors",
            "control_v11f1p_sd15_depth.pth",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny.pth",
            "control_v11p_sd15_lineart.pth",
            "control_v11p_sd15_openpose.pth",
            "control_v11p_sd15_seg.pth",
            "control_v1p_sd15_qrcode_monster.safetensors",
            "controlnet-canny-sdxl-1.0-mid.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusion_pytorch_model.fp16.safetensors",
            "mistoLine_fp16.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_softedge.safetensors"
          ]
        ]
      },
      "optional": {
        "control_net_override": [
          "STRING",
          {
            "default": "None"
          }
        ],
        "timestep_keyframe": [
          "TIMESTEP_KEYFRAME"
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "AV_ControlNetLoader",
    "display_name": "ControlNet Loader",
    "description": "",
    "category": "Art Venture/Loaders",
    "output_node": false
  },
  "AV_ControlNetEfficientLoader": {
    "input": {
      "required": {
        "control_net_name": [
          [
            "None",
            "SD1.5/animatediff/v3_sd15_sparsectrl_rgb.ckpt",
            "canny.safetensors",
            "control-lora-canny-rank256.safetensors",
            "control-lora-depth-rank256.safetensors",
            "control-lora-sketch-rank256.safetensors",
            "control_v11e_sd15_ip2p.pth",
            "control_v11f1e_sd15_tile.safetensors",
            "control_v11f1p_sd15_depth.pth",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny.pth",
            "control_v11p_sd15_lineart.pth",
            "control_v11p_sd15_openpose.pth",
            "control_v11p_sd15_seg.pth",
            "control_v1p_sd15_qrcode_monster.safetensors",
            "controlnet-canny-sdxl-1.0-mid.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusion_pytorch_model.fp16.safetensors",
            "mistoLine_fp16.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_softedge.safetensors"
          ]
        ],
        "conditioning": [
          "CONDITIONING"
        ],
        "image": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "preprocessor": [
          [
            "None",
            "canny",
            "lineart",
            "lineart_coarse",
            "lineart_anime",
            "lineart_manga",
            "scribble",
            "scribble_hed",
            "hed",
            "hed_safe",
            "pidi",
            "pidi_safe",
            "mlsd",
            "openpose",
            "pose",
            "dwpose",
            "normalmap_bae",
            "normalmap_midas",
            "depth_midas",
            "depth",
            "depth_zoe",
            "seg_ofcoco",
            "seg_ofade20k",
            "seg_ufade20k",
            "tile"
          ]
        ]
      },
      "optional": {
        "control_net_override": [
          "STRING",
          {
            "default": "None"
          }
        ],
        "timestep_keyframe": [
          "TIMESTEP_KEYFRAME"
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ],
        "enabled": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "AV_ControlNetEfficientLoader",
    "display_name": "ControlNet Loader",
    "description": "",
    "category": "Art Venture/Loaders",
    "output_node": false
  },
  "AV_ControlNetEfficientLoaderAdvanced": {
    "input": {
      "required": {
        "control_net_name": [
          [
            "None",
            "SD1.5/animatediff/v3_sd15_sparsectrl_rgb.ckpt",
            "canny.safetensors",
            "control-lora-canny-rank256.safetensors",
            "control-lora-depth-rank256.safetensors",
            "control-lora-sketch-rank256.safetensors",
            "control_v11e_sd15_ip2p.pth",
            "control_v11f1e_sd15_tile.safetensors",
            "control_v11f1p_sd15_depth.pth",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny.pth",
            "control_v11p_sd15_lineart.pth",
            "control_v11p_sd15_openpose.pth",
            "control_v11p_sd15_seg.pth",
            "control_v1p_sd15_qrcode_monster.safetensors",
            "controlnet-canny-sdxl-1.0-mid.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusion_pytorch_model.fp16.safetensors",
            "mistoLine_fp16.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_softedge.safetensors"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "image": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "preprocessor": [
          [
            "None",
            "canny",
            "lineart",
            "lineart_coarse",
            "lineart_anime",
            "lineart_manga",
            "scribble",
            "scribble_hed",
            "hed",
            "hed_safe",
            "pidi",
            "pidi_safe",
            "mlsd",
            "openpose",
            "pose",
            "dwpose",
            "normalmap_bae",
            "normalmap_midas",
            "depth_midas",
            "depth",
            "depth_zoe",
            "seg_ofcoco",
            "seg_ofade20k",
            "seg_ufade20k",
            "tile"
          ]
        ]
      },
      "optional": {
        "control_net_override": [
          "STRING",
          {
            "default": "None"
          }
        ],
        "timestep_keyframe": [
          "TIMESTEP_KEYFRAME"
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ],
        "enabled": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "positive",
      "negative"
    ],
    "name": "AV_ControlNetEfficientLoaderAdvanced",
    "display_name": "ControlNet Loader Adv.",
    "description": "",
    "category": "Art Venture/Loaders",
    "output_node": false
  },
  "AV_ControlNetEfficientStacker": {
    "input": {
      "required": {
        "control_net_name": [
          [
            "None",
            "Auto: sd15",
            "Auto: sdxl",
            "Auto: sdxl_t2i",
            "SD1.5/animatediff/v3_sd15_sparsectrl_rgb.ckpt",
            "canny.safetensors",
            "control-lora-canny-rank256.safetensors",
            "control-lora-depth-rank256.safetensors",
            "control-lora-sketch-rank256.safetensors",
            "control_v11e_sd15_ip2p.pth",
            "control_v11f1e_sd15_tile.safetensors",
            "control_v11f1p_sd15_depth.pth",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny.pth",
            "control_v11p_sd15_lineart.pth",
            "control_v11p_sd15_openpose.pth",
            "control_v11p_sd15_seg.pth",
            "control_v1p_sd15_qrcode_monster.safetensors",
            "controlnet-canny-sdxl-1.0-mid.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusion_pytorch_model.fp16.safetensors",
            "mistoLine_fp16.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_softedge.safetensors"
          ]
        ],
        "image": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "preprocessor": [
          [
            "None",
            "canny",
            "lineart",
            "lineart_coarse",
            "lineart_anime",
            "lineart_manga",
            "scribble",
            "scribble_hed",
            "hed",
            "hed_safe",
            "pidi",
            "pidi_safe",
            "mlsd",
            "openpose",
            "pose",
            "dwpose",
            "normalmap_bae",
            "normalmap_midas",
            "depth_midas",
            "depth",
            "depth_zoe",
            "seg_ofcoco",
            "seg_ofade20k",
            "seg_ufade20k",
            "tile"
          ]
        ]
      },
      "optional": {
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ],
        "control_net_override": [
          "STRING",
          {
            "default": "None"
          }
        ],
        "timestep_keyframe": [
          "TIMESTEP_KEYFRAME"
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ],
        "enabled": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "CONTROL_NET_STACK"
    ],
    "output_is_list": [false],
    "output_name": [
      "CNET_STACK"
    ],
    "name": "AV_ControlNetEfficientStacker",
    "display_name": "ControlNet Stacker Adv.",
    "description": "",
    "category": "Art Venture/Loaders",
    "output_node": false
  },
  "AV_ControlNetEfficientStackerSimple": {
    "input": {
      "required": {
        "control_net_name": [
          [
            "None",
            "Auto: sd15",
            "Auto: sdxl",
            "Auto: sdxl_t2i",
            "SD1.5/animatediff/v3_sd15_sparsectrl_rgb.ckpt",
            "canny.safetensors",
            "control-lora-canny-rank256.safetensors",
            "control-lora-depth-rank256.safetensors",
            "control-lora-sketch-rank256.safetensors",
            "control_v11e_sd15_ip2p.pth",
            "control_v11f1e_sd15_tile.safetensors",
            "control_v11f1p_sd15_depth.pth",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny.pth",
            "control_v11p_sd15_lineart.pth",
            "control_v11p_sd15_openpose.pth",
            "control_v11p_sd15_seg.pth",
            "control_v1p_sd15_qrcode_monster.safetensors",
            "controlnet-canny-sdxl-1.0-mid.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusion_pytorch_model.fp16.safetensors",
            "mistoLine_fp16.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_softedge.safetensors"
          ]
        ],
        "image": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "preprocessor": [
          [
            "None",
            "canny",
            "lineart",
            "lineart_coarse",
            "lineart_anime",
            "lineart_manga",
            "scribble",
            "scribble_hed",
            "hed",
            "hed_safe",
            "pidi",
            "pidi_safe",
            "mlsd",
            "openpose",
            "pose",
            "dwpose",
            "normalmap_bae",
            "normalmap_midas",
            "depth_midas",
            "depth",
            "depth_zoe",
            "seg_ofcoco",
            "seg_ofade20k",
            "seg_ufade20k",
            "tile"
          ]
        ]
      },
      "optional": {
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ],
        "control_net_override": [
          "STRING",
          {
            "default": "None"
          }
        ],
        "timestep_keyframe": [
          "TIMESTEP_KEYFRAME"
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ],
        "enabled": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "CONTROL_NET_STACK"
    ],
    "output_is_list": [false],
    "output_name": [
      "CNET_STACK"
    ],
    "name": "AV_ControlNetEfficientStackerSimple",
    "display_name": "ControlNet Stacker",
    "description": "",
    "category": "Art Venture/Loaders",
    "output_node": false
  },
  "AV_ControlNetPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "preprocessor": [
          [
            "None",
            "tile",
            "canny",
            "lineart",
            "lineart_coarse",
            "lineart_anime",
            "lineart_manga",
            "scribble",
            "scribble_hed",
            "hed",
            "hed_safe",
            "pidi",
            "pidi_safe",
            "mlsd",
            "openpose",
            "pose",
            "dwpose",
            "normalmap_bae",
            "normalmap_midas",
            "depth_midas",
            "depth",
            "depth_zoe",
            "seg_ofcoco",
            "seg_ofade20k",
            "seg_ufade20k",
            "tile"
          ]
        ],
        "sd_version": [
          [
            "sd15",
            "sdxl",
            "sdxl_t2i"
          ]
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ],
        "preprocessor_override": [
          "STRING",
          {
            "default": "None"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "CNET_NAME"
    ],
    "name": "AV_ControlNetPreprocessor",
    "display_name": "ControlNet Preprocessor",
    "description": "",
    "category": "Art Venture/Loaders",
    "output_node": false
  },
  "AV_IPAdapter": {
    "input": {
      "required": {
        "ip_adapter_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15.bin",
            "ip-adapter-faceid-plusv2_sd15.bin",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl.bin",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid-portrait-v11_sd15.bin",
            "ip-adapter-faceid-portrait_sdxl.bin",
            "ip-adapter-faceid_sd15.bin",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl.bin",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "ip-adapter-full-face_sd15.safetensors",
            "ip-adapter-plus-face_sd15.safetensors",
            "ip-adapter-plus-face_sdxl_vit-h.safetensors",
            "ip-adapter-plus_sd15.safetensors",
            "ip-adapter-plus_sdxl_vit-h.safetensors",
            "ip-adapter.bin",
            "ip-adapter_sd15.safetensors",
            "ip-adapter_sd15_light_v11.bin",
            "ip-adapter_sd15_vit-G.safetensors",
            "ip-adapter_sdxl.safetensors",
            "ip-adapter_sdxl_vit-h.safetensors"
          ]
        ],
        "clip_name": [
          [
            "None",
            "CLIP-ViT-H-14-laion2B-s32B-b79K.safetensors"
          ]
        ],
        "model": [
          "MODEL"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "noise": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "ip_adapter_opt": [
          "IPADAPTER"
        ],
        "clip_vision_opt": [
          "CLIP_VISION"
        ],
        "attn_mask": [
          "MASK"
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "weight_type": [
          [
            "standard",
            "prompt is more important",
            "style transfer (SDXL only)"
          ],
          {
            "default": "standard"
          }
        ],
        "enabled": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "IPADAPTER",
      "CLIP_VISION"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "model",
      "pipeline",
      "clip_vision"
    ],
    "name": "AV_IPAdapter",
    "display_name": "IP Adapter Apply",
    "description": "",
    "category": "Art Venture/IP Adapter",
    "output_node": false
  },
  "AV_IPAdapterPipe": {
    "input": {
      "required": {
        "ip_adapter_name": [
          [
            "ip-adapter-faceid-plus_sd15.bin",
            "ip-adapter-faceid-plusv2_sd15.bin",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl.bin",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid-portrait-v11_sd15.bin",
            "ip-adapter-faceid-portrait_sdxl.bin",
            "ip-adapter-faceid_sd15.bin",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl.bin",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "ip-adapter-full-face_sd15.safetensors",
            "ip-adapter-plus-face_sd15.safetensors",
            "ip-adapter-plus-face_sdxl_vit-h.safetensors",
            "ip-adapter-plus_sd15.safetensors",
            "ip-adapter-plus_sdxl_vit-h.safetensors",
            "ip-adapter.bin",
            "ip-adapter_sd15.safetensors",
            "ip-adapter_sd15_light_v11.bin",
            "ip-adapter_sd15_vit-G.safetensors",
            "ip-adapter_sdxl.safetensors",
            "ip-adapter_sdxl_vit-h.safetensors"
          ]
        ],
        "clip_name": [
          [
            "CLIP-ViT-H-14-laion2B-s32B-b79K.safetensors"
          ]
        ]
      }
    },
    "output": [
      "IPADAPTER"
    ],
    "output_is_list": [false],
    "output_name": "pipeline",
    "name": "AV_IPAdapterPipe",
    "display_name": "IP Adapter Pipe",
    "description": "",
    "category": "Art Venture/IP Adapter",
    "output_node": false
  },
  "AV_StyleApply": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "preset": [
          [
            "LIGHT - SD1.5 only (low strength)",
            "STANDARD (medium strength)",
            "VIT-G (medium strength)",
            "PLUS (high strength)",
            "PLUS FACE (portraits)",
            "FULL FACE - SD1.5 only (portraits stronger)"
          ]
        ],
        "data": [
          "STRING",
          {
            "placeholder": "[{\"url\": \"http://domain/path/image.png\", \"weight\": 1}]",
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0.5,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer (SDXL)",
            "composition (SDXL)"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ],
        "enabled": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL",
      "IMAGE"
    ],
    "name": "AV_StyleApply",
    "display_name": "AV Style Apply",
    "description": "",
    "category": "Art Venture/Style",
    "output_node": false
  },
  "ISNetLoader": {
    "input": {
      "required": {
        "model_name": [
          []
        ],
        "model_override": [
          "STRING",
          {
            "default": "None"
          }
        ]
      }
    },
    "output": [
      "ISNET_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "ISNET_MODEL"
    ],
    "name": "ISNetLoader",
    "display_name": "ISNet Loader",
    "description": "",
    "category": "Art Venture/Segmentation",
    "output_node": false
  },
  "ISNetSegment": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "device_mode": [
          [
            "AUTO",
            "Prefer GPU",
            "CPU"
          ]
        ],
        "enabled": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "isnet_model": [
          "ISNET_MODEL"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "segmented",
      "mask"
    ],
    "name": "ISNetSegment",
    "display_name": "ISNet Segment",
    "description": "",
    "category": "Art Venture/Segmentation",
    "output_node": false
  },
  "AV_SAMLoader": {
    "input": {
      "required": {
        "model_name": [
          [
            "sam_vit_b_01ec64.pth",
            "sam_vit_h_4b8939.pth"
          ]
        ]
      }
    },
    "output": [
      "AV_SAM_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "sam_model"
    ],
    "name": "AV_SAMLoader",
    "display_name": "SAM Loader",
    "description": "",
    "category": "Art Venture/Segmentation",
    "output_node": false
  },
  "GetSAMEmbedding": {
    "input": {
      "required": {
        "sam_model": [
          "AV_SAM_MODEL"
        ],
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "device_mode": [
          [
            "AUTO",
            "Prefer GPU",
            "CPU"
          ]
        ]
      }
    },
    "output": [
      "SAM_EMBEDDING"
    ],
    "output_is_list": [false],
    "output_name": [
      "SAM_EMBEDDING"
    ],
    "name": "GetSAMEmbedding",
    "display_name": "Get SAM Embedding",
    "description": "",
    "category": "Art Venture/Segmentation",
    "output_node": false
  },
  "SAMEmbeddingToImage": {
    "input": {
      "required": {
        "embedding": [
          "SAM_EMBEDDING"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "SAMEmbeddingToImage",
    "display_name": "SAM Embedding to Image",
    "description": "",
    "category": "Art Venture/Segmentation",
    "output_node": false
  },
  "LaMaInpaint": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ]
      },
      "optional": {
        "device_mode": [
          [
            "AUTO",
            "Prefer GPU",
            "CPU"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "LaMaInpaint",
    "display_name": "LaMa Remove Object",
    "description": "",
    "category": "Art Venture/Inpainting",
    "output_node": false
  },
  "PrepareImageAndMaskForInpaint": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "mask_blur": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 64
          }
        ],
        "inpaint_masked": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "mask_padding": [
          "INT",
          {
            "default": 32,
            "min": 0,
            "max": 256
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "IMAGE",
      "CROP_REGION"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "inpaint_image",
      "inpaint_mask",
      "overlay_image",
      "crop_region"
    ],
    "name": "PrepareImageAndMaskForInpaint",
    "display_name": "Prepare Image & Mask for Inpaint",
    "description": "",
    "category": "Art Venture/Inpainting",
    "output_node": false
  },
  "OverlayInpaintedLatent": {
    "input": {
      "required": {
        "original": [
          "LATENT"
        ],
        "inpainted": [
          "LATENT"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "OverlayInpaintedLatent",
    "display_name": "Overlay Inpainted Latent",
    "description": "",
    "category": "Art Venture/Inpainting",
    "output_node": false
  },
  "OverlayInpaintedImage": {
    "input": {
      "required": {
        "inpainted": [
          "IMAGE"
        ],
        "overlay_image": [
          "IMAGE"
        ],
        "crop_region": [
          "CROP_REGION"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "OverlayInpaintedImage",
    "display_name": "Overlay Inpainted Image",
    "description": "",
    "category": "Art Venture/Inpainting",
    "output_node": false
  },
  "LoadVideoFromUrl": {
    "input": {
      "required": {
        "video": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "force_rate": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 60,
            "step": 1
          }
        ],
        "force_size": [
          [
            "Disabled",
            "Custom Height",
            "Custom Width",
            "Custom",
            "256x?",
            "?x256",
            "256x256",
            "512x?",
            "?x512",
            "512x512"
          ]
        ],
        "custom_width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "custom_height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "frame_load_cap": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "skip_first_frames": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "select_every_nth": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 9007199254740991,
            "step": 1
          }
        ]
      },
      "optional": {
        "meta_batch": [
          "VHS_BatchManager"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "IMAGE",
      "INT",
      "BOOLEAN"
    ],
    "output_is_list": [true, true, false],
    "output_name": [
      "frames",
      "frame_count",
      "has_video"
    ],
    "name": "LoadVideoFromUrl",
    "display_name": "Load Video From Url",
    "description": "",
    "category": "Art Venture/Loaders",
    "output_node": false
  },
  "AV_FaceDetailer": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "bbox_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "bbox_dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "bbox_crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 10,
            "step": 0.1
          }
        ],
        "sam_detection_hint": [
          [
            "center-1",
            "horizontal-2",
            "vertical-2",
            "rect-4",
            "diamond-4",
            "mask-area",
            "mask-points",
            "mask-point-bbox",
            "none"
          ]
        ],
        "sam_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "sam_threshold": [
          "FLOAT",
          {
            "default": 0.93,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "sam_bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "sam_mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "sam_mask_hint_use_negative": [
          [
            "False",
            "Small",
            "Outter"
          ]
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 16384,
            "step": 1,
            "default": 10
          }
        ],
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "sam_model_opt": [
          "SAM_MODEL"
        ],
        "segm_detector_opt": [
          "SEGM_DETECTOR"
        ],
        "detailer_hook": [
          "DETAILER_HOOK"
        ],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "enabled": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "MASK",
      "DETAILER_PIPE",
      "IMAGE"
    ],
    "output_is_list": [false, true, true, false, false, true],
    "output_name": [
      "image",
      "cropped_refined",
      "cropped_enhanced_alpha",
      "mask",
      "detailer_pipe",
      "cnet_images"
    ],
    "name": "AV_FaceDetailer",
    "display_name": "FaceDetailer (AV)",
    "description": "",
    "category": "ArtVenture/Detailer",
    "output_node": false
  },
  "AV_FaceDetailerPipe": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "detailer_pipe": [
          "DETAILER_PIPE"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "bbox_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "bbox_dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "bbox_crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 10,
            "step": 0.1
          }
        ],
        "sam_detection_hint": [
          [
            "center-1",
            "horizontal-2",
            "vertical-2",
            "rect-4",
            "diamond-4",
            "mask-area",
            "mask-points",
            "mask-point-bbox",
            "none"
          ]
        ],
        "sam_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "sam_threshold": [
          "FLOAT",
          {
            "default": 0.93,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "sam_bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "sam_mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "sam_mask_hint_use_negative": [
          [
            "False",
            "Small",
            "Outter"
          ]
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 16384,
            "step": 1,
            "default": 10
          }
        ],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 1
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "enabled": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "MASK",
      "DETAILER_PIPE",
      "IMAGE"
    ],
    "output_is_list": [false, true, true, false, false, true],
    "output_name": [
      "image",
      "cropped_refined",
      "cropped_enhanced_alpha",
      "mask",
      "detailer_pipe",
      "cnet_images"
    ],
    "name": "AV_FaceDetailerPipe",
    "display_name": "FaceDetailerPipe (AV)",
    "description": "",
    "category": "ArtVenture/Detailer",
    "output_node": false
  },
  "AV_OpenAIApi": {
    "input": {
      "required": {
        "openai_api_key": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "endpoint": [
          "STRING",
          {
            "multiline": false,
            "default": "https://api.openai.com/v1"
          }
        ]
      }
    },
    "output": [
      "LLM_API"
    ],
    "output_is_list": [false],
    "output_name": [
      "LLM_API"
    ],
    "name": "AV_OpenAIApi",
    "display_name": "OpenAI API",
    "description": "",
    "category": "ArtVenture/LLM",
    "output_node": false
  },
  "AV_ClaudeApi": {
    "input": {
      "required": {
        "claude_api_key": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "endpoint": [
          "STRING",
          {
            "multiline": false,
            "default": "https://api.anthropic.com/v1"
          }
        ],
        "version": [
          [
            "2023-06-01"
          ],
          {
            "default": "2023-06-01"
          }
        ]
      }
    },
    "output": [
      "LLM_API"
    ],
    "output_is_list": [false],
    "output_name": [
      "llm_api"
    ],
    "name": "AV_ClaudeApi",
    "display_name": "Claude API",
    "description": "",
    "category": "ArtVenture/LLM",
    "output_node": false
  },
  "AV_AwsBedrockClaudeApi": {
    "input": {
      "required": {
        "aws_access_key_id": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "aws_secret_access_key": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "aws_session_token": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "region": [
          [
            "us-east-1",
            "us-west-2",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-northeast-1",
            "eu-central-1",
            "eu-west-3",
            "eu-west-1",
            "ap-south-3"
          ],
          {
            "default": "us-east-1"
          }
        ],
        "version": [
          [
            "bedrock-2023-05-31"
          ],
          {
            "default": "bedrock-2023-05-31"
          }
        ]
      }
    },
    "output": [
      "LLM_API"
    ],
    "output_is_list": [false],
    "output_name": [
      "llm_api"
    ],
    "name": "AV_AwsBedrockClaudeApi",
    "display_name": "AWS Bedrock Claude API",
    "description": "",
    "category": "ArtVenture/LLM",
    "output_node": false
  },
  "AV_AwsBedrockMistralApi": {
    "input": {
      "required": {
        "aws_access_key_id": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "aws_secret_access_key": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "aws_session_token": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "region": [
          [
            "us-east-1",
            "us-west-2",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-northeast-1",
            "eu-central-1",
            "eu-west-3",
            "eu-west-1",
            "ap-south-3"
          ],
          {
            "default": "us-east-1"
          }
        ]
      }
    },
    "output": [
      "LLM_API"
    ],
    "output_is_list": [false],
    "output_name": [
      "llm_api"
    ],
    "name": "AV_AwsBedrockMistralApi",
    "display_name": "AWS Bedrock Mistral API",
    "description": "",
    "category": "ArtVenture/LLM",
    "output_node": false
  },
  "AV_LLMApiConfig": {
    "input": {
      "required": {
        "model": [
          [
            "gpt-3.5-turbo",
            "gpt-3.5-turbo-16k",
            "gpt-4-turbo",
            "gpt-4-vision-preview",
            "gpt-4-turbo-preview",
            "gpt-4-0125-preview",
            "gpt-4-1106-preview",
            "gpt-4-0613",
            "gpt-4",
            "claude-3-opus-20240229",
            "claude-3-sonnet-20240229",
            "claude-3-haiku-20240307",
            "claude-2.1",
            "anthropic.claude-3-haiku-20240307-v1:0",
            "anthropic.claude-3-sonnet-20240229-v1:0",
            "anthropic.claude-3-opus-20240229-v1:0",
            "anthropic.claude-v2",
            "anthropic.claude-v2.1",
            "mistral.mistral-7b-instruct-v0:2",
            "mistral.mixtral-8x7b-instruct-v0:1",
            "mistral.mistral-large-2402-v1:0"
          ],
          {
            "default": "gpt-4-turbo"
          }
        ],
        "max_token": [
          "INT",
          {
            "default": 1024
          }
        ],
        "temperature": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "LLM_CONFIG"
    ],
    "output_is_list": [false],
    "output_name": [
      "llm_config"
    ],
    "name": "AV_LLMApiConfig",
    "display_name": "LLM API Config",
    "description": "",
    "category": "ArtVenture/LLM",
    "output_node": false
  },
  "AV_LLMMessage": {
    "input": {
      "required": {
        "role": [
          [
            "system",
            "user",
            "assistant"
          ]
        ],
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ],
        "messages": [
          "LLM_MESSAGE"
        ]
      }
    },
    "output": [
      "LLM_MESSAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "messages"
    ],
    "name": "AV_LLMMessage",
    "display_name": "LLM Message",
    "description": "",
    "category": "ArtVenture/LLM",
    "output_node": false
  },
  "AV_LLMChat": {
    "input": {
      "required": {
        "messages": [
          "LLM_MESSAGE"
        ],
        "api": [
          "LLM_API"
        ],
        "config": [
          "LLM_CONFIG"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "response"
    ],
    "name": "AV_LLMChat",
    "display_name": "LLM Chat",
    "description": "",
    "category": "ArtVenture/LLM",
    "output_node": false
  },
  "AV_LLMCompletion": {
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "api": [
          "LLM_API"
        ],
        "config": [
          "LLM_CONFIG"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "response"
    ],
    "name": "AV_LLMCompletion",
    "display_name": "LLM Completion",
    "description": "",
    "category": "ArtVenture/LLM",
    "output_node": false
  },
  "Load Nai Styles Complex CSV": {
    "input": {
      "required": {
        "naifilters": [
          [
            "none",
            "NAI: SCIFI Filter one",
            "NAI: SCIFI Filter two"
          ]
        ],
        "naistyles": [
          [
            "none",
            "NAI: SCIFI Vibrate",
            "NAI: SCIFI Gloss",
            "NAI: SCIFI Retro"
          ]
        ],
        "naitypes": [
          [
            "none",
            "NAI: SCIFI Type 1",
            "NAI: SCIFI Type 2"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "Full prompt",
      "Short prompt"
    ],
    "name": "Load Nai Styles Complex CSV",
    "display_name": "✴️ U-NAI Styles Launcher",
    "description": "",
    "category": "✴️ Universal NAI Nodes",
    "output_node": false
  },
  "Universal_Styler_Node": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "mute": [
          [
            "On",
            "Off"
          ]
        ],
        "mix": [
          "INT",
          {
            "default": 50,
            "min": 0,
            "max": 100,
            "step": 1,
            "display": "slider"
          }
        ],
        "float_field": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01,
            "round": 0.001,
            "display": "slider"
          }
        ],
        "string_field": [
          "STRING",
          {
            "multiline": true,
            "default": "Define Object"
          }
        ],
        "string_field2": [
          "STRING",
          {
            "multiline": true,
            "default": "Define Background"
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "STRING",
      "STRING",
      "INT"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "Compiled prompt",
      "Value",
      "Value2",
      "mix"
    ],
    "name": "Universal_Styler_Node",
    "display_name": "✴️ U-NAI Styler - v0.2.1",
    "description": "",
    "category": "✴️ Universal NAI Nodes",
    "output_node": false
  },
  "concat": {
    "input": {
      "required": {
        "text1": [
          "STRING",
          {
            "multiline": false,
            "default": "Hello"
          }
        ],
        "text2": [
          "STRING",
          {
            "multiline": false,
            "default": "World"
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "concat",
    "display_name": "✴️ U-NAI Fields Concatenate",
    "description": "",
    "category": "✴️ Universal NAI Nodes",
    "output_node": false
  },
  "EagleImageNode": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "int_field": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096,
            "step": 64
          }
        ],
        "float_field": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "print_to_screen": [
          [
            "enable",
            "disable"
          ]
        ],
        "string_field": [
          "STRING",
          {
            "multiline": false,
            "default": "Hello World!"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "EagleImageNode",
    "display_name": "Eagle Image Node for PNGInfo",
    "description": "",
    "category": "copilot",
    "output_node": false
  },
  "SDXLResolutionPresets": {
    "input": {
      "required": {
        "resolution": [
          [
            "Square (1024x1024)",
            "Cinematic (1536x640)",
            "Cinematic (640x1536)",
            "Widescreen (1344x768)",
            "Widescreen (768x1344)",
            "Photo (1216x832)",
            "Photo (832x1216)",
            "Portrait (1152x896)"
          ],
          {
            "default": "Square (1024x1024)"
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "width",
      "height"
    ],
    "name": "SDXLResolutionPresets",
    "display_name": "SDXL Resolution Presets (ws)",
    "description": "",
    "category": "copilot",
    "output_node": false
  },
  "SDXLPromptStylerAdvanced": {
    "input": {
      "required": {
        "text_positive_g": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_positive_l": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "base",
            "sai-3d-model",
            "sai-analog film",
            "sai-anime",
            "sai-cinematic",
            "sai-comic book",
            "sai-craft clay",
            "sai-digital art",
            "sai-enhance",
            "sai-fantasy art",
            "sai-isometric",
            "sai-line art",
            "sai-lowpoly",
            "sai-neonpunk",
            "sai-origami",
            "sai-photographic",
            "sai-pixel art",
            "sai-texture",
            "ads-advertising",
            "ads-automotive",
            "ads-corporate",
            "ads-fashion editorial",
            "ads-food photography",
            "ads-gourmet food photography",
            "ads-luxury",
            "ads-real estate",
            "ads-retail",
            "artstyle-abstract",
            "artstyle-abstract expressionism",
            "artstyle-art deco",
            "artstyle-art nouveau",
            "artstyle-constructivist",
            "artstyle-cubist",
            "artstyle-expressionist",
            "artstyle-graffiti",
            "artstyle-hyperrealism",
            "artstyle-impressionist",
            "artstyle-pointillism",
            "artstyle-pop art",
            "artstyle-psychedelic",
            "artstyle-renaissance",
            "artstyle-steampunk",
            "artstyle-surrealist",
            "artstyle-typography",
            "artstyle-watercolor",
            "futuristic-biomechanical",
            "futuristic-biomechanical cyberpunk",
            "futuristic-cybernetic",
            "futuristic-cybernetic robot",
            "futuristic-cyberpunk cityscape",
            "futuristic-futuristic",
            "futuristic-retro cyberpunk",
            "futuristic-retro futurism",
            "futuristic-sci-fi",
            "futuristic-vaporwave",
            "game-bubble bobble",
            "game-cyberpunk game",
            "game-fighting game",
            "game-gta",
            "game-mario",
            "game-minecraft",
            "game-pokemon",
            "game-retro arcade",
            "game-retro game",
            "game-rpg fantasy game",
            "game-strategy game",
            "game-streetfighter",
            "game-zelda",
            "misc-architectural",
            "misc-disco",
            "misc-dreamscape",
            "misc-dystopian",
            "misc-fairy tale",
            "misc-gothic",
            "misc-grunge",
            "misc-horror",
            "misc-kawaii",
            "misc-lovecraftian",
            "misc-macabre",
            "misc-manga",
            "misc-metropolis",
            "misc-minimalist",
            "misc-monochrome",
            "misc-nautical",
            "misc-space",
            "misc-stained glass",
            "misc-techwear fashion",
            "misc-tribal",
            "misc-zentangle",
            "papercraft-collage",
            "papercraft-flat papercut",
            "papercraft-kirigami",
            "papercraft-paper mache",
            "papercraft-paper quilling",
            "papercraft-papercut collage",
            "papercraft-papercut shadow box",
            "papercraft-stacked papercut",
            "papercraft-thick layered papercut",
            "photo-alien",
            "photo-film noir",
            "photo-glamour",
            "photo-hdr",
            "photo-iphone photographic",
            "photo-long exposure",
            "photo-neon noir",
            "photo-silhouette",
            "photo-tilt-shift"
          ]
        ],
        "negative_prompt_to": [
          [
            "Both",
            "G only",
            "L only"
          ],
          {
            "default": "Both"
          }
        ],
        "copy_to_l": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "yes",
            "label_off": "no"
          }
        ],
        "log_prompt": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "yes",
            "label_off": "no"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "text_positive_g",
      "text_positive_l",
      "text_positive",
      "text_negative_g",
      "text_negative_l",
      "text_negative"
    ],
    "name": "SDXLPromptStylerAdvanced",
    "display_name": "SDXL Prompt Styler Advanced",
    "description": "",
    "category": "utils",
    "output_node": false
  },
  "ADE_AnimateDiffLoRALoader": {
    "input": {
      "required": {
        "lora_name": [
          [
            "Superspeed.safetensors",
            "animatediffMotion_sdxlV10Beta.ckpt",
            "dynamic_shot_42_rim_light.safetensors",
            "explosiveAnimatediff_v10.safetensors",
            "improvedHumansMotion_refinedHumanMovement.ckpt",
            "temporaldiffMotion_v10.ckpt",
            "v2_lora_ZoomIn.ckpt"
          ]
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "prev_motion_lora": [
          "MOTION_LORA"
        ]
      }
    },
    "output": [
      "MOTION_LORA"
    ],
    "output_is_list": [false],
    "output_name": [
      "MOTION_LORA"
    ],
    "name": "ADE_AnimateDiffLoRALoader",
    "display_name": "Load AnimateDiff LoRA 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓",
    "output_node": false
  },
  "ADE_AnimateDiffSamplingSettings": {
    "input": {
      "required": {
        "batch_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "noise_type": [
          [
            "default",
            "constant",
            "empty",
            "repeated_context",
            "FreeNoise"
          ]
        ],
        "seed_gen": [
          [
            "comfy",
            "auto1111"
          ]
        ],
        "seed_offset": [
          "INT",
          {
            "default": 0,
            "min": -9007199254740991,
            "max": 9007199254740991
          }
        ]
      },
      "optional": {
        "noise_layers": [
          "NOISE_LAYERS"
        ],
        "iteration_opts": [
          "ITERATION_OPTS"
        ],
        "seed_override": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19,
            "forceInput": true
          }
        ],
        "adapt_denoise_steps": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "custom_cfg": [
          "CUSTOM_CFG"
        ],
        "sigma_schedule": [
          "SIGMA_SCHEDULE"
        ]
      }
    },
    "output": [
      "SAMPLE_SETTINGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "settings"
    ],
    "name": "ADE_AnimateDiffSamplingSettings",
    "display_name": "Sample Settings 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓",
    "output_node": false
  },
  "ADE_AnimateDiffKeyframe": {
    "input": {
      "required": {
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "prev_ad_keyframes": [
          "AD_KEYFRAMES"
        ],
        "scale_multival": [
          "MULTIVAL"
        ],
        "effect_multival": [
          "MULTIVAL"
        ],
        "inherit_missing": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "guarantee_steps": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9007199254740991
          }
        ]
      }
    },
    "output": [
      "AD_KEYFRAMES"
    ],
    "output_is_list": [false],
    "output_name": [
      "AD_KEYFRAMES"
    ],
    "name": "ADE_AnimateDiffKeyframe",
    "display_name": "AnimateDiff Keyframe 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓",
    "output_node": false
  },
  "ADE_MultivalDynamic": {
    "input": {
      "required": {
        "float_val": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "mask_optional": [
          "MASK"
        ]
      }
    },
    "output": [
      "MULTIVAL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MULTIVAL"
    ],
    "name": "ADE_MultivalDynamic",
    "display_name": "Multival Dynamic 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/multival",
    "output_node": false
  },
  "ADE_MultivalScaledMask": {
    "input": {
      "required": {
        "min_float_val": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "step": 0.001
          }
        ],
        "max_float_val": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "step": 0.001
          }
        ],
        "mask": [
          "MASK"
        ]
      },
      "optional": {
        "scaling": [
          [
            "absolute",
            "relative"
          ]
        ]
      }
    },
    "output": [
      "MULTIVAL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MULTIVAL"
    ],
    "name": "ADE_MultivalScaledMask",
    "display_name": "Multival Scaled Mask 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/multival",
    "output_node": false
  },
  "ADE_StandardStaticContextOptions": {
    "input": {
      "required": {
        "context_length": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 128
          }
        ],
        "context_overlap": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 128
          }
        ]
      },
      "optional": {
        "fuse_method": [
          [
            "pyramid",
            "relative",
            "flat",
            "delayed reverse sawtooth",
            "pyramid-sigma",
            "pyramid-sigma inverse",
            "gauss-sigma",
            "gauss-sigma inverse",
            "random"
          ]
        ],
        "use_on_equal_length": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "guarantee_steps": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "prev_context": [
          "CONTEXT_OPTIONS"
        ],
        "view_opts": [
          "VIEW_OPTS"
        ]
      }
    },
    "output": [
      "CONTEXT_OPTIONS"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONTEXT_OPTS"
    ],
    "name": "ADE_StandardStaticContextOptions",
    "display_name": "Context Options◆Standard Static 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/context opts",
    "output_node": false
  },
  "ADE_StandardUniformContextOptions": {
    "input": {
      "required": {
        "context_length": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 128
          }
        ],
        "context_stride": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 32
          }
        ],
        "context_overlap": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 128
          }
        ]
      },
      "optional": {
        "fuse_method": [
          [
            "pyramid",
            "flat",
            "delayed reverse sawtooth",
            "pyramid-sigma",
            "pyramid-sigma inverse",
            "gauss-sigma",
            "gauss-sigma inverse",
            "random"
          ]
        ],
        "use_on_equal_length": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "guarantee_steps": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "prev_context": [
          "CONTEXT_OPTIONS"
        ],
        "view_opts": [
          "VIEW_OPTS"
        ]
      }
    },
    "output": [
      "CONTEXT_OPTIONS"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONTEXT_OPTS"
    ],
    "name": "ADE_StandardUniformContextOptions",
    "display_name": "Context Options◆Standard Uniform 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/context opts",
    "output_node": false
  },
  "ADE_LoopedUniformContextOptions": {
    "input": {
      "required": {
        "context_length": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 128
          }
        ],
        "context_stride": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 32
          }
        ],
        "context_overlap": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 128
          }
        ],
        "closed_loop": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "fuse_method": [
          [
            "pyramid",
            "flat",
            "delayed reverse sawtooth",
            "pyramid-sigma",
            "pyramid-sigma inverse",
            "gauss-sigma",
            "gauss-sigma inverse",
            "random"
          ]
        ],
        "use_on_equal_length": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "guarantee_steps": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "prev_context": [
          "CONTEXT_OPTIONS"
        ],
        "view_opts": [
          "VIEW_OPTS"
        ]
      }
    },
    "output": [
      "CONTEXT_OPTIONS"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONTEXT_OPTS"
    ],
    "name": "ADE_LoopedUniformContextOptions",
    "display_name": "Context Options◆Looped Uniform 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/context opts",
    "output_node": false
  },
  "ADE_ViewsOnlyContextOptions": {
    "input": {
      "required": {
        "view_opts_req": [
          "VIEW_OPTS"
        ]
      },
      "optional": {
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "guarantee_steps": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "prev_context": [
          "CONTEXT_OPTIONS"
        ]
      }
    },
    "output": [
      "CONTEXT_OPTIONS"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONTEXT_OPTS"
    ],
    "name": "ADE_ViewsOnlyContextOptions",
    "display_name": "Context Options◆Views Only [VRAM⇈] 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/context opts",
    "output_node": false
  },
  "ADE_BatchedContextOptions": {
    "input": {
      "required": {
        "context_length": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 128
          }
        ]
      },
      "optional": {
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "guarantee_steps": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "prev_context": [
          "CONTEXT_OPTIONS"
        ]
      }
    },
    "output": [
      "CONTEXT_OPTIONS"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONTEXT_OPTS"
    ],
    "name": "ADE_BatchedContextOptions",
    "display_name": "Context Options◆Batched [Non-AD] 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/context opts",
    "output_node": false
  },
  "ADE_AnimateDiffUniformContextOptions": {
    "input": {
      "required": {
        "context_length": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 128
          }
        ],
        "context_stride": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 32
          }
        ],
        "context_overlap": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 128
          }
        ],
        "context_schedule": [
          [
            "uniform"
          ]
        ],
        "closed_loop": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "fuse_method": [
          [
            "pyramid",
            "flat",
            "delayed reverse sawtooth",
            "pyramid-sigma",
            "pyramid-sigma inverse",
            "gauss-sigma",
            "gauss-sigma inverse",
            "random"
          ],
          {
            "default": "flat"
          }
        ],
        "use_on_equal_length": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "guarantee_steps": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "prev_context": [
          "CONTEXT_OPTIONS"
        ],
        "view_opts": [
          "VIEW_OPTS"
        ]
      }
    },
    "output": [
      "CONTEXT_OPTIONS"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONTEXT_OPTS"
    ],
    "name": "ADE_AnimateDiffUniformContextOptions",
    "display_name": "Context Options◆Looped Uniform 🎭🅐🅓",
    "description": "",
    "category": "",
    "output_node": false
  },
  "ADE_StandardStaticViewOptions": {
    "input": {
      "required": {
        "view_length": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 128
          }
        ],
        "view_overlap": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 128
          }
        ]
      },
      "optional": {
        "fuse_method": [
          [
            "pyramid",
            "flat",
            "delayed reverse sawtooth",
            "pyramid-sigma",
            "pyramid-sigma inverse",
            "gauss-sigma",
            "gauss-sigma inverse",
            "random"
          ]
        ]
      }
    },
    "output": [
      "VIEW_OPTS"
    ],
    "output_is_list": [false],
    "output_name": [
      "VIEW_OPTS"
    ],
    "name": "ADE_StandardStaticViewOptions",
    "display_name": "View Options◆Standard Static 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/context opts/view opts",
    "output_node": false
  },
  "ADE_StandardUniformViewOptions": {
    "input": {
      "required": {
        "view_length": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 128
          }
        ],
        "view_stride": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 32
          }
        ],
        "view_overlap": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 128
          }
        ]
      },
      "optional": {
        "fuse_method": [
          [
            "pyramid",
            "flat",
            "delayed reverse sawtooth",
            "pyramid-sigma",
            "pyramid-sigma inverse",
            "gauss-sigma",
            "gauss-sigma inverse",
            "random"
          ]
        ]
      }
    },
    "output": [
      "VIEW_OPTS"
    ],
    "output_is_list": [false],
    "output_name": [
      "VIEW_OPTS"
    ],
    "name": "ADE_StandardUniformViewOptions",
    "display_name": "View Options◆Standard Uniform 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/context opts/view opts",
    "output_node": false
  },
  "ADE_LoopedUniformViewOptions": {
    "input": {
      "required": {
        "view_length": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 128
          }
        ],
        "view_stride": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 32
          }
        ],
        "view_overlap": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 128
          }
        ],
        "closed_loop": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "fuse_method": [
          [
            "pyramid",
            "flat",
            "delayed reverse sawtooth",
            "pyramid-sigma",
            "pyramid-sigma inverse",
            "gauss-sigma",
            "gauss-sigma inverse",
            "random"
          ]
        ],
        "use_on_equal_length": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "VIEW_OPTS"
    ],
    "output_is_list": [false],
    "output_name": [
      "VIEW_OPTS"
    ],
    "name": "ADE_LoopedUniformViewOptions",
    "display_name": "View Options◆Looped Uniform 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/context opts/view opts",
    "output_node": false
  },
  "ADE_IterationOptsDefault": {
    "input": {
      "required": {
        "iterations": [
          "INT",
          {
            "default": 1,
            "min": 1
          }
        ]
      },
      "optional": {
        "iter_batch_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "iter_seed_offset": [
          "INT",
          {
            "default": 0,
            "min": -9007199254740991,
            "max": 9007199254740991
          }
        ]
      }
    },
    "output": [
      "ITERATION_OPTS"
    ],
    "output_is_list": [false],
    "output_name": [
      "ITERATION_OPTS"
    ],
    "name": "ADE_IterationOptsDefault",
    "display_name": "Default Iteration Options 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/iteration opts",
    "output_node": false
  },
  "ADE_IterationOptsFreeInit": {
    "input": {
      "required": {
        "iterations": [
          "INT",
          {
            "default": 2,
            "min": 1
          }
        ],
        "filter": [
          [
            "gaussian",
            "butterworth",
            "ideal",
            "box"
          ]
        ],
        "d_s": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "d_t": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "n_butterworth": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 100
          }
        ],
        "sigma_step": [
          "INT",
          {
            "default": 999,
            "min": 1,
            "max": 999
          }
        ],
        "apply_to_1st_iter": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "init_type": [
          [
            "FreeInit [sampler sigma]",
            "FreeInit [model sigma]",
            "DinkInit_v1"
          ]
        ]
      },
      "optional": {
        "iter_batch_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "iter_seed_offset": [
          "INT",
          {
            "default": 1,
            "min": -9007199254740991,
            "max": 9007199254740991
          }
        ]
      }
    },
    "output": [
      "ITERATION_OPTS"
    ],
    "output_is_list": [false],
    "output_name": [
      "ITERATION_OPTS"
    ],
    "name": "ADE_IterationOptsFreeInit",
    "display_name": "FreeInit Iteration Options 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/iteration opts",
    "output_node": false
  },
  "ADE_RegisterLoraHook": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_name": [
          [
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -20,
            "max": 20,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1,
            "min": -20,
            "max": 20,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "LORA_HOOK"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "LORA_HOOK"
    ],
    "name": "ADE_RegisterLoraHook",
    "display_name": "Register LoRA Hook 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/conditioning/register lora hooks",
    "output_node": false
  },
  "ADE_RegisterLoraHookModelOnly": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "lora_name": [
          [
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -20,
            "max": 20,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "LORA_HOOK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL",
      "LORA_HOOK"
    ],
    "name": "ADE_RegisterLoraHookModelOnly",
    "display_name": "Register LoRA Hook (Model Only) 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/conditioning/register lora hooks",
    "output_node": false
  },
  "ADE_RegisterModelAsLoraHook": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -20,
            "max": 20,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1,
            "min": -20,
            "max": 20,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "LORA_HOOK"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "LORA_HOOK"
    ],
    "name": "ADE_RegisterModelAsLoraHook",
    "display_name": "Register Model as LoRA Hook 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/conditioning/register lora hooks",
    "output_node": false
  },
  "ADE_RegisterModelAsLoraHookModelOnly": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -20,
            "max": 20,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "LORA_HOOK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL",
      "LORA_HOOK"
    ],
    "name": "ADE_RegisterModelAsLoraHookModelOnly",
    "display_name": "Register Model as LoRA Hook (MO) 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/conditioning/register lora hooks",
    "output_node": false
  },
  "ADE_CombineLoraHooks": {
    "input": {
      "required": {

      },
      "optional": {
        "lora_hook_A": [
          "LORA_HOOK"
        ],
        "lora_hook_B": [
          "LORA_HOOK"
        ]
      }
    },
    "output": [
      "LORA_HOOK"
    ],
    "output_is_list": [false],
    "output_name": [
      "LORA_HOOK"
    ],
    "name": "ADE_CombineLoraHooks",
    "display_name": "Combine LoRA Hooks [2] 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/conditioning/combine lora hooks",
    "output_node": false
  },
  "ADE_CombineLoraHooksFour": {
    "input": {
      "required": {

      },
      "optional": {
        "lora_hook_A": [
          "LORA_HOOK"
        ],
        "lora_hook_B": [
          "LORA_HOOK"
        ],
        "lora_hook_C": [
          "LORA_HOOK"
        ],
        "lora_hook_D": [
          "LORA_HOOK"
        ]
      }
    },
    "output": [
      "LORA_HOOK"
    ],
    "output_is_list": [false],
    "output_name": [
      "LORA_HOOK"
    ],
    "name": "ADE_CombineLoraHooksFour",
    "display_name": "Combine LoRA Hooks [4] 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/conditioning/combine lora hooks",
    "output_node": false
  },
  "ADE_CombineLoraHooksEight": {
    "input": {
      "required": {

      },
      "optional": {
        "lora_hook_A": [
          "LORA_HOOK"
        ],
        "lora_hook_B": [
          "LORA_HOOK"
        ],
        "lora_hook_C": [
          "LORA_HOOK"
        ],
        "lora_hook_D": [
          "LORA_HOOK"
        ],
        "lora_hook_E": [
          "LORA_HOOK"
        ],
        "lora_hook_F": [
          "LORA_HOOK"
        ],
        "lora_hook_G": [
          "LORA_HOOK"
        ],
        "lora_hook_H": [
          "LORA_HOOK"
        ]
      }
    },
    "output": [
      "LORA_HOOK"
    ],
    "output_is_list": [false],
    "output_name": [
      "LORA_HOOK"
    ],
    "name": "ADE_CombineLoraHooksEight",
    "display_name": "Combine LoRA Hooks [8] 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/conditioning/combine lora hooks",
    "output_node": false
  },
  "ADE_SetLoraHookKeyframe": {
    "input": {
      "required": {
        "lora_hook": [
          "LORA_HOOK"
        ],
        "hook_kf": [
          "LORA_HOOK_KEYFRAMES"
        ]
      }
    },
    "output": [
      "LORA_HOOK"
    ],
    "output_is_list": [false],
    "output_name": [
      "LORA_HOOK"
    ],
    "name": "ADE_SetLoraHookKeyframe",
    "display_name": "Set LoRA Hook Keyframes 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/conditioning",
    "output_node": false
  },
  "ADE_AttachLoraHookToCLIP": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "lora_hook": [
          "LORA_HOOK"
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [false],
    "output_name": [
      "hook_CLIP"
    ],
    "name": "ADE_AttachLoraHookToCLIP",
    "display_name": "Set CLIP LoRA Hook 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/conditioning",
    "output_node": false
  },
  "ADE_LoraHookKeyframe": {
    "input": {
      "required": {
        "strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -20,
            "max": 20,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "guarantee_steps": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9007199254740991
          }
        ]
      },
      "optional": {
        "prev_hook_kf": [
          "LORA_HOOK_KEYFRAMES"
        ]
      }
    },
    "output": [
      "LORA_HOOK_KEYFRAMES"
    ],
    "output_is_list": [false],
    "output_name": [
      "HOOK_KF"
    ],
    "name": "ADE_LoraHookKeyframe",
    "display_name": "LoRA Hook Keyframe 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/conditioning/schedule lora hooks",
    "output_node": false
  },
  "ADE_LoraHookKeyframeInterpolation": {
    "input": {
      "required": {
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "strength_start": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "strength_end": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "interpolation": [
          [
            "linear",
            "ease_in",
            "ease_out",
            "ease_in_out"
          ]
        ],
        "intervals": [
          "INT",
          {
            "default": 5,
            "min": 2,
            "max": 100,
            "step": 1
          }
        ],
        "print_keyframes": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "prev_hook_kf": [
          "LORA_HOOK_KEYFRAMES"
        ]
      }
    },
    "output": [
      "LORA_HOOK_KEYFRAMES"
    ],
    "output_is_list": [false],
    "output_name": [
      "HOOK_KF"
    ],
    "name": "ADE_LoraHookKeyframeInterpolation",
    "display_name": "LoRA Hook Keyframes Interpolation 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/conditioning/schedule lora hooks",
    "output_node": false
  },
  "ADE_LoraHookKeyframeFromStrengthList": {
    "input": {
      "required": {
        "strengths_float": [
          "FLOAT",
          {
            "default": -1,
            "min": -1,
            "step": 0.001,
            "forceInput": true
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "print_keyframes": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "prev_hook_kf": [
          "LORA_HOOK_KEYFRAMES"
        ]
      }
    },
    "output": [
      "LORA_HOOK_KEYFRAMES"
    ],
    "output_is_list": [false],
    "output_name": [
      "HOOK_KF"
    ],
    "name": "ADE_LoraHookKeyframeFromStrengthList",
    "display_name": "LoRA Hook Keyframes From List 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/conditioning/schedule lora hooks",
    "output_node": false
  },
  "ADE_AttachLoraHookToConditioning": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "lora_hook": [
          "LORA_HOOK"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ADE_AttachLoraHookToConditioning",
    "display_name": "Set Model LoRA Hook 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/conditioning/single cond ops",
    "output_node": false
  },
  "ADE_PairedConditioningSetMask": {
    "input": {
      "required": {
        "positive_ADD": [
          "CONDITIONING"
        ],
        "negative_ADD": [
          "CONDITIONING"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "set_cond_area": [
          [
            "default",
            "mask bounds"
          ]
        ]
      },
      "optional": {
        "opt_mask": [
          "MASK"
        ],
        "opt_lora_hook": [
          "LORA_HOOK"
        ],
        "opt_timesteps": [
          "TIMESTEPS_COND"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "positive",
      "negative"
    ],
    "name": "ADE_PairedConditioningSetMask",
    "display_name": "Set Props on Conds 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/conditioning",
    "output_node": false
  },
  "ADE_ConditioningSetMask": {
    "input": {
      "required": {
        "cond_ADD": [
          "CONDITIONING"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "set_cond_area": [
          [
            "default",
            "mask bounds"
          ]
        ]
      },
      "optional": {
        "opt_mask": [
          "MASK"
        ],
        "opt_lora_hook": [
          "LORA_HOOK"
        ],
        "opt_timesteps": [
          "TIMESTEPS_COND"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ADE_ConditioningSetMask",
    "display_name": "Set Props on Cond 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/conditioning/single cond ops",
    "output_node": false
  },
  "ADE_PairedConditioningSetMaskAndCombine": {
    "input": {
      "required": {
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "positive_ADD": [
          "CONDITIONING"
        ],
        "negative_ADD": [
          "CONDITIONING"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "set_cond_area": [
          [
            "default",
            "mask bounds"
          ]
        ]
      },
      "optional": {
        "opt_mask": [
          "MASK"
        ],
        "opt_lora_hook": [
          "LORA_HOOK"
        ],
        "opt_timesteps": [
          "TIMESTEPS_COND"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "positive",
      "negative"
    ],
    "name": "ADE_PairedConditioningSetMaskAndCombine",
    "display_name": "Set Props and Combine Conds 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/conditioning",
    "output_node": false
  },
  "ADE_ConditioningSetMaskAndCombine": {
    "input": {
      "required": {
        "cond": [
          "CONDITIONING"
        ],
        "cond_ADD": [
          "CONDITIONING"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "set_cond_area": [
          [
            "default",
            "mask bounds"
          ]
        ]
      },
      "optional": {
        "opt_mask": [
          "MASK"
        ],
        "opt_lora_hook": [
          "LORA_HOOK"
        ],
        "opt_timesteps": [
          "TIMESTEPS_COND"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ADE_ConditioningSetMaskAndCombine",
    "display_name": "Set Props and Combine Cond 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/conditioning/single cond ops",
    "output_node": false
  },
  "ADE_PairedConditioningSetUnmaskedAndCombine": {
    "input": {
      "required": {
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "positive_DEFAULT": [
          "CONDITIONING"
        ],
        "negative_DEFAULT": [
          "CONDITIONING"
        ]
      },
      "optional": {
        "opt_lora_hook": [
          "LORA_HOOK"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "positive",
      "negative"
    ],
    "name": "ADE_PairedConditioningSetUnmaskedAndCombine",
    "display_name": "Set Unmasked Conds 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/conditioning",
    "output_node": false
  },
  "ADE_ConditioningSetUnmaskedAndCombine": {
    "input": {
      "required": {
        "cond": [
          "CONDITIONING"
        ],
        "cond_DEFAULT": [
          "CONDITIONING"
        ]
      },
      "optional": {
        "opt_lora_hook": [
          "LORA_HOOK"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ADE_ConditioningSetUnmaskedAndCombine",
    "display_name": "Set Unmasked Cond 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/conditioning/single cond ops",
    "output_node": false
  },
  "ADE_TimestepsConditioning": {
    "input": {
      "required": {
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "TIMESTEPS_COND"
    ],
    "output_is_list": [false],
    "output_name": [
      "TIMESTEPS_COND"
    ],
    "name": "ADE_TimestepsConditioning",
    "display_name": "Timesteps Conditioning 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/conditioning",
    "output_node": false
  },
  "ADE_NoiseLayerAdd": {
    "input": {
      "required": {
        "batch_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "noise_type": [
          [
            "default",
            "constant",
            "empty",
            "repeated_context",
            "FreeNoise"
          ]
        ],
        "seed_gen_override": [
          [
            "use existing",
            "comfy",
            "auto1111"
          ]
        ],
        "seed_offset": [
          "INT",
          {
            "default": 0,
            "min": -9007199254740991,
            "max": 9007199254740991
          }
        ],
        "noise_weight": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "prev_noise_layers": [
          "NOISE_LAYERS"
        ],
        "mask_optional": [
          "MASK"
        ],
        "seed_override": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19,
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "NOISE_LAYERS"
    ],
    "output_is_list": [false],
    "output_name": [
      "NOISE_LAYERS"
    ],
    "name": "ADE_NoiseLayerAdd",
    "display_name": "Noise Layer [Add] 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/noise layers",
    "output_node": false
  },
  "ADE_NoiseLayerAddWeighted": {
    "input": {
      "required": {
        "batch_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "noise_type": [
          [
            "default",
            "constant",
            "empty",
            "repeated_context",
            "FreeNoise"
          ]
        ],
        "seed_gen_override": [
          [
            "use existing",
            "comfy",
            "auto1111"
          ]
        ],
        "seed_offset": [
          "INT",
          {
            "default": 0,
            "min": -9007199254740991,
            "max": 9007199254740991
          }
        ],
        "noise_weight": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "balance_multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "prev_noise_layers": [
          "NOISE_LAYERS"
        ],
        "mask_optional": [
          "MASK"
        ],
        "seed_override": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19,
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "NOISE_LAYERS"
    ],
    "output_is_list": [false],
    "output_name": [
      "NOISE_LAYERS"
    ],
    "name": "ADE_NoiseLayerAddWeighted",
    "display_name": "Noise Layer [Add Weighted] 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/noise layers",
    "output_node": false
  },
  "ADE_NoiseLayerReplace": {
    "input": {
      "required": {
        "batch_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "noise_type": [
          [
            "default",
            "constant",
            "empty",
            "repeated_context",
            "FreeNoise"
          ]
        ],
        "seed_gen_override": [
          [
            "use existing",
            "comfy",
            "auto1111"
          ]
        ],
        "seed_offset": [
          "INT",
          {
            "default": 0,
            "min": -9007199254740991,
            "max": 9007199254740991
          }
        ]
      },
      "optional": {
        "prev_noise_layers": [
          "NOISE_LAYERS"
        ],
        "mask_optional": [
          "MASK"
        ],
        "seed_override": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19,
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "NOISE_LAYERS"
    ],
    "output_is_list": [false],
    "output_name": [
      "NOISE_LAYERS"
    ],
    "name": "ADE_NoiseLayerReplace",
    "display_name": "Noise Layer [Replace] 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/noise layers",
    "output_node": false
  },
  "ADE_AnimateDiffSettings": {
    "input": {
      "optional": {
        "pe_adjust": [
          "PE_ADJUST"
        ],
        "weight_adjust": [
          "WEIGHT_ADJUST"
        ]
      }
    },
    "output": [
      "AD_SETTINGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "AD_SETTINGS"
    ],
    "name": "ADE_AnimateDiffSettings",
    "display_name": "AnimateDiff Settings 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/ad settings",
    "output_node": false
  },
  "ADE_AdjustPESweetspotStretch": {
    "input": {
      "required": {
        "sweetspot": [
          "INT",
          {
            "default": 16,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "new_sweetspot": [
          "INT",
          {
            "default": 16,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "print_adjustment": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "prev_pe_adjust": [
          "PE_ADJUST"
        ]
      }
    },
    "output": [
      "PE_ADJUST"
    ],
    "output_is_list": [false],
    "output_name": [
      "PE_ADJUST"
    ],
    "name": "ADE_AdjustPESweetspotStretch",
    "display_name": "Adjust PE [Sweetspot Stretch] 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/ad settings/pe adjust",
    "output_node": false
  },
  "ADE_AdjustPEFullStretch": {
    "input": {
      "required": {
        "pe_stretch": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "print_adjustment": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "prev_pe_adjust": [
          "PE_ADJUST"
        ]
      }
    },
    "output": [
      "PE_ADJUST"
    ],
    "output_is_list": [false],
    "output_name": [
      "PE_ADJUST"
    ],
    "name": "ADE_AdjustPEFullStretch",
    "display_name": "Adjust PE [Full Stretch] 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/ad settings/pe adjust",
    "output_node": false
  },
  "ADE_AdjustPEManual": {
    "input": {
      "required": {
        "cap_initial_pe_length": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "interpolate_pe_to_length": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "initial_pe_idx_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "final_pe_idx_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "print_adjustment": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "prev_pe_adjust": [
          "PE_ADJUST"
        ]
      }
    },
    "output": [
      "PE_ADJUST"
    ],
    "output_is_list": [false],
    "output_name": [
      "PE_ADJUST"
    ],
    "name": "ADE_AdjustPEManual",
    "display_name": "Adjust PE [Manual] 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/ad settings/pe adjust",
    "output_node": false
  },
  "ADE_AdjustWeightAllAdd": {
    "input": {
      "required": {
        "all_ADD": [
          "FLOAT",
          {
            "default": 0,
            "min": -2,
            "max": 2,
            "step": 0.000001
          }
        ],
        "print_adjustment": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "prev_weight_adjust": [
          "WEIGHT_ADJUST"
        ]
      }
    },
    "output": [
      "WEIGHT_ADJUST"
    ],
    "output_is_list": [false],
    "output_name": [
      "WEIGHT_ADJUST"
    ],
    "name": "ADE_AdjustWeightAllAdd",
    "display_name": "Adjust Weight [All◆Add] 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/ad settings/weight adjust",
    "output_node": false
  },
  "ADE_AdjustWeightAllMult": {
    "input": {
      "required": {
        "all_MULT": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 2,
            "step": 0.000001
          }
        ],
        "print_adjustment": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "prev_weight_adjust": [
          "WEIGHT_ADJUST"
        ]
      }
    },
    "output": [
      "WEIGHT_ADJUST"
    ],
    "output_is_list": [false],
    "output_name": [
      "WEIGHT_ADJUST"
    ],
    "name": "ADE_AdjustWeightAllMult",
    "display_name": "Adjust Weight [All◆Mult] 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/ad settings/weight adjust",
    "output_node": false
  },
  "ADE_AdjustWeightIndivAdd": {
    "input": {
      "required": {
        "pe_ADD": [
          "FLOAT",
          {
            "default": 0,
            "min": -2,
            "max": 2,
            "step": 0.000001
          }
        ],
        "attn_ADD": [
          "FLOAT",
          {
            "default": 0,
            "min": -2,
            "max": 2,
            "step": 0.000001
          }
        ],
        "other_ADD": [
          "FLOAT",
          {
            "default": 0,
            "min": -2,
            "max": 2,
            "step": 0.000001
          }
        ],
        "print_adjustment": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "prev_weight_adjust": [
          "WEIGHT_ADJUST"
        ]
      }
    },
    "output": [
      "WEIGHT_ADJUST"
    ],
    "output_is_list": [false],
    "output_name": [
      "WEIGHT_ADJUST"
    ],
    "name": "ADE_AdjustWeightIndivAdd",
    "display_name": "Adjust Weight [Indiv◆Add] 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/ad settings/weight adjust",
    "output_node": false
  },
  "ADE_AdjustWeightIndivMult": {
    "input": {
      "required": {
        "pe_MULT": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 2,
            "step": 0.000001
          }
        ],
        "attn_MULT": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 2,
            "step": 0.000001
          }
        ],
        "other_MULT": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 2,
            "step": 0.000001
          }
        ],
        "print_adjustment": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "prev_weight_adjust": [
          "WEIGHT_ADJUST"
        ]
      }
    },
    "output": [
      "WEIGHT_ADJUST"
    ],
    "output_is_list": [false],
    "output_name": [
      "WEIGHT_ADJUST"
    ],
    "name": "ADE_AdjustWeightIndivMult",
    "display_name": "Adjust Weight [Indiv◆Mult] 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/ad settings/weight adjust",
    "output_node": false
  },
  "ADE_AdjustWeightIndivAttnAdd": {
    "input": {
      "required": {
        "pe_ADD": [
          "FLOAT",
          {
            "default": 0,
            "min": -2,
            "max": 2,
            "step": 0.000001
          }
        ],
        "attn_ADD": [
          "FLOAT",
          {
            "default": 0,
            "min": -2,
            "max": 2,
            "step": 0.000001
          }
        ],
        "attn_q_ADD": [
          "FLOAT",
          {
            "default": 0,
            "min": -2,
            "max": 2,
            "step": 0.000001
          }
        ],
        "attn_k_ADD": [
          "FLOAT",
          {
            "default": 0,
            "min": -2,
            "max": 2,
            "step": 0.000001
          }
        ],
        "attn_v_ADD": [
          "FLOAT",
          {
            "default": 0,
            "min": -2,
            "max": 2,
            "step": 0.000001
          }
        ],
        "attn_out_weight_ADD": [
          "FLOAT",
          {
            "default": 0,
            "min": -2,
            "max": 2,
            "step": 0.000001
          }
        ],
        "attn_out_bias_ADD": [
          "FLOAT",
          {
            "default": 0,
            "min": -2,
            "max": 2,
            "step": 0.000001
          }
        ],
        "other_ADD": [
          "FLOAT",
          {
            "default": 0,
            "min": -2,
            "max": 2,
            "step": 0.000001
          }
        ],
        "print_adjustment": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "prev_weight_adjust": [
          "WEIGHT_ADJUST"
        ]
      }
    },
    "output": [
      "WEIGHT_ADJUST"
    ],
    "output_is_list": [false],
    "output_name": [
      "WEIGHT_ADJUST"
    ],
    "name": "ADE_AdjustWeightIndivAttnAdd",
    "display_name": "Adjust Weight [Indiv-Attn◆Add] 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/ad settings/weight adjust",
    "output_node": false
  },
  "ADE_AdjustWeightIndivAttnMult": {
    "input": {
      "required": {
        "pe_MULT": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 2,
            "step": 0.000001
          }
        ],
        "attn_MULT": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 2,
            "step": 0.000001
          }
        ],
        "attn_q_MULT": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 2,
            "step": 0.000001
          }
        ],
        "attn_k_MULT": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 2,
            "step": 0.000001
          }
        ],
        "attn_v_MULT": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 2,
            "step": 0.000001
          }
        ],
        "attn_out_weight_MULT": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 2,
            "step": 0.000001
          }
        ],
        "attn_out_bias_MULT": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 2,
            "step": 0.000001
          }
        ],
        "other_MULT": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 2,
            "step": 0.000001
          }
        ],
        "print_adjustment": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "prev_weight_adjust": [
          "WEIGHT_ADJUST"
        ]
      }
    },
    "output": [
      "WEIGHT_ADJUST"
    ],
    "output_is_list": [false],
    "output_name": [
      "WEIGHT_ADJUST"
    ],
    "name": "ADE_AdjustWeightIndivAttnMult",
    "display_name": "Adjust Weight [Indiv-Attn◆Mult] 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/ad settings/weight adjust",
    "output_node": false
  },
  "ADE_CustomCFG": {
    "input": {
      "required": {
        "cfg_multival": [
          "MULTIVAL"
        ]
      }
    },
    "output": [
      "CUSTOM_CFG"
    ],
    "output_is_list": [false],
    "output_name": [
      "CUSTOM_CFG"
    ],
    "name": "ADE_CustomCFG",
    "display_name": "Custom CFG 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/sample settings",
    "output_node": false
  },
  "ADE_CustomCFGKeyframe": {
    "input": {
      "required": {
        "cfg_multival": [
          "MULTIVAL"
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "guarantee_steps": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9007199254740991
          }
        ]
      },
      "optional": {
        "prev_custom_cfg": [
          "CUSTOM_CFG"
        ]
      }
    },
    "output": [
      "CUSTOM_CFG"
    ],
    "output_is_list": [false],
    "output_name": [
      "CUSTOM_CFG"
    ],
    "name": "ADE_CustomCFGKeyframe",
    "display_name": "Custom CFG Keyframe 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/sample settings",
    "output_node": false
  },
  "ADE_SigmaSchedule": {
    "input": {
      "required": {
        "beta_schedule": [
          [
            "sqrt_linear (AnimateDiff)",
            "linear (AnimateDiff-SDXL)",
            "linear (HotshotXL/default)",
            "avg(sqrt_linear,linear)",
            "lcm avg(sqrt_linear,linear)",
            "lcm",
            "lcm[100_ots]",
            "lcm \u003E\u003E sqrt_linear",
            "sqrt",
            "cosine",
            "squaredcos_cap_v2"
          ]
        ]
      }
    },
    "output": [
      "SIGMA_SCHEDULE"
    ],
    "output_is_list": [false],
    "output_name": [
      "SIGMA_SCHEDULE"
    ],
    "name": "ADE_SigmaSchedule",
    "display_name": "Create Sigma Schedule 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/sample settings/sigma schedule",
    "output_node": false
  },
  "ADE_RawSigmaSchedule": {
    "input": {
      "required": {
        "raw_beta_schedule": [
          [
            "linear",
            "sqrt_linear",
            "sqrt",
            "cosine",
            "squaredcos_cap_v2"
          ]
        ],
        "linear_start": [
          "FLOAT",
          {
            "default": 0.00085,
            "min": 0,
            "max": 1,
            "step": 0.000001
          }
        ],
        "linear_end": [
          "FLOAT",
          {
            "default": 0.012,
            "min": 0,
            "max": 1,
            "step": 0.000001
          }
        ],
        "sampling": [
          [
            "eps",
            "v_prediction",
            "lcm"
          ]
        ],
        "lcm_original_timesteps": [
          "INT",
          {
            "default": 50,
            "min": 1,
            "max": 1000
          }
        ],
        "lcm_zsnr": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "SIGMA_SCHEDULE"
    ],
    "output_is_list": [false],
    "output_name": [
      "SIGMA_SCHEDULE"
    ],
    "name": "ADE_RawSigmaSchedule",
    "display_name": "Create Raw Sigma Schedule 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/sample settings/sigma schedule",
    "output_node": false
  },
  "ADE_SigmaScheduleWeightedAverage": {
    "input": {
      "required": {
        "schedule_A": [
          "SIGMA_SCHEDULE"
        ],
        "schedule_B": [
          "SIGMA_SCHEDULE"
        ],
        "weight_A": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "SIGMA_SCHEDULE"
    ],
    "output_is_list": [false],
    "output_name": [
      "SIGMA_SCHEDULE"
    ],
    "name": "ADE_SigmaScheduleWeightedAverage",
    "display_name": "Sigma Schedule Weighted Mean 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/sample settings/sigma schedule",
    "output_node": false
  },
  "ADE_SigmaScheduleWeightedAverageInterp": {
    "input": {
      "required": {
        "schedule_A": [
          "SIGMA_SCHEDULE"
        ],
        "schedule_B": [
          "SIGMA_SCHEDULE"
        ],
        "weight_A_Start": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "weight_A_End": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "interpolation": [
          [
            "linear",
            "ease_in",
            "ease_out",
            "ease_in_out"
          ]
        ]
      }
    },
    "output": [
      "SIGMA_SCHEDULE"
    ],
    "output_is_list": [false],
    "output_name": [
      "SIGMA_SCHEDULE"
    ],
    "name": "ADE_SigmaScheduleWeightedAverageInterp",
    "display_name": "Sigma Schedule Interpolated Mean 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/sample settings/sigma schedule",
    "output_node": false
  },
  "ADE_SigmaScheduleSplitAndCombine": {
    "input": {
      "required": {
        "schedule_Start": [
          "SIGMA_SCHEDULE"
        ],
        "schedule_End": [
          "SIGMA_SCHEDULE"
        ],
        "idx_split_percent": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "SIGMA_SCHEDULE"
    ],
    "output_is_list": [false],
    "output_name": [
      "SIGMA_SCHEDULE"
    ],
    "name": "ADE_SigmaScheduleSplitAndCombine",
    "display_name": "Sigma Schedule Split Combine 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/sample settings/sigma schedule",
    "output_node": false
  },
  "ADE_AnimateDiffUnload": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ADE_AnimateDiffUnload",
    "display_name": "AnimateDiff Unload 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/extras",
    "output_node": false
  },
  "ADE_EmptyLatentImageLarge": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 262144
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "ADE_EmptyLatentImageLarge",
    "display_name": "Empty Latent Image (Big Batch) 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/extras",
    "output_node": false
  },
  "CheckpointLoaderSimpleWithNoiseSelect": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "beta_schedule": [
          [
            "autoselect",
            "use existing",
            "sqrt_linear (AnimateDiff)",
            "linear (AnimateDiff-SDXL)",
            "linear (HotshotXL/default)",
            "avg(sqrt_linear,linear)",
            "lcm avg(sqrt_linear,linear)",
            "lcm",
            "lcm[100_ots]",
            "lcm \u003E\u003E sqrt_linear",
            "sqrt",
            "cosine",
            "squaredcos_cap_v2"
          ],
          {
            "default": "use existing"
          }
        ]
      },
      "optional": {
        "use_custom_scale_factor": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "scale_factor": [
          "FLOAT",
          {
            "default": 0.18215,
            "min": 0,
            "max": 1,
            "step": 0.00001
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "name": "CheckpointLoaderSimpleWithNoiseSelect",
    "display_name": "Load Checkpoint w/ Noise Select 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/extras",
    "output_node": false
  },
  "ADE_AnimateDiffLoaderGen1": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "model_name": [
          [
            "mm_sd_v14.ckpt",
            "mm_sd_v15_v2.ckpt",
            "mm_sdxl_v10_beta.ckpt",
            "v2_lora_PanLeft.ckpt",
            "v2_lora_PanRight.ckpt",
            "v2_lora_RollingAnticlockwise.ckpt",
            "v2_lora_RollingClockwise.ckpt",
            "v2_lora_TiltDown.ckpt",
            "v2_lora_TiltUp.ckpt",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_adapter.ckpt",
            "v3_sd15_mm.ckpt",
            "v3_sd15_sparsectrl_scribble.ckpt"
          ]
        ],
        "beta_schedule": [
          [
            "autoselect",
            "use existing",
            "sqrt_linear (AnimateDiff)",
            "linear (AnimateDiff-SDXL)",
            "linear (HotshotXL/default)",
            "avg(sqrt_linear,linear)",
            "lcm avg(sqrt_linear,linear)",
            "lcm",
            "lcm[100_ots]",
            "lcm \u003E\u003E sqrt_linear",
            "sqrt",
            "cosine",
            "squaredcos_cap_v2"
          ],
          {
            "default": "autoselect"
          }
        ]
      },
      "optional": {
        "context_options": [
          "CONTEXT_OPTIONS"
        ],
        "motion_lora": [
          "MOTION_LORA"
        ],
        "ad_settings": [
          "AD_SETTINGS"
        ],
        "ad_keyframes": [
          "AD_KEYFRAMES"
        ],
        "sample_settings": [
          "SAMPLE_SETTINGS"
        ],
        "scale_multival": [
          "MULTIVAL"
        ],
        "effect_multival": [
          "MULTIVAL"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ADE_AnimateDiffLoaderGen1",
    "display_name": "AnimateDiff Loader 🎭🅐🅓①",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/① Gen1 nodes ①",
    "output_node": false
  },
  "ADE_AnimateDiffLoaderWithContext": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "model_name": [
          [
            "mm_sd_v14.ckpt",
            "mm_sd_v15_v2.ckpt",
            "mm_sdxl_v10_beta.ckpt",
            "v2_lora_PanLeft.ckpt",
            "v2_lora_PanRight.ckpt",
            "v2_lora_RollingAnticlockwise.ckpt",
            "v2_lora_RollingClockwise.ckpt",
            "v2_lora_TiltDown.ckpt",
            "v2_lora_TiltUp.ckpt",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_adapter.ckpt",
            "v3_sd15_mm.ckpt",
            "v3_sd15_sparsectrl_scribble.ckpt"
          ]
        ],
        "beta_schedule": [
          [
            "autoselect",
            "use existing",
            "sqrt_linear (AnimateDiff)",
            "linear (AnimateDiff-SDXL)",
            "linear (HotshotXL/default)",
            "avg(sqrt_linear,linear)",
            "lcm avg(sqrt_linear,linear)",
            "lcm",
            "lcm[100_ots]",
            "lcm \u003E\u003E sqrt_linear",
            "sqrt",
            "cosine",
            "squaredcos_cap_v2"
          ],
          {
            "default": "autoselect"
          }
        ]
      },
      "optional": {
        "context_options": [
          "CONTEXT_OPTIONS"
        ],
        "motion_lora": [
          "MOTION_LORA"
        ],
        "ad_settings": [
          "AD_SETTINGS"
        ],
        "sample_settings": [
          "SAMPLE_SETTINGS"
        ],
        "motion_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "step": 0.001
          }
        ],
        "apply_v2_models_properly": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "ad_keyframes": [
          "AD_KEYFRAMES"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ADE_AnimateDiffLoaderWithContext",
    "display_name": "AnimateDiff Loader [Legacy] 🎭🅐🅓①",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/① Gen1 nodes ①",
    "output_node": false
  },
  "ADE_UseEvolvedSampling": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "beta_schedule": [
          [
            "autoselect",
            "use existing",
            "sqrt_linear (AnimateDiff)",
            "linear (AnimateDiff-SDXL)",
            "linear (HotshotXL/default)",
            "avg(sqrt_linear,linear)",
            "lcm avg(sqrt_linear,linear)",
            "lcm",
            "lcm[100_ots]",
            "lcm \u003E\u003E sqrt_linear",
            "sqrt",
            "cosine",
            "squaredcos_cap_v2"
          ],
          {
            "default": "autoselect"
          }
        ]
      },
      "optional": {
        "m_models": [
          "M_MODELS"
        ],
        "context_options": [
          "CONTEXT_OPTIONS"
        ],
        "sample_settings": [
          "SAMPLE_SETTINGS"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ADE_UseEvolvedSampling",
    "display_name": "Use Evolved Sampling 🎭🅐🅓②",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②",
    "output_node": false
  },
  "ADE_ApplyAnimateDiffModelSimple": {
    "input": {
      "required": {
        "motion_model": [
          "MOTION_MODEL_ADE"
        ]
      },
      "optional": {
        "motion_lora": [
          "MOTION_LORA"
        ],
        "scale_multival": [
          "MULTIVAL"
        ],
        "effect_multival": [
          "MULTIVAL"
        ],
        "ad_keyframes": [
          "AD_KEYFRAMES"
        ]
      }
    },
    "output": [
      "M_MODELS"
    ],
    "output_is_list": [false],
    "output_name": [
      "M_MODELS"
    ],
    "name": "ADE_ApplyAnimateDiffModelSimple",
    "display_name": "Apply AnimateDiff Model 🎭🅐🅓②",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②",
    "output_node": false
  },
  "ADE_ApplyAnimateDiffModel": {
    "input": {
      "required": {
        "motion_model": [
          "MOTION_MODEL_ADE"
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "motion_lora": [
          "MOTION_LORA"
        ],
        "scale_multival": [
          "MULTIVAL"
        ],
        "effect_multival": [
          "MULTIVAL"
        ],
        "ad_keyframes": [
          "AD_KEYFRAMES"
        ],
        "prev_m_models": [
          "M_MODELS"
        ]
      }
    },
    "output": [
      "M_MODELS"
    ],
    "output_is_list": [false],
    "output_name": [
      "M_MODELS"
    ],
    "name": "ADE_ApplyAnimateDiffModel",
    "display_name": "Apply AnimateDiff Model (Adv.) 🎭🅐🅓②",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②",
    "output_node": false
  },
  "ADE_LoadAnimateDiffModel": {
    "input": {
      "required": {
        "model_name": [
          [
            "mm_sd_v14.ckpt",
            "mm_sd_v15_v2.ckpt",
            "mm_sdxl_v10_beta.ckpt",
            "v2_lora_PanLeft.ckpt",
            "v2_lora_PanRight.ckpt",
            "v2_lora_RollingAnticlockwise.ckpt",
            "v2_lora_RollingClockwise.ckpt",
            "v2_lora_TiltDown.ckpt",
            "v2_lora_TiltUp.ckpt",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_adapter.ckpt",
            "v3_sd15_mm.ckpt",
            "v3_sd15_sparsectrl_scribble.ckpt"
          ]
        ]
      },
      "optional": {
        "ad_settings": [
          "AD_SETTINGS"
        ]
      }
    },
    "output": [
      "MOTION_MODEL_ADE"
    ],
    "output_is_list": [false],
    "output_name": [
      "MOTION_MODEL"
    ],
    "name": "ADE_LoadAnimateDiffModel",
    "display_name": "Load AnimateDiff Model 🎭🅐🅓②",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②",
    "output_node": false
  },
  "ADE_ApplyAnimateLCMI2VModel": {
    "input": {
      "required": {
        "motion_model": [
          "MOTION_MODEL_ADE"
        ],
        "ref_latent": [
          "LATENT"
        ],
        "ref_drift": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "apply_ref_when_disabled": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "motion_lora": [
          "MOTION_LORA"
        ],
        "scale_multival": [
          "MULTIVAL"
        ],
        "effect_multival": [
          "MULTIVAL"
        ],
        "ad_keyframes": [
          "AD_KEYFRAMES"
        ],
        "prev_m_models": [
          "M_MODELS"
        ]
      }
    },
    "output": [
      "M_MODELS"
    ],
    "output_is_list": [false],
    "output_name": [
      "M_MODELS"
    ],
    "name": "ADE_ApplyAnimateLCMI2VModel",
    "display_name": "Apply AnimateLCM-I2V Model 🎭🅐🅓②",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/AnimateLCM-I2V",
    "output_node": false
  },
  "ADE_LoadAnimateLCMI2VModel": {
    "input": {
      "required": {
        "model_name": [
          [
            "mm_sd_v14.ckpt",
            "mm_sd_v15_v2.ckpt",
            "mm_sdxl_v10_beta.ckpt",
            "v2_lora_PanLeft.ckpt",
            "v2_lora_PanRight.ckpt",
            "v2_lora_RollingAnticlockwise.ckpt",
            "v2_lora_RollingClockwise.ckpt",
            "v2_lora_TiltDown.ckpt",
            "v2_lora_TiltUp.ckpt",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_adapter.ckpt",
            "v3_sd15_mm.ckpt",
            "v3_sd15_sparsectrl_scribble.ckpt"
          ]
        ]
      },
      "optional": {
        "ad_settings": [
          "AD_SETTINGS"
        ]
      }
    },
    "output": [
      "MOTION_MODEL_ADE",
      "MOTION_MODEL_ADE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MOTION_MODEL",
      "encoder_only"
    ],
    "name": "ADE_LoadAnimateLCMI2VModel",
    "display_name": "Load AnimateLCM-I2V Model 🎭🅐🅓②",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/AnimateLCM-I2V",
    "output_node": false
  },
  "ADE_UpscaleAndVAEEncode": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "latent_size": [
          "LATENT"
        ],
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos"
          ]
        ],
        "crop": [
          [
            "disabled",
            "center"
          ],
          {
            "default": "center"
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "ADE_UpscaleAndVAEEncode",
    "display_name": "Scale Ref Image and VAE Encode 🎭🅐🅓②",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/AnimateLCM-I2V",
    "output_node": false
  },
  "ADE_InjectI2VIntoAnimateDiffModel": {
    "input": {
      "required": {
        "model_name": [
          [
            "mm_sd_v14.ckpt",
            "mm_sd_v15_v2.ckpt",
            "mm_sdxl_v10_beta.ckpt",
            "v2_lora_PanLeft.ckpt",
            "v2_lora_PanRight.ckpt",
            "v2_lora_RollingAnticlockwise.ckpt",
            "v2_lora_RollingClockwise.ckpt",
            "v2_lora_TiltDown.ckpt",
            "v2_lora_TiltUp.ckpt",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_adapter.ckpt",
            "v3_sd15_mm.ckpt",
            "v3_sd15_sparsectrl_scribble.ckpt"
          ]
        ],
        "motion_model": [
          "MOTION_MODEL_ADE"
        ]
      },
      "optional": {
        "ad_settings": [
          "AD_SETTINGS"
        ]
      }
    },
    "output": [
      "MOTION_MODEL_ADE"
    ],
    "output_is_list": [false],
    "output_name": [
      "MOTION_MODEL"
    ],
    "name": "ADE_InjectI2VIntoAnimateDiffModel",
    "display_name": "🧪Inject I2V into AnimateDiff Model 🎭🅐🅓②",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/AnimateLCM-I2V/🧪experimental",
    "output_node": false
  },
  "ADE_ApplyAnimateDiffModelWithCameraCtrl": {
    "input": {
      "required": {
        "motion_model": [
          "MOTION_MODEL_ADE"
        ],
        "cameractrl_poses": [
          "CAMERACTRL_POSES"
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "motion_lora": [
          "MOTION_LORA"
        ],
        "scale_multival": [
          "MULTIVAL"
        ],
        "effect_multival": [
          "MULTIVAL"
        ],
        "cameractrl_multival": [
          "MULTIVAL"
        ],
        "ad_keyframes": [
          "AD_KEYFRAMES"
        ],
        "prev_m_models": [
          "M_MODELS"
        ]
      }
    },
    "output": [
      "M_MODELS"
    ],
    "output_is_list": [false],
    "output_name": [
      "M_MODELS"
    ],
    "name": "ADE_ApplyAnimateDiffModelWithCameraCtrl",
    "display_name": "Apply AnimateDiff+CameraCtrl Model 🎭🅐🅓②",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl",
    "output_node": false
  },
  "ADE_LoadAnimateDiffModelWithCameraCtrl": {
    "input": {
      "required": {
        "model_name": [
          [
            "mm_sd_v14.ckpt",
            "mm_sd_v15_v2.ckpt",
            "mm_sdxl_v10_beta.ckpt",
            "v2_lora_PanLeft.ckpt",
            "v2_lora_PanRight.ckpt",
            "v2_lora_RollingAnticlockwise.ckpt",
            "v2_lora_RollingClockwise.ckpt",
            "v2_lora_TiltDown.ckpt",
            "v2_lora_TiltUp.ckpt",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_adapter.ckpt",
            "v3_sd15_mm.ckpt",
            "v3_sd15_sparsectrl_scribble.ckpt"
          ]
        ],
        "camera_ctrl": [
          [
            "mm_sd_v14.ckpt",
            "mm_sd_v15_v2.ckpt",
            "mm_sdxl_v10_beta.ckpt",
            "v2_lora_PanLeft.ckpt",
            "v2_lora_PanRight.ckpt",
            "v2_lora_RollingAnticlockwise.ckpt",
            "v2_lora_RollingClockwise.ckpt",
            "v2_lora_TiltDown.ckpt",
            "v2_lora_TiltUp.ckpt",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_adapter.ckpt",
            "v3_sd15_mm.ckpt",
            "v3_sd15_sparsectrl_scribble.ckpt"
          ]
        ]
      },
      "optional": {
        "ad_settings": [
          "AD_SETTINGS"
        ]
      }
    },
    "output": [
      "MOTION_MODEL_ADE"
    ],
    "output_is_list": [false],
    "output_name": [
      "MOTION_MODEL"
    ],
    "name": "ADE_LoadAnimateDiffModelWithCameraCtrl",
    "display_name": "Load AnimateDiff+CameraCtrl Model 🎭🅐🅓②",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl",
    "output_node": false
  },
  "ADE_CameraCtrlAnimateDiffKeyframe": {
    "input": {
      "required": {
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "prev_ad_keyframes": [
          "AD_KEYFRAMES"
        ],
        "scale_multival": [
          "MULTIVAL"
        ],
        "effect_multival": [
          "MULTIVAL"
        ],
        "cameractrl_multival": [
          "MULTIVAL"
        ],
        "inherit_missing": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "guarantee_steps": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9007199254740991
          }
        ]
      }
    },
    "output": [
      "AD_KEYFRAMES"
    ],
    "output_is_list": [false],
    "output_name": [
      "AD_KEYFRAMES"
    ],
    "name": "ADE_CameraCtrlAnimateDiffKeyframe",
    "display_name": "AnimateDiff+CameraCtrl Keyframe 🎭🅐🅓",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl",
    "output_node": false
  },
  "ADE_LoadCameraPoses": {
    "input": {
      "required": {
        "pose_filename": [
          []
        ]
      }
    },
    "output": [
      "CAMERACTRL_POSES"
    ],
    "output_is_list": [false],
    "output_name": [
      "CAMERACTRL_POSES"
    ],
    "name": "ADE_LoadCameraPoses",
    "display_name": "Load CameraCtrl Poses (File) 🎭🅐🅓②",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl/poses",
    "output_node": false
  },
  "ADE_CameraPoseBasic": {
    "input": {
      "required": {
        "motion_type": [
          [
            "Static",
            "Pan Up",
            "Pan Down",
            "Pan Left",
            "Pan Right",
            "Zoom In",
            "Zoom Out",
            "Roll Clockwise",
            "Roll Anticlockwise",
            "Tilt Down",
            "Tilt Up",
            "Tilt Left",
            "Tilt Right"
          ]
        ],
        "speed": [
          "FLOAT",
          {
            "default": 1,
            "min": -100,
            "max": 100,
            "step": 0.01
          }
        ],
        "frame_length": [
          "INT",
          {
            "default": 16
          }
        ]
      },
      "optional": {
        "prev_poses": [
          "CAMERACTRL_POSES"
        ]
      }
    },
    "output": [
      "CAMERACTRL_POSES"
    ],
    "output_is_list": [false],
    "output_name": [
      "CAMERACTRL_POSES"
    ],
    "name": "ADE_CameraPoseBasic",
    "display_name": "Create CameraCtrl Poses 🎭🅐🅓②",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl/poses",
    "output_node": false
  },
  "ADE_CameraPoseCombo": {
    "input": {
      "required": {
        "motion_type1": [
          [
            "Static",
            "Pan Up",
            "Pan Down",
            "Pan Left",
            "Pan Right",
            "Zoom In",
            "Zoom Out",
            "Roll Clockwise",
            "Roll Anticlockwise",
            "Tilt Down",
            "Tilt Up",
            "Tilt Left",
            "Tilt Right"
          ]
        ],
        "motion_type2": [
          [
            "Static",
            "Pan Up",
            "Pan Down",
            "Pan Left",
            "Pan Right",
            "Zoom In",
            "Zoom Out",
            "Roll Clockwise",
            "Roll Anticlockwise",
            "Tilt Down",
            "Tilt Up",
            "Tilt Left",
            "Tilt Right"
          ]
        ],
        "motion_type3": [
          [
            "Static",
            "Pan Up",
            "Pan Down",
            "Pan Left",
            "Pan Right",
            "Zoom In",
            "Zoom Out",
            "Roll Clockwise",
            "Roll Anticlockwise",
            "Tilt Down",
            "Tilt Up",
            "Tilt Left",
            "Tilt Right"
          ]
        ],
        "motion_type4": [
          [
            "Static",
            "Pan Up",
            "Pan Down",
            "Pan Left",
            "Pan Right",
            "Zoom In",
            "Zoom Out",
            "Roll Clockwise",
            "Roll Anticlockwise",
            "Tilt Down",
            "Tilt Up",
            "Tilt Left",
            "Tilt Right"
          ]
        ],
        "motion_type5": [
          [
            "Static",
            "Pan Up",
            "Pan Down",
            "Pan Left",
            "Pan Right",
            "Zoom In",
            "Zoom Out",
            "Roll Clockwise",
            "Roll Anticlockwise",
            "Tilt Down",
            "Tilt Up",
            "Tilt Left",
            "Tilt Right"
          ]
        ],
        "motion_type6": [
          [
            "Static",
            "Pan Up",
            "Pan Down",
            "Pan Left",
            "Pan Right",
            "Zoom In",
            "Zoom Out",
            "Roll Clockwise",
            "Roll Anticlockwise",
            "Tilt Down",
            "Tilt Up",
            "Tilt Left",
            "Tilt Right"
          ]
        ],
        "speed": [
          "FLOAT",
          {
            "default": 1,
            "min": -100,
            "max": 100,
            "step": 0.01
          }
        ],
        "frame_length": [
          "INT",
          {
            "default": 16
          }
        ]
      },
      "optional": {
        "prev_poses": [
          "CAMERACTRL_POSES"
        ]
      }
    },
    "output": [
      "CAMERACTRL_POSES"
    ],
    "output_is_list": [false],
    "output_name": [
      "CAMERACTRL_POSES"
    ],
    "name": "ADE_CameraPoseCombo",
    "display_name": "Create CameraCtrl Poses (Combo) 🎭🅐🅓②",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl/poses",
    "output_node": false
  },
  "ADE_CameraPoseAdvanced": {
    "input": {
      "required": {
        "motion_type1": [
          [
            "Static",
            "Pan Up",
            "Pan Down",
            "Pan Left",
            "Pan Right",
            "Zoom In",
            "Zoom Out",
            "Roll Clockwise",
            "Roll Anticlockwise",
            "Tilt Down",
            "Tilt Up",
            "Tilt Left",
            "Tilt Right"
          ]
        ],
        "strength1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "motion_type2": [
          [
            "Static",
            "Pan Up",
            "Pan Down",
            "Pan Left",
            "Pan Right",
            "Zoom In",
            "Zoom Out",
            "Roll Clockwise",
            "Roll Anticlockwise",
            "Tilt Down",
            "Tilt Up",
            "Tilt Left",
            "Tilt Right"
          ]
        ],
        "strength2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "motion_type3": [
          [
            "Static",
            "Pan Up",
            "Pan Down",
            "Pan Left",
            "Pan Right",
            "Zoom In",
            "Zoom Out",
            "Roll Clockwise",
            "Roll Anticlockwise",
            "Tilt Down",
            "Tilt Up",
            "Tilt Left",
            "Tilt Right"
          ]
        ],
        "strength3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "motion_type4": [
          [
            "Static",
            "Pan Up",
            "Pan Down",
            "Pan Left",
            "Pan Right",
            "Zoom In",
            "Zoom Out",
            "Roll Clockwise",
            "Roll Anticlockwise",
            "Tilt Down",
            "Tilt Up",
            "Tilt Left",
            "Tilt Right"
          ]
        ],
        "strength4": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "motion_type5": [
          [
            "Static",
            "Pan Up",
            "Pan Down",
            "Pan Left",
            "Pan Right",
            "Zoom In",
            "Zoom Out",
            "Roll Clockwise",
            "Roll Anticlockwise",
            "Tilt Down",
            "Tilt Up",
            "Tilt Left",
            "Tilt Right"
          ]
        ],
        "strength5": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "motion_type6": [
          [
            "Static",
            "Pan Up",
            "Pan Down",
            "Pan Left",
            "Pan Right",
            "Zoom In",
            "Zoom Out",
            "Roll Clockwise",
            "Roll Anticlockwise",
            "Tilt Down",
            "Tilt Up",
            "Tilt Left",
            "Tilt Right"
          ]
        ],
        "strength6": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "speed": [
          "FLOAT",
          {
            "default": 1,
            "min": -100,
            "max": 100,
            "step": 0.01
          }
        ],
        "frame_length": [
          "INT",
          {
            "default": 16
          }
        ]
      },
      "optional": {
        "prev_poses": [
          "CAMERACTRL_POSES"
        ]
      }
    },
    "output": [
      "CAMERACTRL_POSES"
    ],
    "output_is_list": [false],
    "output_name": [
      "CAMERACTRL_POSES"
    ],
    "name": "ADE_CameraPoseAdvanced",
    "display_name": "Create CameraCtrl Poses (Adv.) 🎭🅐🅓②",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl/poses",
    "output_node": false
  },
  "ADE_CameraManualPoseAppend": {
    "input": {
      "required": {
        "poses_first": [
          "CAMERACTRL_POSES"
        ],
        "poses_last": [
          "CAMERACTRL_POSES"
        ]
      }
    },
    "output": [
      "CAMERACTRL_POSES"
    ],
    "output_is_list": [false],
    "output_name": [
      "CAMERACTRL_POSES"
    ],
    "name": "ADE_CameraManualPoseAppend",
    "display_name": "Manual Append CameraCtrl Poses 🎭🅐🅓②",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl/poses",
    "output_node": false
  },
  "ADE_ReplaceCameraParameters": {
    "input": {
      "required": {
        "poses": [
          "CAMERACTRL_POSES"
        ],
        "fx": [
          "FLOAT",
          {
            "default": 0.474812461,
            "min": 0,
            "max": 1,
            "step": 1e-9
          }
        ],
        "fy": [
          "FLOAT",
          {
            "default": 0.844111024,
            "min": 0,
            "max": 1,
            "step": 1e-9
          }
        ],
        "cx": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "cy": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CAMERACTRL_POSES"
    ],
    "output_is_list": [false],
    "output_name": [
      "CAMERACTRL_POSES"
    ],
    "name": "ADE_ReplaceCameraParameters",
    "display_name": "Replace Camera Parameters 🎭🅐🅓②",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl/poses",
    "output_node": false
  },
  "ADE_ReplaceOriginalPoseAspectRatio": {
    "input": {
      "required": {
        "poses": [
          "CAMERACTRL_POSES"
        ],
        "orig_pose_width": [
          "INT",
          {
            "default": 1280,
            "min": 1,
            "max": 9007199254740991
          }
        ],
        "orig_pose_height": [
          "INT",
          {
            "default": 720,
            "min": 1,
            "max": 9007199254740991
          }
        ]
      }
    },
    "output": [
      "CAMERACTRL_POSES"
    ],
    "output_is_list": [false],
    "output_name": [
      "CAMERACTRL_POSES"
    ],
    "name": "ADE_ReplaceOriginalPoseAspectRatio",
    "display_name": "Replace Orig. Pose Aspect Ratio 🎭🅐🅓②",
    "description": "",
    "category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl/poses",
    "output_node": false
  },
  "AnimateDiffLoaderV1": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "latents": [
          "LATENT"
        ],
        "model_name": [
          [
            "mm_sd_v14.ckpt",
            "mm_sd_v15_v2.ckpt",
            "mm_sdxl_v10_beta.ckpt",
            "v2_lora_PanLeft.ckpt",
            "v2_lora_PanRight.ckpt",
            "v2_lora_RollingAnticlockwise.ckpt",
            "v2_lora_RollingClockwise.ckpt",
            "v2_lora_TiltDown.ckpt",
            "v2_lora_TiltUp.ckpt",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_adapter.ckpt",
            "v3_sd15_mm.ckpt",
            "v3_sd15_sparsectrl_scribble.ckpt"
          ]
        ],
        "unlimited_area_hack": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "beta_schedule": [
          [
            "sqrt_linear (AnimateDiff)",
            "use existing",
            "autoselect",
            "linear (AnimateDiff-SDXL)",
            "linear (HotshotXL/default)",
            "avg(sqrt_linear,linear)",
            "lcm avg(sqrt_linear,linear)",
            "lcm",
            "lcm[100_ots]",
            "lcm \u003E\u003E sqrt_linear",
            "sqrt",
            "cosine",
            "squaredcos_cap_v2"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "LATENT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL",
      "LATENT"
    ],
    "name": "AnimateDiffLoaderV1",
    "display_name": "🚫AnimateDiff Loader [DEPRECATED] 🎭🅐🅓",
    "description": "",
    "category": "",
    "output_node": false
  },
  "ADE_AnimateDiffLoaderV1Advanced": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "latents": [
          "LATENT"
        ],
        "model_name": [
          [
            "mm_sd_v14.ckpt",
            "mm_sd_v15_v2.ckpt",
            "mm_sdxl_v10_beta.ckpt",
            "v2_lora_PanLeft.ckpt",
            "v2_lora_PanRight.ckpt",
            "v2_lora_RollingAnticlockwise.ckpt",
            "v2_lora_RollingClockwise.ckpt",
            "v2_lora_TiltDown.ckpt",
            "v2_lora_TiltUp.ckpt",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_adapter.ckpt",
            "v3_sd15_mm.ckpt",
            "v3_sd15_sparsectrl_scribble.ckpt"
          ]
        ],
        "unlimited_area_hack": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "context_length": [
          "INT",
          {
            "default": 16,
            "min": 0,
            "max": 1000
          }
        ],
        "context_stride": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 1000
          }
        ],
        "context_overlap": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 1000
          }
        ],
        "context_schedule": [
          [
            "uniform"
          ]
        ],
        "closed_loop": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "beta_schedule": [
          [
            "sqrt_linear (AnimateDiff)",
            "use existing",
            "autoselect",
            "linear (AnimateDiff-SDXL)",
            "linear (HotshotXL/default)",
            "avg(sqrt_linear,linear)",
            "lcm avg(sqrt_linear,linear)",
            "lcm",
            "lcm[100_ots]",
            "lcm \u003E\u003E sqrt_linear",
            "sqrt",
            "cosine",
            "squaredcos_cap_v2"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "LATENT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL",
      "LATENT"
    ],
    "name": "ADE_AnimateDiffLoaderV1Advanced",
    "display_name": "🚫AnimateDiff Loader (Advanced) [DEPRECATED] 🎭🅐🅓",
    "description": "",
    "category": "",
    "output_node": false
  },
  "ADE_AnimateDiffCombine": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "frame_rate": [
          "INT",
          {
            "default": 8,
            "min": 1,
            "max": 24,
            "step": 1
          }
        ],
        "loop_count": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "AnimateDiff"
          }
        ],
        "format": [
          [
            "image/gif",
            "image/webp",
            "video/av1-webm",
            "video/h264-mp4",
            "video/h265-mp4",
            "video/webm"
          ]
        ],
        "pingpong": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "save_image": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "GIF"
    ],
    "output_is_list": [false],
    "output_name": [
      "GIF"
    ],
    "name": "ADE_AnimateDiffCombine",
    "display_name": "🚫AnimateDiff Combine [DEPRECATED, Use Video Combine (VHS) Instead!] 🎭🅐🅓",
    "description": "",
    "category": "",
    "output_node": true
  },
  "ADE_AnimateDiffModelSettings_Release": {
    "input": {
      "required": {
        "min_motion_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "step": 0.001
          }
        ],
        "max_motion_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "mask_motion_scale": [
          "MASK"
        ]
      }
    },
    "output": [
      "AD_SETTINGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "AD_SETTINGS"
    ],
    "name": "ADE_AnimateDiffModelSettings_Release",
    "display_name": "🚫[DEPR] Motion Model Settings 🎭🅐🅓①",
    "description": "",
    "category": "",
    "output_node": false
  },
  "ADE_AnimateDiffModelSettingsSimple": {
    "input": {
      "required": {
        "motion_pe_stretch": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ]
      },
      "optional": {
        "mask_motion_scale": [
          "MASK"
        ],
        "min_motion_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "step": 0.001
          }
        ],
        "max_motion_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "AD_SETTINGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "AD_SETTINGS"
    ],
    "name": "ADE_AnimateDiffModelSettingsSimple",
    "display_name": "🚫[DEPR] Motion Model Settings (Simple) 🎭🅐🅓①",
    "description": "",
    "category": "",
    "output_node": false
  },
  "ADE_AnimateDiffModelSettings": {
    "input": {
      "required": {
        "pe_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.0001
          }
        ],
        "attn_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.0001
          }
        ],
        "other_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.0001
          }
        ],
        "motion_pe_stretch": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "cap_initial_pe_length": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "interpolate_pe_to_length": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "initial_pe_idx_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "final_pe_idx_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ]
      },
      "optional": {
        "mask_motion_scale": [
          "MASK"
        ],
        "min_motion_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "step": 0.001
          }
        ],
        "max_motion_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "AD_SETTINGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "AD_SETTINGS"
    ],
    "name": "ADE_AnimateDiffModelSettings",
    "display_name": "🚫[DEPR] Motion Model Settings (Advanced) 🎭🅐🅓①",
    "description": "",
    "category": "",
    "output_node": false
  },
  "ADE_AnimateDiffModelSettingsAdvancedAttnStrengths": {
    "input": {
      "required": {
        "pe_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.0001
          }
        ],
        "attn_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.0001
          }
        ],
        "attn_q_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.0001
          }
        ],
        "attn_k_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.0001
          }
        ],
        "attn_v_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.0001
          }
        ],
        "attn_out_weight_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.0001
          }
        ],
        "attn_out_bias_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.0001
          }
        ],
        "other_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.0001
          }
        ],
        "motion_pe_stretch": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "cap_initial_pe_length": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "interpolate_pe_to_length": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "initial_pe_idx_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "final_pe_idx_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ]
      },
      "optional": {
        "mask_motion_scale": [
          "MASK"
        ],
        "min_motion_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "step": 0.001
          }
        ],
        "max_motion_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "AD_SETTINGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "AD_SETTINGS"
    ],
    "name": "ADE_AnimateDiffModelSettingsAdvancedAttnStrengths",
    "display_name": "🚫[DEPR] Motion Model Settings (Adv. Attn) 🎭🅐🅓①",
    "description": "",
    "category": "",
    "output_node": false
  },
  "KSampler Gradually Adding More Denoise (efficient)": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "start_denoise": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "denoise_increment": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1,
            "step": 0.1
          }
        ],
        "denoise_increment_steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ]
      },
      "optional": {
        "optional_vae": [
          "VAE"
        ]
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "MODEL",
      "CONDITIONING+",
      "CONDITIONING-",
      "LATENT",
      "VAE"
    ],
    "name": "KSampler Gradually Adding More Denoise (efficient)",
    "display_name": "KSampler Gradually Adding More Denoise (efficient)",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation/others",
    "output_node": true
  },
  "GMFSS Fortuna VFI": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "GMFSS_fortuna_union",
            "GMFSS_fortuna"
          ]
        ],
        "frames": [
          "IMAGE"
        ],
        "clear_cache_after_n_frames": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 1000
          }
        ],
        "multiplier": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 1000
          }
        ]
      },
      "optional": {
        "optional_interpolation_states": [
          "INTERPOLATION_STATES"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "GMFSS Fortuna VFI",
    "display_name": "GMFSS Fortuna VFI",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation/VFI",
    "output_node": false
  },
  "IFRNet VFI": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "IFRNet_S_Vimeo90K.pth",
            "IFRNet_L_Vimeo90K.pth"
          ]
        ],
        "frames": [
          "IMAGE"
        ],
        "clear_cache_after_n_frames": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 1000
          }
        ],
        "multiplier": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 1000
          }
        ],
        "scale_factor": [
          [0.25, 0.5, 1, 2, 4],
          {
            "default": 1
          }
        ]
      },
      "optional": {
        "optional_interpolation_states": [
          "INTERPOLATION_STATES"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "IFRNet VFI",
    "display_name": "IFRNet VFI",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation/VFI",
    "output_node": false
  },
  "IFUnet VFI": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "IFUNet.pth"
          ]
        ],
        "frames": [
          "IMAGE"
        ],
        "clear_cache_after_n_frames": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 1000
          }
        ],
        "multiplier": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 1000
          }
        ],
        "scale_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 100,
            "step": 0.1
          }
        ],
        "ensemble": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      },
      "optional": {
        "optional_interpolation_states": [
          "INTERPOLATION_STATES"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "IFUnet VFI",
    "display_name": "IFUnet VFI",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation/VFI",
    "output_node": false
  },
  "M2M VFI": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "M2M.pth"
          ]
        ],
        "frames": [
          "IMAGE"
        ],
        "clear_cache_after_n_frames": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 1000
          }
        ],
        "multiplier": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 1000
          }
        ]
      },
      "optional": {
        "optional_interpolation_states": [
          "INTERPOLATION_STATES"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "M2M VFI",
    "display_name": "M2M VFI",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation/VFI",
    "output_node": false
  },
  "RIFE VFI": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "rife40.pth",
            "rife41.pth",
            "sudo_rife4_269.662_testV1_scale1.pth",
            "rife42.pth",
            "rife43.pth",
            "rife44.pth",
            "rife45.pth",
            "rife46.pth",
            "rife47.pth",
            "rife48.pth",
            "rife49.pth"
          ],
          {
            "default": "rife47.pth"
          }
        ],
        "frames": [
          "IMAGE"
        ],
        "clear_cache_after_n_frames": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 1000
          }
        ],
        "multiplier": [
          "INT",
          {
            "default": 2,
            "min": 1
          }
        ],
        "fast_mode": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "ensemble": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "scale_factor": [
          [0.25, 0.5, 1, 2, 4],
          {
            "default": 1
          }
        ]
      },
      "optional": {
        "optional_interpolation_states": [
          "INTERPOLATION_STATES"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "RIFE VFI",
    "display_name": "RIFE VFI (recommend rife47 and rife49)",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation/VFI",
    "output_node": false
  },
  "Sepconv VFI": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "sepconv.pth"
          ]
        ],
        "frames": [
          "IMAGE"
        ],
        "clear_cache_after_n_frames": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 1000
          }
        ],
        "multiplier": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 1000
          }
        ]
      },
      "optional": {
        "optional_interpolation_states": [
          "INTERPOLATION_STATES"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Sepconv VFI",
    "display_name": "Sepconv VFI",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation/VFI",
    "output_node": false
  },
  "AMT VFI": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "amt-s.pth",
            "amt-l.pth",
            "amt-g.pth",
            "gopro_amt-s.pth"
          ]
        ],
        "frames": [
          "IMAGE"
        ],
        "clear_cache_after_n_frames": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 100
          }
        ],
        "multiplier": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 1000
          }
        ]
      },
      "optional": {
        "optional_interpolation_states": [
          "INTERPOLATION_STATES"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "AMT VFI",
    "display_name": "AMT VFI",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation/VFI",
    "output_node": false
  },
  "FILM VFI": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "film_net_fp32.pt"
          ]
        ],
        "frames": [
          "IMAGE"
        ],
        "clear_cache_after_n_frames": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 1000
          }
        ],
        "multiplier": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 1000
          }
        ]
      },
      "optional": {
        "optional_interpolation_states": [
          "INTERPOLATION_STATES"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "FILM VFI",
    "display_name": "FILM VFI",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation/VFI",
    "output_node": false
  },
  "Make Interpolation State List": {
    "input": {
      "required": {
        "frame_indices": [
          "STRING",
          {
            "multiline": true,
            "default": "1,2,3"
          }
        ],
        "is_skip_list": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "INTERPOLATION_STATES"
    ],
    "output_is_list": [false],
    "output_name": [
      "INTERPOLATION_STATES"
    ],
    "name": "Make Interpolation State List",
    "display_name": "Make Interpolation State List",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation/VFI",
    "output_node": false
  },
  "STMFNet VFI": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "stmfnet.pth"
          ]
        ],
        "frames": [
          "IMAGE"
        ],
        "clear_cache_after_n_frames": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 1000
          }
        ],
        "multiplier": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 2
          }
        ],
        "duplicate_first_last_frames": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "optional_interpolation_states": [
          "INTERPOLATION_STATES"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "STMFNet VFI",
    "display_name": "STMFNet VFI",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation/VFI",
    "output_node": false
  },
  "FLAVR VFI": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "FLAVR_2x.pth",
            "FLAVR_4x.pth",
            "FLAVR_8x.pth"
          ]
        ],
        "frames": [
          "IMAGE"
        ],
        "clear_cache_after_n_frames": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 1000
          }
        ],
        "multiplier": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 2
          }
        ],
        "duplicate_first_last_frames": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "optional_interpolation_states": [
          "INTERPOLATION_STATES"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "FLAVR VFI",
    "display_name": "FLAVR VFI",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation/VFI",
    "output_node": false
  },
  "CAIN VFI": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "pretrained_cain.pth"
          ]
        ],
        "frames": [
          "IMAGE"
        ],
        "clear_cache_after_n_frames": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 1000
          }
        ],
        "multiplier": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 1000
          }
        ]
      },
      "optional": {
        "optional_interpolation_states": [
          "INTERPOLATION_STATES"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "CAIN VFI",
    "display_name": "CAIN VFI",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation/VFI",
    "output_node": false
  },
  "VFI FloatToInt": {
    "input": {
      "required": {
        "float": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "VFI FloatToInt",
    "display_name": "VFI FloatToInt",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation",
    "output_node": false
  },
  "CR Image Output": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "output_type": [
          [
            "Preview",
            "Save",
            "UI (no batch)"
          ]
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "CR"
          }
        ],
        "prefix_presets": [
          [
            "None",
            "yyyyMMdd"
          ]
        ],
        "file_format": [
          [
            "png",
            "jpg",
            "webp",
            "tif"
          ]
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      },
      "optional": {
        "trigger": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [false],
    "output_name": [
      "trigger"
    ],
    "name": "CR Image Output",
    "display_name": "💾 CR Image Output",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📦 Core",
    "output_node": true
  },
  "CR Latent Batch Size": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ],
        "batch_size": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 999,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "CR Latent Batch Size",
    "display_name": "⚙️ CR Latent Batch Size",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📦 Core",
    "output_node": false
  },
  "CR Conditioning Mixer": {
    "input": {
      "required": {
        "conditioning_1": [
          "CONDITIONING"
        ],
        "conditioning_2": [
          "CONDITIONING"
        ],
        "mix_method": [
          [
            "Combine",
            "Average",
            "Concatenate"
          ]
        ],
        "average_strength": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CONDITIONING",
      "show_help"
    ],
    "name": "CR Conditioning Mixer",
    "display_name": "⚙️ CR Conditioning Mixer",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📦 Core",
    "output_node": false
  },
  "CR Select Model": {
    "input": {
      "required": {
        "ckpt_name1": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "ckpt_name2": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "ckpt_name3": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "ckpt_name4": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "ckpt_name5": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "select_model": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 5
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "ckpt_name",
      "show_help"
    ],
    "name": "CR Select Model",
    "display_name": "🔮 CR Select Model",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📦 Core",
    "output_node": false
  },
  "CR Seed": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "INT",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "seed",
      "show_help"
    ],
    "name": "CR Seed",
    "display_name": "🌱 CR Seed",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📦 Core",
    "output_node": true
  },
  "CR Prompt Text": {
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "default": "prompt",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "prompt",
      "show_help"
    ],
    "name": "CR Prompt Text",
    "display_name": "⚙️ CR Prompt Text",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📦 Core",
    "output_node": false
  },
  "CR Combine Prompt": {
    "input": {
      "required": {

      },
      "optional": {
        "part1": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "part2": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "part3": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "part4": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "separator": [
          "STRING",
          {
            "default": ",",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "prompt",
      "show_help"
    ],
    "name": "CR Combine Prompt",
    "display_name": "⚙️ CR Combine Prompt",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📦 Core",
    "output_node": false
  },
  "CR VAE Decode": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "vae": [
          "VAE"
        ],
        "tiled": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "circular": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR VAE Decode",
    "display_name": "⚙️ CR VAE Decode",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📦 Core",
    "output_node": false
  },
  "CR Text List": {
    "input": {
      "required": {
        "multiline_text": [
          "STRING",
          {
            "multiline": true,
            "default": "text"
          }
        ],
        "start_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999
          }
        ],
        "max_rows": [
          "INT",
          {
            "default": 1000,
            "min": 1,
            "max": 9999
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [true, false],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Text List",
    "display_name": "📜 CR Text List",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📜 List",
    "output_node": false
  },
  "CR Prompt List": {
    "input": {
      "required": {
        "prepend_text": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "multiline_text": [
          "STRING",
          {
            "multiline": true,
            "default": "body_text"
          }
        ],
        "append_text": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "start_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999
          }
        ],
        "max_rows": [
          "INT",
          {
            "default": 1000,
            "min": 1,
            "max": 9999
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [true, true, false],
    "output_name": [
      "prompt",
      "body_text",
      "show_help"
    ],
    "name": "CR Prompt List",
    "display_name": "📜 CR Prompt List",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📜 List",
    "output_node": false
  },
  "CR Simple List": {
    "input": {
      "required": {
        "list_values": [
          "STRING",
          {
            "multiline": true,
            "default": "text"
          }
        ]
      }
    },
    "output": [
      "*",
      "STRING"
    ],
    "output_is_list": [true, false],
    "output_name": [
      "LIST",
      "show_help"
    ],
    "name": "CR Simple List",
    "display_name": "📜 CR Simple List",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📜 List",
    "output_node": false
  },
  "CR Float Range List": {
    "input": {
      "required": {
        "start": [
          "FLOAT",
          {
            "default": 0,
            "min": -99999.99,
            "max": 99999.99,
            "step": 0.01
          }
        ],
        "end": [
          "FLOAT",
          {
            "default": 1,
            "min": -99999.99,
            "max": 99999.99,
            "step": 0.01
          }
        ],
        "step": [
          "FLOAT",
          {
            "default": 1,
            "min": -99999.99,
            "max": 99999.99,
            "step": 0.01
          }
        ],
        "operation": [
          [
            "none",
            "sin",
            "cos",
            "tan"
          ]
        ],
        "decimal_places": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "max": 10
          }
        ],
        "ignore_first_value": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "max_values_per_loop": [
          "INT",
          {
            "default": 128,
            "min": 1,
            "max": 99999
          }
        ],
        "loops": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 999
          }
        ],
        "ping_pong": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [true, false],
    "output_name": [
      "FLOAT",
      "show_help"
    ],
    "name": "CR Float Range List",
    "display_name": "📜 CR Float Range List",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📜 List",
    "output_node": false
  },
  "CR Integer Range List": {
    "input": {
      "required": {
        "start": [
          "INT",
          {
            "default": 0,
            "min": -99999,
            "max": 99999
          }
        ],
        "end": [
          "INT",
          {
            "default": 0,
            "min": -99999,
            "max": 99999
          }
        ],
        "step": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 99999
          }
        ],
        "loops": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 999
          }
        ],
        "ping_pong": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "INT",
      "STRING"
    ],
    "output_is_list": [true, false],
    "output_name": [
      "INT",
      "show_help"
    ],
    "name": "CR Integer Range List",
    "display_name": "📜 CR Integer Range List",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📜 List",
    "output_node": false
  },
  "CR Load Text List": {
    "input": {
      "required": {
        "input_file_path": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "file_name": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "file_extension": [
          [
            "txt",
            "csv"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [true, false],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Load Text List",
    "display_name": "📜 CR Load Text List",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📜 List",
    "output_node": false
  },
  "CR Binary To Bit List": {
    "input": {
      "required": {
        "bit_string": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [true, false],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Binary To Bit List",
    "display_name": "📜 CR Binary To Bit List",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📜 List",
    "output_node": false
  },
  "CR Text Cycler": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "repeats": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 99999
          }
        ],
        "loops": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 99999
          }
        ]
      }
    },
    "output": [
      "*",
      "STRING"
    ],
    "output_is_list": [true, false],
    "output_name": [
      "STRING",
      "show_text"
    ],
    "name": "CR Text Cycler",
    "display_name": "📜 CR Text Cycler",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📜 List",
    "output_node": false
  },
  "CR Value Cycler": {
    "input": {
      "required": {
        "values": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "repeats": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 99999
          }
        ],
        "loops": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 99999
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT",
      "STRING"
    ],
    "output_is_list": [true, true, false],
    "output_name": [
      "FLOAT",
      "INT",
      "show_text"
    ],
    "name": "CR Value Cycler",
    "display_name": "📜 CR Value Cycler",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📜 List",
    "output_node": false
  },
  "CR Load Image List": {
    "input": {
      "required": {
        "input_folder": [
          []
        ],
        "start_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999
          }
        ],
        "max_images": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 9999
          }
        ]
      },
      "optional": {
        "input_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [true, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Load Image List",
    "display_name": "⌨️ CR Load Image List",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📜 List/⌨️ IO",
    "output_node": false
  },
  "CR Load Image List Plus": {
    "input": {
      "required": {
        "input_folder": [
          []
        ],
        "start_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 99999
          }
        ],
        "max_images": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 99999
          }
        ]
      },
      "optional": {
        "input_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "INT",
      "STRING",
      "INT",
      "INT",
      "INT",
      "STRING"
    ],
    "output_is_list": [true, true, true, true, false, false, false, false],
    "output_name": [
      "IMAGE",
      "MASK",
      "index",
      "filename",
      "width",
      "height",
      "list_length",
      "show_help"
    ],
    "name": "CR Load Image List Plus",
    "display_name": "⌨️ CR Load Image List Plus",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📜 List/⌨️ IO",
    "output_node": false
  },
  "CR Load GIF As List": {
    "input": {
      "required": {
        "input_folder": [
          []
        ],
        "gif_filename": [
          "STRING",
          {
            "multiline": false,
            "default": "text"
          }
        ],
        "start_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 99999
          }
        ],
        "max_frames": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 99999
          }
        ]
      },
      "optional": {
        "input_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "STRING"
    ],
    "output_is_list": [true, true, false],
    "output_name": [
      "IMAGE",
      "MASK",
      "show_help"
    ],
    "name": "CR Load GIF As List",
    "display_name": "⌨️ CR Load GIF As List",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📜 List/⌨️ IO",
    "output_node": false
  },
  "CR Font File List": {
    "input": {
      "required": {
        "source_folder": [
          [
            "system",
            "Comfyroll",
            "from folder"
          ]
        ],
        "start_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999
          }
        ],
        "max_rows": [
          "INT",
          {
            "default": 1000,
            "min": 1,
            "max": 9999
          }
        ]
      },
      "optional": {
        "folder_path": [
          "STRING",
          {
            "default": "C:\\Windows\\Fonts",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "*",
      "STRING"
    ],
    "output_is_list": [true, false],
    "output_name": [
      "LIST",
      "show_help"
    ],
    "name": "CR Font File List",
    "display_name": "⌨️ CR Font File List",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📜 List/⌨️ IO",
    "output_node": false
  },
  "CR Batch Images From List": {
    "input": {
      "required": {
        "image_list": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image_batch",
      "show_help"
    ],
    "name": "CR Batch Images From List",
    "display_name": "🛠️ CR Batch Images From List",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📜 List/🛠️ Utils",
    "output_node": false
  },
  "CR Intertwine Lists": {
    "input": {
      "required": {
        "list1": [
          "STRING",
          {
            "multiline": true,
            "default": "",
            "forceInput": true
          }
        ],
        "list2": [
          "STRING",
          {
            "multiline": true,
            "default": "",
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [true, false],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Intertwine Lists",
    "display_name": "🛠️ CR Intertwine Lists",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📜 List/🛠️ Utils",
    "output_node": false
  },
  "CR Repeater": {
    "input": {
      "required": {
        "input_data": [
          "*"
        ],
        "repeats": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 99999
          }
        ]
      }
    },
    "output": [
      "*",
      "STRING"
    ],
    "output_is_list": [true, false],
    "output_name": [
      "list",
      "show_help"
    ],
    "name": "CR Repeater",
    "display_name": "🛠️ CR Repeater",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📜 List/🛠️ Utils",
    "output_node": false
  },
  "CR XY Product": {
    "input": {
      "required": {
        "text_x": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "text_y": [
          "STRING",
          {
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "*",
      "*",
      "STRING"
    ],
    "output_is_list": [true, true, false],
    "output_name": [
      "x_values",
      "y_values",
      "show_help"
    ],
    "name": "CR XY Product",
    "display_name": "🛠️ CR XY Product",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📜 List/🛠️ Utils",
    "output_node": false
  },
  "CR Text List To String": {
    "input": {
      "required": {
        "text_list": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Text List To String",
    "display_name": "🛠️ CR Text List To String",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📜 List/🛠️ Utils",
    "output_node": false
  },
  "CR SD1.5 Aspect Ratio": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192
          }
        ],
        "aspect_ratio": [
          [
            "custom",
            "1:1 square 512x512",
            "1:1 square 1024x1024",
            "2:3 portrait 512x768",
            "3:4 portrait 512x682",
            "3:2 landscape 768x512",
            "4:3 landscape 682x512",
            "16:9 cinema 910x512",
            "1.85:1 cinema 952x512",
            "2:1 cinema 1024x512",
            "2.39:1 anamorphic 1224x512"
          ]
        ],
        "swap_dimensions": [
          [
            "Off",
            "On"
          ]
        ],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 100,
            "step": 0.1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "FLOAT",
      "INT",
      "LATENT",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "width",
      "height",
      "upscale_factor",
      "batch_size",
      "empty_latent",
      "show_help"
    ],
    "name": "CR SD1.5 Aspect Ratio",
    "display_name": "🔳 CR SD1.5 Aspect Ratio",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/🔳 Aspect Ratio",
    "output_node": false
  },
  "CR SDXL Aspect Ratio": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192
          }
        ],
        "aspect_ratio": [
          [
            "custom",
            "1:1 square 1024x1024",
            "3:4 portrait 896x1152",
            "5:8 portrait 832x1216",
            "9:16 portrait 768x1344",
            "9:21 portrait 640x1536",
            "4:3 landscape 1152x896",
            "3:2 landscape 1216x832",
            "16:9 landscape 1344x768",
            "21:9 landscape 1536x640"
          ]
        ],
        "swap_dimensions": [
          [
            "Off",
            "On"
          ]
        ],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 100,
            "step": 0.1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "FLOAT",
      "INT",
      "LATENT",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "width",
      "height",
      "upscale_factor",
      "batch_size",
      "empty_latent",
      "show_help"
    ],
    "name": "CR SDXL Aspect Ratio",
    "display_name": "🔳 CR SDXL Aspect Ratio",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/🔳 Aspect Ratio",
    "output_node": false
  },
  "CR Aspect Ratio": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192
          }
        ],
        "aspect_ratio": [
          [
            "custom",
            "SD1.5 - 1:1 square 512x512",
            "SD1.5 - 2:3 portrait 512x768",
            "SD1.5 - 3:4 portrait 512x682",
            "SD1.5 - 3:2 landscape 768x512",
            "SD1.5 - 4:3 landscape 682x512",
            "SD1.5 - 16:9 cinema 910x512",
            "SD1.5 - 1.85:1 cinema 952x512",
            "SD1.5 - 2:1 cinema 1024x512",
            "SDXL - 1:1 square 1024x1024",
            "SDXL - 3:4 portrait 896x1152",
            "SDXL - 5:8 portrait 832x1216",
            "SDXL - 9:16 portrait 768x1344",
            "SDXL - 9:21 portrait 640x1536",
            "SDXL - 4:3 landscape 1152x896",
            "SDXL - 3:2 landscape 1216x832",
            "SDXL - 16:9 landscape 1344x768",
            "SDXL - 21:9 landscape 1536x640"
          ]
        ],
        "swap_dimensions": [
          [
            "Off",
            "On"
          ]
        ],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 100,
            "step": 0.1
          }
        ],
        "prescale_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 100,
            "step": 0.1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "FLOAT",
      "FLOAT",
      "INT",
      "LATENT",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false, false, false],
    "output_name": [
      "width",
      "height",
      "upscale_factor",
      "prescale_factor",
      "batch_size",
      "empty_latent",
      "show_help"
    ],
    "name": "CR Aspect Ratio",
    "display_name": "🔳 CR Aspect Ratio",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/🔳 Aspect Ratio",
    "output_node": false
  },
  "CR Aspect Ratio Banners": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192
          }
        ],
        "aspect_ratio": [
          [
            "custom",
            "Large Rectangle - 336x280",
            "Medium Rectangle - 300x250",
            "Small Rectangle - 180x150",
            "Square - 250x250",
            "Small Square - 200x200",
            "Button - 125x125",
            "Half Page - 300x600",
            "Vertical Banner - 120x240",
            "Wide Skyscraper - 160x600",
            "Skyscraper - 120x600",
            "Billboard - 970x250",
            "Portrait - 300x1050",
            "Banner - 468x60",
            "Leaderboard - 728x90"
          ]
        ],
        "swap_dimensions": [
          [
            "Off",
            "On"
          ]
        ],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 100,
            "step": 0.1
          }
        ],
        "prescale_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 100,
            "step": 0.1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "FLOAT",
      "FLOAT",
      "INT",
      "LATENT",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false, false, false],
    "output_name": [
      "width",
      "height",
      "upscale_factor",
      "prescale_factor",
      "batch_size",
      "empty_latent",
      "show_help"
    ],
    "name": "CR Aspect Ratio Banners",
    "display_name": "🔳 CR Aspect Ratio Banners",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/🔳 Aspect Ratio",
    "output_node": false
  },
  "CR Aspect Ratio Social Media": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192
          }
        ],
        "aspect_ratio": [
          [
            "custom",
            "Instagram Portrait - 1080x1350",
            "Instagram Square - 1080x1080",
            "Instagram Landscape - 1080x608",
            "Instagram Stories/Reels - 1080x1920",
            "Facebook Landscape - 1080x1350",
            "Facebook Marketplace - 1200x1200",
            "Facebook Stories - 1080x1920",
            "TikTok - 1080x1920",
            "YouTube Banner - 2560×1440",
            "LinkedIn Profile Banner - 1584x396",
            "LinkedIn Page Cover - 1128x191",
            "LinkedIn Post - 1200x627",
            "Pinterest Pin Image - 1000x1500",
            "CivitAI Cover - 1600x400",
            "OpenArt App - 1500x1000"
          ]
        ],
        "swap_dimensions": [
          [
            "Off",
            "On"
          ]
        ],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 100,
            "step": 0.1
          }
        ],
        "prescale_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 100,
            "step": 0.1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "FLOAT",
      "FLOAT",
      "INT",
      "LATENT",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false, false, false],
    "output_name": [
      "width",
      "height",
      "upscale_factor",
      "prescale_factor",
      "batch_size",
      "empty_latent",
      "show_help"
    ],
    "name": "CR Aspect Ratio Social Media",
    "display_name": "🔳 CR Aspect Ratio Social Media",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/🔳 Aspect Ratio",
    "output_node": false
  },
  "CR_Aspect Ratio For Print": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192
          }
        ],
        "aspect_ratio": [
          [
            "A4 - 2480x3508",
            "A5 - 1748x2480",
            "A6 - 1240x1748",
            "A7 - 874x1240",
            "A8 - 614x874",
            "A9 - 437x614",
            "A10 - 307x437",
            "B4 - 2953x4169",
            "B5 - 2079x2953",
            "B6 - 1476x2079",
            "B7 - 1039x1476",
            "B8 - 732x1039",
            "B9 - 520x732",
            "B10 - 366x520",
            "C4 - 2705x3827",
            "C5 - 1913x2705",
            "C6 - 1346x1913",
            "C7 - 957x1346",
            "C8 - 673x957",
            "C9 - 472x673",
            "C10 - 331x472",
            "Letter (8.5 x 11 inches) - 2550x3300",
            "Legal (8.5 x 14 inches) - 2550x4200"
          ]
        ],
        "swap_dimensions": [
          [
            "Off",
            "On"
          ]
        ],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 100,
            "step": 0.1
          }
        ],
        "prescale_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 100,
            "step": 0.1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "FLOAT",
      "FLOAT",
      "INT",
      "LATENT",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false, false, false],
    "output_name": [
      "width",
      "height",
      "upscale_factor",
      "prescale_factor",
      "batch_size",
      "empty_latent",
      "show_help"
    ],
    "name": "CR_Aspect Ratio For Print",
    "display_name": "🔳 CR_Aspect Ratio For Print",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/🔳 Aspect Ratio",
    "output_node": false
  },
  "CR Image Size": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048
          }
        ],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 1,
            "max": 2000
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "Width",
      "Height",
      "upscale_factor",
      "show_help"
    ],
    "name": "CR Image Size",
    "display_name": "CR Image Size (Legacy)",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/💀 Legacy",
    "output_node": false
  },
  "CR Aspect Ratio SDXL": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 2048
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 2048
          }
        ],
        "aspect_ratio": [
          [
            "custom",
            "1:1 square 1024x1024",
            "3:4 portrait 896x1152",
            "5:8 portrait 832x1216",
            "9:16 portrait 768x1344",
            "9:21 portrait 640x1536",
            "4:3 landscape 1152x896",
            "3:2 landscape 1216x832",
            "16:9 landscape 1344x768",
            "21:9 landscape 1536x640"
          ]
        ],
        "swap_dimensions": [
          [
            "Off",
            "On"
          ]
        ],
        "upscale_factor1": [
          "FLOAT",
          {
            "default": 1,
            "min": 1,
            "max": 2000
          }
        ],
        "upscale_factor2": [
          "FLOAT",
          {
            "default": 1,
            "min": 1,
            "max": 2000
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "FLOAT",
      "FLOAT",
      "INT",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "INT",
      "INT",
      "FLOAT",
      "FLOAT",
      "INT",
      "show_help"
    ],
    "name": "CR Aspect Ratio SDXL",
    "display_name": "CR Aspect Ratio SDXL (Legacy)",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/💀 Legacy",
    "output_node": false
  },
  "CR SDXL Prompt Mixer": {
    "input": {
      "required": {

      },
      "optional": {
        "prompt_positive": [
          "STRING",
          {
            "multiline": true,
            "default": "BASE_POSITIVE"
          }
        ],
        "prompt_negative": [
          "STRING",
          {
            "multiline": true,
            "default": "BASE_NEGATIVE"
          }
        ],
        "style_positive": [
          "STRING",
          {
            "multiline": true,
            "default": "REFINER_POSTIVE"
          }
        ],
        "style_negative": [
          "STRING",
          {
            "multiline": true,
            "default": "REFINER_NEGATIVE"
          }
        ],
        "preset": [
          [
            "preset 1",
            "preset 2",
            "preset 3",
            "preset 4",
            "preset 5"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "pos_g",
      "pos_l",
      "pos_r",
      "neg_g",
      "neg_l",
      "neg_r"
    ],
    "name": "CR SDXL Prompt Mixer",
    "display_name": "CR SDXL Prompt Mixer (Legacy)",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/💀 Legacy",
    "output_node": false
  },
  "CR Seed to Int": {
    "input": {
      "required": {
        "seed": [
          "SEED"
        ]
      }
    },
    "output": [
      "INT",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "INT",
      "show_help"
    ],
    "name": "CR Seed to Int",
    "display_name": "CR Seed to Int (Legacy)",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/💀 Legacy",
    "output_node": false
  },
  "CR Apply ControlNet": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "switch": [
          [
            "On",
            "Off"
          ]
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CONDITIONING",
      "show_help"
    ],
    "name": "CR Apply ControlNet",
    "display_name": "🕹️ CR Apply ControlNet",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/🕹️ ControlNet",
    "output_node": false
  },
  "CR Multi-ControlNet Stack": {
    "input": {
      "required": {

      },
      "optional": {
        "switch_1": [
          [
            "Off",
            "On"
          ]
        ],
        "controlnet_1": [
          [
            "None",
            "SD1.5/animatediff/v3_sd15_sparsectrl_rgb.ckpt",
            "canny.safetensors",
            "control-lora-canny-rank256.safetensors",
            "control-lora-depth-rank256.safetensors",
            "control-lora-sketch-rank256.safetensors",
            "control_v11e_sd15_ip2p.pth",
            "control_v11f1e_sd15_tile.safetensors",
            "control_v11f1p_sd15_depth.pth",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny.pth",
            "control_v11p_sd15_lineart.pth",
            "control_v11p_sd15_openpose.pth",
            "control_v11p_sd15_seg.pth",
            "control_v1p_sd15_qrcode_monster.safetensors",
            "controlnet-canny-sdxl-1.0-mid.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusion_pytorch_model.fp16.safetensors",
            "mistoLine_fp16.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_softedge.safetensors"
          ]
        ],
        "controlnet_strength_1": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "start_percent_1": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent_1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "switch_2": [
          [
            "Off",
            "On"
          ]
        ],
        "controlnet_2": [
          [
            "None",
            "SD1.5/animatediff/v3_sd15_sparsectrl_rgb.ckpt",
            "canny.safetensors",
            "control-lora-canny-rank256.safetensors",
            "control-lora-depth-rank256.safetensors",
            "control-lora-sketch-rank256.safetensors",
            "control_v11e_sd15_ip2p.pth",
            "control_v11f1e_sd15_tile.safetensors",
            "control_v11f1p_sd15_depth.pth",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny.pth",
            "control_v11p_sd15_lineart.pth",
            "control_v11p_sd15_openpose.pth",
            "control_v11p_sd15_seg.pth",
            "control_v1p_sd15_qrcode_monster.safetensors",
            "controlnet-canny-sdxl-1.0-mid.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusion_pytorch_model.fp16.safetensors",
            "mistoLine_fp16.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_softedge.safetensors"
          ]
        ],
        "controlnet_strength_2": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "start_percent_2": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent_2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "switch_3": [
          [
            "Off",
            "On"
          ]
        ],
        "controlnet_3": [
          [
            "None",
            "SD1.5/animatediff/v3_sd15_sparsectrl_rgb.ckpt",
            "canny.safetensors",
            "control-lora-canny-rank256.safetensors",
            "control-lora-depth-rank256.safetensors",
            "control-lora-sketch-rank256.safetensors",
            "control_v11e_sd15_ip2p.pth",
            "control_v11f1e_sd15_tile.safetensors",
            "control_v11f1p_sd15_depth.pth",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny.pth",
            "control_v11p_sd15_lineart.pth",
            "control_v11p_sd15_openpose.pth",
            "control_v11p_sd15_seg.pth",
            "control_v1p_sd15_qrcode_monster.safetensors",
            "controlnet-canny-sdxl-1.0-mid.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusion_pytorch_model.fp16.safetensors",
            "mistoLine_fp16.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_softedge.safetensors"
          ]
        ],
        "controlnet_strength_3": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "start_percent_3": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent_3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "image_1": [
          "IMAGE"
        ],
        "image_2": [
          "IMAGE"
        ],
        "image_3": [
          "IMAGE"
        ],
        "controlnet_stack": [
          "CONTROL_NET_STACK"
        ]
      }
    },
    "output": [
      "CONTROL_NET_STACK",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CONTROLNET_STACK",
      "show_help"
    ],
    "name": "CR Multi-ControlNet Stack",
    "display_name": "🕹️ CR Multi-ControlNet Stack",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/🕹️ ControlNet",
    "output_node": false
  },
  "CR Apply Multi-ControlNet": {
    "input": {
      "required": {
        "base_positive": [
          "CONDITIONING"
        ],
        "base_negative": [
          "CONDITIONING"
        ],
        "switch": [
          [
            "Off",
            "On"
          ]
        ],
        "controlnet_stack": [
          "CONTROL_NET_STACK"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "base_pos",
      "base_neg",
      "show_help"
    ],
    "name": "CR Apply Multi-ControlNet",
    "display_name": "🕹️ CR Apply Multi-ControlNet",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/🕹️ ControlNet",
    "output_node": false
  },
  "CR Load LoRA": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "switch": [
          [
            "On",
            "Off"
          ]
        ],
        "lora_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "show_help"
    ],
    "name": "CR Load LoRA",
    "display_name": "💊 CR Load LoRA",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/💊 LoRA",
    "output_node": false
  },
  "CR LoRA Stack": {
    "input": {
      "required": {
        "switch_1": [
          [
            "Off",
            "On"
          ]
        ],
        "lora_name_1": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_weight_1": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_weight_1": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "switch_2": [
          [
            "Off",
            "On"
          ]
        ],
        "lora_name_2": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_weight_2": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_weight_2": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "switch_3": [
          [
            "Off",
            "On"
          ]
        ],
        "lora_name_3": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_weight_3": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_weight_3": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "LORA_STACK",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "LORA_STACK",
      "show_help"
    ],
    "name": "CR LoRA Stack",
    "display_name": "💊 CR LoRA Stack",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/💊 LoRA",
    "output_node": false
  },
  "CR Random LoRA Stack": {
    "input": {
      "required": {
        "exclusive_mode": [
          [
            "Off",
            "On"
          ]
        ],
        "stride": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 1000
          }
        ],
        "force_randomize_after_stride": [
          [
            "Off",
            "On"
          ]
        ],
        "lora_name_1": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "switch_1": [
          [
            "Off",
            "On"
          ]
        ],
        "chance_1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "model_weight_1": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_weight_1": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_2": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "switch_2": [
          [
            "Off",
            "On"
          ]
        ],
        "chance_2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "model_weight_2": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_weight_2": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_3": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "switch_3": [
          [
            "Off",
            "On"
          ]
        ],
        "chance_3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "model_weight_3": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_weight_3": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "LORA_STACK"
    ],
    "output_is_list": [false],
    "output_name": [
      "LORA_STACK"
    ],
    "name": "CR Random LoRA Stack",
    "display_name": "💊 CR Random LoRA Stack",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/💊 LoRA",
    "output_node": false
  },
  "CR Random Weight LoRA": {
    "input": {
      "required": {
        "stride": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 1000
          }
        ],
        "force_randomize_after_stride": [
          [
            "Off",
            "On"
          ]
        ],
        "lora_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "switch": [
          [
            "Off",
            "On"
          ]
        ],
        "weight_min": [
          "FLOAT",
          {
            "default": 0,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "weight_max": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "LORA_STACK"
    ],
    "output_is_list": [false],
    "output_name": [
      "LORA_STACK"
    ],
    "name": "CR Random Weight LoRA",
    "display_name": "💊 CR Random Weight LoRA",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/💊 LoRA",
    "output_node": false
  },
  "CR Apply LoRA Stack": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "show_help"
    ],
    "name": "CR Apply LoRA Stack",
    "display_name": "💊 CR Apply LoRA Stack",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/💊 LoRA",
    "output_node": false
  },
  "CR Apply Model Merge": {
    "input": {
      "required": {
        "model_stack": [
          "MODEL_STACK"
        ],
        "merge_method": [
          [
            "Recursive",
            "Weighted"
          ]
        ],
        "normalise_ratios": [
          [
            "Yes",
            "No"
          ]
        ],
        "weight_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "model_mix_info",
      "show_help"
    ],
    "name": "CR Apply Model Merge",
    "display_name": "⛏️ CR Apply Model Merge",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/⛏️ Model Merge",
    "output_node": false
  },
  "CR Model Merge Stack": {
    "input": {
      "required": {
        "switch_1": [
          [
            "Off",
            "On"
          ]
        ],
        "ckpt_name1": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "model_ratio1": [
          "FLOAT",
          {
            "default": 1,
            "min": -100,
            "max": 100,
            "step": 0.01
          }
        ],
        "clip_ratio1": [
          "FLOAT",
          {
            "default": 1,
            "min": -100,
            "max": 100,
            "step": 0.01
          }
        ],
        "switch_2": [
          [
            "Off",
            "On"
          ]
        ],
        "ckpt_name2": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "model_ratio2": [
          "FLOAT",
          {
            "default": 1,
            "min": -100,
            "max": 100,
            "step": 0.01
          }
        ],
        "clip_ratio2": [
          "FLOAT",
          {
            "default": 1,
            "min": -100,
            "max": 100,
            "step": 0.01
          }
        ],
        "switch_3": [
          [
            "Off",
            "On"
          ]
        ],
        "ckpt_name3": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "model_ratio3": [
          "FLOAT",
          {
            "default": 1,
            "min": -100,
            "max": 100,
            "step": 0.01
          }
        ],
        "clip_ratio3": [
          "FLOAT",
          {
            "default": 1,
            "min": -100,
            "max": 100,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "model_stack": [
          "MODEL_STACK"
        ]
      }
    },
    "output": [
      "MODEL_STACK",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL_STACK",
      "show_help"
    ],
    "name": "CR Model Merge Stack",
    "display_name": "⛏️ CR Model Merge Stack",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/⛏️ Model Merge",
    "output_node": false
  },
  "CR Data Bus In": {
    "input": {
      "required": {

      },
      "optional": {
        "pipe": [
          "*"
        ],
        "any1": [
          "*"
        ],
        "any2": [
          "*"
        ],
        "any3": [
          "*"
        ],
        "any4": [
          "*"
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "pipe",
      "show_help"
    ],
    "name": "CR Data Bus In",
    "display_name": "🚌 CR Data Bus In",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/🎷 Pipe/🚌 Bus",
    "output_node": false
  },
  "CR Data Bus Out": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "*",
      "*",
      "*",
      "*",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "pipe",
      "any1",
      "any2",
      "any3",
      "any4",
      "show_help"
    ],
    "name": "CR Data Bus Out",
    "display_name": "🚌 CR Data Bus Out",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/🎷 Pipe/🚌 Bus",
    "output_node": false
  },
  "CR 8 Channel In": {
    "input": {
      "required": {

      },
      "optional": {
        "pipe": [
          "*"
        ],
        "ch1": [
          "*"
        ],
        "ch2": [
          "*"
        ],
        "ch3": [
          "*"
        ],
        "ch4": [
          "*"
        ],
        "ch5": [
          "*"
        ],
        "ch6": [
          "*"
        ],
        "ch7": [
          "*"
        ],
        "ch8": [
          "*"
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "pipe",
      "show_help"
    ],
    "name": "CR 8 Channel In",
    "display_name": "🚌 CR 8 Channel In",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/🎷 Pipe/🚌 Bus",
    "output_node": false
  },
  "CR 8 Channel Out": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false, false, false],
    "output_name": [
      "pipe",
      "ch1",
      "ch2",
      "ch3",
      "ch4",
      "ch5",
      "ch6",
      "ch7",
      "ch8",
      "show_help"
    ],
    "name": "CR 8 Channel Out",
    "display_name": "🚌 CR 8 Channel Out",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/🎷 Pipe/🚌 Bus",
    "output_node": false
  },
  "CR Module Pipe Loader": {
    "input": {
      "required": {

      },
      "optional": {
        "model": [
          "MODEL"
        ],
        "pos": [
          "CONDITIONING"
        ],
        "neg": [
          "CONDITIONING"
        ],
        "latent": [
          "LATENT"
        ],
        "vae": [
          "VAE"
        ],
        "clip": [
          "CLIP"
        ],
        "controlnet": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "pipe",
      "show_help"
    ],
    "name": "CR Module Pipe Loader",
    "display_name": "✈️ CR Module Pipe Loader",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/🎷 Pipe/✈️ Module",
    "output_node": false
  },
  "CR Module Input": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "CLIP",
      "CONTROL_NET",
      "IMAGE",
      "INT",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false, false, false, false],
    "output_name": [
      "pipe",
      "model",
      "pos",
      "neg",
      "latent",
      "vae",
      "clip",
      "controlnet",
      "image",
      "seed",
      "show_help"
    ],
    "name": "CR Module Input",
    "display_name": "✈️ CR Module Input",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/🎷 Pipe/✈️ Module",
    "output_node": false
  },
  "CR Module Output": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ]
      },
      "optional": {
        "model": [
          "MODEL"
        ],
        "pos": [
          "CONDITIONING"
        ],
        "neg": [
          "CONDITIONING"
        ],
        "latent": [
          "LATENT"
        ],
        "vae": [
          "VAE"
        ],
        "clip": [
          "CLIP"
        ],
        "controlnet": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "pipe",
      "show_help"
    ],
    "name": "CR Module Output",
    "display_name": "✈️ CR Module Output",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/🎷 Pipe/✈️ Module",
    "output_node": false
  },
  "CR Image Pipe In": {
    "input": {
      "required": {

      },
      "optional": {
        "image": [
          "IMAGE"
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048
          }
        ],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 1,
            "max": 2000
          }
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "pipe",
      "show_help"
    ],
    "name": "CR Image Pipe In",
    "display_name": "🛩 CR Image Pipe In",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/🎷 Pipe/🛩️ Image",
    "output_node": false
  },
  "CR Image Pipe Edit": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "forceInput": true
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "forceInput": true
          }
        ],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 1,
            "max": 2000,
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "pipe",
      "show_help"
    ],
    "name": "CR Image Pipe Edit",
    "display_name": "🛩️ CR Image Pipe Edit",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/🎷 Pipe/🛩️ Image",
    "output_node": false
  },
  "CR Image Pipe Out": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "IMAGE",
      "INT",
      "INT",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "pipe",
      "image",
      "width",
      "height",
      "upscale_factor",
      "show_help"
    ],
    "name": "CR Image Pipe Out",
    "display_name": "🛩️ CR Image Pipe Out",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/🎷 Pipe/🛩️ Image",
    "output_node": false
  },
  "CR Pipe Switch": {
    "input": {
      "required": {
        "Input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 2
          }
        ],
        "pipe1": [
          "PIPE_LINE"
        ],
        "pipe2": [
          "PIPE_LINE"
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "PIPE_LINE",
      "show_help"
    ],
    "name": "CR Pipe Switch",
    "display_name": "🔀️ CR Pipe Switch",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/🎷 Pipe",
    "output_node": true
  },
  "CR SDXL Prompt Mix Presets": {
    "input": {
      "required": {

      },
      "optional": {
        "prompt_positive": [
          "STRING",
          {
            "multiline": true,
            "default": "prompt_pos"
          }
        ],
        "prompt_negative": [
          "STRING",
          {
            "multiline": true,
            "default": "prompt_neg"
          }
        ],
        "style_positive": [
          "STRING",
          {
            "multiline": true,
            "default": "style_pos"
          }
        ],
        "style_negative": [
          "STRING",
          {
            "multiline": true,
            "default": "style_neg"
          }
        ],
        "preset": [
          [
            "default with no style text",
            "default with style text",
            "style boost 1",
            "style boost 2",
            "style text to refiner"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false, false, false],
    "output_name": [
      "pos_g",
      "pos_l",
      "pos_r",
      "neg_g",
      "neg_l",
      "neg_r",
      "show_help"
    ],
    "name": "CR SDXL Prompt Mix Presets",
    "display_name": "🌟 CR SDXL Prompt Mix Presets",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/🌟 SDXL",
    "output_node": false
  },
  "CR SDXL Style Text": {
    "input": {
      "required": {
        "positive_style": [
          "STRING",
          {
            "default": "POS_STYLE",
            "multiline": true
          }
        ],
        "negative_style": [
          "STRING",
          {
            "default": "NEG_STYLE",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "positive_prompt_text_l",
      "negative_prompt_text_l",
      "show_help"
    ],
    "name": "CR SDXL Style Text",
    "display_name": "🌟 CR SDXL Style Text",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/🌟 SDXL",
    "output_node": false
  },
  "CR SDXL Base Prompt Encoder": {
    "input": {
      "required": {
        "base_clip": [
          "CLIP"
        ],
        "pos_g": [
          "STRING",
          {
            "multiline": true,
            "default": "POS_G"
          }
        ],
        "pos_l": [
          "STRING",
          {
            "multiline": true,
            "default": "POS_L"
          }
        ],
        "neg_g": [
          "STRING",
          {
            "multiline": true,
            "default": "NEG_G"
          }
        ],
        "neg_l": [
          "STRING",
          {
            "multiline": true,
            "default": "NEG_L"
          }
        ],
        "preset": [
          [
            "preset A",
            "preset B",
            "preset C"
          ]
        ],
        "base_width": [
          "INT",
          {
            "default": 4096,
            "min": 0,
            "max": 16384,
            "step": 64
          }
        ],
        "base_height": [
          "INT",
          {
            "default": 4096,
            "min": 0,
            "max": 16384,
            "step": 64
          }
        ],
        "crop_w": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 64
          }
        ],
        "crop_h": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 64
          }
        ],
        "target_width": [
          "INT",
          {
            "default": 4096,
            "min": 0,
            "max": 16384,
            "step": 64
          }
        ],
        "target_height": [
          "INT",
          {
            "default": 4096,
            "min": 0,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "base_positive",
      "base_negative",
      "show_help"
    ],
    "name": "CR SDXL Base Prompt Encoder",
    "display_name": "🌟 CR SDXL Base Prompt Encoder",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/🌟 SDXL",
    "output_node": false
  },
  "CR Multi Upscale Stack": {
    "input": {
      "required": {
        "switch_1": [
          [
            "On",
            "Off"
          ]
        ],
        "upscale_model_1": [
          [
            "None",
            "4x-lollypop.pth",
            "4xRealWebPhoto_v4_dat2.pth",
            "4x_NMKD-Siax_200k.pth",
            "RealESRGAN_x2.pth",
            "RealESRGAN_x4.pth",
            "RealESRGAN_x8.pth"
          ]
        ],
        "rescale_factor_1": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.01,
            "max": 16,
            "step": 0.01
          }
        ],
        "switch_2": [
          [
            "On",
            "Off"
          ]
        ],
        "upscale_model_2": [
          [
            "None",
            "4x-lollypop.pth",
            "4xRealWebPhoto_v4_dat2.pth",
            "4x_NMKD-Siax_200k.pth",
            "RealESRGAN_x2.pth",
            "RealESRGAN_x4.pth",
            "RealESRGAN_x8.pth"
          ]
        ],
        "rescale_factor_2": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.01,
            "max": 16,
            "step": 0.01
          }
        ],
        "switch_3": [
          [
            "On",
            "Off"
          ]
        ],
        "upscale_model_3": [
          [
            "None",
            "4x-lollypop.pth",
            "4xRealWebPhoto_v4_dat2.pth",
            "4x_NMKD-Siax_200k.pth",
            "RealESRGAN_x2.pth",
            "RealESRGAN_x4.pth",
            "RealESRGAN_x8.pth"
          ]
        ],
        "rescale_factor_3": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.01,
            "max": 16,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "upscale_stack": [
          "UPSCALE_STACK"
        ]
      }
    },
    "output": [
      "UPSCALE_STACK",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "UPSCALE_STACK",
      "show_help"
    ],
    "name": "CR Multi Upscale Stack",
    "display_name": "🔍 CR Multi Upscale Stack",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/🔍 Upscale",
    "output_node": false
  },
  "CR Upscale Image": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "upscale_model": [
          [
            "4x-lollypop.pth",
            "4xRealWebPhoto_v4_dat2.pth",
            "4x_NMKD-Siax_200k.pth",
            "RealESRGAN_x2.pth",
            "RealESRGAN_x4.pth",
            "RealESRGAN_x8.pth"
          ]
        ],
        "mode": [
          [
            "rescale",
            "resize"
          ]
        ],
        "rescale_factor": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.01,
            "max": 16,
            "step": 0.01
          }
        ],
        "resize_width": [
          "INT",
          {
            "default": 1024,
            "min": 1,
            "max": 48000,
            "step": 1
          }
        ],
        "resampling_method": [
          [
            "lanczos",
            "nearest",
            "bilinear",
            "bicubic"
          ]
        ],
        "supersample": [
          [
            "true",
            "false"
          ]
        ],
        "rounding_modulus": [
          "INT",
          {
            "default": 8,
            "min": 8,
            "max": 1024,
            "step": 8
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Upscale Image",
    "display_name": "🔍 CR Upscale Image",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/🔍 Upscale",
    "output_node": false
  },
  "CR Apply Multi Upscale": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "resampling_method": [
          [
            "lanczos",
            "nearest",
            "bilinear",
            "bicubic"
          ]
        ],
        "supersample": [
          [
            "true",
            "false"
          ]
        ],
        "rounding_modulus": [
          "INT",
          {
            "default": 8,
            "min": 8,
            "max": 1024,
            "step": 8
          }
        ],
        "upscale_stack": [
          "UPSCALE_STACK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Apply Multi Upscale",
    "display_name": "🔍 CR Apply Multi Upscale",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/🔍 Upscale",
    "output_node": false
  },
  "CR XY List": {
    "input": {
      "required": {
        "index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "list1": [
          "STRING",
          {
            "multiline": true,
            "default": "x"
          }
        ],
        "x_prepend": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "x_append": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "x_annotation_prepend": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "list2": [
          "STRING",
          {
            "multiline": true,
            "default": "y"
          }
        ],
        "y_prepend": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "y_append": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "y_annotation_prepend": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "BOOLEAN",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "X",
      "Y",
      "x_annotation",
      "y_annotation",
      "trigger",
      "show_help"
    ],
    "name": "CR XY List",
    "display_name": "📉 CR XY List",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📉 XY Grid",
    "output_node": false
  },
  "CR XY Interpolate": {
    "input": {
      "required": {
        "x_columns": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "x_start_value": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 0.01
          }
        ],
        "x_step": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 9999,
            "step": 0.01
          }
        ],
        "x_annotation_prepend": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "y_rows": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "y_start_value": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 0.01
          }
        ],
        "y_step": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 9999,
            "step": 0.01
          }
        ],
        "y_annotation_prepend": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "gradient_profile": [
          [
            "Lerp"
          ]
        ]
      }
    },
    "output": [
      "FLOAT",
      "FLOAT",
      "STRING",
      "STRING",
      "BOOLEAN",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "X",
      "Y",
      "x_annotation",
      "y_annotation",
      "trigger",
      "show_help"
    ],
    "name": "CR XY Interpolate",
    "display_name": "📉 CR XY Interpolate",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📉 XY Grid",
    "output_node": false
  },
  "CR XY From Folder": {
    "input": {
      "required": {
        "image_folder": [
          []
        ],
        "start_index": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 10000
          }
        ],
        "end_index": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10000
          }
        ],
        "max_columns": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10000
          }
        ],
        "x_annotation": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "y_annotation": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "font_size": [
          "INT",
          {
            "default": 50,
            "min": 1
          }
        ],
        "gap": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ]
      },
      "optional": {
        "trigger": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "BOOLEAN",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "IMAGE",
      "trigger",
      "show_help"
    ],
    "name": "CR XY From Folder",
    "display_name": "📉 CR XY From Folder",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📉 XY Grid",
    "output_node": false
  },
  "CR XY Save Grid Image": {
    "input": {
      "required": {
        "mode": [
          [
            "Save",
            "Preview"
          ]
        ],
        "output_folder": [
          []
        ],
        "image": [
          "IMAGE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "CR"
          }
        ],
        "file_format": [
          [
            "webp",
            "jpg",
            "png",
            "tif"
          ]
        ]
      },
      "optional": {
        "output_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "trigger": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "CR XY Save Grid Image",
    "display_name": "📉 CR XY Save Grid Image",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📉 XY Grid",
    "output_node": true
  },
  "CR XY Index": {
    "input": {
      "required": {
        "x_columns": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "y_rows": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "x",
      "y",
      "show_help"
    ],
    "name": "CR XY Index",
    "display_name": "📉 CR XY Index",
    "description": "",
    "category": "🧩 Comfyroll Studio/✨ Essential/📉 XY Grid",
    "output_node": false
  },
  "CR Halftone Grid": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "dot_style": [
          [
            "Accent",
            "afmhot",
            "autumn",
            "binary",
            "Blues",
            "bone",
            "BrBG",
            "brg",
            "BuGn",
            "BuPu",
            "bwr",
            "cividis",
            "CMRmap",
            "cool",
            "coolwarm",
            "copper",
            "cubehelix",
            "Dark2",
            "flag",
            "gist_earth",
            "gist_gray",
            "gist_heat",
            "gist_rainbow",
            "gist_stern",
            "gist_yarg",
            "GnBu",
            "gnuplot",
            "gnuplot2",
            "gray",
            "Greens",
            "Greys",
            "hot",
            "hsv",
            "inferno",
            "jet",
            "magma",
            "nipy_spectral",
            "ocean",
            "Oranges",
            "OrRd",
            "Paired",
            "Pastel1",
            "Pastel2",
            "pink",
            "PiYG",
            "plasma",
            "PRGn",
            "prism",
            "PuBu",
            "PuBuGn",
            "PuOr",
            "PuRd",
            "Purples",
            "rainbow",
            "RdBu",
            "RdGy",
            "RdPu",
            "RdYlBu",
            "RdYlGn",
            "Reds",
            "seismic",
            "Set1",
            "Set2",
            "Set3",
            "Spectral",
            "spring",
            "summer",
            "tab10",
            "tab20",
            "tab20b",
            "tab20c",
            "terrain",
            "turbo",
            "twilight",
            "twilight_shifted",
            "viridis",
            "winter",
            "Wistia",
            "YlGn",
            "YlGnBu",
            "YlOrBr",
            "YlOrRd"
          ]
        ],
        "reverse_dot_style": [
          [
            "No",
            "Yes"
          ]
        ],
        "dot_frequency": [
          "INT",
          {
            "default": 50,
            "min": 1,
            "max": 200,
            "step": 1
          }
        ],
        "background_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "x_pos": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "y_pos": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "bg_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Halftone Grid",
    "display_name": "🟫 CR Halftone Grid",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🌈 Pattern",
    "output_node": false
  },
  "CR Color Bars": {
    "input": {
      "required": {
        "mode": [
          [
            "2-color"
          ]
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "color_1": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "color_2": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "orientation": [
          [
            "vertical",
            "horizontal",
            "diagonal",
            "alt_diagonal"
          ]
        ],
        "bar_frequency": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 200,
            "step": 1
          }
        ],
        "offset": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 20,
            "step": 0.05
          }
        ]
      },
      "optional": {
        "color1_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "color2_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Color Bars",
    "display_name": "🟫 CR Color Bars",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🌈 Pattern",
    "output_node": false
  },
  "CR Style Bars": {
    "input": {
      "required": {
        "mode": [
          [
            "color bars",
            "sin wave",
            "gradient bars"
          ]
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "bar_style": [
          [
            "Accent",
            "afmhot",
            "autumn",
            "binary",
            "Blues",
            "bone",
            "BrBG",
            "brg",
            "BuGn",
            "BuPu",
            "bwr",
            "cividis",
            "CMRmap",
            "cool",
            "coolwarm",
            "copper",
            "cubehelix",
            "Dark2",
            "flag",
            "gist_earth",
            "gist_gray",
            "gist_heat",
            "gist_rainbow",
            "gist_stern",
            "gist_yarg",
            "GnBu",
            "gnuplot",
            "gnuplot2",
            "gray",
            "Greens",
            "Greys",
            "hot",
            "hsv",
            "inferno",
            "jet",
            "magma",
            "nipy_spectral",
            "ocean",
            "Oranges",
            "OrRd",
            "Paired",
            "Pastel1",
            "Pastel2",
            "pink",
            "PiYG",
            "plasma",
            "PRGn",
            "prism",
            "PuBu",
            "PuBuGn",
            "PuOr",
            "PuRd",
            "Purples",
            "rainbow",
            "RdBu",
            "RdGy",
            "RdPu",
            "RdYlBu",
            "RdYlGn",
            "Reds",
            "seismic",
            "Set1",
            "Set2",
            "Set3",
            "Spectral",
            "spring",
            "summer",
            "tab10",
            "tab20",
            "tab20b",
            "tab20c",
            "terrain",
            "turbo",
            "twilight",
            "twilight_shifted",
            "viridis",
            "winter",
            "Wistia",
            "YlGn",
            "YlGnBu",
            "YlOrBr",
            "YlOrRd"
          ]
        ],
        "orientation": [
          [
            "vertical",
            "horizontal"
          ]
        ],
        "bar_frequency": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 200,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Style Bars",
    "display_name": "🟪 CR Style Bars",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🌈 Pattern",
    "output_node": false
  },
  "CR Checker Pattern": {
    "input": {
      "required": {
        "mode": [
          [
            "regular",
            "stepped"
          ]
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "color_1": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "color_2": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "grid_frequency": [
          "INT",
          {
            "default": 8,
            "min": 1,
            "max": 200,
            "step": 1
          }
        ],
        "step": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 200,
            "step": 1
          }
        ]
      },
      "optional": {
        "color1_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "color2_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Checker Pattern",
    "display_name": "🟦 CR Checker Pattern",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🌈 Pattern",
    "output_node": false
  },
  "CR Polygons": {
    "input": {
      "required": {
        "mode": [
          [
            "hexagons",
            "triangles"
          ]
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "rows": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 512
          }
        ],
        "columns": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 512
          }
        ],
        "face_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "background_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "line_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "line_width": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "max": 512
          }
        ]
      },
      "optional": {
        "face_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "bg_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "line_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Polygons",
    "display_name": "🟩 CR Polygons",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🌈 Pattern",
    "output_node": false
  },
  "CR Color Gradient": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "start_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "end_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "gradient_distance": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 2,
            "step": 0.05
          }
        ],
        "linear_transition": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "orientation": [
          [
            "vertical",
            "horizontal"
          ]
        ]
      },
      "optional": {
        "start_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "end_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Color Gradient",
    "display_name": "🟨 CR Color Gradient",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🌈 Pattern",
    "output_node": false
  },
  "CR Radial Gradient": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "start_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "end_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "gradient_distance": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 2,
            "step": 0.05
          }
        ],
        "radial_center_x": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "radial_center_y": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ]
      },
      "optional": {
        "start_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "end_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_Help"
    ],
    "name": "CR Radial Gradient",
    "display_name": "🟨 CR Radial Gradient",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🌈 Pattern",
    "output_node": false
  },
  "CR Starburst Lines": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "num_lines": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 500
          }
        ],
        "line_length": [
          "FLOAT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 0.1
          }
        ],
        "line_width": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 512
          }
        ],
        "line_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "background_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "center_x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1024
          }
        ],
        "center_y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1024
          }
        ],
        "rotation": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 720
          }
        ]
      },
      "optional": {
        "line_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "bg_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Starburst Lines",
    "display_name": "🟧 CR Starburst Lines",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🌈 Pattern",
    "output_node": false
  },
  "CR Starburst Colors": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "num_triangles": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 512
          }
        ],
        "color_1": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "color_2": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "center_x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 512
          }
        ],
        "center_y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 512
          }
        ],
        "rotation": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 720
          }
        ],
        "bbox_factor": [
          "FLOAT",
          {
            "default": 2,
            "min": 0,
            "max": 2,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "color1_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "color2_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Starburst Colors",
    "display_name": "🟧 CR Starburst Colors",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🌈 Pattern",
    "output_node": false
  },
  "CR Simple Binary Pattern": {
    "input": {
      "required": {
        "binary_pattern": [
          "STRING",
          {
            "multiline": true,
            "default": "10101"
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Simple Binary Pattern",
    "display_name": "🟥 CR Simple Binary Pattern",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🌈 Pattern",
    "output_node": false
  },
  "CR Binary Pattern": {
    "input": {
      "required": {
        "binary_pattern": [
          "STRING",
          {
            "multiline": true,
            "default": "10101"
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "background_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "color_0": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "color_1": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "outline_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1024
          }
        ],
        "outline_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "jitter_distance": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1024
          }
        ],
        "bias": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ]
      },
      "optional": {
        "bg_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "color0_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "color1_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "outline_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Binary Pattern",
    "display_name": "🟥 CR Binary Pattern",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🌈 Pattern",
    "output_node": false
  },
  "CR Draw Shape": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "shape": [
          [
            "circle",
            "oval",
            "square",
            "diamond",
            "triangle",
            "hexagon",
            "octagon",
            "quarter circle",
            "half circle",
            "quarter circle",
            "starburst",
            "star",
            "cross",
            "diagonal regions"
          ]
        ],
        "shape_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "back_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "x_offset": [
          "INT",
          {
            "default": 0,
            "min": -2048,
            "max": 2048
          }
        ],
        "y_offset": [
          "INT",
          {
            "default": 0,
            "min": -2048,
            "max": 2048
          }
        ],
        "zoom": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.05
          }
        ],
        "rotation": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 3600,
            "step": 0.1
          }
        ]
      },
      "optional": {
        "shape_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "bg_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Draw Shape",
    "display_name": "🟡 CR Draw Shape",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🟣 Shape",
    "output_node": false
  },
  "CR Draw Pie": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "pie_start": [
          "FLOAT",
          {
            "default": 30,
            "min": 0,
            "max": 9999,
            "step": 0.1
          }
        ],
        "pie_stop": [
          "FLOAT",
          {
            "default": 330,
            "min": 0,
            "max": 9999,
            "step": 0.1
          }
        ],
        "shape_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "back_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "x_offset": [
          "INT",
          {
            "default": 0,
            "min": -2048,
            "max": 2048
          }
        ],
        "y_offset": [
          "INT",
          {
            "default": 0,
            "min": -2048,
            "max": 2048
          }
        ],
        "zoom": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.05
          }
        ],
        "rotation": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 3600,
            "step": 0.1
          }
        ]
      },
      "optional": {
        "shape_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "bg_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Draw Pie",
    "display_name": "🟢 CR Draw Pie",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🟣 Shape",
    "output_node": false
  },
  "CR Random Shape Pattern": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "num_rows": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 128
          }
        ],
        "num_cols": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 128
          }
        ],
        "color1": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "color2": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ]
      },
      "optional": {
        "color1_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "color2_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Random Shape Pattern",
    "display_name": "🔵 CR Random Shape Pattern",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🟣 Shape",
    "output_node": false
  },
  "CR Overlay Text": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": "text"
          }
        ],
        "font_name": [
          [
            "AlumniSansCollegiateOne-Regular.ttf",
            "Caveat-VariableFont_wght.ttf",
            "NotoSansArabic-Regular.ttf",
            "Oswald-Bold.ttf",
            "PixelifySans-Bold.ttf",
            "Quicksand-Bold.ttf",
            "Roboto-Regular.ttf",
            "YoungSerif-Regular.ttf",
            "comic.ttf",
            "impact.ttf"
          ]
        ],
        "font_size": [
          "INT",
          {
            "default": 50,
            "min": 1,
            "max": 1024
          }
        ],
        "font_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "align": [
          [
            "center",
            "top",
            "bottom"
          ]
        ],
        "justify": [
          [
            "center",
            "left",
            "right"
          ]
        ],
        "margins": [
          "INT",
          {
            "default": 0,
            "min": -1024,
            "max": 1024
          }
        ],
        "line_spacing": [
          "INT",
          {
            "default": 0,
            "min": -1024,
            "max": 1024
          }
        ],
        "position_x": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096
          }
        ],
        "position_y": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096
          }
        ],
        "rotation_angle": [
          "FLOAT",
          {
            "default": 0,
            "min": -360,
            "max": 360,
            "step": 0.1
          }
        ],
        "rotation_options": [
          [
            "text center",
            "image center"
          ]
        ]
      },
      "optional": {
        "font_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Overlay Text",
    "display_name": "🔤 CR Overlay Text",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🔤 Text",
    "output_node": false
  },
  "CR Draw Text": {
    "input": {
      "required": {
        "image_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048
          }
        ],
        "image_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048
          }
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": "text"
          }
        ],
        "font_name": [
          [
            "AlumniSansCollegiateOne-Regular.ttf",
            "Caveat-VariableFont_wght.ttf",
            "NotoSansArabic-Regular.ttf",
            "Oswald-Bold.ttf",
            "PixelifySans-Bold.ttf",
            "Quicksand-Bold.ttf",
            "Roboto-Regular.ttf",
            "YoungSerif-Regular.ttf",
            "comic.ttf",
            "impact.ttf"
          ]
        ],
        "font_size": [
          "INT",
          {
            "default": 50,
            "min": 1,
            "max": 1024
          }
        ],
        "font_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "background_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "align": [
          [
            "center",
            "top",
            "bottom"
          ]
        ],
        "justify": [
          [
            "center",
            "left",
            "right"
          ]
        ],
        "margins": [
          "INT",
          {
            "default": 0,
            "min": -1024,
            "max": 1024
          }
        ],
        "line_spacing": [
          "INT",
          {
            "default": 0,
            "min": -1024,
            "max": 1024
          }
        ],
        "position_x": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096
          }
        ],
        "position_y": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096
          }
        ],
        "rotation_angle": [
          "FLOAT",
          {
            "default": 0,
            "min": -360,
            "max": 360,
            "step": 0.1
          }
        ],
        "rotation_options": [
          [
            "text center",
            "image center"
          ]
        ]
      },
      "optional": {
        "font_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "bg_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Draw Text",
    "display_name": "🔤️ CR Draw Text",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🔤 Text",
    "output_node": false
  },
  "CR Mask Text": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": "text"
          }
        ],
        "font_name": [
          [
            "AlumniSansCollegiateOne-Regular.ttf",
            "Caveat-VariableFont_wght.ttf",
            "NotoSansArabic-Regular.ttf",
            "Oswald-Bold.ttf",
            "PixelifySans-Bold.ttf",
            "Quicksand-Bold.ttf",
            "Roboto-Regular.ttf",
            "YoungSerif-Regular.ttf",
            "comic.ttf",
            "impact.ttf"
          ]
        ],
        "font_size": [
          "INT",
          {
            "default": 50,
            "min": 1,
            "max": 1024
          }
        ],
        "background_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "align": [
          [
            "center",
            "top",
            "bottom"
          ]
        ],
        "justify": [
          [
            "center",
            "left",
            "right"
          ]
        ],
        "margins": [
          "INT",
          {
            "default": 0,
            "min": -1024,
            "max": 1024
          }
        ],
        "line_spacing": [
          "INT",
          {
            "default": 0,
            "min": -1024,
            "max": 1024
          }
        ],
        "position_x": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096
          }
        ],
        "position_y": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096
          }
        ],
        "rotation_angle": [
          "FLOAT",
          {
            "default": 0,
            "min": -360,
            "max": 360,
            "step": 0.1
          }
        ],
        "rotation_options": [
          [
            "text center",
            "image center"
          ]
        ]
      },
      "optional": {
        "bg_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Mask Text",
    "display_name": "🔤️ CR Mask Text",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🔤 Text",
    "output_node": false
  },
  "CR Composite Text": {
    "input": {
      "required": {
        "image_text": [
          "IMAGE"
        ],
        "image_background": [
          "IMAGE"
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": "text"
          }
        ],
        "font_name": [
          [
            "AlumniSansCollegiateOne-Regular.ttf",
            "Caveat-VariableFont_wght.ttf",
            "NotoSansArabic-Regular.ttf",
            "Oswald-Bold.ttf",
            "PixelifySans-Bold.ttf",
            "Quicksand-Bold.ttf",
            "Roboto-Regular.ttf",
            "YoungSerif-Regular.ttf",
            "comic.ttf",
            "impact.ttf"
          ]
        ],
        "font_size": [
          "INT",
          {
            "default": 50,
            "min": 1,
            "max": 1024
          }
        ],
        "align": [
          [
            "center",
            "top",
            "bottom"
          ]
        ],
        "justify": [
          [
            "center",
            "left",
            "right"
          ]
        ],
        "margins": [
          "INT",
          {
            "default": 0,
            "min": -1024,
            "max": 1024
          }
        ],
        "line_spacing": [
          "INT",
          {
            "default": 0,
            "min": -1024,
            "max": 1024
          }
        ],
        "position_x": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096
          }
        ],
        "position_y": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096
          }
        ],
        "rotation_angle": [
          "FLOAT",
          {
            "default": 0,
            "min": -360,
            "max": 360,
            "step": 0.1
          }
        ],
        "rotation_options": [
          [
            "text center",
            "image center"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Composite Text",
    "display_name": "🔤️ CR Composite Text",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🔤 Text",
    "output_node": false
  },
  "CR Simple Text Watermark": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "text": [
          "STRING",
          {
            "multiline": false,
            "default": "@ your name"
          }
        ],
        "align": [
          [
            "center",
            "top left",
            "top center",
            "top right",
            "bottom left",
            "bottom center",
            "bottom right"
          ]
        ],
        "opacity": [
          "FLOAT",
          {
            "default": 0.3,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "font_name": [
          [
            "AlumniSansCollegiateOne-Regular.ttf",
            "Caveat-VariableFont_wght.ttf",
            "NotoSansArabic-Regular.ttf",
            "Oswald-Bold.ttf",
            "PixelifySans-Bold.ttf",
            "Quicksand-Bold.ttf",
            "Roboto-Regular.ttf",
            "YoungSerif-Regular.ttf",
            "comic.ttf",
            "impact.ttf"
          ]
        ],
        "font_size": [
          "INT",
          {
            "default": 50,
            "min": 1,
            "max": 1024
          }
        ],
        "font_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "x_margin": [
          "INT",
          {
            "default": 20,
            "min": -1024,
            "max": 1024
          }
        ],
        "y_margin": [
          "INT",
          {
            "default": 20,
            "min": -1024,
            "max": 1024
          }
        ]
      },
      "optional": {
        "font_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Simple Text Watermark",
    "display_name": "🔤️ CR Simple Text Watermark",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🔤 Text",
    "output_node": false
  },
  "CR Select Font": {
    "input": {
      "required": {
        "font_name": [
          []
        ]
      }
    },
    "output": [
      "*",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "font_name",
      "show_help"
    ],
    "name": "CR Select Font",
    "display_name": "🔤️ CR Select Font",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🔤 Text",
    "output_node": false
  },
  "CR Halftone Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "dot_size": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 30,
            "step": 1
          }
        ],
        "dot_shape": [
          [
            "ellipse",
            "rectangle"
          ],
          {
            "default": "ellipse"
          }
        ],
        "resolution": [
          [
            "normal",
            "hi-res (2x output size)"
          ],
          {
            "default": "normal"
          }
        ],
        "angle_c": [
          "INT",
          {
            "default": 75,
            "min": 0,
            "max": 360,
            "step": 1
          }
        ],
        "angle_m": [
          "INT",
          {
            "default": 45,
            "min": 0,
            "max": 360,
            "step": 1
          }
        ],
        "angle_y": [
          "INT",
          {
            "default": 15,
            "min": 0,
            "max": 360,
            "step": 1
          }
        ],
        "angle_k": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 360,
            "step": 1
          }
        ],
        "greyscale": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "antialias": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "antialias_scale": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 4,
            "step": 1
          }
        ],
        "border_blending": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Halftone Filter",
    "display_name": "🎨 Halftone Filter",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🎨 Filter",
    "output_node": false
  },
  "CR Color Tint": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 1,
            "step": 0.1
          }
        ],
        "mode": [
          [
            "custom",
            "white",
            "black",
            "sepia",
            "red",
            "green",
            "blue",
            "cyan",
            "magenta",
            "yellow",
            "purple",
            "orange",
            "warm",
            "cool",
            "lime",
            "navy",
            "vintage",
            "rose",
            "teal",
            "maroon",
            "peach",
            "lavender",
            "olive"
          ]
        ]
      },
      "optional": {
        "tint_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Color Tint",
    "display_name": "🎨 CR Color Tint",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🎨 Filter",
    "output_node": false
  },
  "CR Vignette Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "vignette_shape": [
          [
            "circle",
            "oval",
            "square",
            "diamond"
          ]
        ],
        "feather_amount": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 1024
          }
        ],
        "x_offset": [
          "INT",
          {
            "default": 0,
            "min": -2048,
            "max": 2048
          }
        ],
        "y_offset": [
          "INT",
          {
            "default": 0,
            "min": -2048,
            "max": 2048
          }
        ],
        "zoom": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.1
          }
        ],
        "reverse": [
          [
            "no",
            "yes"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "IMAGE",
      "MASK",
      "show_help"
    ],
    "name": "CR Vignette Filter",
    "display_name": "🎨 CR Vignette Filter",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🎨 Filter",
    "output_node": false
  },
  "CR Page Layout": {
    "input": {
      "required": {
        "layout_options": [
          [
            "header",
            "footer",
            "header and footer",
            "no header or footer"
          ]
        ],
        "image_panel": [
          "IMAGE"
        ],
        "header_height": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1024
          }
        ],
        "header_text": [
          "STRING",
          {
            "multiline": true,
            "default": "text"
          }
        ],
        "header_align": [
          [
            "left",
            "center",
            "right"
          ]
        ],
        "footer_height": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1024
          }
        ],
        "footer_text": [
          "STRING",
          {
            "multiline": true,
            "default": "text"
          }
        ],
        "footer_align": [
          [
            "left",
            "center",
            "right"
          ]
        ],
        "font_name": [
          [
            "AlumniSansCollegiateOne-Regular.ttf",
            "Caveat-VariableFont_wght.ttf",
            "NotoSansArabic-Regular.ttf",
            "Oswald-Bold.ttf",
            "PixelifySans-Bold.ttf",
            "Quicksand-Bold.ttf",
            "Roboto-Regular.ttf",
            "YoungSerif-Regular.ttf",
            "comic.ttf",
            "impact.ttf"
          ]
        ],
        "font_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "header_font_size": [
          "INT",
          {
            "default": 150,
            "min": 0,
            "max": 1024
          }
        ],
        "footer_font_size": [
          "INT",
          {
            "default": 50,
            "min": 0,
            "max": 1024
          }
        ],
        "border_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1024
          }
        ],
        "border_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "background_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ]
      },
      "optional": {
        "font_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "border_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "bg_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "show_help"
    ],
    "name": "CR Page Layout",
    "display_name": "🌁 CR Page Layout",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🌁 Layout",
    "output_node": false
  },
  "CR Image Panel": {
    "input": {
      "required": {
        "image_1": [
          "IMAGE"
        ],
        "border_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1024
          }
        ],
        "border_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "outline_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1024
          }
        ],
        "outline_color": [
          [
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "layout_direction": [
          [
            "horizontal",
            "vertical"
          ]
        ]
      },
      "optional": {
        "image_2": [
          "IMAGE"
        ],
        "image_3": [
          "IMAGE"
        ],
        "image_4": [
          "IMAGE"
        ],
        "border_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "show_help"
    ],
    "name": "CR Image Panel",
    "display_name": "🌁 CR Image Panel",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🌁 Layout",
    "output_node": false
  },
  "CR Image Grid Panel": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "border_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1024
          }
        ],
        "border_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "outline_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1024
          }
        ],
        "outline_color": [
          [
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "max_columns": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 256
          }
        ]
      },
      "optional": {
        "border_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "show_help"
    ],
    "name": "CR Image Grid Panel",
    "display_name": "🌁 CR Image Grid Panel",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🌁 Layout",
    "output_node": false
  },
  "CR Image Border": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "top_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096
          }
        ],
        "bottom_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096
          }
        ],
        "left_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096
          }
        ],
        "right_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096
          }
        ],
        "border_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "outline_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1024
          }
        ],
        "outline_color": [
          [
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ]
      },
      "optional": {
        "border_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "show_help"
    ],
    "name": "CR Image Border",
    "display_name": "🌁 CR Image Border",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🌁 Layout",
    "output_node": false
  },
  "CR Feathered Border": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "top_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096
          }
        ],
        "bottom_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096
          }
        ],
        "left_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096
          }
        ],
        "right_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096
          }
        ],
        "border_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "feather_amount": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1024
          }
        ]
      },
      "optional": {
        "border_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "show_help"
    ],
    "name": "CR Feathered Border",
    "display_name": "🌁 CR Feathered Border",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🌁 Layout",
    "output_node": false
  },
  "CR Simple Text Panel": {
    "input": {
      "required": {
        "panel_width": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 4096
          }
        ],
        "panel_height": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 4096
          }
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": "text"
          }
        ],
        "font_name": [
          [
            "AlumniSansCollegiateOne-Regular.ttf",
            "Caveat-VariableFont_wght.ttf",
            "NotoSansArabic-Regular.ttf",
            "Oswald-Bold.ttf",
            "PixelifySans-Bold.ttf",
            "Quicksand-Bold.ttf",
            "Roboto-Regular.ttf",
            "YoungSerif-Regular.ttf",
            "comic.ttf",
            "impact.ttf"
          ]
        ],
        "font_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "font_size": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 1024
          }
        ],
        "font_outline_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 50
          }
        ],
        "font_outline_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "background_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "align": [
          [
            "top",
            "center",
            "bottom"
          ]
        ],
        "justify": [
          [
            "left",
            "center",
            "right"
          ]
        ]
      },
      "optional": {
        "font_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "bg_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "show_help"
    ],
    "name": "CR Simple Text Panel",
    "display_name": "🌁 CR Simple Text Panel",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🌁 Layout",
    "output_node": false
  },
  "CR Color Panel": {
    "input": {
      "required": {
        "panel_width": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 4096
          }
        ],
        "panel_height": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 4096
          }
        ],
        "fill_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ]
      },
      "optional": {
        "fill_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "show_help"
    ],
    "name": "CR Color Panel",
    "display_name": "🌁 CR Color Panel",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🌁 Layout",
    "output_node": false
  },
  "CR Overlay Transparent Image": {
    "input": {
      "required": {
        "back_image": [
          "IMAGE"
        ],
        "overlay_image": [
          "IMAGE"
        ],
        "transparency": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.1
          }
        ],
        "offset_x": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096
          }
        ],
        "offset_y": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096
          }
        ],
        "rotation_angle": [
          "FLOAT",
          {
            "default": 0,
            "min": -360,
            "max": 360,
            "step": 0.1
          }
        ],
        "overlay_scale_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "CR Overlay Transparent Image",
    "display_name": "🌁 CR Overlay Transparent Image",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🌁 Layout",
    "output_node": false
  },
  "CR Half Drop Panel": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "pattern": [
          [
            "none",
            "half drop",
            "quarter drop",
            "custom drop %"
          ]
        ]
      },
      "optional": {
        "drop_percentage": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "show_help"
    ],
    "name": "CR Half Drop Panel",
    "display_name": "🌁 CR Half Drop Panel",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🌁 Layout",
    "output_node": false
  },
  "CR Diamond Panel": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "pattern": [
          [
            "none",
            "diamond"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "show_help"
    ],
    "name": "CR Diamond Panel",
    "display_name": "🌁 CR Diamond Panel",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/🌁 Layout",
    "output_node": false
  },
  "CR Simple Meme Template": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "preset": [
          [
            "custom",
            "One Does Not Simply ... MEME IN COMFY",
            "This is fine.",
            "Good Morning ... No Such Thing!"
          ]
        ],
        "text_top": [
          "STRING",
          {
            "multiline": true,
            "default": "text_top"
          }
        ],
        "text_bottom": [
          "STRING",
          {
            "multiline": true,
            "default": "text_bottom"
          }
        ],
        "font_name": [
          [
            "AlumniSansCollegiateOne-Regular.ttf",
            "Caveat-VariableFont_wght.ttf",
            "NotoSansArabic-Regular.ttf",
            "Oswald-Bold.ttf",
            "PixelifySans-Bold.ttf",
            "Quicksand-Bold.ttf",
            "Roboto-Regular.ttf",
            "YoungSerif-Regular.ttf",
            "comic.ttf",
            "impact.ttf"
          ]
        ],
        "max_font_size": [
          "INT",
          {
            "default": 150,
            "min": 20,
            "max": 2048
          }
        ],
        "font_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "font_outline": [
          [
            "none",
            "thin",
            "thick",
            "extra thick"
          ]
        ],
        "bar_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "bar_options": [
          [
            "no bars",
            "top",
            "bottom",
            "top and bottom"
          ]
        ]
      },
      "optional": {
        "font_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "bar_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "show_help"
    ],
    "name": "CR Simple Meme Template",
    "display_name": "📱 CR Simple Meme Template",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/📱 Template",
    "output_node": false
  },
  "CR Simple Banner": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "banner_text": [
          "STRING",
          {
            "multiline": true,
            "default": "text"
          }
        ],
        "font_name": [
          [
            "AlumniSansCollegiateOne-Regular.ttf",
            "Caveat-VariableFont_wght.ttf",
            "NotoSansArabic-Regular.ttf",
            "Oswald-Bold.ttf",
            "PixelifySans-Bold.ttf",
            "Quicksand-Bold.ttf",
            "Roboto-Regular.ttf",
            "YoungSerif-Regular.ttf",
            "comic.ttf",
            "impact.ttf"
          ]
        ],
        "max_font_size": [
          "INT",
          {
            "default": 150,
            "min": 20,
            "max": 2048
          }
        ],
        "font_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "outline_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 500
          }
        ],
        "outline_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "margin_size": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 500
          }
        ]
      },
      "optional": {
        "font_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "outline_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "show_help"
    ],
    "name": "CR Simple Banner",
    "display_name": "📱 CR Simple Banner",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/📱 Template",
    "output_node": false
  },
  "CR Comic Panel Templates": {
    "input": {
      "required": {
        "page_width": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 4096
          }
        ],
        "page_height": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 4096
          }
        ],
        "template": [
          [
            "custom",
            "G22",
            "G33",
            "H2",
            "H3",
            "H12",
            "H13",
            "H21",
            "H23",
            "H31",
            "H32",
            "V2",
            "V3",
            "V12",
            "V13",
            "V21",
            "V23",
            "V31",
            "V32"
          ]
        ],
        "reading_direction": [
          [
            "left to right",
            "right to left"
          ]
        ],
        "border_thickness": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 1024
          }
        ],
        "outline_thickness": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "max": 1024
          }
        ],
        "outline_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "panel_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "background_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ]
      },
      "optional": {
        "images": [
          "IMAGE"
        ],
        "custom_panel_layout": [
          "STRING",
          {
            "multiline": false,
            "default": "H123"
          }
        ],
        "outline_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "panel_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "bg_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "show_help"
    ],
    "name": "CR Comic Panel Templates",
    "display_name": "📱 CR Comic Panel Templates",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/📱 Template",
    "output_node": false
  },
  "CR Simple Image Compare": {
    "input": {
      "required": {
        "text1": [
          "STRING",
          {
            "multiline": true,
            "default": "text"
          }
        ],
        "text2": [
          "STRING",
          {
            "multiline": true,
            "default": "text"
          }
        ],
        "footer_height": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 1024
          }
        ],
        "font_name": [
          [
            "AlumniSansCollegiateOne-Regular.ttf",
            "Caveat-VariableFont_wght.ttf",
            "NotoSansArabic-Regular.ttf",
            "Oswald-Bold.ttf",
            "PixelifySans-Bold.ttf",
            "Quicksand-Bold.ttf",
            "Roboto-Regular.ttf",
            "YoungSerif-Regular.ttf",
            "comic.ttf",
            "impact.ttf"
          ]
        ],
        "font_size": [
          "INT",
          {
            "default": 50,
            "min": 0,
            "max": 1024
          }
        ],
        "mode": [
          [
            "normal",
            "dark"
          ]
        ],
        "border_thickness": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 1024
          }
        ]
      },
      "optional": {
        "image1": [
          "IMAGE"
        ],
        "image2": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "show_help"
    ],
    "name": "CR Simple Image Compare",
    "display_name": "📱 CR Simple Image Compare",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/📱 Template",
    "output_node": false
  },
  "CR Thumbnail Preview": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "rescale_factor": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.1,
            "max": 1,
            "step": 0.01
          }
        ],
        "max_columns": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 256
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "show_help"
    ],
    "name": "CR Thumbnail Preview",
    "display_name": "📱 CR Thumbnail Preview",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/📱 Template",
    "output_node": true
  },
  "CR Seamless Checker": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "rescale_factor": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.1,
            "max": 1,
            "step": 0.01
          }
        ],
        "grid_options": [
          [
            "2x2",
            "3x3",
            "4x4",
            "5x5",
            "6x6"
          ]
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "show_help"
    ],
    "name": "CR Seamless Checker",
    "display_name": "📱 CR Seamless Checker",
    "description": "",
    "category": "🧩 Comfyroll Studio/👾 Graphics/📱 Template",
    "output_node": true
  },
  "CR Image Input Switch": {
    "input": {
      "required": {
        "Input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 2
          }
        ]
      },
      "optional": {
        "image1": [
          "IMAGE"
        ],
        "image2": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Image Input Switch",
    "display_name": "🔀 CR Image Input Switch",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔀 Logic",
    "output_node": false
  },
  "CR Image Input Switch (4 way)": {
    "input": {
      "required": {
        "Input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4
          }
        ]
      },
      "optional": {
        "image1": [
          "IMAGE"
        ],
        "image2": [
          "IMAGE"
        ],
        "image3": [
          "IMAGE"
        ],
        "image4": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Image Input Switch (4 way)",
    "display_name": "🔀 CR Image Input Switch (4 way)",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔀 Logic",
    "output_node": false
  },
  "CR Latent Input Switch": {
    "input": {
      "required": {
        "Input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 2
          }
        ]
      },
      "optional": {
        "latent1": [
          "LATENT"
        ],
        "latent2": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "LATENT",
      "show_help"
    ],
    "name": "CR Latent Input Switch",
    "display_name": "🔀 CR Latent Input Switch",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔀 Logic",
    "output_node": false
  },
  "CR Conditioning Input Switch": {
    "input": {
      "required": {
        "Input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 2
          }
        ]
      },
      "optional": {
        "conditioning1": [
          "CONDITIONING"
        ],
        "conditioning2": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CONDITIONING",
      "show_help"
    ],
    "name": "CR Conditioning Input Switch",
    "display_name": "🔀 CR Conditioning Input Switch",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔀 Logic",
    "output_node": false
  },
  "CR Clip Input Switch": {
    "input": {
      "required": {
        "Input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 2
          }
        ]
      },
      "optional": {
        "clip1": [
          "CLIP"
        ],
        "clip2": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CLIP",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CLIP",
      "show_help"
    ],
    "name": "CR Clip Input Switch",
    "display_name": "🔀 CR Clip Input Switch",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔀 Logic",
    "output_node": false
  },
  "CR Model Input Switch": {
    "input": {
      "required": {
        "Input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 2
          }
        ]
      },
      "optional": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ]
      }
    },
    "output": [
      "MODEL",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL",
      "show_help"
    ],
    "name": "CR Model Input Switch",
    "display_name": "🔀 CR Model Input Switch",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔀 Logic",
    "output_node": false
  },
  "CR ControlNet Input Switch": {
    "input": {
      "required": {
        "Input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 2
          }
        ],
        "control_net1": [
          "CONTROL_NET"
        ],
        "control_net2": [
          "CONTROL_NET"
        ]
      },
      "optional": {
        "control_net1": [
          "CONTROL_NET"
        ],
        "control_net2": [
          "CONTROL_NET"
        ]
      }
    },
    "output": [
      "CONTROL_NET",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CONTROL_NET",
      "show_help"
    ],
    "name": "CR ControlNet Input Switch",
    "display_name": "🔀 CR ControlNet Input Switch",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔀 Logic",
    "output_node": false
  },
  "CR VAE Input Switch": {
    "input": {
      "required": {
        "Input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 2
          }
        ]
      },
      "optional": {
        "VAE1": [
          "VAE",
          {
            "forceInput": true
          }
        ],
        "VAE2": [
          "VAE",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "VAE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "VAE",
      "show_help"
    ],
    "name": "CR VAE Input Switch",
    "display_name": "🔀 CR VAE Input Switch",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔀 Logic",
    "output_node": false
  },
  "CR Text Input Switch": {
    "input": {
      "required": {
        "Input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 2
          }
        ]
      },
      "optional": {
        "text1": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text2": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Text Input Switch",
    "display_name": "🔀 CR Text Input Switch",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔀 Logic",
    "output_node": false
  },
  "CR Text Input Switch (4 way)": {
    "input": {
      "required": {
        "Input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4
          }
        ]
      },
      "optional": {
        "text1": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text2": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text3": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text4": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Text Input Switch (4 way)",
    "display_name": "🔀 CR Text Input Switch (4 way)",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔀 Logic",
    "output_node": false
  },
  "CR Switch Model and CLIP": {
    "input": {
      "required": {
        "Input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 2
          }
        ],
        "model1": [
          "MODEL"
        ],
        "clip1": [
          "CLIP"
        ],
        "model2": [
          "MODEL"
        ],
        "clip2": [
          "CLIP"
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "show_help"
    ],
    "name": "CR Switch Model and CLIP",
    "display_name": "🔀 CR Switch Model and CLIP",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔀 Logic",
    "output_node": false
  },
  "CR Batch Process Switch": {
    "input": {
      "required": {
        "Input": [
          [
            "image",
            "image batch"
          ]
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ],
        "image_batch": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Batch Process Switch",
    "display_name": "🔂 CR Batch Process Switch",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔂 Process",
    "output_node": false
  },
  "CR Img2Img Process Switch": {
    "input": {
      "required": {
        "Input": [
          [
            "txt2img",
            "img2img"
          ]
        ]
      },
      "optional": {
        "txt2img": [
          "LATENT"
        ],
        "img2img": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "LATENT",
      "show_help"
    ],
    "name": "CR Img2Img Process Switch",
    "display_name": "🔂 CR Img2Img Process Switch",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔂 Process",
    "output_node": false
  },
  "CR Hires Fix Process Switch": {
    "input": {
      "required": {
        "Input": [
          [
            "latent_upscale",
            "image_upscale"
          ]
        ]
      },
      "optional": {
        "latent_upscale": [
          "LATENT"
        ],
        "image_upscale": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "LATENT",
      "STRING"
    ],
    "name": "CR Hires Fix Process Switch",
    "display_name": "🔂 CR Hires Fix Process Switch",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔂 Process",
    "output_node": false
  },
  "CR Index": {
    "input": {
      "required": {
        "index": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 10000
          }
        ],
        "print_to_console": [
          [
            "Yes",
            "No"
          ]
        ]
      }
    },
    "output": [
      "INT",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "INT",
      "show_help"
    ],
    "name": "CR Index",
    "display_name": "🔢 CR Index",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔢 Index",
    "output_node": false
  },
  "CR Index Increment": {
    "input": {
      "required": {
        "index": [
          "INT",
          {
            "default": 1,
            "min": -10000,
            "max": 10000,
            "forceInput": true
          }
        ],
        "interval": [
          "INT",
          {
            "default": 1,
            "min": -10000,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "index",
      "interval",
      "show_help"
    ],
    "name": "CR Index Increment",
    "display_name": "🔢 CR Index Increment",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔢 Index",
    "output_node": false
  },
  "CR Index Multiply": {
    "input": {
      "required": {
        "index": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 10000,
            "forceInput": true
          }
        ],
        "factor": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "index",
      "factor",
      "show_help"
    ],
    "name": "CR Index Multiply",
    "display_name": "🔢 CR Index Multiply",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔢 Index",
    "output_node": false
  },
  "CR Index Reset": {
    "input": {
      "required": {
        "index": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 10000,
            "forceInput": true
          }
        ],
        "reset_to": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "index",
      "reset_to",
      "show_help"
    ],
    "name": "CR Index Reset",
    "display_name": "🔢 CR Index Reset",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔢 Index",
    "output_node": false
  },
  "CR Trigger": {
    "input": {
      "required": {
        "index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "trigger_value": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "INT",
      "BOOLEAN",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "index",
      "trigger",
      "show_help"
    ],
    "name": "CR Trigger",
    "display_name": "🔢 CR Trigger",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔢 Index",
    "output_node": false
  },
  "CR String To Number": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": false,
            "default": "text",
            "forceInput": true
          }
        ],
        "round_integer": [
          [
            "round",
            "round down",
            "round up"
          ]
        ]
      }
    },
    "output": [
      "INT",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "INT",
      "FLOAT",
      "show_help"
    ],
    "name": "CR String To Number",
    "display_name": "🔧 CR String To Number",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔧 Conversion",
    "output_node": false
  },
  "CR String To Combo": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": false,
            "default": "",
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "*",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "any",
      "show_help"
    ],
    "name": "CR String To Combo",
    "display_name": "🔧 CR String To Combo",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔧 Conversion",
    "output_node": false
  },
  "CR Float To String": {
    "input": {
      "required": {
        "float_": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1000000,
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Float To String",
    "display_name": "🔧 CR Float To String",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔧 Conversion",
    "output_node": false
  },
  "CR Float To Integer": {
    "input": {
      "required": {
        "_float": [
          "FLOAT",
          {
            "default": 0,
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "INT",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "INT",
      "show_help"
    ],
    "name": "CR Float To Integer",
    "display_name": "🔧 CR Float To Integer",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔧 Conversion",
    "output_node": false
  },
  "CR Integer To String": {
    "input": {
      "required": {
        "int_": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19,
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Integer To String",
    "display_name": "🔧 CR Integer To String",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔧 Conversion",
    "output_node": false
  },
  "CR String To Boolean": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": false,
            "default": "",
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "BOOLEAN",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "BOOLEAN",
      "show_help"
    ],
    "name": "CR String To Boolean",
    "display_name": "🔧 CR String To Boolean",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔧 Conversion",
    "output_node": false
  },
  "CR Random Hex Color": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "hex_color1",
      "hex_color2",
      "hex_color3",
      "hex_color4",
      "show_help"
    ],
    "name": "CR Random Hex Color",
    "display_name": "🎲 CR Random Hex Color",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🎲 Random",
    "output_node": false
  },
  "CR Random RGB": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "rgb_1",
      "rgb_2",
      "rgb_3",
      "rgb_4",
      "show_help"
    ],
    "name": "CR Random RGB",
    "display_name": "🎲 CR Random RGB",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🎲 Random",
    "output_node": false
  },
  "CR Random Multiline Values": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "value_type": [
          [
            "binary",
            "decimal",
            "natural",
            "hexadecimal",
            "alphabetic",
            "alphanumeric",
            "custom"
          ]
        ],
        "rows": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 2048
          }
        ],
        "string_length": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 1024
          }
        ],
        "custom_values": [
          "STRING",
          {
            "multiline": false,
            "default": "123ABC"
          }
        ],
        "prepend_text": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ]
      }
    },
    "output": [
      "*",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "multiline_text",
      "show_help"
    ],
    "name": "CR Random Multiline Values",
    "display_name": "🎲 CR Random Multiline Values",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🎲 Random",
    "output_node": false
  },
  "CR Random Multiline Colors": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "value_type": [
          [
            "rgb",
            "hex color",
            "matplotlib xkcd"
          ]
        ],
        "rows": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 2048
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "multiline_text",
      "show_help"
    ],
    "name": "CR Random Multiline Colors",
    "display_name": "🎲 CR Random Multiline Colors",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🎲 Random",
    "output_node": false
  },
  "CR Random RGB Gradient": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "rows": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 2048
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "multiline_text",
      "show_help"
    ],
    "name": "CR Random RGB Gradient",
    "display_name": "🎲 CR Random RGB Gradient",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🎲 Random",
    "output_node": false
  },
  "CR Random Panel Codes": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "rows": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 2048
          }
        ],
        "string_length": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 1024
          }
        ],
        "values": [
          "STRING",
          {
            "multiline": false,
            "default": "123"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "multiline_text",
      "show_help"
    ],
    "name": "CR Random Panel Codes",
    "display_name": "🎲 CR Random Panel Codes",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🎲 Random",
    "output_node": false
  },
  "CR Text": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "*",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "text",
      "show_help"
    ],
    "name": "CR Text",
    "display_name": "🔤 CR Text",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔤 Text",
    "output_node": false
  },
  "CR Multiline Text": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "convert_from_csv": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "csv_quote_char": [
          "STRING",
          {
            "default": "'",
            "choices": [
              "'",
              "\""
            ]
          }
        ],
        "remove_chars": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "chars_to_remove": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "split_string": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "*",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "multiline_text",
      "show_help"
    ],
    "name": "CR Multiline Text",
    "display_name": "🔤 CR Multiline Text",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔤 Text",
    "output_node": false
  },
  "CR Split String": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": false,
            "default": "text"
          }
        ]
      },
      "optional": {
        "delimiter": [
          "STRING",
          {
            "multiline": false,
            "default": ","
          }
        ]
      }
    },
    "output": [
      "*",
      "*",
      "*",
      "*",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "string_1",
      "string_2",
      "string_3",
      "string_4",
      "show_help"
    ],
    "name": "CR Split String",
    "display_name": "🔤 CR Split String",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔤 Text",
    "output_node": false
  },
  "CR Text Concatenate": {
    "input": {
      "required": {

      },
      "optional": {
        "text1": [
          "STRING",
          {
            "multiline": false,
            "default": "",
            "forceInput": true
          }
        ],
        "text2": [
          "STRING",
          {
            "multiline": false,
            "default": "",
            "forceInput": true
          }
        ],
        "separator": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ]
      }
    },
    "output": [
      "*",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Text Concatenate",
    "display_name": "🔤 CR Text Concatenate",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔤 Text",
    "output_node": false
  },
  "CR Text Replace": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": "",
            "forceInput": true
          }
        ]
      },
      "optional": {
        "find1": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "replace1": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "find2": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "replace2": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "find3": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "replace3": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ]
      }
    },
    "output": [
      "*",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Text Replace",
    "display_name": "🔤 CR Text Replace",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔤 Text",
    "output_node": false
  },
  "CR Text Length": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": false,
            "default": "",
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "INT",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "INT",
      "show_help"
    ],
    "name": "CR Text Length",
    "display_name": "🔤 CR Text Length",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔤 Text",
    "output_node": false
  },
  "CR Text Operation": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": false,
            "default": "",
            "forceInput": true
          }
        ],
        "operation": [
          [
            "uppercase",
            "lowercase",
            "capitalize",
            "invert_case",
            "reverse",
            "trim",
            "remove_spaces"
          ]
        ]
      }
    },
    "output": [
      "*",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Text Operation",
    "display_name": "🔤 CR Text Operation",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔤 Text",
    "output_node": false
  },
  "CR Text Blacklist": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": "",
            "forceInput": true
          }
        ],
        "blacklist_words": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ]
      },
      "optional": {
        "replacement_text": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ]
      }
    },
    "output": [
      "*",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Text Blacklist",
    "display_name": "🔤 Text Blacklist",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔤 Text",
    "output_node": false
  },
  "CR Save Text To File": {
    "input": {
      "required": {
        "multiline_text": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "output_file_path": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "file_name": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "file_extension": [
          [
            "txt",
            "csv"
          ]
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "show_help"
    ],
    "name": "CR Save Text To File",
    "display_name": "🔤 CR Save Text To File",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔤 Text",
    "output_node": true
  },
  "CR Set Value On Boolean": {
    "input": {
      "required": {
        "boolean": [
          "BOOLEAN",
          {
            "default": true,
            "forceInput": true
          }
        ],
        "value_if_true": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ],
        "value_if_false": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "INT",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "INT",
      "FLOAT",
      "show_help"
    ],
    "name": "CR Set Value On Boolean",
    "display_name": "⚙️ CR Set Value On Boolean",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔀 Conditional",
    "output_node": false
  },
  "CR Set Value On Binary": {
    "input": {
      "required": {
        "binary": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "forceInput": true
          }
        ],
        "value_if_1": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ],
        "value_if_0": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "INT",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "INT",
      "FLOAT",
      "show_help"
    ],
    "name": "CR Set Value On Binary",
    "display_name": "⚙️ CR Set Value On Binary",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔀 Conditional",
    "output_node": false
  },
  "CR Set Value on String": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": false,
            "default": "",
            "forceInput": true
          }
        ]
      },
      "optional": {
        "test_string": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "value_if_true": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "value_if_false": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ]
      }
    },
    "output": [
      "*",
      "BOOLEAN",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "STRING",
      "BOOLEAN",
      "show_help"
    ],
    "name": "CR Set Value on String",
    "display_name": "⚙️ CR Set Value on String",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔀 Conditional",
    "output_node": false
  },
  "CR Set Switch From String": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": false,
            "default": "",
            "forceInput": true
          }
        ]
      },
      "optional": {
        "switch_1": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "switch_2": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "switch_3": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "switch_4": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ]
      }
    },
    "output": [
      "INT",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "switch",
      "show_help"
    ],
    "name": "CR Set Switch From String",
    "display_name": "⚙️ CR Set Switch From String",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/🔀 Conditional",
    "output_node": false
  },
  "CR Value": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 1
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "FLOAT",
      "INT",
      "show_help"
    ],
    "name": "CR Value",
    "display_name": "⚙️ CR Value",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/⚙️ Other",
    "output_node": false
  },
  "CR Integer Multiple": {
    "input": {
      "required": {
        "integer": [
          "INT",
          {
            "default": 1,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ],
        "multiple": [
          "FLOAT",
          {
            "default": 8,
            "min": 1,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "INT",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "INT",
      "show_help"
    ],
    "name": "CR Integer Multiple",
    "display_name": "⚙️ CR Integer Multiple",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/⚙️ Other",
    "output_node": false
  },
  "CR Clamp Value": {
    "input": {
      "required": {
        "a": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ],
        "range_min": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ],
        "range_max": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "a",
      "show_help"
    ],
    "name": "CR Clamp Value",
    "display_name": "⚙️ CR Clamp Value",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/⚙️ Other",
    "output_node": false
  },
  "CR Math Operation": {
    "input": {
      "required": {
        "a": [
          "FLOAT",
          {
            "default": 1
          }
        ],
        "operation": [
          [
            "sin",
            "cos",
            "tan",
            "sqrt",
            "exp",
            "log",
            "neg",
            "abs"
          ]
        ],
        "decimal_places": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "max": 10
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "a",
      "show_help"
    ],
    "name": "CR Math Operation",
    "display_name": "⚙️ CR Math Operation",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/⚙️ Other",
    "output_node": false
  },
  "CR Get Parameter From Prompt": {
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "multiline": true,
            "default": "prompt",
            "forceInput": true
          }
        ],
        "search_string": [
          "STRING",
          {
            "multiline": false,
            "default": "!findme"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "*",
      "FLOAT",
      "BOOLEAN",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "prompt",
      "text",
      "float",
      "boolean",
      "show_help"
    ],
    "name": "CR Get Parameter From Prompt",
    "display_name": "⚙️ CR Get Parameter From Prompt",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/⚙️ Other",
    "output_node": false
  },
  "CR Select Resize Method": {
    "input": {
      "required": {
        "method": [
          [
            "Fit",
            "Crop"
          ]
        ]
      }
    },
    "output": [
      "*",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "method",
      "show_help"
    ],
    "name": "CR Select Resize Method",
    "display_name": "⚙️ CR Select Resize Method",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/⚙️ Other",
    "output_node": false
  },
  "CR Select ISO Size": {
    "input": {
      "required": {
        "iso_size": [
          [
            "A0 - 9933x14043",
            "A1 - 7016x9933",
            "A2 - 4960x7016",
            "A3 - 3508x4960",
            "A4 - 2480x3508",
            "A5 - 1748x2480",
            "A6 - 1240x1748",
            "A7 - 874x1240",
            "A8 - 614x874",
            "A9 - 437x614",
            "A10 - 307x437",
            "A11 - 213x307",
            "A12 - 154x213",
            "A13 - 106x154",
            "B0 - 11811x16701",
            "B1 - 8350x11811",
            "B2 - 5906x8350",
            "B3 - 4169x5906",
            "B4 - 2953x4169",
            "B5 - 2079x2953",
            "B6 - 1476x2079",
            "B7 - 1039x1476",
            "B8 - 732x1039",
            "B9 - 520x732",
            "B10 - 366x520",
            "C0 - 10831x15319",
            "C1 - 7654x10831",
            "C2 - 5409x7654",
            "C3 - 3827x5409",
            "C4 - 2705x3827",
            "C5 - 1913x2705",
            "C6 - 1346x1913",
            "C7 - 957x1346",
            "C8 - 673x957",
            "C9 - 472x673",
            "C10 - 331x472"
          ]
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "width",
      "height",
      "show_help"
    ],
    "name": "CR Select ISO Size",
    "display_name": "⚙️ CR Select ISO Size",
    "description": "",
    "category": "🧩 Comfyroll Studio/🛠️ Utils/⚙️ Other",
    "output_node": false
  },
  "CR Simple Schedule": {
    "input": {
      "required": {
        "schedule": [
          "STRING",
          {
            "multiline": true,
            "default": "frame_number, item_alias, [attr_value1, attr_value2]"
          }
        ],
        "schedule_type": [
          [
            "Value",
            "Text",
            "Prompt",
            "Prompt Weight",
            "Model",
            "LoRA",
            "ControlNet",
            "Style",
            "Upscale",
            "Camera",
            "Job"
          ]
        ],
        "schedule_alias": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "schedule_format": [
          [
            "CR",
            "Deforum"
          ]
        ]
      }
    },
    "output": [
      "SCHEDULE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "SCHEDULE",
      "show_help"
    ],
    "name": "CR Simple Schedule",
    "display_name": "📋 CR Simple Schedule",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/📋 Schedule",
    "output_node": false
  },
  "CR Central Schedule": {
    "input": {
      "required": {
        "schedule_1": [
          "STRING",
          {
            "multiline": true,
            "default": "schedule"
          }
        ],
        "schedule_type1": [
          [
            "Value",
            "Text",
            "Prompt",
            "Prompt Weight",
            "Model",
            "LoRA",
            "ControlNet",
            "Style",
            "Upscale",
            "Camera",
            "Job"
          ]
        ],
        "schedule_alias1": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "schedule_2": [
          "STRING",
          {
            "multiline": true,
            "default": "schedule"
          }
        ],
        "schedule_type2": [
          [
            "Value",
            "Text",
            "Prompt",
            "Prompt Weight",
            "Model",
            "LoRA",
            "ControlNet",
            "Style",
            "Upscale",
            "Camera",
            "Job"
          ]
        ],
        "schedule_alias2": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "schedule_3": [
          "STRING",
          {
            "multiline": true,
            "default": "schedule"
          }
        ],
        "schedule_type3": [
          [
            "Value",
            "Text",
            "Prompt",
            "Prompt Weight",
            "Model",
            "LoRA",
            "ControlNet",
            "Style",
            "Upscale",
            "Camera",
            "Job"
          ]
        ],
        "schedule_alias3": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "schedule_format": [
          [
            "CR",
            "Deforum"
          ]
        ]
      },
      "optional": {
        "schedule": [
          "SCHEDULE"
        ]
      }
    },
    "output": [
      "SCHEDULE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "SCHEDULE",
      "show_text"
    ],
    "name": "CR Central Schedule",
    "display_name": "📋 CR Central Schedule",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/📋 Schedule",
    "output_node": false
  },
  "CR Combine Schedules": {
    "input": {
      "required": {

      },
      "optional": {
        "schedule_1": [
          "SCHEDULE"
        ],
        "schedule_2": [
          "SCHEDULE"
        ],
        "schedule_3": [
          "SCHEDULE"
        ],
        "schedule_4": [
          "SCHEDULE"
        ]
      }
    },
    "output": [
      "SCHEDULE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "SCHEDULE",
      "show_text"
    ],
    "name": "CR Combine Schedules",
    "display_name": "📋 CR Combine Schedules",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/📋 Schedule",
    "output_node": false
  },
  "CR Output Schedule To File": {
    "input": {
      "required": {
        "output_file_path": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "file_name": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "file_extension": [
          [
            "txt",
            "csv"
          ]
        ],
        "schedule": [
          "SCHEDULE"
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "CR Output Schedule To File",
    "display_name": "📋 CR Output Schedule To File",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/📋 Schedule",
    "output_node": true
  },
  "CR Load Schedule From File": {
    "input": {
      "required": {
        "input_file_path": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "file_name": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "file_extension": [
          [
            "txt",
            "csv"
          ]
        ]
      }
    },
    "output": [
      "SCHEDULE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "SCHEDULE",
      "show_text"
    ],
    "name": "CR Load Schedule From File",
    "display_name": "📋 CR Load Schedule From File",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/📋 Schedule",
    "output_node": false
  },
  "CR Schedule Input Switch": {
    "input": {
      "required": {
        "Input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 2
          }
        ],
        "schedule1": [
          "SCHEDULE"
        ],
        "schedule2": [
          "SCHEDULE"
        ]
      }
    },
    "output": [
      "SCHEDULE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "SCHEDULE",
      "show_help"
    ],
    "name": "CR Schedule Input Switch",
    "display_name": "📋 CR Schedule Input Switch",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/📋 Schedule",
    "output_node": true
  },
  "CR Bit Schedule": {
    "input": {
      "required": {
        "binary_string": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "interval": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 99999
          }
        ],
        "loops": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 99999
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "SCHEDULE",
      "show_text"
    ],
    "name": "CR Bit Schedule",
    "display_name": "📋 CR Bit Schedule",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/📋 Schedule",
    "output_node": false
  },
  "CR Simple Value Scheduler": {
    "input": {
      "required": {
        "schedule": [
          "STRING",
          {
            "multiline": true,
            "default": "frame_number, value"
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "INT",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "INT",
      "FLOAT",
      "show_help"
    ],
    "name": "CR Simple Value Scheduler",
    "display_name": "📑 CR Simple Value Scheduler",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/📑 Schedulers",
    "output_node": false
  },
  "CR Simple Text Scheduler": {
    "input": {
      "required": {
        "schedule": [
          "STRING",
          {
            "multiline": true,
            "default": "frame_number, text"
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Simple Text Scheduler",
    "display_name": "📑 CR Simple Text Scheduler",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/📑 Schedulers",
    "output_node": false
  },
  "CR Value Scheduler": {
    "input": {
      "required": {
        "mode": [
          [
            "Default Value",
            "Schedule"
          ]
        ],
        "current_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "schedule_alias": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "default_value": [
          "FLOAT",
          {
            "default": 1,
            "min": -9999,
            "max": 9999,
            "step": 0.01
          }
        ],
        "schedule_format": [
          [
            "CR",
            "Deforum"
          ]
        ]
      },
      "optional": {
        "schedule": [
          "SCHEDULE"
        ]
      }
    },
    "output": [
      "INT",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "INT",
      "FLOAT",
      "show_help"
    ],
    "name": "CR Value Scheduler",
    "display_name": "📑 CR Value Scheduler",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/📑 Schedulers",
    "output_node": false
  },
  "CR Text Scheduler": {
    "input": {
      "required": {
        "mode": [
          [
            "Default Text",
            "Schedule"
          ]
        ],
        "current_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "schedule_alias": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "default_text": [
          "STRING",
          {
            "multiline": false,
            "default": "default text"
          }
        ],
        "schedule_format": [
          [
            "CR",
            "Deforum"
          ]
        ]
      },
      "optional": {
        "schedule": [
          "SCHEDULE"
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Text Scheduler",
    "display_name": "📑 CR Text Scheduler",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/📑 Schedulers",
    "output_node": false
  },
  "CR Load Scheduled Models": {
    "input": {
      "required": {
        "mode": [
          [
            "Load default Model",
            "Schedule"
          ]
        ],
        "current_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "schedule_alias": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "default_model": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "schedule_format": [
          [
            "CR",
            "Deforum"
          ]
        ]
      },
      "optional": {
        "model_list": [
          "MODEL_LIST"
        ],
        "schedule": [
          "SCHEDULE"
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "STRING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "show_help"
    ],
    "name": "CR Load Scheduled Models",
    "display_name": "📑 CR Load Scheduled Models",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/📑 Schedulers",
    "output_node": false
  },
  "CR Load Scheduled LoRAs": {
    "input": {
      "required": {
        "mode": [
          [
            "Off",
            "Load default LoRA",
            "Schedule"
          ]
        ],
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "current_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "schedule_alias": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "default_lora": [
          [
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "schedule_format": [
          [
            "CR",
            "Deforum"
          ]
        ]
      },
      "optional": {
        "lora_list": [
          "LORA_LIST"
        ],
        "schedule": [
          "SCHEDULE"
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "show_help"
    ],
    "name": "CR Load Scheduled LoRAs",
    "display_name": "📑 CR Load Scheduled LoRAs",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/📑 Schedulers",
    "output_node": false
  },
  "CR Prompt Scheduler": {
    "input": {
      "required": {
        "mode": [
          [
            "Default Prompt",
            "Keyframe List",
            "Schedule"
          ]
        ],
        "current_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "default_prompt": [
          "STRING",
          {
            "multiline": false,
            "default": "default prompt"
          }
        ],
        "schedule_format": [
          [
            "CR",
            "Deforum"
          ]
        ],
        "interpolate_prompt": [
          [
            "Yes",
            "No"
          ]
        ]
      },
      "optional": {
        "schedule": [
          "SCHEDULE"
        ],
        "schedule_alias": [
          "STRING",
          {
            "default prompt": "",
            "multiline": false
          }
        ],
        "keyframe_list": [
          "STRING",
          {
            "multiline": true,
            "default": "keyframe list"
          }
        ],
        "prepend_text": [
          "STRING",
          {
            "multiline": true,
            "default": "prepend text"
          }
        ],
        "append_text": [
          "STRING",
          {
            "multiline": true,
            "default": "append text"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "current_prompt",
      "next_prompt",
      "weight",
      "show_help"
    ],
    "name": "CR Prompt Scheduler",
    "display_name": "📑 CR Prompt Scheduler",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/📑 Schedulers",
    "output_node": false
  },
  "CR Simple Prompt Scheduler": {
    "input": {
      "required": {
        "keyframe_list": [
          "STRING",
          {
            "multiline": true,
            "default": "frame_number, text"
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "keyframe_format": [
          [
            "CR",
            "Deforum"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "current_prompt",
      "next_prompt",
      "weight",
      "show_help"
    ],
    "name": "CR Simple Prompt Scheduler",
    "display_name": "📑 CR Simple Prompt Scheduler",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/📑 Schedulers",
    "output_node": false
  },
  "CR Keyframe List": {
    "input": {
      "required": {
        "keyframe_list": [
          "STRING",
          {
            "multiline": true,
            "default": "keyframes"
          }
        ],
        "keyframe_format": [
          [
            "Deforum",
            "CR"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "keyframe_list",
      "show_help"
    ],
    "name": "CR Keyframe List",
    "display_name": "📝 CR Keyframe List",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/📝 Prompt",
    "output_node": false
  },
  "CR Encode Scheduled Prompts": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "current_prompt": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "next_prompt": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0,
            "min": -9999,
            "max": 9999,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CONDITIONING",
      "show_help"
    ],
    "name": "CR Encode Scheduled Prompts",
    "display_name": "📝 CR Encode Scheduled Prompts",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/📝 Prompt",
    "output_node": false
  },
  "CR Gradient Float": {
    "input": {
      "required": {
        "start_value": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 9999,
            "step": 0.01
          }
        ],
        "end_value": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 9999,
            "step": 0.01
          }
        ],
        "start_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "frame_duration": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "gradient_profile": [
          [
            "Lerp"
          ]
        ]
      }
    },
    "output": [
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "FLOAT",
      "show_help"
    ],
    "name": "CR Gradient Float",
    "display_name": "🔢 CR Gradient Float",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/🔢 Interpolate",
    "output_node": false
  },
  "CR Gradient Integer": {
    "input": {
      "required": {
        "start_value": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "end_value": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "start_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "frame_duration": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "gradient_profile": [
          [
            "Lerp"
          ]
        ]
      }
    },
    "output": [
      "INT",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "INT",
      "show_help"
    ],
    "name": "CR Gradient Integer",
    "display_name": "🔢 CR Gradient Integer",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/🔢 Interpolate",
    "output_node": false
  },
  "CR Increment Float": {
    "input": {
      "required": {
        "start_value": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 9999,
            "step": 0.001
          }
        ],
        "step": [
          "FLOAT",
          {
            "default": 0.1,
            "min": -9999,
            "max": 9999,
            "step": 0.001
          }
        ],
        "start_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "frame_duration": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "FLOAT",
      "show_help"
    ],
    "name": "CR Increment Float",
    "display_name": "🔢 CR Increment Float",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/🔢 Interpolate",
    "output_node": true
  },
  "CR Increment Integer": {
    "input": {
      "required": {
        "start_value": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "step": [
          "INT",
          {
            "default": 1,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "start_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "frame_duration": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "INT",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "INT",
      "show_help"
    ],
    "name": "CR Increment Integer",
    "display_name": "🔢 CR Increment Integer",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/🔢 Interpolate",
    "output_node": true
  },
  "CR Interpolate Latents": {
    "input": {
      "required": {
        "latent1": [
          "LATENT"
        ],
        "latent2": [
          "LATENT"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "method": [
          [
            "lerp"
          ]
        ]
      }
    },
    "output": [
      "LATENT",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "LATENT",
      "show_help"
    ],
    "name": "CR Interpolate Latents",
    "display_name": "🔢 CR Interpolate Latents",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/🔢 Interpolate",
    "output_node": false
  },
  "CR Debatch Frames": {
    "input": {
      "required": {
        "frames": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [true],
    "output_name": [
      "debatched_frames"
    ],
    "name": "CR Debatch Frames",
    "display_name": "🛠️ CR Debatch Frames",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/🛠️ Utils",
    "output_node": false
  },
  "CR Current Frame": {
    "input": {
      "required": {
        "index": [
          "INT",
          {
            "default": 1,
            "min": -10000,
            "max": 10000
          }
        ],
        "print_to_console": [
          [
            "Yes",
            "No"
          ]
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "index"
    ],
    "name": "CR Current Frame",
    "display_name": "🛠️ CR Current Frame",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/🛠️ Utils",
    "output_node": false
  },
  "CR Load Animation Frames": {
    "input": {
      "required": {
        "image_sequence_folder": [
          []
        ],
        "start_index": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10000
          }
        ],
        "max_frames": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Load Animation Frames",
    "display_name": "⌨️ CR Load Animation Frames",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/⌨️ IO",
    "output_node": false
  },
  "CR Load Flow Frames": {
    "input": {
      "required": {
        "input_folder": [
          []
        ],
        "sort_by": [
          [
            "Index",
            "Alphabetic"
          ]
        ],
        "current_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000,
            "forceInput": true
          }
        ],
        "skip_start_frames": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ]
      },
      "optional": {
        "input_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "file_pattern": [
          "STRING",
          {
            "default": "*.png",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "INT",
      "STRING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "current_image",
      "previous_image",
      "current_frame",
      "show_help"
    ],
    "name": "CR Load Flow Frames",
    "display_name": "⌨️ CR Load Flow Frames",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/⌨️ IO",
    "output_node": false
  },
  "CR Output Flow Frames": {
    "input": {
      "required": {
        "output_folder": [
          []
        ],
        "current_image": [
          "IMAGE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "CR"
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999999,
            "forceInput": true
          }
        ]
      },
      "optional": {
        "interpolated_img": [
          "IMAGE"
        ],
        "output_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "CR Output Flow Frames",
    "display_name": "⌨️ CR Output Flow Frames",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/⌨️ IO",
    "output_node": true
  },
  "CR Prompt List Keyframes": {
    "input": {
      "required": {
        "prompt_list": [
          "PROMPT_LIST"
        ],
        "keyframe_format": [
          [
            "Deforum"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "keyframe_list",
      "show_help"
    ],
    "name": "CR Prompt List Keyframes",
    "display_name": "CR Prompt List Keyframes (Legacy)",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/💀 Legacy",
    "output_node": false
  },
  "CR Simple Prompt List": {
    "input": {
      "required": {
        "prompt_1": [
          "STRING",
          {
            "multiline": true,
            "default": "prompt"
          }
        ],
        "prompt_2": [
          "STRING",
          {
            "multiline": true,
            "default": "prompt"
          }
        ],
        "prompt_3": [
          "STRING",
          {
            "multiline": true,
            "default": "prompt"
          }
        ],
        "prompt_4": [
          "STRING",
          {
            "multiline": true,
            "default": "prompt"
          }
        ],
        "prompt_5": [
          "STRING",
          {
            "multiline": true,
            "default": "prompt"
          }
        ]
      },
      "optional": {
        "simple_prompt_list": [
          "SIMPLE_PROMPT_LIST"
        ]
      }
    },
    "output": [
      "SIMPLE_PROMPT_LIST",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "SIMPLE_PROMPT_LIST",
      "show_help"
    ],
    "name": "CR Simple Prompt List",
    "display_name": "CR Simple Prompt List (Legacy)",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/💀 Legacy",
    "output_node": false
  },
  "CR Simple Prompt List Keyframes": {
    "input": {
      "required": {
        "simple_prompt_list": [
          "SIMPLE_PROMPT_LIST"
        ],
        "keyframe_interval": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 999,
            "step": 1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 1000
          }
        ],
        "transition_type": [
          [
            "Default"
          ]
        ],
        "transition_speed": [
          [
            "Default"
          ]
        ],
        "transition_profile": [
          [
            "Default"
          ]
        ],
        "keyframe_format": [
          [
            "Deforum"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "keyframe_list",
      "show_help"
    ],
    "name": "CR Simple Prompt List Keyframes",
    "display_name": "CR Simple Prompt List Keyframes (Legacy)",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/💀 Legacy",
    "output_node": false
  },
  "CR Cycle Models": {
    "input": {
      "required": {
        "mode": [
          [
            "Off",
            "Sequential"
          ]
        ],
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "model_list": [
          "MODEL_LIST"
        ],
        "frame_interval": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 999,
            "step": 1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 1000
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "STRING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "show_help"
    ],
    "name": "CR Cycle Models",
    "display_name": "CR Cycle Models (Legacy)",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/💀 Legacy",
    "output_node": false
  },
  "CR Cycle LoRAs": {
    "input": {
      "required": {
        "mode": [
          [
            "Off",
            "Sequential"
          ]
        ],
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_list": [
          "LORA_LIST"
        ],
        "frame_interval": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 999,
            "step": 1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 1000
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "show_help"
    ],
    "name": "CR Cycle LoRAs",
    "display_name": "CR Cycle LoRAs (Legacy)",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/💀 Legacy",
    "output_node": false
  },
  "CR Cycle Text": {
    "input": {
      "required": {
        "mode": [
          [
            "Sequential"
          ]
        ],
        "text_list": [
          "TEXT_LIST"
        ],
        "frame_interval": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 999,
            "step": 1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 1000
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Cycle Text",
    "display_name": "CR Cycle Text (Legacy)",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/💀 Legacy",
    "output_node": false
  },
  "CR Cycle Text Simple": {
    "input": {
      "required": {
        "mode": [
          [
            "Sequential"
          ]
        ],
        "frame_interval": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 999,
            "step": 1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 1000
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ]
      },
      "optional": {
        "text_1": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "text_2": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "text_3": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "text_4": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "text_5": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "text_list_simple": [
          "TEXT_LIST_SIMPLE"
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Cycle Text Simple",
    "display_name": "CR Cycle Text Simple (Legacy)",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/💀 Legacy",
    "output_node": false
  },
  "CR Cycle Images": {
    "input": {
      "required": {
        "mode": [
          [
            "Sequential"
          ]
        ],
        "image_list": [
          "IMAGE_LIST"
        ],
        "frame_interval": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 999,
            "step": 1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 1000
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Cycle Images",
    "display_name": "CR Cycle Images (Legacy)",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/💀 Legacy",
    "output_node": false
  },
  "CR Cycle Images Simple": {
    "input": {
      "required": {
        "mode": [
          [
            "Sequential"
          ]
        ],
        "frame_interval": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 999,
            "step": 1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 1000
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ]
      },
      "optional": {
        "image_1": [
          "IMAGE"
        ],
        "image_2": [
          "IMAGE"
        ],
        "image_3": [
          "IMAGE"
        ],
        "image_4": [
          "IMAGE"
        ],
        "image_5": [
          "IMAGE"
        ],
        "image_list_simple": [
          "IMAGE_LIST_SIMPLE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Cycle Images Simple",
    "display_name": "CR Cycle Images Simple (Legacy)",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/💀 Legacy",
    "output_node": false
  },
  "CR Model List": {
    "input": {
      "required": {
        "ckpt_name1": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "alias1": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "ckpt_name2": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "alias2": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "ckpt_name3": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "alias3": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "ckpt_name4": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "alias4": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "ckpt_name5": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "alias5": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ]
      },
      "optional": {
        "model_list": [
          "MODEL_LIST"
        ]
      }
    },
    "output": [
      "MODEL_LIST",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL_LIST",
      "show_text"
    ],
    "name": "CR Model List",
    "display_name": "CR Model List (Legacy)",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/💀 Legacy",
    "output_node": false
  },
  "CR LoRA List": {
    "input": {
      "required": {
        "lora_name1": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "alias1": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "model_strength_1": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_strength_1": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name2": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "alias2": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "model_strength_2": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_strength_2": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name3": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "alias3": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "model_strength_3": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_strength_3": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "lora_list": [
          "lora_LIST"
        ]
      }
    },
    "output": [
      "LORA_LIST",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "LORA_LIST",
      "show_text"
    ],
    "name": "CR LoRA List",
    "display_name": "CR LoRA List (Legacy)",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/💀 Legacy",
    "output_node": false
  },
  "CR Text List Simple": {
    "input": {
      "required": {

      },
      "optional": {
        "text_1": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "text_2": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "text_3": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "text_4": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "text_5": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "text_list_simple": [
          "TEXT_LIST_SIMPLE"
        ]
      }
    },
    "output": [
      "TEXT_LIST_SIMPLE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "TEXT_LIST_SIMPLE",
      "show_help"
    ],
    "name": "CR Text List Simple",
    "display_name": "CR Text List Simple (Legacy)",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/💀 Legacy",
    "output_node": false
  },
  "CR Image List": {
    "input": {
      "required": {

      },
      "optional": {
        "image_1": [
          "IMAGE"
        ],
        "alias1": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "image_2": [
          "IMAGE"
        ],
        "alias2": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "image_3": [
          "IMAGE"
        ],
        "alias3": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "image_4": [
          "IMAGE"
        ],
        "alias4": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "image_5": [
          "IMAGE"
        ],
        "alias5": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "image_list": [
          "image_LIST"
        ]
      }
    },
    "output": [
      "IMAGE_LIST",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE_LIST",
      "show_help"
    ],
    "name": "CR Image List",
    "display_name": "CR Image List (Legacy)",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/💀 Legacy",
    "output_node": false
  },
  "CR Image List Simple": {
    "input": {
      "required": {

      },
      "optional": {
        "image_1": [
          "IMAGE"
        ],
        "image_2": [
          "IMAGE"
        ],
        "image_3": [
          "IMAGE"
        ],
        "image_4": [
          "IMAGE"
        ],
        "image_5": [
          "IMAGE"
        ],
        "image_list_simple": [
          "IMAGE_LIST_SIMPLE"
        ]
      }
    },
    "output": [
      "IMAGE_LIST_SIMPLE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE_LIST_SIMPLE",
      "show_help"
    ],
    "name": "CR Image List Simple",
    "display_name": "CR Image List Simple (Legacy)",
    "description": "",
    "category": "🧩 Comfyroll Studio/🎥 Animation/💀 Legacy",
    "output_node": false
  },
  "CLIPTextEncodeSDXL+": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 16384
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 16384
          }
        ],
        "size_cond_factor": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 16
          }
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": true,
            "default": ""
          }
        ],
        "clip": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "CLIPTextEncodeSDXL+",
    "display_name": "🔧 SDXL CLIPTextEncode",
    "description": "",
    "category": "essentials/conditioning",
    "output_node": false
  },
  "ConditioningCombineMultiple+": {
    "input": {
      "required": {
        "conditioning_1": [
          "CONDITIONING"
        ],
        "conditioning_2": [
          "CONDITIONING"
        ]
      },
      "optional": {
        "conditioning_3": [
          "CONDITIONING"
        ],
        "conditioning_4": [
          "CONDITIONING"
        ],
        "conditioning_5": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningCombineMultiple+",
    "display_name": "🔧 Cond Combine Multiple",
    "description": "",
    "category": "essentials/conditioning",
    "output_node": false
  },
  "ImageEnhanceDifference+": {
    "input": {
      "required": {
        "image1": [
          "IMAGE"
        ],
        "image2": [
          "IMAGE"
        ],
        "exponent": [
          "FLOAT",
          {
            "default": 0.75,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageEnhanceDifference+",
    "display_name": "🔧 Image Enhance Difference",
    "description": "",
    "category": "essentials/image analysis",
    "output_node": false
  },
  "ImageBatchMultiple+": {
    "input": {
      "required": {
        "image_1": [
          "IMAGE"
        ],
        "image_2": [
          "IMAGE"
        ],
        "method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos"
          ],
          {
            "default": "lanczos"
          }
        ]
      },
      "optional": {
        "image_3": [
          "IMAGE"
        ],
        "image_4": [
          "IMAGE"
        ],
        "image_5": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageBatchMultiple+",
    "display_name": "🔧 Images Batch Multiple",
    "description": "",
    "category": "essentials/image batch",
    "output_node": false
  },
  "ImageExpandBatch+": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "size": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "step": 1
          }
        ],
        "method": [
          [
            "expand",
            "repeat all",
            "repeat first",
            "repeat last"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageExpandBatch+",
    "display_name": "🔧 Image Expand Batch",
    "description": "",
    "category": "essentials/image batch",
    "output_node": false
  },
  "ImageFromBatch+": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "start": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "length": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageFromBatch+",
    "display_name": "🔧 Image From Batch",
    "description": "",
    "category": "essentials/image batch",
    "output_node": false
  },
  "ImageListToBatch+": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageListToBatch+",
    "display_name": "🔧 Image List To Batch",
    "description": "",
    "category": "essentials/image batch",
    "output_node": false
  },
  "ImageCompositeFromMaskBatch+": {
    "input": {
      "required": {
        "image_from": [
          "IMAGE"
        ],
        "image_to": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageCompositeFromMaskBatch+",
    "display_name": "🔧 Image Composite From Mask Batch",
    "description": "",
    "category": "essentials/image manipulation",
    "output_node": false
  },
  "ImageCrop+": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "width": [
          "INT",
          {
            "default": 256,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "position": [
          [
            "top-left",
            "top-center",
            "top-right",
            "right-center",
            "bottom-right",
            "bottom-center",
            "bottom-left",
            "left-center",
            "center"
          ]
        ],
        "x_offset": [
          "INT",
          {
            "default": 0,
            "min": -99999,
            "step": 1
          }
        ],
        "y_offset": [
          "INT",
          {
            "default": 0,
            "min": -99999,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "IMAGE",
      "x",
      "y"
    ],
    "name": "ImageCrop+",
    "display_name": "🔧 Image Crop",
    "description": "",
    "category": "essentials/image manipulation",
    "output_node": false
  },
  "ImageFlip+": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "axis": [
          [
            "x",
            "y",
            "xy"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageFlip+",
    "display_name": "🔧 Image Flip",
    "description": "",
    "category": "essentials/image manipulation",
    "output_node": false
  },
  "ImageRandomTransform+": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "repeat": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 256,
            "step": 1
          }
        ],
        "variation": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageRandomTransform+",
    "display_name": "🔧 Image Random Transform",
    "description": "",
    "category": "essentials/image manipulation",
    "output_node": false
  },
  "ImageRemoveAlpha+": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageRemoveAlpha+",
    "display_name": "🔧 Image Remove Alpha",
    "description": "",
    "category": "essentials/image utils",
    "output_node": false
  },
  "ImageRemoveBackground+": {
    "input": {
      "required": {
        "rembg_session": [
          "REMBG_SESSION"
        ],
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "ImageRemoveBackground+",
    "display_name": "🔧 Image Remove Background",
    "description": "",
    "category": "essentials/image manipulation",
    "output_node": false
  },
  "ImageResize+": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "interpolation": [
          [
            "nearest",
            "bilinear",
            "bicubic",
            "area",
            "nearest-exact",
            "lanczos"
          ]
        ],
        "method": [
          [
            "stretch",
            "keep proportion",
            "fill / crop",
            "pad"
          ]
        ],
        "condition": [
          [
            "always",
            "downscale if bigger",
            "upscale if smaller",
            "if bigger area",
            "if smaller area"
          ]
        ],
        "multiple_of": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 512,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "IMAGE",
      "width",
      "height"
    ],
    "name": "ImageResize+",
    "display_name": "🔧 Image Resize",
    "description": "",
    "category": "essentials/image manipulation",
    "output_node": false
  },
  "ImageSeamCarving+": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "energy": [
          [
            "backward",
            "forward"
          ]
        ],
        "order": [
          [
            "width-first",
            "height-first"
          ]
        ]
      },
      "optional": {
        "keep_mask": [
          "MASK"
        ],
        "drop_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageSeamCarving+",
    "display_name": "🔧 Image Seam Carving",
    "description": "",
    "category": "essentials/image manipulation",
    "output_node": false
  },
  "ImageTile+": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "rows": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 256,
            "step": 1
          }
        ],
        "cols": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 256,
            "step": 1
          }
        ],
        "overlap": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 0.5,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageTile+",
    "display_name": "🔧 Image Tile",
    "description": "",
    "category": "essentials/image manipulation",
    "output_node": false
  },
  "RemBGSession+": {
    "input": {
      "required": {
        "model": [
          [
            "u2net: general purpose",
            "u2netp: lightweight general purpose",
            "u2net_human_seg: human segmentation",
            "u2net_cloth_seg: cloths Parsing",
            "silueta: very small u2net",
            "isnet-general-use: general purpose",
            "isnet-anime: anime illustrations",
            "sam: general purpose"
          ]
        ],
        "providers": [
          [
            "CPU",
            "CUDA",
            "ROCM",
            "DirectML",
            "OpenVINO",
            "CoreML",
            "Tensorrt",
            "Azure"
          ]
        ]
      }
    },
    "output": [
      "REMBG_SESSION"
    ],
    "output_is_list": [false],
    "output_name": [
      "REMBG_SESSION"
    ],
    "name": "RemBGSession+",
    "display_name": "🔧 RemBG Session",
    "description": "",
    "category": "essentials/image manipulation",
    "output_node": false
  },
  "ImageApplyLUT+": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "lut_file": [
          []
        ],
        "gamma_correction": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "clip_values": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageApplyLUT+",
    "display_name": "🔧 Image Apply LUT",
    "description": "",
    "category": "essentials/image processing",
    "output_node": false
  },
  "ImageCASharpening+": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "amount": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageCASharpening+",
    "display_name": "🔧 Image Contrast Adaptive Sharpening",
    "description": "",
    "category": "essentials/image processing",
    "output_node": false
  },
  "ImageDesaturate+": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "method": [
          [
            "luminance (Rec.709)",
            "luminance (Rec.601)",
            "average",
            "lightness"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageDesaturate+",
    "display_name": "🔧 Image Desaturate",
    "description": "",
    "category": "essentials/image processing",
    "output_node": false
  },
  "PixelOEPixelize+": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "downscale_mode": [
          [
            "contrast",
            "bicubic",
            "nearest",
            "center",
            "k-centroid"
          ]
        ],
        "target_size": [
          "INT",
          {
            "default": 128,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "patch_size": [
          "INT",
          {
            "default": 16,
            "min": 4,
            "max": 32,
            "step": 2
          }
        ],
        "thickness": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 16,
            "step": 1
          }
        ],
        "color_matching": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "upscale": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "PixelOEPixelize+",
    "display_name": "🔧 Pixelize",
    "description": "",
    "category": "essentials/image processing",
    "output_node": false
  },
  "ImagePosterize+": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImagePosterize+",
    "display_name": "🔧 Image Posterize",
    "description": "",
    "category": "essentials/image processing",
    "output_node": false
  },
  "GetImageSize+": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "width",
      "height",
      "count"
    ],
    "name": "GetImageSize+",
    "display_name": "🔧 Get Image Size",
    "description": "",
    "category": "essentials/image utils",
    "output_node": false
  },
  "ImageToDevice+": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "device": [
          [
            "auto",
            "cpu",
            "gpu"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageToDevice+",
    "display_name": "🔧 Image To Device",
    "description": "",
    "category": "essentials/image utils",
    "output_node": false
  },
  "MaskBlur+": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "amount": [
          "INT",
          {
            "default": 6,
            "min": 0,
            "max": 256,
            "step": 1
          }
        ],
        "device": [
          [
            "auto",
            "cpu",
            "gpu"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "MaskBlur+",
    "display_name": "🔧 Mask Blur",
    "description": "",
    "category": "essentials/mask",
    "output_node": false
  },
  "MaskBoundingBox+": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "padding": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "blur": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 256,
            "step": 1
          }
        ]
      },
      "optional": {
        "image_optional": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "MASK",
      "IMAGE",
      "INT",
      "INT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "MASK",
      "IMAGE",
      "x",
      "y",
      "width",
      "height"
    ],
    "name": "MaskBoundingBox+",
    "display_name": "🔧 Mask Bounding Box",
    "description": "",
    "category": "essentials/mask",
    "output_node": false
  },
  "MaskFix+": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "erode_dilate": [
          "INT",
          {
            "default": 0,
            "min": -256,
            "max": 256,
            "step": 1
          }
        ],
        "fill_holes": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 128,
            "step": 1
          }
        ],
        "remove_isolated_pixels": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 32,
            "step": 1
          }
        ],
        "smooth": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 256,
            "step": 1
          }
        ],
        "blur": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 256,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "MaskFix+",
    "display_name": "🔧 Mask Fix",
    "description": "",
    "category": "essentials/mask",
    "output_node": false
  },
  "MaskFlip+": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "axis": [
          [
            "x",
            "y",
            "xy"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "MaskFlip+",
    "display_name": "🔧 Mask Flip",
    "description": "",
    "category": "essentials/mask",
    "output_node": false
  },
  "MaskFromColor+": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "red": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "green": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "threshold": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 127,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "MaskFromColor+",
    "display_name": "🔧 Mask From Color",
    "description": "",
    "category": "essentials/mask",
    "output_node": false
  },
  "MaskFromList+": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 32,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 32,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ]
      },
      "optional": {
        "values": [
          "INT,FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1
          }
        ],
        "str_values": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "placeholder": "0.0, 0.5, 1.0"
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "MaskFromList+",
    "display_name": "🔧 Mask From List",
    "description": "",
    "category": "essentials/mask",
    "output_node": false
  },
  "MaskFromRGBCMYBW+": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "threshold_r": [
          "FLOAT",
          {
            "default": 0.15,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "threshold_g": [
          "FLOAT",
          {
            "default": 0.15,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "threshold_b": [
          "FLOAT",
          {
            "default": 0.15,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MASK",
      "MASK",
      "MASK",
      "MASK",
      "MASK",
      "MASK",
      "MASK",
      "MASK"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false],
    "output_name": [
      "red",
      "green",
      "blue",
      "cyan",
      "magenta",
      "yellow",
      "black",
      "white"
    ],
    "name": "MaskFromRGBCMYBW+",
    "display_name": "🔧 Mask From RGB/CMY/BW",
    "description": "",
    "category": "essentials/mask",
    "output_node": false
  },
  "MaskFromSegmentation+": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "segments": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 16,
            "step": 1
          }
        ],
        "remove_isolated_pixels": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 32,
            "step": 1
          }
        ],
        "remove_small_masks": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "fill_holes": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "MaskFromSegmentation+",
    "display_name": "🔧 Mask From Segmentation",
    "description": "",
    "category": "essentials/mask",
    "output_node": false
  },
  "MaskPreview+": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "MaskPreview+",
    "display_name": "🔧 Mask Preview",
    "description": "",
    "category": "essentials/mask",
    "output_node": true
  },
  "MaskSmooth+": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "amount": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 127,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "MaskSmooth+",
    "display_name": "🔧 Mask Smooth",
    "description": "",
    "category": "essentials/mask",
    "output_node": false
  },
  "TransitionMask+": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "frames": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 9999,
            "step": 1
          }
        ],
        "start_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "end_frame": [
          "INT",
          {
            "default": 9999,
            "min": 0,
            "step": 1
          }
        ],
        "transition_type": [
          [
            "horizontal slide",
            "vertical slide",
            "horizontal bar",
            "vertical bar",
            "center box",
            "horizontal door",
            "vertical door",
            "circle",
            "fade"
          ]
        ],
        "timing_function": [
          [
            "linear",
            "in",
            "out",
            "in-out"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "TransitionMask+",
    "display_name": "🔧 Transition Mask",
    "description": "",
    "category": "essentials/mask",
    "output_node": false
  },
  "MaskBatch+": {
    "input": {
      "required": {
        "mask1": [
          "MASK"
        ],
        "mask2": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "MaskBatch+",
    "display_name": "🔧 Mask Batch",
    "description": "",
    "category": "essentials/mask batch",
    "output_node": false
  },
  "MaskExpandBatch+": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "size": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "step": 1
          }
        ],
        "method": [
          [
            "expand",
            "repeat all",
            "repeat first",
            "repeat last"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "MaskExpandBatch+",
    "display_name": "🔧 Mask Expand Batch",
    "description": "",
    "category": "essentials/mask batch",
    "output_node": false
  },
  "MaskFromBatch+": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "start": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "length": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "MaskFromBatch+",
    "display_name": "🔧 Mask From Batch",
    "description": "",
    "category": "essentials/mask batch",
    "output_node": false
  },
  "KSamplerVariationsStochastic+": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "latent_image": [
          "LATENT"
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 25,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 7,
            "min": 0,
            "max": 100,
            "step": 0.1,
            "round": 0.01
          }
        ],
        "sampler": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "variation_seed": [
          "INT:seed",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "variation_strength": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 1,
            "step": 0.05,
            "round": 0.01
          }
        ],
        "cfg_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.05,
            "round": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "KSamplerVariationsStochastic+",
    "display_name": "🔧 KSampler Stochastic Variations",
    "description": "",
    "category": "essentials/sampling",
    "output_node": false
  },
  "KSamplerVariationsWithNoise+": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "latent_image": [
          "LATENT"
        ],
        "main_seed": [
          "INT:seed",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.1,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "variation_strength": [
          "FLOAT",
          {
            "default": 0.17,
            "min": 0,
            "max": 1,
            "step": 0.01,
            "round": 0.01
          }
        ],
        "variation_seed": [
          "INT:seed",
          {
            "default": 12345,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01,
            "round": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "KSamplerVariationsWithNoise+",
    "display_name": "🔧 KSampler Variations with Noise Injection",
    "description": "",
    "category": "essentials/sampling",
    "output_node": false
  },
  "ApplyCLIPSeg+": {
    "input": {
      "required": {
        "clip_seg": [
          "CLIP_SEG"
        ],
        "image": [
          "IMAGE"
        ],
        "prompt": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.4,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "smooth": [
          "INT",
          {
            "default": 9,
            "min": 0,
            "max": 32,
            "step": 1
          }
        ],
        "dilate": [
          "INT",
          {
            "default": 0,
            "min": -32,
            "max": 32,
            "step": 1
          }
        ],
        "blur": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 64,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "ApplyCLIPSeg+",
    "display_name": "🔧 Apply CLIPSeg",
    "description": "",
    "category": "essentials/segmentation",
    "output_node": false
  },
  "LoadCLIPSegModels+": {
    "input": {
      "required": {

      }
    },
    "output": [
      "CLIP_SEG"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIP_SEG"
    ],
    "name": "LoadCLIPSegModels+",
    "display_name": "🔧 Load CLIPSeg Models",
    "description": "",
    "category": "essentials/segmentation",
    "output_node": false
  },
  "DrawText+": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": true,
            "default": "Hello, World!"
          }
        ],
        "font": [
          []
        ],
        "size": [
          "INT",
          {
            "default": 56,
            "min": 1,
            "max": 9999,
            "step": 1
          }
        ],
        "color": [
          "STRING",
          {
            "multiline": false,
            "default": "#FFFFFF"
          }
        ],
        "background_color": [
          "STRING",
          {
            "multiline": false,
            "default": "#00000000"
          }
        ],
        "shadow_distance": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "shadow_blur": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "shadow_color": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "horizontal_align": [
          [
            "left",
            "center",
            "right"
          ]
        ],
        "vertical_align": [
          [
            "top",
            "center",
            "bottom"
          ]
        ],
        "offset_x": [
          "INT",
          {
            "default": 0,
            "min": -16384,
            "max": 16384,
            "step": 1
          }
        ],
        "offset_y": [
          "INT",
          {
            "default": 0,
            "min": -16384,
            "max": 16384,
            "step": 1
          }
        ]
      },
      "optional": {
        "img_composite": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "DrawText+",
    "display_name": "🔧 Draw Text",
    "description": "",
    "category": "essentials/text",
    "output_node": false
  },
  "BatchCount+": {
    "input": {
      "required": {
        "batch": [
          "*",
          {

          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "BatchCount+",
    "display_name": "🔧 Batch Count",
    "description": "",
    "category": "essentials/utilities",
    "output_node": false
  },
  "ConsoleDebug+": {
    "input": {
      "required": {
        "value": [
          "*",
          {

          }
        ]
      },
      "optional": {
        "prefix": [
          "STRING",
          {
            "multiline": false,
            "default": "Value:"
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ConsoleDebug+",
    "display_name": "🔧 Console Debug",
    "description": "",
    "category": "essentials/utilities",
    "output_node": true
  },
  "DebugTensorShape+": {
    "input": {
      "required": {
        "tensor": [
          "*",
          {

          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "DebugTensorShape+",
    "display_name": "🔧 Debug Tensor Shape",
    "description": "",
    "category": "essentials/utilities",
    "output_node": true
  },
  "ModelCompile+": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "fullgraph": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "dynamic": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "mode": [
          [
            "default",
            "reduce-overhead",
            "max-autotune",
            "max-autotune-no-cudagraphs"
          ]
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelCompile+",
    "display_name": "🔧 Model Compile",
    "description": "",
    "category": "essentials/utilities",
    "output_node": false
  },
  "RemoveLatentMask+": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "RemoveLatentMask+",
    "display_name": "🔧 Remove Latent Mask",
    "description": "",
    "category": "essentials/utilities",
    "output_node": false
  },
  "SDXLEmptyLatentSizePicker+": {
    "input": {
      "required": {
        "resolution": [
          [
            "704x1408 (0.5)",
            "704x1344 (0.52)",
            "768x1344 (0.57)",
            "768x1280 (0.6)",
            "832x1216 (0.68)",
            "832x1152 (0.72)",
            "896x1152 (0.78)",
            "896x1088 (0.82)",
            "960x1088 (0.88)",
            "960x1024 (0.94)",
            "1024x1024 (1.0)",
            "1024x960 (1.07)",
            "1088x960 (1.13)",
            "1088x896 (1.21)",
            "1152x896 (1.29)",
            "1152x832 (1.38)",
            "1216x832 (1.46)",
            "1280x768 (1.67)",
            "1344x768 (1.75)",
            "1344x704 (1.91)",
            "1408x704 (2.0)",
            "1472x704 (2.09)",
            "1536x640 (2.4)",
            "1600x640 (2.5)",
            "1664x576 (2.89)",
            "1728x576 (3.0)"
          ],
          {
            "default": "1024x1024 (1.0)"
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "LATENT",
      "width",
      "height"
    ],
    "name": "SDXLEmptyLatentSizePicker+",
    "display_name": "🔧 SDXL Empty Latent Size Picker",
    "description": "",
    "category": "essentials/utilities",
    "output_node": false
  },
  "SimpleMath+": {
    "input": {
      "optional": {
        "a": [
          "INT,FLOAT",
          {
            "default": 0,
            "step": 0.1
          }
        ],
        "b": [
          "INT,FLOAT",
          {
            "default": 0,
            "step": 0.1
          }
        ]
      },
      "required": {
        "value": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ]
      }
    },
    "output": [
      "INT",
      "FLOAT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "INT",
      "FLOAT"
    ],
    "name": "SimpleMath+",
    "display_name": "🔧 Simple Math",
    "description": "",
    "category": "essentials/utilities",
    "output_node": false
  },
  "XY Input: Lora Block Weight //Inspire": {
    "input": {
      "required": {
        "category_filter": [
          [
            "All",
            ""
          ]
        ],
        "lora_name": [
          [
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "inverse": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "True",
            "label_off": "False"
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "A": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "B": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "preset": [
          [
            "Preset",
            "SD-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SD-INS:1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-IND:1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0",
            "SD-INALL:1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0",
            "SD-MIDD:1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0",
            "SD-MIDD0.2:1,0,0,0,0,0,0.2,0.4,0.4,0.2,0,0,0,0,0,0,0",
            "SD-MIDD0.8:1,0,0,0,0,0.5,0.8,0.8,0.4,0,0,0,0,0,0,0,0",
            "SD-MOUT:1,0,0,0,0,0,1,1,1,1,1,1,1,1,0.5,0,0",
            "SD-OUTD:1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0",
            "SD-OUTS:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1",
            "SD-OUTALL:1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1",
            "SD-ROUT:1,1,1,1,1,1,1,1,R,R,R,R,R,R,R,R,R",
            "SD-AOUT:A,1,1,1,1,1,1,1,1,1,1,1,A,A,A,A,A",
            "SD-AB:A,B,B,B,B,B,B,B,B,B,B,B,A,A,A,A,A",
            "SD-ALL0.5:0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5",
            "SD-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SD-LyC-INALL:1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-MIDALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-NONE:0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-ALL:1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-INALL:1,1,1,1,1,0,0,0,0,0,0,0",
            "SDXL-MIDALL:1,0,0,0,0,1,0,0,0,0,0,0",
            "SDXL-OUTALL:1,0,0,0,0,0,1,1,1,1,1,1",
            "SDXL-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-LyC-INALL:1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-MIDALL:1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1",
            "@SD-FULL-TEST:17",
            "@SD-BLOCK1-TEST:17,12,1",
            "@SD-BLOCK2-TEST:17,12,2",
            "@SD-BLOCK3-TEST:17,12,3",
            "@SD-BLOCK4-TEST:17,12,4",
            "@SD-BLOCK5-TEST:17,12,5",
            "@SD-BLOCK6-TEST:17,12,6",
            "@SD-BLOCK7-TEST:17,12,7",
            "@SD-BLOCK8-TEST:17,12,8",
            "@SD-BLOCK9-TEST:17,12,9",
            "@SD-BLOCK10-TEST:17,12,10",
            "@SD-BLOCK11-TEST:17,12,11",
            "@SD-BLOCK12-TEST:17,12,12",
            "@SD-BLOCK13-TEST:17,12,13",
            "@SD-BLOCK14-TEST:17,12,14",
            "@SD-BLOCK15-TEST:17,12,15",
            "@SD-BLOCK16-TEST:17,12,16",
            "@SD-BLOCK17-TEST:17,12,17",
            "@SD-LyC-FULL-TEST:27",
            "@SDXL-FULL-TEST:12",
            "@SDXL-LyC-FULL-TEST:21"
          ]
        ],
        "block_vectors": [
          "STRING",
          {
            "multiline": true,
            "default": "SD-NONE/SD-ALL\nSD-ALL/SD-ALL\nSD-INS/SD-ALL\nSD-IND/SD-ALL\nSD-INALL/SD-ALL\nSD-MIDD/SD-ALL\nSD-MIDD0.2/SD-ALL\nSD-MIDD0.8/SD-ALL\nSD-MOUT/SD-ALL\nSD-OUTD/SD-ALL\nSD-OUTS/SD-ALL\nSD-OUTALL/SD-ALL",
            "placeholder": "{target vector}/{reference vector}",
            "pysssss.autocomplete": false
          }
        ],
        "heatmap_palette": [
          [
            "viridis",
            "magma",
            "plasma",
            "inferno",
            "cividis"
          ]
        ],
        "heatmap_alpha": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "heatmap_strength": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "xyplot_mode": [
          [
            "Simple",
            "Diff",
            "Diff+Heatmap"
          ]
        ]
      }
    },
    "output": [
      "XY",
      "XY"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "X (vectors)",
      "Y (effect_compares)"
    ],
    "name": "XY Input: Lora Block Weight //Inspire",
    "display_name": "XY Input: Lora Block Weight",
    "description": "",
    "category": "InspirePack/LoraBlockWeight",
    "output_node": false
  },
  "LoraLoaderBlockWeight //Inspire": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "category_filter": [
          [
            "All",
            ""
          ]
        ],
        "lora_name": [
          [
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "inverse": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "True",
            "label_off": "False"
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "A": [
          "FLOAT",
          {
            "default": 4,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "B": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "preset": [
          [
            "Preset",
            "SD-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SD-INS:1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-IND:1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0",
            "SD-INALL:1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0",
            "SD-MIDD:1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0",
            "SD-MIDD0.2:1,0,0,0,0,0,0.2,0.4,0.4,0.2,0,0,0,0,0,0,0",
            "SD-MIDD0.8:1,0,0,0,0,0.5,0.8,0.8,0.4,0,0,0,0,0,0,0,0",
            "SD-MOUT:1,0,0,0,0,0,1,1,1,1,1,1,1,1,0.5,0,0",
            "SD-OUTD:1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0",
            "SD-OUTS:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1",
            "SD-OUTALL:1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1",
            "SD-ROUT:1,1,1,1,1,1,1,1,R,R,R,R,R,R,R,R,R",
            "SD-AOUT:A,1,1,1,1,1,1,1,1,1,1,1,A,A,A,A,A",
            "SD-AB:A,B,B,B,B,B,B,B,B,B,B,B,A,A,A,A,A",
            "SD-ALL0.5:0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5",
            "SD-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SD-LyC-INALL:1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-MIDALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-NONE:0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-ALL:1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-INALL:1,1,1,1,1,0,0,0,0,0,0,0",
            "SDXL-MIDALL:1,0,0,0,0,1,0,0,0,0,0,0",
            "SDXL-OUTALL:1,0,0,0,0,0,1,1,1,1,1,1",
            "SDXL-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-LyC-INALL:1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-MIDALL:1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1"
          ]
        ],
        "block_vector": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "block weight vectors",
            "default": "1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1",
            "pysssss.autocomplete": false
          }
        ],
        "bypass": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "True",
            "label_off": "False"
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "model",
      "clip",
      "populated_vector"
    ],
    "name": "LoraLoaderBlockWeight //Inspire",
    "display_name": "Lora Loader (Block Weight)",
    "description": "",
    "category": "InspirePack/LoraBlockWeight",
    "output_node": false
  },
  "LoraBlockInfo //Inspire": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_name": [
          [
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "block_info": [
          "STRING",
          {
            "multiline": true
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "LoraBlockInfo //Inspire",
    "display_name": "Lora Block Info",
    "description": "",
    "category": "InspirePack/LoraBlockWeight",
    "output_node": true
  },
  "OpenPose_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "detect_hand": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "detect_body": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "detect_face": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "resolution_upscale_by": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.5,
            "max": 100,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "OpenPose_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "OpenPose Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "DWPreprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "detect_hand": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "detect_body": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "detect_face": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "resolution_upscale_by": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.5,
            "max": 100,
            "step": 0.1
          }
        ],
        "bbox_detector": [
          [
            "yolox_l.torchscript.pt",
            "yolox_l.onnx",
            "yolo_nas_l_fp16.onnx",
            "yolo_nas_m_fp16.onnx",
            "yolo_nas_s_fp16.onnx"
          ],
          {
            "default": "yolox_l.onnx"
          }
        ],
        "pose_estimator": [
          [
            "dw-ll_ucoco_384_bs5.torchscript.pt",
            "dw-ll_ucoco_384.onnx",
            "dw-ll_ucoco.onnx"
          ],
          {
            "default": "dw-ll_ucoco_384_bs5.torchscript.pt"
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "DWPreprocessor_Provider_for_SEGS //Inspire",
    "display_name": "DWPreprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "MiDaS_DepthMap_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "a": [
          "FLOAT",
          {
            "default": 6.28318530717959,
            "min": 0,
            "max": 15.707963267949,
            "step": 0.05
          }
        ],
        "bg_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "MiDaS_DepthMap_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "MiDaS Depth Map Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "LeRes_DepthMap_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "rm_nearest": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.1
          }
        ],
        "rm_background": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.1
          }
        ]
      },
      "optional": {
        "boost": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "LeRes_DepthMap_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "LeReS Depth Map Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "Canny_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "low_threshold": [
          "FLOAT",
          {
            "default": 0.4,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ],
        "high_threshold": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "Canny_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "Canny Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "MediaPipe_FaceMesh_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "max_faces": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 50,
            "step": 1
          }
        ],
        "min_confidence": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.01,
            "max": 1,
            "step": 0.01
          }
        ],
        "resolution_upscale_by": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.5,
            "max": 100,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "MediaPipe_FaceMesh_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "MediaPipe FaceMesh Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "HEDPreprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "safe": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "HEDPreprocessor_Provider_for_SEGS //Inspire",
    "display_name": "HED Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "FakeScribblePreprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "safe": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "FakeScribblePreprocessor_Provider_for_SEGS //Inspire",
    "display_name": "Fake Scribble Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "AnimeLineArt_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {

      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "AnimeLineArt_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "AnimeLineArt Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "Manga2Anime_LineArt_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {

      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "Manga2Anime_LineArt_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "Manga2Anime LineArt Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "LineArt_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "coarse": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "LineArt_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "LineArt Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "Color_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {

      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "Color_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "Color Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "InpaintPreprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {

      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "InpaintPreprocessor_Provider_for_SEGS //Inspire",
    "display_name": "Inpaint Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "TilePreprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "pyrUp_iters": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "TilePreprocessor_Provider_for_SEGS //Inspire",
    "display_name": "Tile Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "MeshGraphormerDepthMapPreprocessorProvider_for_SEGS //Inspire": {
    "input": {
      "required": {

      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "MeshGraphormerDepthMapPreprocessorProvider_for_SEGS //Inspire",
    "display_name": "MeshGraphormer Depth Map Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "MediaPipeFaceMeshDetectorProvider //Inspire": {
    "input": {
      "required": {
        "max_faces": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 50,
            "step": 1
          }
        ],
        "face": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "mouth": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "left_eyebrow": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "left_eye": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "left_pupil": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "right_eyebrow": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "right_eye": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "right_pupil": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "BBOX_DETECTOR",
      "SEGM_DETECTOR"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "BBOX_DETECTOR",
      "SEGM_DETECTOR"
    ],
    "name": "MediaPipeFaceMeshDetectorProvider //Inspire",
    "display_name": "MediaPipeFaceMesh Detector Provider",
    "description": "",
    "category": "InspirePack/Detector",
    "output_node": false
  },
  "KSampler //Inspire": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "noise_mode": [
          [
            "GPU(=A1111)",
            "CPU"
          ]
        ],
        "batch_seed_mode": [
          [
            "incremental",
            "comfy",
            "variation str inc:0.01",
            "variation str inc:0.05"
          ]
        ],
        "variation_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "variation_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "variation_method": [
          [
            "linear",
            "slerp"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "KSampler //Inspire",
    "display_name": "KSampler (inspire)",
    "description": "",
    "category": "InspirePack/a1111_compat",
    "output_node": false
  },
  "KSamplerAdvanced //Inspire": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "add_noise": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.5,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "noise_mode": [
          [
            "GPU(=A1111)",
            "CPU"
          ]
        ],
        "return_with_leftover_noise": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "batch_seed_mode": [
          [
            "incremental",
            "comfy",
            "variation str inc:0.01",
            "variation str inc:0.05"
          ]
        ],
        "variation_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "variation_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "variation_method": [
          [
            "linear",
            "slerp"
          ]
        ],
        "noise_opt": [
          "NOISE"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "KSamplerAdvanced //Inspire",
    "display_name": "KSamplerAdvanced (inspire)",
    "description": "",
    "category": "InspirePack/a1111_compat",
    "output_node": false
  },
  "KSamplerPipe //Inspire": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "noise_mode": [
          [
            "GPU(=A1111)",
            "CPU"
          ]
        ],
        "batch_seed_mode": [
          [
            "incremental",
            "comfy",
            "variation str inc:0.01",
            "variation str inc:0.05"
          ]
        ],
        "variation_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "variation_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "VAE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "LATENT",
      "VAE"
    ],
    "name": "KSamplerPipe //Inspire",
    "display_name": "KSampler [pipe] (inspire)",
    "description": "",
    "category": "InspirePack/a1111_compat",
    "output_node": false
  },
  "KSamplerAdvancedPipe //Inspire": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "add_noise": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.5,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "latent_image": [
          "LATENT"
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "noise_mode": [
          [
            "GPU(=A1111)",
            "CPU"
          ]
        ],
        "return_with_leftover_noise": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "batch_seed_mode": [
          [
            "incremental",
            "comfy",
            "variation str inc:0.01",
            "variation str inc:0.05"
          ]
        ],
        "variation_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "variation_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "noise_opt": [
          "NOISE"
        ]
      }
    },
    "output": [
      "LATENT",
      "VAE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "LATENT",
      "VAE"
    ],
    "name": "KSamplerAdvancedPipe //Inspire",
    "display_name": "KSamplerAdvanced [pipe] (inspire)",
    "description": "",
    "category": "InspirePack/a1111_compat",
    "output_node": false
  },
  "RandomNoise //Inspire": {
    "input": {
      "required": {
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "noise_mode": [
          [
            "GPU(=A1111)",
            "CPU"
          ]
        ],
        "batch_seed_mode": [
          [
            "incremental",
            "comfy",
            "variation str inc:0.01",
            "variation str inc:0.05"
          ]
        ],
        "variation_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "variation_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "variation_method": [
          [
            "linear",
            "slerp"
          ]
        ]
      }
    },
    "output": [
      "NOISE"
    ],
    "output_is_list": [false],
    "output_name": [
      "NOISE"
    ],
    "name": "RandomNoise //Inspire",
    "display_name": "RandomNoise (inspire)",
    "description": "",
    "category": "InspirePack/a1111_compat",
    "output_node": false
  },
  "HyperTile //Inspire": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "tile_size": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "max": 2048
          }
        ],
        "swap_size": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 128
          }
        ],
        "max_depth": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10
          }
        ],
        "scale_depth": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "HyperTile //Inspire",
    "display_name": "HyperTile (Inspire)",
    "description": "",
    "category": "InspirePack/__for_testing",
    "output_node": false
  },
  "LoadPromptsFromDir //Inspire": {
    "input": {
      "required": {
        "prompt_dir": [
          [
            "example"
          ]
        ]
      }
    },
    "output": [
      "ZIPPED_PROMPT"
    ],
    "output_is_list": [true],
    "output_name": [
      "ZIPPED_PROMPT"
    ],
    "name": "LoadPromptsFromDir //Inspire",
    "display_name": "Load Prompts From Dir (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "LoadPromptsFromFile //Inspire": {
    "input": {
      "required": {
        "prompt_file": [
          [
            "example/prompt1.txt",
            "example/prompt2.txt"
          ]
        ]
      }
    },
    "output": [
      "ZIPPED_PROMPT"
    ],
    "output_is_list": [true],
    "output_name": [
      "ZIPPED_PROMPT"
    ],
    "name": "LoadPromptsFromFile //Inspire",
    "display_name": "Load Prompts From File (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "LoadSinglePromptFromFile //Inspire": {
    "input": {
      "required": {
        "prompt_file": [
          [
            "example/prompt1.txt",
            "example/prompt2.txt"
          ]
        ],
        "index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "ZIPPED_PROMPT"
    ],
    "output_is_list": [true],
    "output_name": [
      "ZIPPED_PROMPT"
    ],
    "name": "LoadSinglePromptFromFile //Inspire",
    "display_name": "Load Single Prompt From File (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "UnzipPrompt //Inspire": {
    "input": {
      "required": {
        "zipped_prompt": [
          "ZIPPED_PROMPT"
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "positive",
      "negative",
      "name"
    ],
    "name": "UnzipPrompt //Inspire",
    "display_name": "Unzip Prompt (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "ZipPrompt //Inspire": {
    "input": {
      "required": {
        "positive": [
          "STRING",
          {
            "forceInput": true,
            "multiline": true
          }
        ],
        "negative": [
          "STRING",
          {
            "forceInput": true,
            "multiline": true
          }
        ]
      },
      "optional": {
        "name_opt": [
          "STRING",
          {
            "forceInput": true,
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "ZIPPED_PROMPT"
    ],
    "output_is_list": [false],
    "output_name": [
      "ZIPPED_PROMPT"
    ],
    "name": "ZipPrompt //Inspire",
    "display_name": "Zip Prompt (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "PromptExtractor //Inspire": {
    "input": {
      "required": {
        "image": [
          [
            "example.png"
          ],
          {
            "image_upload": true
          }
        ],
        "positive_id": [
          "STRING",
          {

          }
        ],
        "negative_id": [
          "STRING",
          {

          }
        ],
        "info": [
          "STRING",
          {
            "multiline": true
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "positive",
      "negative"
    ],
    "name": "PromptExtractor //Inspire",
    "display_name": "Prompt Extractor (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": true
  },
  "GlobalSeed //Inspire": {
    "input": {
      "required": {
        "value": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "control_before_generate",
            "label_off": "control_after_generate"
          }
        ],
        "action": [
          [
            "fixed",
            "increment",
            "decrement",
            "randomize",
            "increment for each node",
            "decrement for each node",
            "randomize for each node"
          ]
        ],
        "last_seed": [
          "STRING",
          {
            "default": ""
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "GlobalSeed //Inspire",
    "display_name": "Global Seed (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": true
  },
  "GlobalSampler //Inspire": {
    "input": {
      "required": {
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "GlobalSampler //Inspire",
    "display_name": "Global Sampler (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": true
  },
  "BindImageListPromptList //Inspire": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "zipped_prompts": [
          "ZIPPED_PROMPT"
        ],
        "default_positive": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "default positive"
          }
        ],
        "default_negative": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "default negative"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [true, true, true],
    "output_name": [
      "image",
      "positive",
      "negative",
      "prompt_label"
    ],
    "name": "BindImageListPromptList //Inspire",
    "display_name": "Bind [ImageList, PromptList] (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "WildcardEncode //Inspire": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "weight_interpretation": [
          [
            "comfy",
            "A1111",
            "compel",
            "comfy++",
            "down_weight"
          ],
          {
            "default": "comfy++"
          }
        ],
        "wildcard_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "Wildcard Prompt (User Input)"
          }
        ],
        "populated_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "Populated Prompt (Will be generated automatically)"
          }
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Populate",
            "label_off": "Fixed"
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "CONDITIONING",
      "STRING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "model",
      "clip",
      "conditioning",
      "populated_text"
    ],
    "name": "WildcardEncode //Inspire",
    "display_name": "Wildcard Encode (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "PromptBuilder //Inspire": {
    "input": {
      "required": {
        "category": [
          [
            "Angle of View",
            "Artists",
            "Character Types",
            "Colors",
            "Composition",
            "Composition Form",
            "Lighting",
            "Negative",
            "Picture Effect",
            "Picture Quality",
            "Setting",
            "Shot",
            "Style",
            "#PLACEHOLDER"
          ]
        ],
        "preset": [
          [
            "#PRESET"
          ]
        ],
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "PromptBuilder //Inspire",
    "display_name": "Prompt Builder (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "SeedExplorer //Inspire": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ],
        "seed_prompt": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "pysssss.autocomplete": false
          }
        ],
        "enable_additional": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "true",
            "label_off": "false"
          }
        ],
        "additional_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "additional_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "noise_mode": [
          [
            "GPU(=A1111)",
            "CPU"
          ]
        ],
        "initial_batch_seed_mode": [
          [
            "incremental",
            "comfy"
          ]
        ]
      },
      "optional": {
        "variation_method": [
          [
            "linear",
            "slerp"
          ]
        ]
      }
    },
    "output": [
      "NOISE"
    ],
    "output_is_list": [false],
    "output_name": [
      "NOISE"
    ],
    "name": "SeedExplorer //Inspire",
    "display_name": "Seed Explorer (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "ListCounter //Inspire": {
    "input": {
      "required": {
        "signal": [
          "*"
        ],
        "base_value": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "ListCounter //Inspire",
    "display_name": "List Counter (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "CLIPTextEncodeWithWeight //Inspire": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "clip": [
          "CLIP"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "add_weight": [
          "FLOAT",
          {
            "default": 0,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "CLIPTextEncodeWithWeight //Inspire",
    "display_name": "CLIPTextEncodeWithWeight (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "RandomGeneratorForList //Inspire": {
    "input": {
      "required": {
        "signal": [
          "*"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "*",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "signal",
      "random_value"
    ],
    "name": "RandomGeneratorForList //Inspire",
    "display_name": "Random Generator for List (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "MakeBasicPipe //Inspire": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "ckpt_key_opt": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "If empty, use 'ckpt_name' as the key."
          }
        ],
        "positive_wildcard_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "Positive Prompt (User Input)"
          }
        ],
        "negative_wildcard_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "Negative Prompt (User Input)"
          }
        ],
        "Add selection to": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Positive",
            "label_off": "Negative"
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ],
        "wildcard_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Populate",
            "label_off": "Fixed"
          }
        ],
        "positive_populated_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "Populated Positive Prompt (Will be generated automatically)"
          }
        ],
        "negative_populated_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "Populated Negative Prompt (Will be generated automatically)"
          }
        ],
        "token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "weight_interpretation": [
          [
            "comfy",
            "A1111",
            "compel",
            "comfy++",
            "down_weight"
          ],
          {
            "default": "comfy++"
          }
        ],
        "stop_at_clip_layer": [
          "INT",
          {
            "default": -2,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      },
      "optional": {
        "vae_opt": [
          "VAE"
        ]
      }
    },
    "output": [
      "BASIC_PIPE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "basic_pipe",
      "cache_key"
    ],
    "name": "MakeBasicPipe //Inspire",
    "display_name": "Make Basic Pipe (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "RemoveControlNet //Inspire": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "RemoveControlNet //Inspire",
    "display_name": "Remove ControlNet (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "RemoveControlNetFromRegionalPrompts //Inspire": {
    "input": {
      "required": {
        "regional_prompts": [
          "REGIONAL_PROMPTS"
        ]
      }
    },
    "output": [
      "REGIONAL_PROMPTS"
    ],
    "output_is_list": [false],
    "output_name": [
      "REGIONAL_PROMPTS"
    ],
    "name": "RemoveControlNetFromRegionalPrompts //Inspire",
    "display_name": "Remove ControlNet [RegionalPrompts] (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "LoadImagesFromDir //Inspire": {
    "input": {
      "required": {
        "directory": [
          "STRING",
          {
            "default": ""
          }
        ]
      },
      "optional": {
        "image_load_cap": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "start_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "load_always": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "IMAGE",
      "MASK",
      "INT"
    ],
    "name": "LoadImagesFromDir //Inspire",
    "display_name": "Load Image Batch From Dir (Inspire)",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "LoadImageListFromDir //Inspire": {
    "input": {
      "required": {
        "directory": [
          "STRING",
          {
            "default": ""
          }
        ]
      },
      "optional": {
        "image_load_cap": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "start_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "load_always": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [true, true],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "LoadImageListFromDir //Inspire",
    "display_name": "Load Image List From Dir (Inspire)",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "LoadImage //Inspire": {
    "input": {
      "required": {
        "image": [
          [
            "example.png",
            "#DATA"
          ],
          {
            "image_upload": true
          }
        ],
        "image_data": [
          "STRING",
          {
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "LoadImage //Inspire",
    "display_name": "Load Image (Inspire)",
    "description": "",
    "category": "InspirePack/image",
    "output_node": false
  },
  "ChangeImageBatchSize //Inspire": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "mode": [
          [
            "simple"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ChangeImageBatchSize //Inspire",
    "display_name": "Change Image Batch Size (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "ChangeLatentBatchSize //Inspire": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "mode": [
          [
            "simple"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "ChangeLatentBatchSize //Inspire",
    "display_name": "Change Latent Batch Size (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "ImageBatchSplitter //Inspire": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "split_count": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 50,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageBatchSplitter //Inspire",
    "display_name": "Image Batch Splitter (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "LatentBatchSplitter //Inspire": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ],
        "split_count": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 50,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentBatchSplitter //Inspire",
    "display_name": "Latent Batch Splitter (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "ColorMapToMasks //Inspire": {
    "input": {
      "required": {
        "color_map": [
          "IMAGE"
        ],
        "min_pixels": [
          "INT",
          {
            "default": 500,
            "min": 1,
            "max": 1.8446744073709552e+19,
            "step": 1
          }
        ],
        "max_count": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "ColorMapToMasks //Inspire",
    "display_name": "Color Map To Masks (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "SelectNthMask //Inspire": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "idx": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "SelectNthMask //Inspire",
    "display_name": "Select Nth Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "RegionalPromptSimple //Inspire": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "mask": [
          "MASK"
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "wildcard_prompt": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "wildcard prompt"
          }
        ],
        "controlnet_in_pipe": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Keep",
            "label_off": "Override"
          }
        ],
        "sigma_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "variation_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "variation_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "variation_method": [
          [
            "linear",
            "slerp"
          ]
        ]
      }
    },
    "output": [
      "REGIONAL_PROMPTS"
    ],
    "output_is_list": [false],
    "output_name": [
      "REGIONAL_PROMPTS"
    ],
    "name": "RegionalPromptSimple //Inspire",
    "display_name": "Regional Prompt Simple (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalPromptColorMask //Inspire": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "color_mask": [
          "IMAGE"
        ],
        "mask_color": [
          "STRING",
          {
            "multiline": false,
            "default": "#FFFFFF"
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "wildcard_prompt": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "wildcard prompt"
          }
        ],
        "controlnet_in_pipe": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Keep",
            "label_off": "Override"
          }
        ],
        "sigma_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "variation_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "variation_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "variation_method": [
          [
            "linear",
            "slerp"
          ]
        ]
      }
    },
    "output": [
      "REGIONAL_PROMPTS",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "REGIONAL_PROMPTS",
      "MASK"
    ],
    "name": "RegionalPromptColorMask //Inspire",
    "display_name": "Regional Prompt By Color Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalConditioningSimple //Inspire": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "mask": [
          "MASK"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "set_cond_area": [
          [
            "default",
            "mask bounds"
          ]
        ],
        "prompt": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "prompt"
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "RegionalConditioningSimple //Inspire",
    "display_name": "Regional Conditioning Simple (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalConditioningColorMask //Inspire": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "color_mask": [
          "IMAGE"
        ],
        "mask_color": [
          "STRING",
          {
            "multiline": false,
            "default": "#FFFFFF"
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "set_cond_area": [
          [
            "default",
            "mask bounds"
          ]
        ],
        "prompt": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "prompt"
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CONDITIONING",
      "MASK"
    ],
    "name": "RegionalConditioningColorMask //Inspire",
    "display_name": "Regional Conditioning By Color Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalIPAdapterMask //Inspire": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0.7,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "noise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "weight_type": [
          [
            "original",
            "linear",
            "channel penalty"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "unfold_batch": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "faceid_v2": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "weight_v2": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average"
          ]
        ],
        "neg_image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "REGIONAL_IPADAPTER"
    ],
    "output_is_list": [false],
    "output_name": [
      "REGIONAL_IPADAPTER"
    ],
    "name": "RegionalIPAdapterMask //Inspire",
    "display_name": "Regional IPAdapter Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalIPAdapterColorMask //Inspire": {
    "input": {
      "required": {
        "color_mask": [
          "IMAGE"
        ],
        "mask_color": [
          "STRING",
          {
            "multiline": false,
            "default": "#FFFFFF"
          }
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0.7,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "noise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "weight_type": [
          [
            "original",
            "linear",
            "channel penalty"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "unfold_batch": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "faceid_v2": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "weight_v2": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average"
          ]
        ],
        "neg_image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "REGIONAL_IPADAPTER",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "REGIONAL_IPADAPTER",
      "MASK"
    ],
    "name": "RegionalIPAdapterColorMask //Inspire",
    "display_name": "Regional IPAdapter By Color Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalIPAdapterEncodedMask //Inspire": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "embeds": [
          "EMBEDS"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0.7,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "original",
            "linear",
            "channel penalty"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "unfold_batch": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "neg_embeds": [
          "EMBEDS"
        ]
      }
    },
    "output": [
      "REGIONAL_IPADAPTER"
    ],
    "output_is_list": [false],
    "output_name": [
      "REGIONAL_IPADAPTER"
    ],
    "name": "RegionalIPAdapterEncodedMask //Inspire",
    "display_name": "Regional IPAdapter Encoded Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalIPAdapterEncodedColorMask //Inspire": {
    "input": {
      "required": {
        "color_mask": [
          "IMAGE"
        ],
        "mask_color": [
          "STRING",
          {
            "multiline": false,
            "default": "#FFFFFF"
          }
        ],
        "embeds": [
          "EMBEDS"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0.7,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "original",
            "linear",
            "channel penalty"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "unfold_batch": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "neg_embeds": [
          "EMBEDS"
        ]
      }
    },
    "output": [
      "REGIONAL_IPADAPTER",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "REGIONAL_IPADAPTER",
      "MASK"
    ],
    "name": "RegionalIPAdapterEncodedColorMask //Inspire",
    "display_name": "Regional IPAdapter Encoded By Color Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalSeedExplorerMask //Inspire": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "noise": [
          "NOISE"
        ],
        "seed_prompt": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "pysssss.autocomplete": false
          }
        ],
        "enable_additional": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "true",
            "label_off": "false"
          }
        ],
        "additional_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "additional_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "noise_mode": [
          [
            "GPU(=A1111)",
            "CPU"
          ]
        ]
      },
      "optional": {
        "variation_method": [
          [
            "linear",
            "slerp"
          ]
        ]
      }
    },
    "output": [
      "NOISE"
    ],
    "output_is_list": [false],
    "output_name": [
      "NOISE"
    ],
    "name": "RegionalSeedExplorerMask //Inspire",
    "display_name": "Regional Seed Explorer By Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalSeedExplorerColorMask //Inspire": {
    "input": {
      "required": {
        "color_mask": [
          "IMAGE"
        ],
        "mask_color": [
          "STRING",
          {
            "multiline": false,
            "default": "#FFFFFF"
          }
        ],
        "noise": [
          "NOISE"
        ],
        "seed_prompt": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "pysssss.autocomplete": false
          }
        ],
        "enable_additional": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "true",
            "label_off": "false"
          }
        ],
        "additional_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "additional_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "noise_mode": [
          [
            "GPU(=A1111)",
            "CPU"
          ]
        ]
      },
      "optional": {
        "variation_method": [
          [
            "linear",
            "slerp"
          ]
        ]
      }
    },
    "output": [
      "NOISE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "NOISE",
      "MASK"
    ],
    "name": "RegionalSeedExplorerColorMask //Inspire",
    "display_name": "Regional Seed Explorer By Color Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "ToIPAdapterPipe //Inspire": {
    "input": {
      "required": {
        "ipadapter": [
          "IPADAPTER"
        ],
        "model": [
          "MODEL"
        ]
      },
      "optional": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "insightface": [
          "INSIGHTFACE"
        ]
      }
    },
    "output": [
      "IPADAPTER_PIPE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IPADAPTER_PIPE"
    ],
    "name": "ToIPAdapterPipe //Inspire",
    "display_name": "ToIPAdapterPipe (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "FromIPAdapterPipe //Inspire": {
    "input": {
      "required": {
        "ipadapter_pipe": [
          "IPADAPTER_PIPE"
        ]
      }
    },
    "output": [
      "IPADAPTER",
      "MODEL",
      "CLIP_VISION",
      "INSIGHTFACE"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "ipadapter",
      "model",
      "clip_vision",
      "insight_face"
    ],
    "name": "FromIPAdapterPipe //Inspire",
    "display_name": "FromIPAdapterPipe (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "ApplyRegionalIPAdapters //Inspire": {
    "input": {
      "required": {
        "ipadapter_pipe": [
          "IPADAPTER_PIPE"
        ],
        "regional_ipadapter1": [
          "REGIONAL_IPADAPTER"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ApplyRegionalIPAdapters //Inspire",
    "display_name": "Apply Regional IPAdapters (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalCFG //Inspire": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "RegionalCFG //Inspire",
    "display_name": "Regional CFG (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "ColorMaskToDepthMask //Inspire": {
    "input": {
      "required": {
        "color_mask": [
          "IMAGE"
        ],
        "spec": [
          "STRING",
          {
            "multiline": true,
            "default": "#FF0000:1.0\n#000000:1.0"
          }
        ],
        "base_value": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1
          }
        ],
        "dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "flatten_method": [
          [
            "override",
            "sum",
            "max"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "ColorMaskToDepthMask //Inspire",
    "display_name": "Color Mask To Depth Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "KSamplerProgress //Inspire": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "noise_mode": [
          [
            "GPU(=A1111)",
            "CPU"
          ]
        ],
        "interval": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10000
          }
        ],
        "omit_start_latent": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "True",
            "label_off": "False"
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "latent",
      "progress_latent"
    ],
    "name": "KSamplerProgress //Inspire",
    "display_name": "KSampler Progress (Inspire)",
    "description": "",
    "category": "InspirePack/analysis",
    "output_node": false
  },
  "KSamplerAdvancedProgress //Inspire": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "add_noise": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.5,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "AYS SDXL",
            "AYS SD1",
            "AYS SVD"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "noise_mode": [
          [
            "GPU(=A1111)",
            "CPU"
          ]
        ],
        "return_with_leftover_noise": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "interval": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10000
          }
        ],
        "omit_start_latent": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "True",
            "label_off": "False"
          }
        ]
      },
      "optional": {
        "prev_progress_latent_opt": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "latent",
      "progress_latent"
    ],
    "name": "KSamplerAdvancedProgress //Inspire",
    "display_name": "KSampler Advanced Progress (Inspire)",
    "description": "",
    "category": "InspirePack/analysis",
    "output_node": false
  },
  "CacheBackendData //Inspire": {
    "input": {
      "required": {
        "key": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Input data key (e.g. 'model a', 'chunli lora', 'girl latent 3', ...)"
          }
        ],
        "tag": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Tag: short description"
          }
        ],
        "data": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": [
      "data opt"
    ],
    "name": "CacheBackendData //Inspire",
    "display_name": "Cache Backend Data (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "CacheBackendDataNumberKey //Inspire": {
    "input": {
      "required": {
        "key": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "tag": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Tag: short description"
          }
        ],
        "data": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": [
      "data opt"
    ],
    "name": "CacheBackendDataNumberKey //Inspire",
    "display_name": "Cache Backend Data [NumberKey] (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "CacheBackendDataList //Inspire": {
    "input": {
      "required": {
        "key": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Input data key (e.g. 'model a', 'chunli lora', 'girl latent 3', ...)"
          }
        ],
        "tag": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Tag: short description"
          }
        ],
        "data": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [true],
    "output_name": [
      "data opt"
    ],
    "name": "CacheBackendDataList //Inspire",
    "display_name": "Cache Backend Data List (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "CacheBackendDataNumberKeyList //Inspire": {
    "input": {
      "required": {
        "key": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "tag": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Tag: short description"
          }
        ],
        "data": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [true],
    "output_name": [
      "data opt"
    ],
    "name": "CacheBackendDataNumberKeyList //Inspire",
    "display_name": "Cache Backend Data List [NumberKey] (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "RetrieveBackendData //Inspire": {
    "input": {
      "required": {
        "key": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Input data key (e.g. 'model a', 'chunli lora', 'girl latent 3', ...)"
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [true],
    "output_name": [
      "data"
    ],
    "name": "RetrieveBackendData //Inspire",
    "display_name": "Retrieve Backend Data (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": false
  },
  "RetrieveBackendDataNumberKey //Inspire": {
    "input": {
      "required": {
        "key": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [true],
    "output_name": [
      "data"
    ],
    "name": "RetrieveBackendDataNumberKey //Inspire",
    "display_name": "Retrieve Backend Data [NumberKey] (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": false
  },
  "RemoveBackendData //Inspire": {
    "input": {
      "required": {
        "key": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Input data key ('*' = clear all)"
          }
        ]
      },
      "optional": {
        "signal_opt": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": [
      "signal"
    ],
    "name": "RemoveBackendData //Inspire",
    "display_name": "Remove Backend Data (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "RemoveBackendDataNumberKey //Inspire": {
    "input": {
      "required": {
        "key": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      },
      "optional": {
        "signal_opt": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": [
      "signal"
    ],
    "name": "RemoveBackendDataNumberKey //Inspire",
    "display_name": "Remove Backend Data [NumberKey] (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "ShowCachedInfo //Inspire": {
    "input": {
      "required": {
        "cache_info": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "key": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ShowCachedInfo //Inspire",
    "display_name": "Show Cached Info (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "CheckpointLoaderSimpleShared //Inspire": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "key_opt": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "If empty, use 'ckpt_name' as the key."
          }
        ]
      },
      "optional": {
        "mode": [
          [
            "Auto",
            "Override Cache",
            "Read Only"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "STRING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "model",
      "clip",
      "vae",
      "cache key"
    ],
    "name": "CheckpointLoaderSimpleShared //Inspire",
    "display_name": "Shared Checkpoint Loader (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": false
  },
  "StableCascade_CheckpointLoader //Inspire": {
    "input": {
      "required": {
        "stage_b": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ],
          {
            "default": "stable_cascade/stable_cascade_stage_b.safetensors"
          }
        ],
        "key_opt_b": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "If empty, use 'stage_b' as the key."
          }
        ],
        "stage_c": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ],
          {
            "default": "stable_cascade/stable_cascade_stage_c.safetensors"
          }
        ],
        "key_opt_c": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "If empty, use 'stage_c' as the key."
          }
        ],
        "cache_mode": [
          [
            "none",
            "stage_b",
            "stage_c",
            "all"
          ],
          {
            "default": "none"
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "VAE",
      "MODEL",
      "VAE",
      "CLIP_VISION",
      "CLIP",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false],
    "output_name": [
      "b_model",
      "b_vae",
      "c_model",
      "c_vae",
      "c_clip_vision",
      "clip",
      "key_b",
      "key_c"
    ],
    "name": "StableCascade_CheckpointLoader //Inspire",
    "display_name": "Stable Cascade Checkpoint Loader (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": false
  },
  "FloatRange //Inspire": {
    "input": {
      "required": {
        "start": [
          "FLOAT",
          {
            "default": 0,
            "min": -100,
            "max": 100,
            "step": 1e-9
          }
        ],
        "stop": [
          "FLOAT",
          {
            "default": 1,
            "min": -100,
            "max": 100,
            "step": 1e-9
          }
        ],
        "step": [
          "FLOAT",
          {
            "default": 0.01,
            "min": 0,
            "max": 100,
            "step": 1e-9
          }
        ],
        "limit": [
          "INT",
          {
            "default": 100,
            "min": 2,
            "max": 4096,
            "step": 1
          }
        ],
        "ensure_end": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [true],
    "output_name": [
      "FLOAT"
    ],
    "name": "FloatRange //Inspire",
    "display_name": "Float Range (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "ConcatConditioningsWithMultiplier //Inspire": {
    "input": {
      "required": {
        "conditioning1": [
          "CONDITIONING"
        ]
      },
      "optional": {
        "multiplier1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConcatConditioningsWithMultiplier //Inspire",
    "display_name": "Concat Conditionings with Multiplier (Inspire)",
    "description": "",
    "category": "InspirePack/__for_testing",
    "output_node": false
  },
  "ConditioningUpscale //Inspire": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "scalar": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 100,
            "step": 0.5
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningUpscale //Inspire",
    "display_name": "Conditioning Upscale (Inspire)",
    "description": "",
    "category": "InspirePack/conditioning",
    "output_node": false
  },
  "ConditioningStretch //Inspire": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "resolutionX": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ],
        "resolutionY": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ],
        "newWidth": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ],
        "newHeight": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningStretch //Inspire",
    "display_name": "Conditioning Stretch (Inspire)",
    "description": "",
    "category": "InspirePack/conditioning",
    "output_node": false
  },
  "IPAdapterModelHelper //Inspire": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "preset": [
          [
            "SD1.5",
            "SD1.5 Light v11",
            "SD1.5 Light",
            "SD1.5 Plus",
            "SD1.5 Plus Face",
            "SD1.5 Full Face",
            "SD1.5 ViT-G",
            "SDXL",
            "SDXL ViT-H",
            "SDXL Plus ViT-H",
            "SDXL Plus Face ViT-H",
            "SD1.5 FaceID",
            "SD1.5 FaceID Plus v2",
            "SD1.5 FaceID Plus",
            "SD1.5 FaceID Portrait v11",
            "SD1.5 FaceID Portrait",
            "SDXL FaceID",
            "SDXL FaceID Portrait",
            "SDXL FaceID Portrait unnorm",
            "SD1.5 Plus Composition",
            "SDXL Plus Composition"
          ]
        ],
        "lora_strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -20,
            "max": 20,
            "step": 0.01
          }
        ],
        "lora_strength_clip": [
          "FLOAT",
          {
            "default": 1,
            "min": -20,
            "max": 20,
            "step": 0.01
          }
        ],
        "insightface_provider": [
          [
            "CPU",
            "CUDA",
            "ROCM"
          ]
        ],
        "cache_mode": [
          [
            "insightface only",
            "clip_vision only",
            "all",
            "none"
          ],
          {
            "default": "insightface only"
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "IPADAPTER_PIPE",
      "IPADAPTER",
      "CLIP_VISION",
      "INSIGHTFACE",
      "MODEL",
      "CLIP",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false],
    "output_name": [
      "IPADAPTER_PIPE",
      "IPADAPTER",
      "CLIP_VISION",
      "INSIGHTFACE",
      "MODEL",
      "CLIP",
      "insightface_cache_key",
      "clip_vision_cache_key"
    ],
    "name": "IPAdapterModelHelper //Inspire",
    "display_name": "IPAdapter Model Helper (Inspire)",
    "description": "",
    "category": "InspirePack/models",
    "output_node": false
  },
  "easy seed": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1125899906842624
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "seed"
    ],
    "name": "easy seed",
    "display_name": "EasySeed",
    "description": "",
    "category": "EasyUse/Seed",
    "output_node": true
  },
  "easy globalSeed": {
    "input": {
      "required": {
        "value": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1125899906842624
          }
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "control_before_generate",
            "label_off": "control_after_generate"
          }
        ],
        "action": [
          [
            "fixed",
            "increment",
            "decrement",
            "randomize",
            "increment for each node",
            "decrement for each node",
            "randomize for each node"
          ]
        ],
        "last_seed": [
          "STRING",
          {
            "default": ""
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "easy globalSeed",
    "display_name": "EasyGlobalSeed",
    "description": "",
    "category": "EasyUse/Seed",
    "output_node": true
  },
  "easy positive": {
    "input": {
      "required": {
        "positive": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "placeholder": "Positive"
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "positive"
    ],
    "name": "easy positive",
    "display_name": "Positive",
    "description": "",
    "category": "EasyUse/Prompt",
    "output_node": false
  },
  "easy negative": {
    "input": {
      "required": {
        "negative": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "placeholder": "Negative"
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "negative"
    ],
    "name": "easy negative",
    "display_name": "Negative",
    "description": "",
    "category": "EasyUse/Prompt",
    "output_node": false
  },
  "easy wildcards": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "(Support Lora Block Weight and wildcard)"
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1125899906842624
          }
        ],
        "multiline_mode": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [true, true],
    "output_name": [
      "text",
      "populated_text"
    ],
    "name": "easy wildcards",
    "display_name": "Wildcards",
    "description": "",
    "category": "EasyUse/Prompt",
    "output_node": true
  },
  "easy prompt": {
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "placeholder": "Prompt"
          }
        ],
        "main": [
          [
            "none",
            "beautiful woman, detailed face",
            "handsome man, detailed face",
            "pretty girl",
            "handsome boy",
            "dog",
            "cat",
            "Buddha",
            "toy"
          ],
          {
            "default": "none"
          }
        ],
        "lighting": [
          [
            "none",
            "sunshine from window",
            "neon light, city",
            "sunset over sea",
            "golden time",
            "sci-fi RGB glowing, cyberpunk",
            "natural lighting",
            "warm atmosphere, at home, bedroom",
            "magic lit",
            "evil, gothic, Yharnam",
            "light and shadow",
            "shadow from window",
            "soft studio lighting",
            "home atmosphere, cozy bedroom illumination",
            "neon, Wong Kar-wai, warm",
            "cinemative lighting",
            "neo punk lighting, cyberpunk"
          ],
          {
            "default": "none"
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "prompt"
    ],
    "name": "easy prompt",
    "display_name": "Prompt",
    "description": "",
    "category": "EasyUse/Prompt",
    "output_node": false
  },
  "easy promptList": {
    "input": {
      "required": {
        "prompt_1": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "prompt_2": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "prompt_3": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "prompt_4": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "prompt_5": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ]
      },
      "optional": {
        "optional_prompt_list": [
          "LIST"
        ]
      }
    },
    "output": [
      "LIST",
      "STRING"
    ],
    "output_is_list": [false, true],
    "output_name": [
      "prompt_list",
      "prompt_strings"
    ],
    "name": "easy promptList",
    "display_name": "PromptList",
    "description": "",
    "category": "EasyUse/Prompt",
    "output_node": false
  },
  "easy promptLine": {
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "multiline": true,
            "default": "text"
          }
        ],
        "start_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999
          }
        ],
        "max_rows": [
          "INT",
          {
            "default": 1000,
            "min": 1,
            "max": 9999
          }
        ]
      },
      "hidden": {
        "workflow_prompt": "PROMPT",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "STRING",
      "*"
    ],
    "output_is_list": [true, true],
    "output_name": [
      "STRING",
      "COMBO"
    ],
    "name": "easy promptLine",
    "display_name": "PromptLine",
    "description": "",
    "category": "EasyUse/Prompt",
    "output_node": false
  },
  "easy promptConcat": {
    "input": {
      "required": {

      },
      "optional": {
        "prompt1": [
          "STRING",
          {
            "multiline": false,
            "default": "",
            "forceInput": true
          }
        ],
        "prompt2": [
          "STRING",
          {
            "multiline": false,
            "default": "",
            "forceInput": true
          }
        ],
        "separator": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "prompt"
    ],
    "name": "easy promptConcat",
    "display_name": "PromptConcat",
    "description": "",
    "category": "EasyUse/Prompt",
    "output_node": false
  },
  "easy promptReplace": {
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "multiline": true,
            "default": "",
            "forceInput": true
          }
        ]
      },
      "optional": {
        "find1": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "replace1": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "find2": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "replace2": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "find3": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "replace3": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "prompt"
    ],
    "name": "easy promptReplace",
    "display_name": "PromptReplace",
    "description": "",
    "category": "EasyUse/Prompt",
    "output_node": false
  },
  "easy stylesSelector": {
    "input": {
      "required": {
        "styles": [
          [
            "fooocus_styles"
          ],
          {
            "default": "fooocus_styles"
          }
        ]
      },
      "optional": {
        "positive": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "negative": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "positive",
      "negative"
    ],
    "name": "easy stylesSelector",
    "display_name": "Styles Selector",
    "description": "",
    "category": "EasyUse/Prompt",
    "output_node": true
  },
  "easy portraitMaster": {
    "input": {
      "required": {
        "shot": [
          [
            "-",
            "Head portrait",
            "Head and shoulders portrait",
            "Half-length portrait",
            "Full-length portrait",
            "Face",
            "Portrait",
            "Full body",
            "Close-up"
          ],
          {
            "key": "shot_list"
          }
        ],
        "shot_weight": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.05,
            "min": 0,
            "max": 1.95,
            "display": "slider"
          }
        ],
        "gender": [
          [
            "-",
            "Man",
            "Woman"
          ],
          {
            "default": "Woman",
            "key": "gender_list"
          }
        ],
        "age": [
          "INT",
          {
            "default": 30,
            "min": 18,
            "max": 90,
            "step": 1,
            "display": "slider"
          }
        ],
        "nationality_1": [
          [
            "-",
            "Afghan",
            "Albanian",
            "Algerian",
            "Andorran",
            "Angolan",
            "Antiguans Barbudans",
            "Argentine",
            "Armenian",
            "Australian",
            "Austrian",
            "Azerbaijani",
            "Bahamian",
            "Bahraini",
            "Bangladeshi",
            "Barbadian",
            "Belarusian",
            "Belgian",
            "Belizean",
            "Beninese",
            "Bhutanese",
            "Bolivian",
            "Bosnian Herzegovinian",
            "Brazilian",
            "British",
            "Bruneian",
            "Bulgarian",
            "Burkinabe",
            "Burundian",
            "Cambodian",
            "Cameroonian",
            "Canadian",
            "Cape Verdian",
            "Central African",
            "Chadian",
            "Chilean",
            "Chinese",
            "Colombian",
            "Comoran",
            "Congolese",
            "Costa Rican",
            "Croatian",
            "Cuban",
            "Cypriot",
            "Czech",
            "Danish",
            "Djibouti",
            "Dominican",
            "Dutch",
            "East Timorese",
            "Ecuadorean",
            "Egyptian",
            "Emirian",
            "Equatorial Guinean",
            "Eritrean",
            "Estonian",
            "Ethiopian",
            "Fijian",
            "Filipino",
            "Finnish",
            "French",
            "Gabonese",
            "Gambian",
            "Georgian",
            "German",
            "Ghanaian",
            "Greek",
            "Grenadian",
            "Guatemalan",
            "Guinean",
            "Guyanese",
            "Haitian",
            "Herzegovinian",
            "Honduran",
            "Hungarian",
            "Icelander",
            "Indian",
            "Indonesian",
            "Iranian",
            "Iraqi",
            "Irish",
            "Israeli",
            "Italian",
            "Ivorian",
            "Jamaican",
            "Japanese",
            "Jordanian",
            "Kazakhstani",
            "Kenyan",
            "Kiribati",
            "North Korean",
            "South Korean",
            "Kuwaiti",
            "Kyrgyz",
            "Laotian",
            "Latvian",
            "Lebanese",
            "Liberian",
            "Libyan",
            "Liechtensteiner",
            "Lithuanian",
            "Luxembourgish",
            "Macedonian",
            "Malagasy",
            "Malawian",
            "Malaysian",
            "Maldivan",
            "Malian",
            "Maltese",
            "Marshallese",
            "Mauritanian",
            "Mauritian",
            "Mexican",
            "Micronesian",
            "Moldovan",
            "Monegasque",
            "Mongolian",
            "Montenegrin",
            "Moroccan",
            "Mosotho",
            "Motswana",
            "Mozambican",
            "Namibian",
            "Nauruan",
            "Nepalese",
            "New Zealander",
            "Ni-Vanuatu",
            "Nicaraguan",
            "Nigerian",
            "Nigerien",
            "North Korean",
            "Northern Irish",
            "Norwegian",
            "Omani",
            "Pakistani",
            "Palauan",
            "Palestinian",
            "Panamanian",
            "Papua New Guinean",
            "Paraguayan",
            "Peruvian",
            "Polish",
            "Portuguese",
            "Qatari",
            "Romanian",
            "Russian",
            "Rwandan",
            "Saint Lucian",
            "Salvadoran",
            "Samoan",
            "San Marinese",
            "Sao Tomean",
            "Saudi",
            "Scottish",
            "Senegalese",
            "Serbian",
            "Seychellois",
            "Sierra Leonean",
            "Singaporean",
            "Slovakian",
            "Slovenian",
            "Solomon Islander",
            "Somali",
            "South African",
            "South Korean",
            "South Sudanese",
            "Spanish",
            "Sri Lankan",
            "Sudanese",
            "Surinamer",
            "Swazi",
            "Swedish",
            "Swiss",
            "Syrian",
            "Tajikistani",
            "Tanzanian",
            "Thai",
            "Togolese",
            "Tongan",
            "Trinidadian Tobagonian",
            "Tunisian",
            "Turkish",
            "Turkmen",
            "Tuvaluan",
            "Ugandan",
            "Ukrainian",
            "Uruguayan",
            "Uzbekistani",
            "Venezuelan",
            "Vietnamese",
            "Welsh",
            "Yemeni",
            "Zambian",
            "Zimbabwean"
          ],
          {
            "default": "Chinese",
            "key": "nationality_list"
          }
        ],
        "nationality_2": [
          [
            "-",
            "Afghan",
            "Albanian",
            "Algerian",
            "Andorran",
            "Angolan",
            "Antiguans Barbudans",
            "Argentine",
            "Armenian",
            "Australian",
            "Austrian",
            "Azerbaijani",
            "Bahamian",
            "Bahraini",
            "Bangladeshi",
            "Barbadian",
            "Belarusian",
            "Belgian",
            "Belizean",
            "Beninese",
            "Bhutanese",
            "Bolivian",
            "Bosnian Herzegovinian",
            "Brazilian",
            "British",
            "Bruneian",
            "Bulgarian",
            "Burkinabe",
            "Burundian",
            "Cambodian",
            "Cameroonian",
            "Canadian",
            "Cape Verdian",
            "Central African",
            "Chadian",
            "Chilean",
            "Chinese",
            "Colombian",
            "Comoran",
            "Congolese",
            "Costa Rican",
            "Croatian",
            "Cuban",
            "Cypriot",
            "Czech",
            "Danish",
            "Djibouti",
            "Dominican",
            "Dutch",
            "East Timorese",
            "Ecuadorean",
            "Egyptian",
            "Emirian",
            "Equatorial Guinean",
            "Eritrean",
            "Estonian",
            "Ethiopian",
            "Fijian",
            "Filipino",
            "Finnish",
            "French",
            "Gabonese",
            "Gambian",
            "Georgian",
            "German",
            "Ghanaian",
            "Greek",
            "Grenadian",
            "Guatemalan",
            "Guinean",
            "Guyanese",
            "Haitian",
            "Herzegovinian",
            "Honduran",
            "Hungarian",
            "Icelander",
            "Indian",
            "Indonesian",
            "Iranian",
            "Iraqi",
            "Irish",
            "Israeli",
            "Italian",
            "Ivorian",
            "Jamaican",
            "Japanese",
            "Jordanian",
            "Kazakhstani",
            "Kenyan",
            "Kiribati",
            "North Korean",
            "South Korean",
            "Kuwaiti",
            "Kyrgyz",
            "Laotian",
            "Latvian",
            "Lebanese",
            "Liberian",
            "Libyan",
            "Liechtensteiner",
            "Lithuanian",
            "Luxembourgish",
            "Macedonian",
            "Malagasy",
            "Malawian",
            "Malaysian",
            "Maldivan",
            "Malian",
            "Maltese",
            "Marshallese",
            "Mauritanian",
            "Mauritian",
            "Mexican",
            "Micronesian",
            "Moldovan",
            "Monegasque",
            "Mongolian",
            "Montenegrin",
            "Moroccan",
            "Mosotho",
            "Motswana",
            "Mozambican",
            "Namibian",
            "Nauruan",
            "Nepalese",
            "New Zealander",
            "Ni-Vanuatu",
            "Nicaraguan",
            "Nigerian",
            "Nigerien",
            "North Korean",
            "Northern Irish",
            "Norwegian",
            "Omani",
            "Pakistani",
            "Palauan",
            "Palestinian",
            "Panamanian",
            "Papua New Guinean",
            "Paraguayan",
            "Peruvian",
            "Polish",
            "Portuguese",
            "Qatari",
            "Romanian",
            "Russian",
            "Rwandan",
            "Saint Lucian",
            "Salvadoran",
            "Samoan",
            "San Marinese",
            "Sao Tomean",
            "Saudi",
            "Scottish",
            "Senegalese",
            "Serbian",
            "Seychellois",
            "Sierra Leonean",
            "Singaporean",
            "Slovakian",
            "Slovenian",
            "Solomon Islander",
            "Somali",
            "South African",
            "South Korean",
            "South Sudanese",
            "Spanish",
            "Sri Lankan",
            "Sudanese",
            "Surinamer",
            "Swazi",
            "Swedish",
            "Swiss",
            "Syrian",
            "Tajikistani",
            "Tanzanian",
            "Thai",
            "Togolese",
            "Tongan",
            "Trinidadian Tobagonian",
            "Tunisian",
            "Turkish",
            "Turkmen",
            "Tuvaluan",
            "Ugandan",
            "Ukrainian",
            "Uruguayan",
            "Uzbekistani",
            "Venezuelan",
            "Vietnamese",
            "Welsh",
            "Yemeni",
            "Zambian",
            "Zimbabwean"
          ],
          {
            "key": "nationality_list"
          }
        ],
        "nationality_mix": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.05,
            "min": 0,
            "max": 1.95,
            "display": "slider"
          }
        ],
        "body_type": [
          [
            "-",
            "Underweight",
            "Normal weight",
            "Overweight",
            "Obese"
          ],
          {
            "key": "body_type_list"
          }
        ],
        "body_type_weight": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.05,
            "min": 0,
            "max": 1.95,
            "display": "slider"
          }
        ],
        "model_pose": [
          [
            "-",
            "Power Pose",
            "Walking Pose",
            "The Over-the-Shoulder Look",
            "S-curve Pose",
            "Sitting Pose",
            "Close-Up Beauty Shot Pose",
            "Leaning Pose",
            "Arms Up Pose",
            "Casual Stroll Pose",
            "Headshot Pose",
            "Sitting Cross-Legged Pose",
            "Back Arch Pose",
            "Hand-on-Hip Pose",
            "Gazing into the Distance Pose",
            "Candid Laugh Pose",
            "Dynamic Action Pose",
            "Contrapposto Pose",
            "High Fashion Pose"
          ],
          {
            "key": "model_pose_list"
          }
        ],
        "eyes_color": [
          [
            "-",
            "Brown",
            "Blue",
            "Green",
            "Hazel",
            "Gray",
            "Amber",
            "Red",
            "Violet"
          ],
          {
            "key": "eyes_color_list"
          }
        ],
        "facial_expression": [
          [
            "-",
            "Happy",
            "Sad",
            "Angry",
            "Surprised",
            "Fearful",
            "Disgusted",
            "Contemptuous",
            "Excited",
            "Nervous",
            "Confused",
            "Amused",
            "Content",
            "Disappointed",
            "Bored",
            "Relieved",
            "In love",
            "Shy",
            "Envious",
            "Proud",
            "Cautious",
            "Serious",
            "Serene",
            "Peaceful",
            "Calm"
          ],
          {
            "key": "face_expression_list"
          }
        ],
        "facial_expression_weight": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.05,
            "min": 0,
            "max": 1.95,
            "display": "slider"
          }
        ],
        "face_shape": [
          [
            "-",
            "Oval",
            "Round",
            "Square",
            "Heart-shaped",
            "Long",
            "Rectangle",
            "Triangle",
            "Inverted Triangle",
            "Pear-shaped",
            "Oblong",
            "Square Round",
            "Square Oval"
          ],
          {
            "key": "face_shape_list"
          }
        ],
        "face_shape_weight": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.05,
            "min": 0,
            "max": 1.95,
            "display": "slider"
          }
        ],
        "facial_asymmetry": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.05,
            "min": 0,
            "max": 1.95,
            "display": "slider"
          }
        ],
        "hair_style": [
          [
            "-",
            "Asymmetrical cut",
            "Blunt cut",
            "Bob cut",
            "Braided bob",
            "Buzz cut",
            "Choppy cut",
            "Curly bob",
            "Curtain bangs",
            "Faux hawk",
            "Feathered cut",
            "French bob",
            "Layered cut",
            "Long bob",
            "Mohawk",
            "Pixie cut",
            "Shag cut",
            "Side-swept bangs",
            "Textured cut",
            "Undercut",
            "Wavy bob",
            "Faux hawk short pixie",
            "Brave short haircut with shaved sides",
            "Tapered haricut wuth shaved side",
            "Stacked bob",
            "Lemonade braids",
            "Middle part ponytails",
            "Stitch braids",
            "Deep side part",
            "French braids",
            "Box braids",
            "Two dutch braids",
            "Wavy cut with curtains bangs",
            "Right side shaved",
            "Sweeping pixie",
            "Smooth lob",
            "Long pixie",
            "Sideswept pixie",
            "Italian bob",
            "Shullet"
          ],
          {
            "key": "hair_style_list"
          }
        ],
        "hair_color": [
          [
            "-",
            "Black",
            "Brown",
            "Blonde",
            "Red",
            "Auburn",
            "Chestnut",
            "Gray",
            "White",
            "Salt and pepper"
          ],
          {
            "key": "hair_color_list"
          }
        ],
        "disheveled": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.05,
            "min": 0,
            "max": 1.95,
            "display": "slider"
          }
        ],
        "beard": [
          [
            "-",
            "Stubble Beard",
            "Goatee",
            "Full Beard",
            "Van Dyke Beard",
            "Soul Patch",
            "Garibaldi Beard",
            "Mutton Chops",
            "Circle Beard",
            "Corporate Beard",
            "Balbo Beard",
            "Ducktail Beard",
            "Chinstrap Beard",
            "Anchor Beard",
            "Chevron Mustache",
            "Horseshoe Mustache",
            "Handlebar Mustache",
            "Imperial Mustache",
            "Pencil Mustache",
            "Friendly Mutton Chops",
            "Zappa Mustache"
          ],
          {
            "key": "beard_list"
          }
        ],
        "skin_details": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.05,
            "min": 0,
            "max": 1.95,
            "display": "slider"
          }
        ],
        "skin_pores": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.05,
            "min": 0,
            "max": 1.95,
            "display": "slider"
          }
        ],
        "dimples": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.05,
            "min": 0,
            "max": 1.95,
            "display": "slider"
          }
        ],
        "freckles": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.05,
            "min": 0,
            "max": 1.95,
            "display": "slider"
          }
        ],
        "moles": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.05,
            "min": 0,
            "max": 1.95,
            "display": "slider"
          }
        ],
        "skin_imperfections": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.05,
            "min": 0,
            "max": 1.95,
            "display": "slider"
          }
        ],
        "skin_acne": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.05,
            "min": 0,
            "max": 1.95,
            "display": "slider"
          }
        ],
        "tanned_skin": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.05,
            "min": 0,
            "max": 1.95,
            "display": "slider"
          }
        ],
        "eyes_details": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.05,
            "min": 0,
            "max": 1.95,
            "display": "slider"
          }
        ],
        "iris_details": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.05,
            "min": 0,
            "max": 1.95,
            "display": "slider"
          }
        ],
        "circular_iris": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.05,
            "min": 0,
            "max": 1.95,
            "display": "slider"
          }
        ],
        "circular_pupil": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.05,
            "min": 0,
            "max": 1.95,
            "display": "slider"
          }
        ],
        "light_type": [
          [
            "-",
            "Natural sunlight",
            "Soft ambient light",
            "Harsh sunlight",
            "Overcast sky",
            "Sunset glow",
            "Sunrise warmth",
            "Twilight hues",
            "Candlelight",
            "Incandescent lighting",
            "Fluorescent lighting",
            "Moonlight",
            "Dappled sunlight",
            "Backlit silhouette",
            "Spotlight",
            "Rim lighting",
            "Firelight",
            "City streetlights",
            "Studio lighting",
            "Lantern light",
            "Tungsten lighting",
            "Cloudy day diffused light",
            "Skylight",
            "Golden hour light",
            "Blue hour light",
            "Flash photography",
            "Stage lighting",
            "Neon lights",
            "Torchlight",
            "Softbox lighting",
            "Rim light",
            "Lightning",
            "Abstract light patterns"
          ],
          {
            "key": "light_type_list"
          }
        ],
        "light_direction": [
          [
            "-",
            "top",
            "bottom",
            "right",
            "left",
            "front",
            "rear",
            "top-right",
            "top-left",
            "bottom-right",
            "bottom-left"
          ],
          {
            "key": "light_direction_list"
          }
        ],
        "light_weight": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.05,
            "min": 0,
            "max": 1.95,
            "display": "slider"
          }
        ],
        "photorealism_improvement": [
          [
            "enable",
            "disable"
          ]
        ],
        "prompt_start": [
          "STRING",
          {
            "multiline": true,
            "default": "raw photo, (realistic:1.5)"
          }
        ],
        "prompt_additional": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "prompt_end": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "negative_prompt": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "positive",
      "negative"
    ],
    "name": "easy portraitMaster",
    "display_name": "Portrait Master",
    "description": "",
    "category": "EasyUse/Prompt",
    "output_node": false
  },
  "easy fullLoader": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "config_name": [
          [
            "Default",
            "anything_v3.yaml",
            "v1-inference.yaml",
            "v1-inference_clip_skip_2.yaml",
            "v1-inference_clip_skip_2_fp16.yaml",
            "v1-inference_fp16.yaml",
            "v1-inpainting-inference.yaml",
            "v2-inference-v.yaml",
            "v2-inference-v_fp32.yaml",
            "v2-inference.yaml",
            "v2-inference_fp32.yaml",
            "v2-inpainting-inference.yaml"
          ],
          {
            "default": "Default"
          }
        ],
        "vae_name": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "clip_skip": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": 0,
            "step": 1
          }
        ],
        "lora_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_model_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_clip_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "resolution": [
          [
            "自定义 x 自定义",
            "512 x 512",
            "512 x 768",
            "576 x 1024",
            "768 x 512",
            "768 x 768",
            "768 x 1024",
            "768 x 1280",
            "768 x 1344",
            "768 x 1536",
            "816 x 1920",
            "832 x 1152",
            "896 x 1152",
            "896 x 1088",
            "1024 x 1024",
            "1024 x 576",
            "1024 x 768",
            "1080 x 1920",
            "1440 x 2560",
            "1088 x 896",
            "1152 x 832",
            "1152 x 896",
            "1280 x 768",
            "1344 x 768",
            "1536 x 640",
            "1536 x 768",
            "1920 x 816",
            "1920 x 1080",
            "2560 x 1440"
          ]
        ],
        "empty_latent_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "empty_latent_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "positive": [
          "STRING",
          {
            "default": "",
            "placeholder": "Positive",
            "multiline": true
          }
        ],
        "positive_token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "positive_weight_interpretation": [
          [
            "comfy",
            "A1111",
            "comfy++",
            "compel",
            "fixed attention"
          ]
        ],
        "negative": [
          "STRING",
          {
            "default": "",
            "placeholder": "Negative",
            "multiline": true
          }
        ],
        "negative_token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "negative_weight_interpretation": [
          [
            "comfy",
            "A1111",
            "comfy++",
            "compel",
            "fixed attention"
          ]
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      },
      "optional": {
        "model_override": [
          "MODEL"
        ],
        "clip_override": [
          "CLIP"
        ],
        "vae_override": [
          "VAE"
        ],
        "optional_lora_stack": [
          "LORA_STACK"
        ],
        "optional_controlnet_stack": [
          "CONTROL_NET_STACK"
        ],
        "a1111_prompt_style": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE",
      "MODEL",
      "VAE",
      "CLIP",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [false, false, false, false, false, false, false],
    "output_name": [
      "pipe",
      "model",
      "vae",
      "clip",
      "positive",
      "negative",
      "latent"
    ],
    "name": "easy fullLoader",
    "display_name": "EasyLoader (Full)",
    "description": "",
    "category": "EasyUse/Loaders",
    "output_node": false
  },
  "easy a1111Loader": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "vae_name": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "clip_skip": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": 0,
            "step": 1
          }
        ],
        "lora_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_model_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_clip_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "resolution": [
          [
            "自定义 x 自定义",
            "512 x 512",
            "512 x 768",
            "576 x 1024",
            "768 x 512",
            "768 x 768",
            "768 x 1024",
            "768 x 1280",
            "768 x 1344",
            "768 x 1536",
            "816 x 1920",
            "832 x 1152",
            "896 x 1152",
            "896 x 1088",
            "1024 x 1024",
            "1024 x 576",
            "1024 x 768",
            "1080 x 1920",
            "1440 x 2560",
            "1088 x 896",
            "1152 x 832",
            "1152 x 896",
            "1280 x 768",
            "1344 x 768",
            "1536 x 640",
            "1536 x 768",
            "1920 x 816",
            "1920 x 1080",
            "2560 x 1440"
          ],
          {
            "default": "512 x 512"
          }
        ],
        "empty_latent_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "empty_latent_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "positive": [
          "STRING",
          {
            "default": "",
            "placeholder": "Positive",
            "multiline": true
          }
        ],
        "negative": [
          "STRING",
          {
            "default": "",
            "placeholder": "Negative",
            "multiline": true
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      },
      "optional": {
        "optional_lora_stack": [
          "LORA_STACK"
        ],
        "optional_controlnet_stack": [
          "CONTROL_NET_STACK"
        ],
        "a1111_prompt_style": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE",
      "MODEL",
      "VAE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "pipe",
      "model",
      "vae"
    ],
    "name": "easy a1111Loader",
    "display_name": "EasyLoader (A1111)",
    "description": "",
    "category": "EasyUse/Loaders",
    "output_node": false
  },
  "easy comfyLoader": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "vae_name": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "clip_skip": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": 0,
            "step": 1
          }
        ],
        "lora_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_model_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_clip_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "resolution": [
          [
            "自定义 x 自定义",
            "512 x 512",
            "512 x 768",
            "576 x 1024",
            "768 x 512",
            "768 x 768",
            "768 x 1024",
            "768 x 1280",
            "768 x 1344",
            "768 x 1536",
            "816 x 1920",
            "832 x 1152",
            "896 x 1152",
            "896 x 1088",
            "1024 x 1024",
            "1024 x 576",
            "1024 x 768",
            "1080 x 1920",
            "1440 x 2560",
            "1088 x 896",
            "1152 x 832",
            "1152 x 896",
            "1280 x 768",
            "1344 x 768",
            "1536 x 640",
            "1536 x 768",
            "1920 x 816",
            "1920 x 1080",
            "2560 x 1440"
          ],
          {
            "default": "512 x 512"
          }
        ],
        "empty_latent_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "empty_latent_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "positive": [
          "STRING",
          {
            "default": "",
            "placeholder": "Positive",
            "multiline": true
          }
        ],
        "negative": [
          "STRING",
          {
            "default": "",
            "placeholder": "Negative",
            "multiline": true
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      },
      "optional": {
        "optional_lora_stack": [
          "LORA_STACK"
        ],
        "optional_controlnet_stack": [
          "CONTROL_NET_STACK"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE",
      "MODEL",
      "VAE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "pipe",
      "model",
      "vae"
    ],
    "name": "easy comfyLoader",
    "display_name": "EasyLoader (Comfy)",
    "description": "",
    "category": "EasyUse/Loaders",
    "output_node": false
  },
  "easy svdLoader": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "sd1.5/svd.safetensors"
          ]
        ],
        "vae_name": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "clip_name": [
          [
            "None",
            "cliph.safetensors",
            "model.safetensors"
          ]
        ],
        "init_image": [
          "IMAGE"
        ],
        "resolution": [
          [
            "自定义 x 自定义",
            "512 x 512",
            "512 x 768",
            "576 x 1024",
            "768 x 512",
            "768 x 768",
            "768 x 1024",
            "768 x 1280",
            "768 x 1344",
            "768 x 1536",
            "816 x 1920",
            "832 x 1152",
            "896 x 1152",
            "896 x 1088",
            "1024 x 1024",
            "1024 x 576",
            "1024 x 768",
            "1080 x 1920",
            "1440 x 2560",
            "1088 x 896",
            "1152 x 832",
            "1152 x 896",
            "1280 x 768",
            "1344 x 768",
            "1536 x 640",
            "1536 x 768",
            "1920 x 816",
            "1920 x 1080",
            "2560 x 1440"
          ],
          {
            "default": "1024 x 576"
          }
        ],
        "empty_latent_width": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "empty_latent_height": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "video_frames": [
          "INT",
          {
            "default": 14,
            "min": 1,
            "max": 4096
          }
        ],
        "motion_bucket_id": [
          "INT",
          {
            "default": 127,
            "min": 1,
            "max": 1023
          }
        ],
        "fps": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 1024
          }
        ],
        "augmentation_level": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "optional_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "optional_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE",
      "MODEL",
      "VAE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "pipe",
      "model",
      "vae"
    ],
    "name": "easy svdLoader",
    "display_name": "EasyLoader (SVD)",
    "description": "",
    "category": "EasyUse/Loaders",
    "output_node": false
  },
  "easy sv3dLoader": {
    "input": {
      "required": {
        "ckpt_name": [
          []
        ],
        "vae_name": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "init_image": [
          "IMAGE"
        ],
        "empty_latent_width": [
          "INT",
          {
            "default": 576,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "empty_latent_height": [
          "INT",
          {
            "default": 576,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 21,
            "min": 1,
            "max": 4096
          }
        ],
        "interp_easing": [
          [
            "linear",
            "ease_in",
            "ease_out",
            "ease_in_out"
          ],
          {
            "default": "linear"
          }
        ],
        "easing_mode": [
          [
            "azimuth",
            "elevation",
            "custom"
          ],
          {
            "default": "azimuth"
          }
        ]
      },
      "optional": {
        "scheduler": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE",
      "MODEL",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "pipe",
      "model",
      "interp_log"
    ],
    "name": "easy sv3dLoader",
    "display_name": "EasyLoader (SV3D)",
    "description": "",
    "category": "EasyUse/Loaders",
    "output_node": false
  },
  "easy zero123Loader": {
    "input": {
      "required": {
        "ckpt_name": [
          []
        ],
        "vae_name": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "init_image": [
          "IMAGE"
        ],
        "empty_latent_width": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "empty_latent_height": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ],
        "elevation": [
          "FLOAT",
          {
            "default": 0,
            "min": -180,
            "max": 180
          }
        ],
        "azimuth": [
          "FLOAT",
          {
            "default": 0,
            "min": -180,
            "max": 180
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE",
      "MODEL",
      "VAE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "pipe",
      "model",
      "vae"
    ],
    "name": "easy zero123Loader",
    "display_name": "EasyLoader (Zero123)",
    "description": "",
    "category": "EasyUse/Loaders",
    "output_node": false
  },
  "easy dynamiCrafterLoader": {
    "input": {
      "required": {
        "model_name": [
          [
            "dynamicrafter_unet_512 (2.98GB)",
            "dynamicrafter_unet_512_interp (2.98GB)",
            "dynamicrafter_unet_1024 (2.98GB)",
            "dynamicrafter_unet_256 (2.98GB)"
          ]
        ],
        "clip_skip": [
          "INT",
          {
            "default": -2,
            "min": -24,
            "max": 0,
            "step": 1
          }
        ],
        "init_image": [
          "IMAGE"
        ],
        "resolution": [
          [
            "自定义 x 自定义",
            "512 x 512",
            "512 x 768",
            "576 x 1024",
            "768 x 512",
            "768 x 768",
            "768 x 1024",
            "768 x 1280",
            "768 x 1344",
            "768 x 1536",
            "816 x 1920",
            "832 x 1152",
            "896 x 1152",
            "896 x 1088",
            "1024 x 1024",
            "1024 x 576",
            "1024 x 768",
            "1080 x 1920",
            "1440 x 2560",
            "1088 x 896",
            "1152 x 832",
            "1152 x 896",
            "1280 x 768",
            "1344 x 768",
            "1536 x 640",
            "1536 x 768",
            "1920 x 816",
            "1920 x 1080",
            "2560 x 1440"
          ],
          {
            "default": "512 x 512"
          }
        ],
        "empty_latent_width": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "empty_latent_height": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "use_interpolate": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "fps": [
          "INT",
          {
            "default": 15,
            "min": 1,
            "max": 30,
            "step": 1
          }
        ],
        "frames": [
          "INT",
          {
            "default": 16
          }
        ],
        "scale_latents": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "optional_vae": [
          "VAE"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE",
      "MODEL",
      "VAE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "pipe",
      "model",
      "vae"
    ],
    "name": "easy dynamiCrafterLoader",
    "display_name": "EasyLoader (DynamiCrafter)",
    "description": "",
    "category": "EasyUse/Loaders",
    "output_node": false
  },
  "easy cascadeLoader": {
    "input": {
      "required": {
        "stage_c": [
          [
            "diffusion_pytorch_model.fp16.safetensors",
            "iclight_sd15_fc.safetensors",
            "sdxs.safetensors",
            "stage_b_bf16.safetensors",
            "stage_c_bf16.safetensors",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "stage_b": [
          [
            "diffusion_pytorch_model.fp16.safetensors",
            "iclight_sd15_fc.safetensors",
            "sdxs.safetensors",
            "stage_b_bf16.safetensors",
            "stage_c_bf16.safetensors",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "stage_a": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "clip_name": [
          [
            "None",
            "cliph.safetensors",
            "model.safetensors"
          ]
        ],
        "lora_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "lora_model_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_clip_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "resolution": [
          [
            "自定义 x 自定义",
            "512 x 512",
            "512 x 768",
            "576 x 1024",
            "768 x 512",
            "768 x 768",
            "768 x 1024",
            "768 x 1280",
            "768 x 1344",
            "768 x 1536",
            "816 x 1920",
            "832 x 1152",
            "896 x 1152",
            "896 x 1088",
            "1024 x 1024",
            "1024 x 576",
            "1024 x 768",
            "1080 x 1920",
            "1440 x 2560",
            "1088 x 896",
            "1152 x 832",
            "1152 x 896",
            "1280 x 768",
            "1344 x 768",
            "1536 x 640",
            "1536 x 768",
            "1920 x 816",
            "1920 x 1080",
            "2560 x 1440"
          ],
          {
            "default": "1024 x 1024"
          }
        ],
        "empty_latent_width": [
          "INT",
          {
            "default": 1024,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "empty_latent_height": [
          "INT",
          {
            "default": 1024,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "compression": [
          "INT",
          {
            "default": 42,
            "min": 32,
            "max": 64,
            "step": 1
          }
        ],
        "positive": [
          "STRING",
          {
            "default": "",
            "placeholder": "Positive",
            "multiline": true
          }
        ],
        "negative": [
          "STRING",
          {
            "default": "",
            "placeholder": "Negative",
            "multiline": true
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      },
      "optional": {
        "optional_lora_stack": [
          "LORA_STACK"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE",
      "MODEL",
      "LATENT",
      "VAE"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "pipe",
      "model_c",
      "latent_c",
      "vae"
    ],
    "name": "easy cascadeLoader",
    "display_name": "EasyCascadeLoader",
    "description": "",
    "category": "EasyUse/Loaders",
    "output_node": false
  },
  "easy loraStack": {
    "input": {
      "required": {
        "toggle": [
          "BOOLEAN",
          {
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "mode": [
          [
            "simple",
            "advanced"
          ]
        ],
        "num_loras": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10
          }
        ]
      },
      "optional": {
        "optional_lora_stack": [
          "LORA_STACK"
        ],
        "lora_1_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_1_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_1_model_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_1_clip_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_2_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_2_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_2_model_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_2_clip_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_3_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_3_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_3_model_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_3_clip_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_4_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_4_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_4_model_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_4_clip_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_5_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_5_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_5_model_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_5_clip_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_6_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_6_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_6_model_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_6_clip_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_7_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_7_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_7_model_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_7_clip_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_8_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_8_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_8_model_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_8_clip_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_9_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_9_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_9_model_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_9_clip_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_10_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_10_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_10_model_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_10_clip_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LORA_STACK"
    ],
    "output_is_list": [false],
    "output_name": [
      "lora_stack"
    ],
    "name": "easy loraStack",
    "display_name": "EasyLoraStack",
    "description": "",
    "category": "EasyUse/Loaders",
    "output_node": false
  },
  "easy controlnetStack": {
    "input": {
      "required": {
        "toggle": [
          "BOOLEAN",
          {
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "mode": [
          [
            "simple",
            "advanced"
          ]
        ],
        "num_controlnet": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 3
          }
        ]
      },
      "optional": {
        "optional_controlnet_stack": [
          "CONTROL_NET_STACK"
        ],
        "controlnet_1": [
          [
            "None",
            "SD1.5/animatediff/v3_sd15_sparsectrl_rgb.ckpt",
            "canny.safetensors",
            "control-lora-canny-rank256.safetensors",
            "control-lora-depth-rank256.safetensors",
            "control-lora-sketch-rank256.safetensors",
            "control_v11e_sd15_ip2p.pth",
            "control_v11f1e_sd15_tile.safetensors",
            "control_v11f1p_sd15_depth.pth",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny.pth",
            "control_v11p_sd15_lineart.pth",
            "control_v11p_sd15_openpose.pth",
            "control_v11p_sd15_seg.pth",
            "control_v1p_sd15_qrcode_monster.safetensors",
            "controlnet-canny-sdxl-1.0-mid.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusion_pytorch_model.fp16.safetensors",
            "mistoLine_fp16.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_softedge.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "controlnet_1_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "start_percent_1": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent_1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "scale_soft_weight_1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "image_1": [
          "IMAGE"
        ],
        "controlnet_2": [
          [
            "None",
            "SD1.5/animatediff/v3_sd15_sparsectrl_rgb.ckpt",
            "canny.safetensors",
            "control-lora-canny-rank256.safetensors",
            "control-lora-depth-rank256.safetensors",
            "control-lora-sketch-rank256.safetensors",
            "control_v11e_sd15_ip2p.pth",
            "control_v11f1e_sd15_tile.safetensors",
            "control_v11f1p_sd15_depth.pth",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny.pth",
            "control_v11p_sd15_lineart.pth",
            "control_v11p_sd15_openpose.pth",
            "control_v11p_sd15_seg.pth",
            "control_v1p_sd15_qrcode_monster.safetensors",
            "controlnet-canny-sdxl-1.0-mid.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusion_pytorch_model.fp16.safetensors",
            "mistoLine_fp16.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_softedge.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "controlnet_2_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "start_percent_2": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent_2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "scale_soft_weight_2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "image_2": [
          "IMAGE"
        ],
        "controlnet_3": [
          [
            "None",
            "SD1.5/animatediff/v3_sd15_sparsectrl_rgb.ckpt",
            "canny.safetensors",
            "control-lora-canny-rank256.safetensors",
            "control-lora-depth-rank256.safetensors",
            "control-lora-sketch-rank256.safetensors",
            "control_v11e_sd15_ip2p.pth",
            "control_v11f1e_sd15_tile.safetensors",
            "control_v11f1p_sd15_depth.pth",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny.pth",
            "control_v11p_sd15_lineart.pth",
            "control_v11p_sd15_openpose.pth",
            "control_v11p_sd15_seg.pth",
            "control_v1p_sd15_qrcode_monster.safetensors",
            "controlnet-canny-sdxl-1.0-mid.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusion_pytorch_model.fp16.safetensors",
            "mistoLine_fp16.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_softedge.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "controlnet_3_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "start_percent_3": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent_3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "scale_soft_weight_3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "image_3": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "CONTROL_NET_STACK"
    ],
    "output_is_list": [false],
    "output_name": [
      "controlnet_stack"
    ],
    "name": "easy controlnetStack",
    "display_name": "EasyControlnetStack",
    "description": "",
    "category": "EasyUse/Loaders",
    "output_node": false
  },
  "easy controlnetLoader": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "image": [
          "IMAGE"
        ],
        "control_net_name": [
          [
            "SD1.5/animatediff/v3_sd15_sparsectrl_rgb.ckpt",
            "canny.safetensors",
            "control-lora-canny-rank256.safetensors",
            "control-lora-depth-rank256.safetensors",
            "control-lora-sketch-rank256.safetensors",
            "control_v11e_sd15_ip2p.pth",
            "control_v11f1e_sd15_tile.safetensors",
            "control_v11f1p_sd15_depth.pth",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny.pth",
            "control_v11p_sd15_lineart.pth",
            "control_v11p_sd15_openpose.pth",
            "control_v11p_sd15_seg.pth",
            "control_v1p_sd15_qrcode_monster.safetensors",
            "controlnet-canny-sdxl-1.0-mid.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusion_pytorch_model.fp16.safetensors",
            "mistoLine_fp16.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_softedge.safetensors"
          ]
        ]
      },
      "optional": {
        "control_net": [
          "CONTROL_NET"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "scale_soft_weights": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "pipe",
      "positive",
      "negative"
    ],
    "name": "easy controlnetLoader",
    "display_name": "EasyControlnet",
    "description": "",
    "category": "EasyUse/Loaders",
    "output_node": true
  },
  "easy controlnetLoaderADV": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "image": [
          "IMAGE"
        ],
        "control_net_name": [
          [
            "SD1.5/animatediff/v3_sd15_sparsectrl_rgb.ckpt",
            "canny.safetensors",
            "control-lora-canny-rank256.safetensors",
            "control-lora-depth-rank256.safetensors",
            "control-lora-sketch-rank256.safetensors",
            "control_v11e_sd15_ip2p.pth",
            "control_v11f1e_sd15_tile.safetensors",
            "control_v11f1p_sd15_depth.pth",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny.pth",
            "control_v11p_sd15_lineart.pth",
            "control_v11p_sd15_openpose.pth",
            "control_v11p_sd15_seg.pth",
            "control_v1p_sd15_qrcode_monster.safetensors",
            "controlnet-canny-sdxl-1.0-mid.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusion_pytorch_model.fp16.safetensors",
            "mistoLine_fp16.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_softedge.safetensors"
          ]
        ]
      },
      "optional": {
        "control_net": [
          "CONTROL_NET"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "scale_soft_weights": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "pipe",
      "positive",
      "negative"
    ],
    "name": "easy controlnetLoaderADV",
    "display_name": "EasyControlnet (Advanced)",
    "description": "",
    "category": "EasyUse/Loaders",
    "output_node": true
  },
  "easy LLLiteLoader": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "model_name": [
          []
        ],
        "cond_image": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "steps": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 200,
            "step": 1
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.1
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "easy LLLiteLoader",
    "display_name": "EasyLLLite",
    "description": "",
    "category": "EasyUse/Loaders",
    "output_node": false
  },
  "easy ipadapterApply": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "image": [
          "IMAGE"
        ],
        "preset": [
          [
            "LIGHT - SD1.5 only (low strength)",
            "STANDARD (medium strength)",
            "VIT-G (medium strength)",
            "PLUS (high strength)",
            "PLUS FACE (portraits)",
            "FULL FACE - SD1.5 only (portraits stronger)",
            "COMPOSITION",
            "FACEID",
            "FACEID PLUS - SD1.5 only",
            "FACEID PLUS V2",
            "FACEID PORTRAIT (style transfer)"
          ]
        ],
        "lora_strength": [
          "FLOAT",
          {
            "default": 0.6,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "provider": [
          [
            "CPU",
            "CUDA",
            "ROCM",
            "DirectML",
            "OpenVINO",
            "CoreML"
          ]
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_faceidv2": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 5,
            "step": 0.05
          }
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "cache_mode": [
          [
            "insightface only",
            "clip_vision only",
            "ipadapter only",
            "all",
            "none"
          ],
          {
            "default": "all"
          }
        ],
        "use_tiled": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "attn_mask": [
          "MASK"
        ],
        "optional_ipadapter": [
          "IPADAPTER"
        ]
      }
    },
    "output": [
      "MODEL",
      "IMAGE",
      "MASK",
      "IPADAPTER"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "model",
      "images",
      "masks",
      "ipadapter"
    ],
    "name": "easy ipadapterApply",
    "display_name": "Easy Apply IPAdapter",
    "description": "",
    "category": "EasyUse/Adapter",
    "output_node": false
  },
  "easy ipadapterApplyADV": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "image": [
          "IMAGE"
        ],
        "preset": [
          [
            "LIGHT - SD1.5 only (low strength)",
            "STANDARD (medium strength)",
            "VIT-G (medium strength)",
            "PLUS (high strength)",
            "PLUS FACE (portraits)",
            "FULL FACE - SD1.5 only (portraits stronger)",
            "COMPOSITION",
            "FACEID",
            "FACEID PLUS - SD1.5 only",
            "FACEID PLUS V2",
            "FACEID PORTRAIT (style transfer)"
          ]
        ],
        "lora_strength": [
          "FLOAT",
          {
            "default": 0.6,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "provider": [
          [
            "CPU",
            "CUDA",
            "ROCM",
            "DirectML",
            "OpenVINO",
            "CoreML"
          ]
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_faceidv2": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 5,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer",
            "composition"
          ]
        ],
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ],
        "cache_mode": [
          [
            "insightface only",
            "clip_vision only",
            "ipadapter only",
            "all",
            "none"
          ],
          {
            "default": "all"
          }
        ],
        "use_tiled": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "use_batch": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "sharpening": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ],
        "optional_ipadapter": [
          "IPADAPTER"
        ]
      }
    },
    "output": [
      "MODEL",
      "IMAGE",
      "MASK",
      "IPADAPTER"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "model",
      "images",
      "masks",
      "ipadapter"
    ],
    "name": "easy ipadapterApplyADV",
    "display_name": "Easy Apply IPAdapter (Advanced)",
    "description": "",
    "category": "EasyUse/Adapter",
    "output_node": false
  },
  "easy ipadapterApplyEncoder": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "image1": [
          "IMAGE"
        ],
        "preset": [
          [
            "LIGHT - SD1.5 only (low strength)",
            "STANDARD (medium strength)",
            "VIT-G (medium strength)",
            "PLUS (high strength)",
            "PLUS FACE (portraits)",
            "FULL FACE - SD1.5 only (portraits stronger)",
            "COMPOSITION"
          ]
        ],
        "num_embeds": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 3
          }
        ]
      },
      "optional": {
        "image2": [
          "IMAGE"
        ],
        "image3": [
          "IMAGE"
        ],
        "mask1": [
          "MASK"
        ],
        "weight1": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "mask2": [
          "MASK"
        ],
        "weight2": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "mask3": [
          "MASK"
        ],
        "weight3": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "combine_method": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average",
            "max",
            "min"
          ]
        ],
        "optional_ipadapter": [
          "IPADAPTER"
        ],
        "pos_embeds": [
          "EMBEDS"
        ],
        "neg_embeds": [
          "EMBEDS"
        ]
      }
    },
    "output": [
      "MODEL",
      "IPADAPTER",
      "EMBEDS",
      "EMBEDS"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "model",
      "ipadapter",
      "pos_embed",
      "neg_embed"
    ],
    "name": "easy ipadapterApplyEncoder",
    "display_name": "Easy Apply IPAdapter (Encoder)",
    "description": "",
    "category": "EasyUse/Adapter",
    "output_node": false
  },
  "easy ipadapterApplyEmbeds": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "pos_embed": [
          "EMBEDS"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer",
            "composition"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ]
      },
      "optional": {
        "neg_embed": [
          "EMBEDS"
        ],
        "attn_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "MODEL",
      "IPADAPTER"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "model",
      "ipadapter"
    ],
    "name": "easy ipadapterApplyEmbeds",
    "display_name": "Easy Apply IPAdapter (Embeds)",
    "description": "",
    "category": "EasyUse/Adapter",
    "output_node": false
  },
  "easy ipadapterApplyRegional": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "image": [
          "IMAGE"
        ],
        "positive": [
          "STRING",
          {
            "default": "",
            "placeholder": "positive",
            "multiline": true
          }
        ],
        "negative": [
          "STRING",
          {
            "default": "",
            "placeholder": "negative",
            "multiline": true
          }
        ],
        "image_weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "prompt_weight": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer",
            "composition"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ],
        "optional_ipadapter_params": [
          "IPADAPTER_PARAMS"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE",
      "IPADAPTER_PARAMS",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "pipe",
      "ipadapter_params",
      "positive",
      "negative"
    ],
    "name": "easy ipadapterApplyRegional",
    "display_name": "Easy Apply IPAdapter (Regional)",
    "description": "",
    "category": "EasyUse/Adapter",
    "output_node": false
  },
  "easy ipadapterApplyFromParams": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "preset": [
          [
            "LIGHT - SD1.5 only (low strength)",
            "STANDARD (medium strength)",
            "VIT-G (medium strength)",
            "PLUS (high strength)",
            "PLUS FACE (portraits)",
            "FULL FACE - SD1.5 only (portraits stronger)",
            "COMPOSITION"
          ]
        ],
        "ipadapter_params": [
          "IPADAPTER_PARAMS"
        ],
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average",
            "max",
            "min"
          ]
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ],
        "cache_mode": [
          [
            "insightface only",
            "clip_vision only",
            "ipadapter only",
            "all",
            "none"
          ],
          {
            "default": "insightface only"
          },
          {
            "default": "none"
          }
        ]
      },
      "optional": {
        "optional_ipadapter": [
          "IPADAPTER"
        ],
        "image_negative": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "MODEL",
      "IPADAPTER"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "model",
      "ipadapter"
    ],
    "name": "easy ipadapterApplyFromParams",
    "display_name": "Easy Apply IPAdapter (From Params)",
    "description": "",
    "category": "EasyUse/Adapter",
    "output_node": false
  },
  "easy ipadapterStyleComposition": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "image_style": [
          "IMAGE"
        ],
        "preset": [
          [
            "LIGHT - SD1.5 only (low strength)",
            "STANDARD (medium strength)",
            "VIT-G (medium strength)",
            "PLUS (high strength)",
            "PLUS FACE (portraits)",
            "FULL FACE - SD1.5 only (portraits stronger)",
            "COMPOSITION"
          ]
        ],
        "weight_style": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 5,
            "step": 0.05
          }
        ],
        "weight_composition": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 5,
            "step": 0.05
          }
        ],
        "expand_style": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average"
          ],
          {
            "default": "average"
          }
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ],
        "cache_mode": [
          [
            "insightface only",
            "clip_vision only",
            "ipadapter only",
            "all",
            "none"
          ],
          {
            "default": "all"
          }
        ]
      },
      "optional": {
        "image_composition": [
          "IMAGE"
        ],
        "image_negative": [
          "IMAGE"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ],
        "optional_ipadapter": [
          "IPADAPTER"
        ]
      }
    },
    "output": [
      "MODEL",
      "IPADAPTER"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "model",
      "ipadapter"
    ],
    "name": "easy ipadapterStyleComposition",
    "display_name": "Easy Apply IPAdapter (StyleComposition)",
    "description": "",
    "category": "EasyUse/Adapter",
    "output_node": false
  },
  "easy instantIDApply": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "image": [
          "IMAGE"
        ],
        "instantid_file": [
          []
        ],
        "insightface": [
          [
            "CPU",
            "CUDA",
            "ROCM"
          ]
        ],
        "control_net_name": [
          [
            "SD1.5/animatediff/v3_sd15_sparsectrl_rgb.ckpt",
            "canny.safetensors",
            "control-lora-canny-rank256.safetensors",
            "control-lora-depth-rank256.safetensors",
            "control-lora-sketch-rank256.safetensors",
            "control_v11e_sd15_ip2p.pth",
            "control_v11f1e_sd15_tile.safetensors",
            "control_v11f1p_sd15_depth.pth",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny.pth",
            "control_v11p_sd15_lineart.pth",
            "control_v11p_sd15_openpose.pth",
            "control_v11p_sd15_seg.pth",
            "control_v1p_sd15_qrcode_monster.safetensors",
            "controlnet-canny-sdxl-1.0-mid.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusion_pytorch_model.fp16.safetensors",
            "mistoLine_fp16.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_softedge.safetensors"
          ]
        ],
        "cn_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "cn_soft_weights": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0,
            "max": 5,
            "step": 0.01
          }
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "noise": [
          "FLOAT",
          {
            "default": 0.35,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ]
      },
      "optional": {
        "image_kps": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "control_net": [
          "CONTROL_NET"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE",
      "MODEL",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "pipe",
      "model",
      "positive",
      "negative"
    ],
    "name": "easy instantIDApply",
    "display_name": "Easy Apply InstantID",
    "description": "",
    "category": "EasyUse/Adapter",
    "output_node": true
  },
  "easy instantIDApplyADV": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "image": [
          "IMAGE"
        ],
        "instantid_file": [
          []
        ],
        "insightface": [
          [
            "CPU",
            "CUDA",
            "ROCM"
          ]
        ],
        "control_net_name": [
          [
            "SD1.5/animatediff/v3_sd15_sparsectrl_rgb.ckpt",
            "canny.safetensors",
            "control-lora-canny-rank256.safetensors",
            "control-lora-depth-rank256.safetensors",
            "control-lora-sketch-rank256.safetensors",
            "control_v11e_sd15_ip2p.pth",
            "control_v11f1e_sd15_tile.safetensors",
            "control_v11f1p_sd15_depth.pth",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny.pth",
            "control_v11p_sd15_lineart.pth",
            "control_v11p_sd15_openpose.pth",
            "control_v11p_sd15_seg.pth",
            "control_v1p_sd15_qrcode_monster.safetensors",
            "controlnet-canny-sdxl-1.0-mid.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusion_pytorch_model.fp16.safetensors",
            "mistoLine_fp16.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_softedge.safetensors"
          ]
        ],
        "cn_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "cn_soft_weights": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0,
            "max": 5,
            "step": 0.01
          }
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "noise": [
          "FLOAT",
          {
            "default": 0.35,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ]
      },
      "optional": {
        "image_kps": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "control_net": [
          "CONTROL_NET"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE",
      "MODEL",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "pipe",
      "model",
      "positive",
      "negative"
    ],
    "name": "easy instantIDApplyADV",
    "display_name": "Easy Apply InstantID (Advanced)",
    "description": "",
    "category": "EasyUse/Adapter",
    "output_node": true
  },
  "easy styleAlignedBatchAlign": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "share_norm": [
          [
            "both",
            "group",
            "layer",
            "disabled"
          ]
        ],
        "share_attn": [
          [
            "q+k",
            "q+k+v",
            "disabled"
          ]
        ],
        "scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "easy styleAlignedBatchAlign",
    "display_name": "Easy Apply StyleAlign",
    "description": "",
    "category": "EasyUse/Adapter",
    "output_node": false
  },
  "easy icLightApply": {
    "input": {
      "required": {
        "mode": [
          [
            "Foreground",
            "Foreground&Background"
          ]
        ],
        "model": [
          "MODEL"
        ],
        "image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "lighting": [
          [
            "None",
            "Left Light",
            "Right Light",
            "Top Light",
            "Bottom Light",
            "Circle Light"
          ],
          {
            "default": "None"
          }
        ],
        "source": [
          [
            "Use Background Image",
            "Use Flipped Background Image",
            "Left Light",
            "Right Light",
            "Top Light",
            "Bottom Light",
            "Ambient"
          ],
          {
            "default": "Use Background Image"
          }
        ],
        "remove_bg": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "model",
      "lighting_image"
    ],
    "name": "easy icLightApply",
    "display_name": "Easy Apply ICLight",
    "description": "",
    "category": "EasyUse/Adapter",
    "output_node": true
  },
  "easy applyFooocusInpaint": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "latent": [
          "LATENT"
        ],
        "head": [
          [
            "fooocus_inpaint_head"
          ]
        ],
        "patch": [
          [
            "inpaint_v26 (1.32GB)",
            "inpaint_v25 (2.58GB)",
            "inpaint (1.32GB)"
          ]
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "model"
    ],
    "name": "easy applyFooocusInpaint",
    "display_name": "Easy Apply Fooocus Inpaint",
    "description": "",
    "category": "EasyUse/Inpaint",
    "output_node": false
  },
  "easy applyBrushNet": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "brushnet": [
          []
        ],
        "dtype": [
          [
            "float16",
            "bfloat16",
            "float32",
            "float64"
          ]
        ],
        "scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10
          }
        ],
        "start_at": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "PIPE_LINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "pipe"
    ],
    "name": "easy applyBrushNet",
    "display_name": "Easy Apply BrushNet",
    "description": "",
    "category": "EasyUse/Inpaint",
    "output_node": false
  },
  "easy applyPowerPaint": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "powerpaint_model": [
          []
        ],
        "powerpaint_clip": [
          []
        ],
        "dtype": [
          [
            "float16",
            "bfloat16",
            "float32",
            "float64"
          ]
        ],
        "fitting": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.3,
            "max": 1
          }
        ],
        "function": [
          [
            "text guided",
            "shape guided",
            "object removal",
            "context aware",
            "image outpainting"
          ]
        ],
        "scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10
          }
        ],
        "start_at": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "save_memory": [
          [
            "none",
            "auto",
            "max"
          ]
        ]
      }
    },
    "output": [
      "PIPE_LINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "pipe"
    ],
    "name": "easy applyPowerPaint",
    "display_name": "Easy Apply PowerPaint",
    "description": "",
    "category": "EasyUse/Inpaint",
    "output_node": false
  },
  "easy applyInpaint": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "inpaint_mode": [
          [
            "normal",
            "fooocus_inpaint",
            "brushnet_random",
            "brushnet_segmentation",
            "powerpaint"
          ]
        ],
        "encode": [
          [
            "none",
            "vae_encode_inpaint",
            "inpaint_model_conditioning",
            "different_diffusion"
          ],
          {
            "default": "none"
          }
        ],
        "grow_mask_by": [
          "INT",
          {
            "default": 6,
            "min": 0,
            "max": 64,
            "step": 1
          }
        ],
        "dtype": [
          [
            "float16",
            "bfloat16",
            "float32",
            "float64"
          ]
        ],
        "fitting": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.3,
            "max": 1
          }
        ],
        "function": [
          [
            "text guided",
            "shape guided",
            "object removal",
            "context aware",
            "image outpainting"
          ]
        ],
        "scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10
          }
        ],
        "start_at": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "PIPE_LINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "pipe"
    ],
    "name": "easy applyInpaint",
    "display_name": "Easy Apply Inpaint",
    "description": "",
    "category": "EasyUse/Inpaint",
    "output_node": false
  },
  "easy latentNoisy": {
    "input": {
      "required": {
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "steps": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 1,
            "max": 10000
          }
        ],
        "source": [
          [
            "CPU",
            "GPU"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      },
      "optional": {
        "pipe": [
          "PIPE_LINE"
        ],
        "optional_model": [
          "MODEL"
        ],
        "optional_latent": [
          "LATENT"
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "LATENT",
      "FLOAT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "pipe",
      "latent",
      "sigma"
    ],
    "name": "easy latentNoisy",
    "display_name": "LatentNoisy",
    "description": "",
    "category": "EasyUse/Latent",
    "output_node": false
  },
  "easy latentCompositeMaskedWithCond": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "text_combine": [
          "LIST"
        ],
        "source_latent": [
          "LATENT"
        ],
        "source_mask": [
          "MASK"
        ],
        "destination_mask": [
          "MASK"
        ],
        "text_combine_mode": [
          [
            "add",
            "replace",
            "cover"
          ],
          {
            "default": "add"
          }
        ],
        "replace_text": [
          "STRING",
          {
            "default": ""
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE",
      "LATENT",
      "CONDITIONING"
    ],
    "output_is_list": [false, false, true],
    "output_name": [
      "pipe",
      "latent",
      "conditioning"
    ],
    "name": "easy latentCompositeMaskedWithCond",
    "display_name": "LatentCompositeMaskedWithCond",
    "description": "",
    "category": "EasyUse/Latent",
    "output_node": true
  },
  "easy injectNoiseToLatent": {
    "input": {
      "required": {
        "strength": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 200,
            "step": 0.0001
          }
        ],
        "normalize": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "average": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "pipe_to_noise": [
          "PIPE_LINE"
        ],
        "image_to_latent": [
          "IMAGE"
        ],
        "latent": [
          "LATENT"
        ],
        "noise": [
          "LATENT"
        ],
        "mask": [
          "MASK"
        ],
        "mix_randn_amount": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "easy injectNoiseToLatent",
    "display_name": "InjectNoiseToLatent",
    "description": "",
    "category": "EasyUse/Latent",
    "output_node": false
  },
  "easy preSampling": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "align_your_steps"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1125899906842624
          }
        ]
      },
      "optional": {
        "image_to_latent": [
          "IMAGE"
        ],
        "latent": [
          "LATENT"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "pipe"
    ],
    "name": "easy preSampling",
    "display_name": "PreSampling",
    "description": "",
    "category": "EasyUse/PreSampling",
    "output_node": true
  },
  "easy preSamplingAdvanced": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "align_your_steps"
          ]
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "add_noise": [
          [
            "enable",
            "disable"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1125899906842624
          }
        ],
        "return_with_leftover_noise": [
          [
            "disable",
            "enable"
          ]
        ]
      },
      "optional": {
        "image_to_latent": [
          "IMAGE"
        ],
        "latent": [
          "LATENT"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "pipe"
    ],
    "name": "easy preSamplingAdvanced",
    "display_name": "PreSampling (Advanced)",
    "description": "",
    "category": "EasyUse/PreSampling",
    "output_node": true
  },
  "easy preSamplingNoiseIn": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "factor": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1,
            "step": 0.01,
            "round": 0.01
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "align_your_steps"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1125899906842624
          }
        ]
      },
      "optional": {
        "optional_noise_seed": [
          "INT",
          {
            "forceInput": true
          }
        ],
        "optional_latent": [
          "LATENT"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "pipe"
    ],
    "name": "easy preSamplingNoiseIn",
    "display_name": "PreSampling (NoiseIn)",
    "description": "",
    "category": "EasyUse/PreSampling",
    "output_node": true
  },
  "easy preSamplingCustom": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "guider": [
          [
            "CFG",
            "DualCFG",
            "IP2P+DualCFG",
            "Basic"
          ],
          {
            "default": "Basic"
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "cfg_negative": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
            "inversed_euler"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "karrasADV",
            "exponentialADV",
            "polyExponential",
            "sdturbo",
            "vp",
            "alignYourSteps"
          ]
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "sigma_max": [
          "FLOAT",
          {
            "default": 14.614642,
            "min": 0,
            "max": 1000,
            "step": 0.01,
            "round": false
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "default": 0.0291675,
            "min": 0,
            "max": 1000,
            "step": 0.01,
            "round": false
          }
        ],
        "rho": [
          "FLOAT",
          {
            "default": 7,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "beta_d": [
          "FLOAT",
          {
            "default": 19.9,
            "min": 0,
            "max": 1000,
            "step": 0.01,
            "round": false
          }
        ],
        "beta_min": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1000,
            "step": 0.01,
            "round": false
          }
        ],
        "eps_s": [
          "FLOAT",
          {
            "default": 0.001,
            "min": 0,
            "max": 1,
            "step": 0.0001,
            "round": false
          }
        ],
        "flip_sigmas": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "add_noise": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1125899906842624
          }
        ]
      },
      "optional": {
        "image_to_latent": [
          "IMAGE"
        ],
        "latent": [
          "LATENT"
        ],
        "optional_sampler": [
          "SAMPLER"
        ],
        "optional_sigmas": [
          "SIGMAS"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "pipe"
    ],
    "name": "easy preSamplingCustom",
    "display_name": "PreSampling (Custom)",
    "description": "",
    "category": "EasyUse/PreSampling",
    "output_node": true
  },
  "easy preSamplingSdTurbo": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "steps": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "eta": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01,
            "round": false
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01,
            "round": false
          }
        ],
        "upscale_ratio": [
          "FLOAT",
          {
            "default": 2,
            "min": 0,
            "max": 16,
            "step": 0.01,
            "round": false
          }
        ],
        "start_step": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "end_step": [
          "INT",
          {
            "default": 15,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "upscale_n_step": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "unsharp_kernel_size": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 21,
            "step": 1
          }
        ],
        "unsharp_sigma": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 10,
            "step": 0.01,
            "round": false
          }
        ],
        "unsharp_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.01,
            "round": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1125899906842624
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "pipe"
    ],
    "name": "easy preSamplingSdTurbo",
    "display_name": "PreSampling (SDTurbo)",
    "description": "",
    "category": "EasyUse/PreSampling",
    "output_node": true
  },
  "easy preSamplingDynamicCFG": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "cfg_mode": [
          [
            "Constant",
            "Linear Down",
            "Cosine Down",
            "Half Cosine Down",
            "Linear Up",
            "Cosine Up",
            "Half Cosine Up",
            "Power Up",
            "Power Down",
            "Linear Repeating",
            "Cosine Repeating",
            "Sawtooth"
          ]
        ],
        "cfg_scale_min": [
          "FLOAT",
          {
            "default": 3.5,
            "min": 0,
            "max": 100,
            "step": 0.5
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "align_your_steps"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1125899906842624
          }
        ]
      },
      "optional": {
        "image_to_latent": [
          "IMAGE"
        ],
        "latent": [
          "LATENT"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "pipe"
    ],
    "name": "easy preSamplingDynamicCFG",
    "display_name": "PreSampling (DynamicCFG)",
    "description": "",
    "category": "EasyUse/PreSampling",
    "output_node": true
  },
  "easy preSamplingCascade": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "encode_vae_name": [
          [
            "None",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "decode_vae_name": [
          [
            "None",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 4,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ],
          {
            "default": "euler_ancestral"
          }
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ],
          {
            "default": "simple"
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1125899906842624
          }
        ]
      },
      "optional": {
        "image_to_latent_c": [
          "IMAGE"
        ],
        "latent_c": [
          "LATENT"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "pipe"
    ],
    "name": "easy preSamplingCascade",
    "display_name": "PreSampling (Cascade)",
    "description": "",
    "category": "EasyUse/PreSampling",
    "output_node": true
  },
  "easy preSamplingLayerDiffusion": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "method": [
          [
            "Attention Injection",
            "Conv Injection",
            "Everything",
            "Foreground",
            "Background"
          ]
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ],
          {
            "default": "euler"
          }
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "align_your_steps"
          ],
          {
            "default": "normal"
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1125899906842624
          }
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ],
        "blended_image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "pipe"
    ],
    "name": "easy preSamplingLayerDiffusion",
    "display_name": "PreSampling (LayerDiffuse)",
    "description": "",
    "category": "EasyUse/PreSampling",
    "output_node": true
  },
  "easy preSamplingLayerDiffusionADDTL": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "foreground_prompt": [
          "STRING",
          {
            "default": "",
            "placeholder": "Foreground Additional Prompt",
            "multiline": true
          }
        ],
        "background_prompt": [
          "STRING",
          {
            "default": "",
            "placeholder": "Background Additional Prompt",
            "multiline": true
          }
        ],
        "blended_prompt": [
          "STRING",
          {
            "default": "",
            "placeholder": "Blended Additional Prompt",
            "multiline": true
          }
        ]
      },
      "optional": {
        "optional_fg_cond": [
          "CONDITIONING"
        ],
        "optional_bg_cond": [
          "CONDITIONING"
        ],
        "optional_blended_cond": [
          "CONDITIONING"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "pipe"
    ],
    "name": "easy preSamplingLayerDiffusionADDTL",
    "display_name": "PreSampling (LayerDiffuse ADDTL)",
    "description": "",
    "category": "EasyUse/PreSampling",
    "output_node": true
  },
  "easy fullkSampler": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "align_your_steps"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "image_output": [
          [
            "Hide",
            "Preview",
            "Preview&Choose",
            "Save",
            "Hide&Save",
            "Sender",
            "Sender&Save"
          ]
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ],
        "save_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "optional": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1125899906842624
          }
        ],
        "model": [
          "MODEL"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent": [
          "LATENT"
        ],
        "vae": [
          "VAE"
        ],
        "clip": [
          "CLIP"
        ],
        "xyPlot": [
          "XYPLOT"
        ],
        "image": [
          "IMAGE"
        ]
      },
      "hidden": {
        "tile_size": "INT",
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID",
        "embeddingsList": [
          [
            "bad-hands-5.pt",
            "easynegative.safetensors"
          ]
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "IMAGE",
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "CLIP",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false, false],
    "output_name": [
      "pipe",
      "image",
      "model",
      "positive",
      "negative",
      "latent",
      "vae",
      "clip",
      "seed"
    ],
    "name": "easy fullkSampler",
    "display_name": "EasyKSampler (Full)",
    "description": "",
    "category": "EasyUse/Sampler",
    "output_node": true
  },
  "easy kSampler": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "image_output": [
          [
            "Hide",
            "Preview",
            "Preview&Choose",
            "Save",
            "Hide&Save",
            "Sender",
            "Sender&Save"
          ],
          {
            "default": "Preview"
          }
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ],
        "save_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "optional": {
        "model": [
          "MODEL"
        ]
      },
      "hidden": {
        "tile_size": "INT",
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID",
        "embeddingsList": [
          [
            "bad-hands-5.pt",
            "easynegative.safetensors"
          ]
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "pipe",
      "image"
    ],
    "name": "easy kSampler",
    "display_name": "EasyKSampler",
    "description": "",
    "category": "EasyUse/Sampler",
    "output_node": true
  },
  "easy kSamplerTiled": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ],
        "image_output": [
          [
            "Hide",
            "Preview",
            "Save",
            "Hide&Save",
            "Sender",
            "Sender&Save"
          ],
          {
            "default": "Preview"
          }
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ],
        "save_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "optional": {
        "model": [
          "MODEL"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID",
        "embeddingsList": [
          [
            "bad-hands-5.pt",
            "easynegative.safetensors"
          ]
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "pipe",
      "image"
    ],
    "name": "easy kSamplerTiled",
    "display_name": "EasyKSampler (Tiled Decode)",
    "description": "",
    "category": "EasyUse/Sampler",
    "output_node": true
  },
  "easy kSamplerLayerDiffusion": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "image_output": [
          [
            "Hide",
            "Preview",
            "Save",
            "Hide&Save",
            "Sender",
            "Sender&Save"
          ],
          {
            "default": "Preview"
          }
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ],
        "save_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "optional": {
        "model": [
          "MODEL"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID",
        "embeddingsList": [
          [
            "bad-hands-5.pt",
            "easynegative.safetensors"
          ]
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "IMAGE",
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false, false, true],
    "output_name": [
      "pipe",
      "final_image",
      "original_image",
      "alpha"
    ],
    "name": "easy kSamplerLayerDiffusion",
    "display_name": "EasyKSampler (LayerDiffuse)",
    "description": "",
    "category": "EasyUse/Sampler",
    "output_node": true
  },
  "easy kSamplerInpainting": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "grow_mask_by": [
          "INT",
          {
            "default": 6,
            "min": 0,
            "max": 64,
            "step": 1
          }
        ],
        "image_output": [
          [
            "Hide",
            "Preview",
            "Save",
            "Hide&Save",
            "Sender",
            "Sender&Save"
          ],
          {
            "default": "Preview"
          }
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ],
        "save_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ],
        "additional": [
          [
            "None",
            "InpaintModelCond",
            "Differential Diffusion",
            "Fooocus Inpaint",
            "Fooocus Inpaint + DD",
            "Brushnet Random",
            "Brushnet Random + DD",
            "Brushnet Segmentation",
            "Brushnet Segmentation + DD"
          ],
          {
            "default": "None"
          }
        ]
      },
      "optional": {
        "model": [
          "MODEL"
        ],
        "mask": [
          "MASK"
        ]
      },
      "hidden": {
        "tile_size": "INT",
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID",
        "embeddingsList": [
          [
            "bad-hands-5.pt",
            "easynegative.safetensors"
          ]
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "IMAGE",
      "VAE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "pipe",
      "image",
      "vae"
    ],
    "name": "easy kSamplerInpainting",
    "display_name": "EasyKSampler (Inpainting)",
    "description": "",
    "category": "EasyUse/Sampler",
    "output_node": true
  },
  "easy kSamplerDownscaleUnet": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "downscale_mode": [
          [
            "None",
            "Auto",
            "Custom"
          ],
          {
            "default": "Auto"
          }
        ],
        "block_number": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 32,
            "step": 1
          }
        ],
        "downscale_factor": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.1,
            "max": 9,
            "step": 0.001
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 0.35,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "downscale_after_skip": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "downscale_method": [
          [
            "bicubic",
            "nearest-exact",
            "bilinear",
            "area",
            "bislerp"
          ]
        ],
        "upscale_method": [
          [
            "bicubic",
            "nearest-exact",
            "bilinear",
            "area",
            "bislerp"
          ]
        ],
        "image_output": [
          [
            "Hide",
            "Preview",
            "Save",
            "Hide&Save",
            "Sender",
            "Sender&Save"
          ],
          {
            "default": "Preview"
          }
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ],
        "save_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "optional": {
        "model": [
          "MODEL"
        ]
      },
      "hidden": {
        "tile_size": "INT",
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID",
        "embeddingsList": [
          [
            "bad-hands-5.pt",
            "easynegative.safetensors"
          ]
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "pipe",
      "image"
    ],
    "name": "easy kSamplerDownscaleUnet",
    "display_name": "EasyKsampler (Downscale Unet)",
    "description": "",
    "category": "EasyUse/Sampler",
    "output_node": true
  },
  "easy kSamplerSDTurbo": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "image_output": [
          [
            "Hide",
            "Preview",
            "Save",
            "Hide&Save",
            "Sender",
            "Sender&Save"
          ],
          {
            "default": "Preview"
          }
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ],
        "save_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "optional": {
        "model": [
          "MODEL"
        ]
      },
      "hidden": {
        "tile_size": "INT",
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID",
        "embeddingsList": [
          [
            "bad-hands-5.pt",
            "easynegative.safetensors"
          ]
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "pipe",
      "image"
    ],
    "name": "easy kSamplerSDTurbo",
    "display_name": "EasyKSampler (SDTurbo)",
    "description": "",
    "category": "EasyUse/Sampler",
    "output_node": true
  },
  "easy fullCascadeKSampler": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "encode_vae_name": [
          [
            "None",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "decode_vae_name": [
          [
            "None",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 4,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ],
          {
            "default": "euler_ancestral"
          }
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ],
          {
            "default": "simple"
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "image_output": [
          [
            "Hide",
            "Preview",
            "Save",
            "Hide&Save",
            "Sender",
            "Sender&Save"
          ]
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ],
        "save_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1125899906842624
          }
        ]
      },
      "optional": {
        "image_to_latent_c": [
          "IMAGE"
        ],
        "latent_c": [
          "LATENT"
        ],
        "model_c": [
          "MODEL"
        ]
      },
      "hidden": {
        "tile_size": "INT",
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID",
        "embeddingsList": [
          [
            "bad-hands-5.pt",
            "easynegative.safetensors"
          ]
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "MODEL",
      "LATENT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "pipe",
      "model_b",
      "latent_b"
    ],
    "name": "easy fullCascadeKSampler",
    "display_name": "EasyCascadeKsampler (Full)",
    "description": "",
    "category": "EasyUse/Sampler",
    "output_node": true
  },
  "easy cascadeKSampler": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "image_output": [
          [
            "Hide",
            "Preview",
            "Save",
            "Hide&Save",
            "Sender",
            "Sender&Save"
          ],
          {
            "default": "Preview"
          }
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ],
        "save_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "optional": {
        "model_c": [
          "MODEL"
        ]
      },
      "hidden": {
        "tile_size": "INT",
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID",
        "embeddingsList": [
          [
            "bad-hands-5.pt",
            "easynegative.safetensors"
          ]
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "pipe",
      "image"
    ],
    "name": "easy cascadeKSampler",
    "display_name": "EasyCascadeKsampler",
    "description": "",
    "category": "EasyUse/Sampler",
    "output_node": true
  },
  "easy unSampler": {
    "input": {
      "required": {
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "normalize": [
          [
            "disable",
            "enable"
          ]
        ]
      },
      "optional": {
        "pipe": [
          "PIPE_LINE"
        ],
        "optional_model": [
          "MODEL"
        ],
        "optional_positive": [
          "CONDITIONING"
        ],
        "optional_negative": [
          "CONDITIONING"
        ],
        "optional_latent": [
          "LATENT"
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "LATENT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "pipe",
      "latent"
    ],
    "name": "easy unSampler",
    "display_name": "EasyUnSampler",
    "description": "",
    "category": "EasyUse/Sampler",
    "output_node": false
  },
  "easy hiresFix": {
    "input": {
      "required": {
        "model_name": [
          [
            "4x-lollypop.pth",
            "4xRealWebPhoto_v4_dat2.pth",
            "4x_NMKD-Siax_200k.pth",
            "RealESRGAN_x2.pth",
            "RealESRGAN_x4.pth",
            "RealESRGAN_x8.pth"
          ]
        ],
        "rescale_after_model": [
          [false, true],
          {
            "default": true
          }
        ],
        "rescale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos",
            "bislerp"
          ]
        ],
        "rescale": [
          [
            "by percentage",
            "to Width/Height",
            "to longer side - maintain aspect"
          ]
        ],
        "percent": [
          "INT",
          {
            "default": 50,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "longer_side": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ],
        "image_output": [
          [
            "Hide",
            "Preview",
            "Save",
            "Hide&Save",
            "Sender",
            "Sender&Save"
          ],
          {
            "default": "Preview"
          }
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ],
        "save_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "optional": {
        "pipe": [
          "PIPE_LINE"
        ],
        "image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE",
      "IMAGE",
      "LATENT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "pipe",
      "image",
      "latent"
    ],
    "name": "easy hiresFix",
    "display_name": "HiresFix",
    "description": "",
    "category": "EasyUse/Fix",
    "output_node": true
  },
  "easy preDetailerFix": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 256,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 768,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 16384,
            "step": 1,
            "default": 10
          }
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "bbox_segm_pipe": [
          "PIPE_LINE"
        ],
        "sam_pipe": [
          "PIPE_LINE"
        ],
        "optional_image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "PIPE_LINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "pipe"
    ],
    "name": "easy preDetailerFix",
    "display_name": "PreDetailerFix",
    "description": "",
    "category": "EasyUse/Fix",
    "output_node": false
  },
  "easy preMaskDetailerFix": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "mask": [
          "MASK"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "mask_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "masked only",
            "label_off": "whole"
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 10,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 16384,
            "step": 1,
            "default": 10
          }
        ],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 100
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "optional_image": [
          "IMAGE"
        ],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "PIPE_LINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "pipe"
    ],
    "name": "easy preMaskDetailerFix",
    "display_name": "preMaskDetailerFix",
    "description": "",
    "category": "EasyUse/Fix",
    "output_node": false
  },
  "easy ultralyticsDetectorPipe": {
    "input": {
      "required": {
        "model_name": [
          [
            "bbox/face_yolov8m.pt",
            "bbox/hand_yolov8s.pt",
            "segm/person_yolov8m-seg.pt"
          ]
        ],
        "bbox_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "bbox_dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "bbox_crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 10,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "PIPE_LINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "bbox_segm_pipe"
    ],
    "name": "easy ultralyticsDetectorPipe",
    "display_name": "UltralyticsDetector (Pipe)",
    "description": "",
    "category": "EasyUse/Fix",
    "output_node": false
  },
  "easy samLoaderPipe": {
    "input": {
      "required": {
        "model_name": [
          [
            "sam_vit_b_01ec64.pth",
            "sam_vit_h_4b8939.pth"
          ]
        ],
        "device_mode": [
          [
            "AUTO",
            "Prefer GPU",
            "CPU"
          ],
          {
            "default": "AUTO"
          }
        ],
        "sam_detection_hint": [
          [
            "center-1",
            "horizontal-2",
            "vertical-2",
            "rect-4",
            "diamond-4",
            "mask-area",
            "mask-points",
            "mask-point-bbox",
            "none"
          ]
        ],
        "sam_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "sam_threshold": [
          "FLOAT",
          {
            "default": 0.93,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "sam_bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "sam_mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "sam_mask_hint_use_negative": [
          [
            "False",
            "Small",
            "Outter"
          ]
        ]
      }
    },
    "output": [
      "PIPE_LINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "sam_pipe"
    ],
    "name": "easy samLoaderPipe",
    "display_name": "SAMLoader (Pipe)",
    "description": "",
    "category": "EasyUse/Fix",
    "output_node": false
  },
  "easy detailerFix": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "image_output": [
          [
            "Hide",
            "Preview",
            "Save",
            "Hide&Save",
            "Sender",
            "Sender&Save"
          ],
          {
            "default": "Preview"
          }
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ],
        "save_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "optional": {
        "model": [
          "MODEL"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE",
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false, true, true],
    "output_name": [
      "pipe",
      "image",
      "cropped_refined",
      "cropped_enhanced_alpha"
    ],
    "name": "easy detailerFix",
    "display_name": "DetailerFix",
    "description": "",
    "category": "EasyUse/Fix",
    "output_node": true
  },
  "easy pipeIn": {
    "input": {
      "required": {

      },
      "optional": {
        "pipe": [
          "PIPE_LINE"
        ],
        "model": [
          "MODEL"
        ],
        "pos": [
          "CONDITIONING"
        ],
        "neg": [
          "CONDITIONING"
        ],
        "latent": [
          "LATENT"
        ],
        "vae": [
          "VAE"
        ],
        "clip": [
          "CLIP"
        ],
        "image": [
          "IMAGE"
        ],
        "xyPlot": [
          "XYPLOT"
        ]
      },
      "hidden": {
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "pipe"
    ],
    "name": "easy pipeIn",
    "display_name": "Pipe In",
    "description": "",
    "category": "EasyUse/Pipe",
    "output_node": false
  },
  "easy pipeOut": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ]
      },
      "hidden": {
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE",
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "CLIP",
      "IMAGE",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false, false],
    "output_name": [
      "pipe",
      "model",
      "pos",
      "neg",
      "latent",
      "vae",
      "clip",
      "image",
      "seed"
    ],
    "name": "easy pipeOut",
    "display_name": "Pipe Out",
    "description": "",
    "category": "EasyUse/Pipe",
    "output_node": false
  },
  "easy pipeEdit": {
    "input": {
      "required": {
        "clip_skip": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": 0,
            "step": 1
          }
        ],
        "optional_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "positive_token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "positive_weight_interpretation": [
          [
            "comfy",
            "A1111",
            "comfy++",
            "compel",
            "fixed attention"
          ]
        ],
        "optional_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "negative_token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "negative_weight_interpretation": [
          [
            "comfy",
            "A1111",
            "comfy++",
            "compel",
            "fixed attention"
          ]
        ],
        "a1111_prompt_style": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "conditioning_mode": [
          [
            "replace",
            "concat",
            "combine",
            "average",
            "timestep"
          ],
          {
            "default": "replace"
          }
        ],
        "average_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "old_cond_start": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "old_cond_end": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "new_cond_start": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "new_cond_end": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "pipe": [
          "PIPE_LINE"
        ],
        "model": [
          "MODEL"
        ],
        "pos": [
          "CONDITIONING"
        ],
        "neg": [
          "CONDITIONING"
        ],
        "latent": [
          "LATENT"
        ],
        "vae": [
          "VAE"
        ],
        "clip": [
          "CLIP"
        ],
        "image": [
          "IMAGE"
        ]
      },
      "hidden": {
        "my_unique_id": "UNIQUE_ID",
        "prompt": "PROMPT"
      }
    },
    "output": [
      "PIPE_LINE",
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "CLIP",
      "IMAGE"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false],
    "output_name": [
      "pipe",
      "model",
      "pos",
      "neg",
      "latent",
      "vae",
      "clip",
      "image"
    ],
    "name": "easy pipeEdit",
    "display_name": "Pipe Edit",
    "description": "",
    "category": "EasyUse/Pipe",
    "output_node": false
  },
  "easy pipeToBasicPipe": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ]
      },
      "hidden": {
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "BASIC_PIPE"
    ],
    "output_is_list": [false],
    "output_name": [
      "basic_pipe"
    ],
    "name": "easy pipeToBasicPipe",
    "display_name": "Pipe -\u003E BasicPipe",
    "description": "",
    "category": "EasyUse/Pipe",
    "output_node": false
  },
  "easy pipeBatchIndex": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "batch_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 63
          }
        ],
        "length": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      },
      "hidden": {
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "pipe"
    ],
    "name": "easy pipeBatchIndex",
    "display_name": "Pipe Batch Index",
    "description": "",
    "category": "EasyUse/Pipe",
    "output_node": false
  },
  "easy XYPlot": {
    "input": {
      "required": {
        "grid_spacing": [
          "INT",
          {
            "min": 0,
            "max": 500,
            "step": 5,
            "default": 0
          }
        ],
        "output_individuals": [
          [
            "False",
            "True"
          ],
          {
            "default": "False"
          }
        ],
        "flip_xy": [
          [
            "False",
            "True"
          ],
          {
            "default": "False"
          }
        ],
        "x_axis": [
          [
            "None",
            "---------------------",
            "preSampling: steps",
            "preSampling: cfg",
            "preSampling: sampler_name",
            "preSampling: scheduler",
            "preSampling: denoise",
            "preSampling: seed",
            "---------------------",
            "loader: ckpt_name",
            "loader: vae_name",
            "loader: clip_skip",
            "loader: lora_name",
            "loader: lora_model_strength",
            "loader: lora_clip_strength",
            "loader: positive",
            "loader: negative"
          ],
          {
            "default": "None"
          }
        ],
        "x_values": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "placeholder": "insert values seperated by \"; \""
          }
        ],
        "y_axis": [
          [
            "None",
            "---------------------",
            "preSampling: steps",
            "preSampling: cfg",
            "preSampling: sampler_name",
            "preSampling: scheduler",
            "preSampling: denoise",
            "preSampling: seed",
            "---------------------",
            "loader: ckpt_name",
            "loader: vae_name",
            "loader: clip_skip",
            "loader: lora_name",
            "loader: lora_model_strength",
            "loader: lora_clip_strength",
            "loader: positive",
            "loader: negative"
          ],
          {
            "default": "None"
          }
        ],
        "y_values": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "placeholder": "insert values seperated by \"; \""
          }
        ]
      },
      "optional": {
        "pipe": [
          "PIPE_LINE"
        ]
      },
      "hidden": {
        "plot_dict": [
          {
            "steps": {
              "min": 1,
              "max": 100,
              "step": 1
            },
            "cfg": {
              "min": 0,
              "max": 100,
              "step": 1
            },
            "sampler_name": [
              "euler",
              "euler_ancestral",
              "heun",
              "heunpp2",
              "dpm_2",
              "dpm_2_ancestral",
              "lms",
              "dpm_fast",
              "dpm_adaptive",
              "dpmpp_2s_ancestral",
              "dpmpp_sde",
              "dpmpp_sde_gpu",
              "dpmpp_2m",
              "dpmpp_2m_sde",
              "dpmpp_2m_sde_gpu",
              "dpmpp_3m_sde",
              "dpmpp_3m_sde_gpu",
              "ddpm",
              "lcm",
              "ddim",
              "uni_pc",
              "uni_pc_bh2"
            ],
            "scheduler": [
              "normal",
              "karras",
              "exponential",
              "sgm_uniform",
              "simple",
              "ddim_uniform"
            ],
            "denoise": {
              "min": 0,
              "max": 1,
              "step": 0.01
            },
            "seed": {
              "min": 0,
              "max": 1125899906842624
            },
            "ckpt_name": [
              "sd1.5/AOM3A1.safetensors",
              "sd1.5/CounterfeitV30_v30.safetensors",
              "sd1.5/Deliberate_v3.safetensors",
              "sd1.5/Deliberate_v4-inpainting.safetensors",
              "sd1.5/ProteusV0.4.safetensors",
              "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
              "sd1.5/allInOnePixelModel_v1.ckpt",
              "sd1.5/analogDiffusion_10Safetensors.safetensors",
              "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
              "sd1.5/anythingV3_fp16.ckpt",
              "sd1.5/arcaneDiffusion_v3.ckpt",
              "sd1.5/archer-v1.ckpt",
              "sd1.5/cardosAnime_v10.safetensors",
              "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
              "sd1.5/classicAnim-v1.ckpt",
              "sd1.5/comic-diffusion-V2.ckpt",
              "sd1.5/complexLineart_v1.ckpt",
              "sd1.5/ddosmix_V2.safetensors",
              "sd1.5/deepSpaceDiffusion_v1.ckpt",
              "sd1.5/deliberate_v2.safetensors",
              "sd1.5/dosmix_.safetensors",
              "sd1.5/dreamshaper_631BakedVae.safetensors",
              "sd1.5/dreamshaper_8.safetensors",
              "sd1.5/eldenRingStyle_v3.ckpt",
              "sd1.5/elldrethsLucidMix_v10.safetensors",
              "sd1.5/elldrethsOG4060Mix_v10.ckpt",
              "sd1.5/elldrethsRetroMix_v10.safetensors",
              "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
              "sd1.5/f222_v1.ckpt",
              "sd1.5/helloyoung25d_V10f.safetensors",
              "sd1.5/inkpunkDiffusion_v2.ckpt",
              "sd1.5/instruct-pix2pix-00-22000.ckpt",
              "sd1.5/juggernaut_reborn.safetensors",
              "sd1.5/landscapeAnimePro_v20W768.safetensors",
              "sd1.5/meinamix_meinaV10.safetensors",
              "sd1.5/meinamix_meinaV11.safetensors",
              "sd1.5/microworlds_v1.ckpt",
              "sd1.5/midjourneyPapercut_v1.ckpt",
              "sd1.5/model.ckpt",
              "sd1.5/modelshootStyle_modelshoot10.ckpt",
              "sd1.5/modernDisney_v1.ckpt",
              "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
              "sd1.5/openjourney_V4.ckpt",
              "sd1.5/papercut_v1.ckpt",
              "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
              "sd1.5/perfectWorld_v6Baked.safetensors",
              "sd1.5/photonLCM_v10.safetensors",
              "sd1.5/photon_v1.safetensors",
              "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
              "sd1.5/portrait_10.ckpt",
              "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
              "sd1.5/realdosmix_.safetensors",
              "sd1.5/realisticVisionV13_v13.safetensors",
              "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
              "sd1.5/redshiftDiffusion_v1.ckpt",
              "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
              "sd1.5/rpg_V4.safetensors",
              "sd1.5/samdoesartV3_v3.ckpt",
              "sd1.5/samdoesartsUltmerge_v1.ckpt",
              "sd1.5/samdoessexyBlend_safetensor.safetensors",
              "sd1.5/sd-v1-5-inpainting.ckpt",
              "sd1.5/superhero-diffusion.ckpt",
              "sd1.5/supermixPreLineart_v1.safetensors",
              "sd1.5/svd.safetensors",
              "sd1.5/synthwavepunk_v2.ckpt",
              "sd1.5/theAllysMix_v10Safetensors.safetensors",
              "sd1.5/toonAme_version10.safetensors",
              "sd1.5/v1-5-pruned-emaonly.ckpt",
              "sd1.5/v1-5-pruned-emaonly.safetensors",
              "sd1.5/v1-5-pruned.ckpt",
              "sd1.5/v2-1_512-ema-pruned.safetensors",
              "sd1.5/v2-1_768-ema-pruned.safetensors",
              "sd1.5/vintedois-diffusion-v0-2.safetensors",
              "sd1.5/vinteprotogenmix_V20.safetensors",
              "sd1.5/waifuDiffusion_v13Fp32.ckpt",
              "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
              "sdxl/albedobaseXL_v21.safetensors",
              "sdxl/cosxl.safetensors",
              "sdxl/juggernautXL_v8Rundiffusion.safetensors",
              "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
              "sdxl/juggernautXL_version6Rundiffusion.safetensors",
              "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
              "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
              "sdxl/sd_xl_base_1.0.safetensors",
              "sdxl/sd_xl_refiner_1.0.safetensors",
              "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
              "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
              "stable_cascade/stable_cascade_stage_b.safetensors",
              "stable_cascade/stable_cascade_stage_c.safetensors",
              "stable_cascade/stage_b_bf16.safetensors",
              "stable_cascade/stage_c_bf16.safetensors",
              "supir/SUPIR-v0F.ckpt",
              "supir/SUPIR-v0Q.ckpt"
            ],
            "vae_name": [
              "Baked-VAE",
              "BerrysMix.vae.safetensors",
              "kl-f8-anime2.ckpt",
              "sdxl_vae.safetensors",
              "stage_a.safetensors",
              "vae-ft-mse-840000-ema-pruned.ckpt"
            ],
            "clip_skip": {
              "min": -24,
              "max": -1,
              "step": 1
            },
            "lora_name": [
              "None",
              "CLAYMATE_V2.03_.safetensors",
              "DD-made-of-clay-XL-v2.safetensors",
              "Hyper-SD15-12steps-CFG-lora.safetensors",
              "Hyper-SD15-8steps-lora.safetensors",
              "Hyper-SDXL-8steps-lora.safetensors",
              "InstantPhotoX3.safetensors",
              "JuggerCineXL2.safetensors",
              "LCMTurboMix_Euler_A_fix.safetensors",
              "YaeMiko_Test.safetensors",
              "add_detail.safetensors",
              "animemix_v3_offset.safetensors",
              "charsheet.safetensors",
              "ec.safetensors",
              "epiNoiseoffset_v2.safetensors",
              "ghibli_style_offset.safetensors",
              "hipoly_3dcg_v7-epoch-000012.safetensors",
              "howlbgsv3.safetensors",
              "ip-adapter-faceid-plus_sd15_lora.safetensors",
              "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
              "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
              "ip-adapter-faceid_sd15_lora.safetensors",
              "ip-adapter-faceid_sdxl_lora.safetensors",
              "jirai_v2.safetensors",
              "leosamHelloworldTurbo_20TurboLCM.safetensors",
              "more_details.safetensors",
              "mouth_slider_v1.safetensors",
              "pytorch_lora_weights.safetensors",
              "room.safetensors",
              "sd15_lora_beta.safetensors",
              "sdxl_lightning_4step_lora.safetensors",
              "shirt_tug.safetensors",
              "theovercomer8sContrastFix_sd15.safetensors",
              "v2_lora_ZoomIn.ckpt",
              "v2_lora_ZoomOut.ckpt",
              "v3_sd15_mm.ckpt",
              "vtuber-poses-05.safetensors",
              "xl_more_art-full_v1.safetensors",
              "zoom_slider_v1.safetensors"
            ],
            "lora_model_strength": {
              "min": -4,
              "max": 4,
              "step": 0.01
            },
            "lora_clip_strength": {
              "min": -4,
              "max": 4,
              "step": 0.01
            },
            "positive": [],
            "negative": []
          }
        ]
      }
    },
    "output": [
      "PIPE_LINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "pipe"
    ],
    "name": "easy XYPlot",
    "display_name": "XY Plot",
    "description": "",
    "category": "EasyUse/Pipe",
    "output_node": false
  },
  "easy XYPlotAdvanced": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "grid_spacing": [
          "INT",
          {
            "min": 0,
            "max": 500,
            "step": 5,
            "default": 0
          }
        ],
        "output_individuals": [
          [
            "False",
            "True"
          ],
          {
            "default": "False"
          }
        ],
        "flip_xy": [
          [
            "False",
            "True"
          ],
          {
            "default": "False"
          }
        ]
      },
      "optional": {
        "X": [
          "X_Y"
        ],
        "Y": [
          "X_Y"
        ]
      },
      "hidden": {
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "pipe"
    ],
    "name": "easy XYPlotAdvanced",
    "display_name": "XY Plot Advanced",
    "description": "",
    "category": "EasyUse/Pipe",
    "output_node": false
  },
  "easy XYInputs: Seeds++ Batch": {
    "input": {
      "required": {
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 50
          }
        ]
      }
    },
    "output": [
      "X_Y"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "easy XYInputs: Seeds++ Batch",
    "display_name": "XY Inputs: Seeds++ Batch //EasyUse",
    "description": "",
    "category": "EasyUse/XY Inputs",
    "output_node": false
  },
  "easy XYInputs: Steps": {
    "input": {
      "required": {
        "target_parameter": [
          [
            "steps",
            "start_at_step",
            "end_at_step"
          ]
        ],
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_step": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 10000
          }
        ],
        "last_step": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "first_start_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "last_start_step": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 10000
          }
        ],
        "first_end_step": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 10000
          }
        ],
        "last_end_step": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "X_Y"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "easy XYInputs: Steps",
    "display_name": "XY Inputs: Steps //EasyUse",
    "description": "",
    "category": "EasyUse/XY Inputs",
    "output_node": false
  },
  "easy XYInputs: CFG Scale": {
    "input": {
      "required": {
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_cfg": [
          "FLOAT",
          {
            "default": 7,
            "min": 0,
            "max": 100
          }
        ],
        "last_cfg": [
          "FLOAT",
          {
            "default": 9,
            "min": 0,
            "max": 100
          }
        ]
      }
    },
    "output": [
      "X_Y"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "easy XYInputs: CFG Scale",
    "display_name": "XY Inputs: CFG Scale //EasyUse",
    "description": "",
    "category": "EasyUse/XY Inputs",
    "output_node": false
  },
  "easy XYInputs: Sampler/Scheduler": {
    "input": {
      "required": {
        "target_parameter": [
          [
            "sampler",
            "scheduler",
            "sampler & scheduler"
          ]
        ],
        "input_count": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 30,
            "step": 1
          }
        ],
        "sampler_1": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_1": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_2": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_2": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_3": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_3": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_4": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_4": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_5": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_5": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_6": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_6": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_7": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_7": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_8": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_8": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_9": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_9": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_10": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_10": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_11": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_11": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_12": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_12": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_13": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_13": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_14": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_14": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_15": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_15": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_16": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_16": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_17": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_17": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_18": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_18": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_19": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_19": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_20": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_20": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_21": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_21": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_22": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_22": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_23": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_23": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_24": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_24": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_25": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_25": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_26": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_26": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_27": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_27": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_28": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_28": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_29": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_29": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_30": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_30": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ]
      }
    },
    "output": [
      "X_Y"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "easy XYInputs: Sampler/Scheduler",
    "display_name": "XY Inputs: Sampler/Scheduler //EasyUse",
    "description": "",
    "category": "EasyUse/XY Inputs",
    "output_node": false
  },
  "easy XYInputs: Denoise": {
    "input": {
      "required": {
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.1
          }
        ],
        "last_denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "X_Y"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "easy XYInputs: Denoise",
    "display_name": "XY Inputs: Denoise //EasyUse",
    "description": "",
    "category": "EasyUse/XY Inputs",
    "output_node": false
  },
  "easy XYInputs: Checkpoint": {
    "input": {
      "required": {
        "input_mode": [
          [
            "Ckpt Names",
            "Ckpt Names+ClipSkip",
            "Ckpt Names+ClipSkip+VAE"
          ]
        ],
        "ckpt_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 10,
            "step": 1
          }
        ],
        "ckpt_name_1": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_1": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_1": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_2": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_2": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_2": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_3": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_3": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_3": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_4": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_4": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_4": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_5": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_5": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_5": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_6": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_6": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_6": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_7": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_7": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_7": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_8": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_8": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_8": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_9": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_9": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_9": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "ckpt_name_10": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "clip_skip_10": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_10": [
          [
            "Baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ]
      },
      "optional": {
        "optional_lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "X_Y"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "easy XYInputs: Checkpoint",
    "display_name": "XY Inputs: Checkpoint //EasyUse",
    "description": "",
    "category": "EasyUse/XY Inputs",
    "output_node": false
  },
  "easy XYInputs: Lora": {
    "input": {
      "required": {
        "input_mode": [
          [
            "Lora Names",
            "Lora Names+Weights"
          ]
        ],
        "lora_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 10,
            "step": 1
          }
        ],
        "model_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_1": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_1": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_1": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_2": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_2": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_2": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_3": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_3": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_3": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_4": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_4": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_4": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_5": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_5": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_5": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_6": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_6": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_6": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_7": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_7": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_7": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_8": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_8": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_8": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_9": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_9": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_9": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_10": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "model_str_10": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_10": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "optional_lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "X_Y"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "easy XYInputs: Lora",
    "display_name": "XY Inputs: Lora //EasyUse",
    "description": "",
    "category": "EasyUse/XY Inputs",
    "output_node": false
  },
  "easy XYInputs: ModelMergeBlocks": {
    "input": {
      "required": {
        "ckpt_name_1": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "ckpt_name_2": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "vae_use": [
          [
            "Use Model 1",
            "Use Model 2",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ],
          {
            "default": "Use Model 1"
          }
        ],
        "preset": [
          [
            "Preset",
            "MMB-ALL:1,1,1",
            "MMB-IN:1,0,0",
            "MMB-MID:0,1,0",
            "MMB-OUT:0,0,1",
            "MMB-INMID:1,1,0",
            "MMB-INOUT:1,0,1",
            "MMB-MIDOUT:0,1,1",
            "MMB-NONE:0,0,0",
            "@MMBN-FULL-TEST:27"
          ],
          {
            "default": "preset"
          }
        ],
        "values": [
          "STRING",
          {
            "default": "1,0,0; \n0,1,0; \n0,0,1; \n1,1,0; \n1,0,1; \n0,1,1; ",
            "multiline": true,
            "placeholder": "Support 2 methods:\n\n1.input, middle, out in same line and insert values seperated by \"; \"\n\n2.model merge block number seperated by \", \" in same line and insert values seperated by \"; \""
          }
        ]
      },
      "hidden": {
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "X_Y"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "easy XYInputs: ModelMergeBlocks",
    "display_name": "XY Inputs: ModelMergeBlocks //EasyUse",
    "description": "",
    "category": "EasyUse/XY Inputs",
    "output_node": false
  },
  "easy XYInputs: PromptSR": {
    "input": {
      "required": {
        "target_prompt": [
          [
            "positive",
            "negative"
          ]
        ],
        "search_txt": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_all_text": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "replace_count": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 29
          }
        ],
        "replace_1": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_1"
          }
        ],
        "replace_2": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_2"
          }
        ],
        "replace_3": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_3"
          }
        ],
        "replace_4": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_4"
          }
        ],
        "replace_5": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_5"
          }
        ],
        "replace_6": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_6"
          }
        ],
        "replace_7": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_7"
          }
        ],
        "replace_8": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_8"
          }
        ],
        "replace_9": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_9"
          }
        ],
        "replace_10": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_10"
          }
        ],
        "replace_11": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_11"
          }
        ],
        "replace_12": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_12"
          }
        ],
        "replace_13": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_13"
          }
        ],
        "replace_14": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_14"
          }
        ],
        "replace_15": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_15"
          }
        ],
        "replace_16": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_16"
          }
        ],
        "replace_17": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_17"
          }
        ],
        "replace_18": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_18"
          }
        ],
        "replace_19": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_19"
          }
        ],
        "replace_20": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_20"
          }
        ],
        "replace_21": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_21"
          }
        ],
        "replace_22": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_22"
          }
        ],
        "replace_23": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_23"
          }
        ],
        "replace_24": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_24"
          }
        ],
        "replace_25": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_25"
          }
        ],
        "replace_26": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_26"
          }
        ],
        "replace_27": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_27"
          }
        ],
        "replace_28": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_28"
          }
        ],
        "replace_29": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "placeholder": "replace_29"
          }
        ]
      }
    },
    "output": [
      "X_Y"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "easy XYInputs: PromptSR",
    "display_name": "XY Inputs: PromptSR //EasyUse",
    "description": "",
    "category": "EasyUse/XY Inputs",
    "output_node": false
  },
  "easy XYInputs: ControlNet": {
    "input": {
      "required": {
        "control_net_name": [
          [
            "SD1.5/animatediff/v3_sd15_sparsectrl_rgb.ckpt",
            "canny.safetensors",
            "control-lora-canny-rank256.safetensors",
            "control-lora-depth-rank256.safetensors",
            "control-lora-sketch-rank256.safetensors",
            "control_v11e_sd15_ip2p.pth",
            "control_v11f1e_sd15_tile.safetensors",
            "control_v11f1p_sd15_depth.pth",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny.pth",
            "control_v11p_sd15_lineart.pth",
            "control_v11p_sd15_openpose.pth",
            "control_v11p_sd15_seg.pth",
            "control_v1p_sd15_qrcode_monster.safetensors",
            "controlnet-canny-sdxl-1.0-mid.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusion_pytorch_model.fp16.safetensors",
            "mistoLine_fp16.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_softedge.safetensors"
          ]
        ],
        "image": [
          "IMAGE"
        ],
        "target_parameter": [
          [
            "strength",
            "start_percent",
            "end_percent"
          ]
        ],
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 30
          }
        ],
        "first_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "last_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "first_start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "last_start_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "first_end_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "last_end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "X_Y"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "easy XYInputs: ControlNet",
    "display_name": "XY Inputs: Controlnet //EasyUse",
    "description": "",
    "category": "EasyUse/XY Inputs",
    "output_node": false
  },
  "easy XYInputs: PositiveCond": {
    "input": {
      "optional": {
        "positive_1": [
          "CONDITIONING"
        ],
        "positive_2": [
          "CONDITIONING"
        ],
        "positive_3": [
          "CONDITIONING"
        ],
        "positive_4": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "X_Y"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "easy XYInputs: PositiveCond",
    "display_name": "XY Inputs: PosCond //EasyUse",
    "description": "",
    "category": "EasyUse/XY Inputs",
    "output_node": false
  },
  "easy XYInputs: PositiveCondList": {
    "input": {
      "required": {
        "positive": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "X_Y"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "easy XYInputs: PositiveCondList",
    "display_name": "XY Inputs: PosCondList //EasyUse",
    "description": "",
    "category": "EasyUse/XY Inputs",
    "output_node": false
  },
  "easy XYInputs: NegativeCond": {
    "input": {
      "optional": {
        "negative_1": "CONDITIONING",
        "negative_2": "CONDITIONING",
        "negative_3": "CONDITIONING",
        "negative_4": "CONDITIONING"
      }
    },
    "output": [
      "X_Y"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "easy XYInputs: NegativeCond",
    "display_name": "XY Inputs: NegCond //EasyUse",
    "description": "",
    "category": "EasyUse/XY Inputs",
    "output_node": false
  },
  "easy XYInputs: NegativeCondList": {
    "input": {
      "required": {
        "negative": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "X_Y"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "easy XYInputs: NegativeCondList",
    "display_name": "XY Inputs: NegCondList //EasyUse",
    "description": "",
    "category": "EasyUse/XY Inputs",
    "output_node": false
  },
  "easy showSpentTime": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "spent_time": [
          "INFO",
          {
            "default": "Time will be displayed when reasoning is complete",
            "forceInput": false
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "easy showSpentTime",
    "display_name": "Show Spent Time",
    "description": "",
    "category": "EasyUse/Util",
    "output_node": true
  },
  "easy showLoaderSettingsNames": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "names": [
          "INFO",
          {
            "default": "",
            "forceInput": false
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "ckpt_name",
      "vae_name",
      "lora_name"
    ],
    "name": "easy showLoaderSettingsNames",
    "display_name": "Show Loader Settings Names",
    "description": "",
    "category": "EasyUse/Util",
    "output_node": true
  },
  "dynamicThresholdingFull": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "mimic_scale": [
          "FLOAT",
          {
            "default": 7,
            "min": 0,
            "max": 100,
            "step": 0.5
          }
        ],
        "threshold_percentile": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "mimic_mode": [
          [
            "Constant",
            "Linear Down",
            "Cosine Down",
            "Half Cosine Down",
            "Linear Up",
            "Cosine Up",
            "Half Cosine Up",
            "Power Up",
            "Power Down",
            "Linear Repeating",
            "Cosine Repeating",
            "Sawtooth"
          ]
        ],
        "mimic_scale_min": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.5
          }
        ],
        "cfg_mode": [
          [
            "Constant",
            "Linear Down",
            "Cosine Down",
            "Half Cosine Down",
            "Linear Up",
            "Cosine Up",
            "Half Cosine Up",
            "Power Up",
            "Power Down",
            "Linear Repeating",
            "Cosine Repeating",
            "Sawtooth"
          ]
        ],
        "cfg_scale_min": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.5
          }
        ],
        "sched_val": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01
          }
        ],
        "separate_feature_channels": [
          [
            "enable",
            "disable"
          ]
        ],
        "scaling_startpoint": [
          [
            "MEAN",
            "ZERO"
          ]
        ],
        "variability_measure": [
          [
            "AD",
            "STD"
          ]
        ],
        "interpolate_phi": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "dynamicThresholdingFull",
    "display_name": "DynamicThresholdingFull",
    "description": "",
    "category": "EasyUse/PreSampling",
    "output_node": false
  },
  "easy stableDiffusion3API": {
    "input": {
      "required": {
        "positive": [
          "STRING",
          {
            "default": "",
            "placeholder": "Positive",
            "multiline": true
          }
        ],
        "negative": [
          "STRING",
          {
            "default": "",
            "placeholder": "Negative",
            "multiline": true
          }
        ],
        "model": [
          [
            "sd3",
            "sd3-turbo"
          ]
        ],
        "aspect_ratio": [
          [
            "16:9",
            "1:1",
            "21:9",
            "2:3",
            "3:2",
            "4:5",
            "5:4",
            "9:16",
            "9:21"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4294967294
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1
          }
        ]
      },
      "optional": {
        "optional_image": [
          "IMAGE"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "easy stableDiffusion3API",
    "display_name": "Stable Diffusion 3 (API)",
    "description": "",
    "category": "EasyUse/API",
    "output_node": false
  },
  "easy ckptNames": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": [
      "ckpt_name"
    ],
    "name": "easy ckptNames",
    "display_name": "Ckpt Names",
    "description": "",
    "category": "EasyUse/Util",
    "output_node": false
  },
  "easy controlnetNames": {
    "input": {
      "required": {
        "controlnet_name": [
          [
            "SD1.5/animatediff/v3_sd15_sparsectrl_rgb.ckpt",
            "canny.safetensors",
            "control-lora-canny-rank256.safetensors",
            "control-lora-depth-rank256.safetensors",
            "control-lora-sketch-rank256.safetensors",
            "control_v11e_sd15_ip2p.pth",
            "control_v11f1e_sd15_tile.safetensors",
            "control_v11f1p_sd15_depth.pth",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny.pth",
            "control_v11p_sd15_lineart.pth",
            "control_v11p_sd15_openpose.pth",
            "control_v11p_sd15_seg.pth",
            "control_v1p_sd15_qrcode_monster.safetensors",
            "controlnet-canny-sdxl-1.0-mid.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusion_pytorch_model.fp16.safetensors",
            "mistoLine_fp16.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_softedge.safetensors"
          ]
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": [
      "controlnet_name"
    ],
    "name": "easy controlnetNames",
    "display_name": "ControlNet Names",
    "description": "",
    "category": "EasyUse/Util",
    "output_node": false
  },
  "easy imageInsetCrop": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "measurement": [
          [
            "Pixels",
            "Percentage"
          ]
        ],
        "left": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "right": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "top": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "bottom": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "easy imageInsetCrop",
    "display_name": "ImageInsetCrop",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": false
  },
  "easy imageCount": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "count"
    ],
    "name": "easy imageCount",
    "display_name": "ImageCount",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": false
  },
  "easy imageSize": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "width_int",
      "height_int"
    ],
    "name": "easy imageSize",
    "display_name": "ImageSize",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": true
  },
  "easy imageSizeBySide": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "side": [
          [
            "Longest",
            "Shortest"
          ]
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "resolution"
    ],
    "name": "easy imageSizeBySide",
    "display_name": "ImageSize (Side)",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": true
  },
  "easy imageSizeByLongerSide": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "resolution"
    ],
    "name": "easy imageSizeByLongerSide",
    "display_name": "ImageSize (LongerSide)",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": true
  },
  "easy imagePixelPerfect": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "resize_mode": [
          [
            "Just Resize",
            "Crop and Resize",
            "Resize and Fill"
          ],
          {
            "default": "Just Resize"
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "resolution"
    ],
    "name": "easy imagePixelPerfect",
    "display_name": "ImagePixelPerfect",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": true
  },
  "easy imageScaleDown": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "easy imageScaleDown",
    "display_name": "Image Scale Down",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": false
  },
  "easy imageScaleDownBy": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "scale_by": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.01,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "easy imageScaleDownBy",
    "display_name": "Image Scale Down By",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": false
  },
  "easy imageScaleDownToSize": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "size": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "max",
            "label_off": "min"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "easy imageScaleDownToSize",
    "display_name": "Image Scale Down To Size",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": false
  },
  "easy imageRatio": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "FLOAT",
      "FLOAT"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "width_ratio_int",
      "height_ratio_int",
      "width_ratio_float",
      "height_ratio_float"
    ],
    "name": "easy imageRatio",
    "display_name": "ImageRatio",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": true
  },
  "easy imageToMask": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "channel": [
          [
            "red",
            "green",
            "blue"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "easy imageToMask",
    "display_name": "ImageToMask",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": false
  },
  "easy imageConcat": {
    "input": {
      "required": {
        "image1": [
          "IMAGE"
        ],
        "image2": [
          "IMAGE"
        ],
        "direction": [
          [
            "right",
            "down",
            "left",
            "up"
          ],
          {
            "default": "right"
          }
        ],
        "match_image_size": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "easy imageConcat",
    "display_name": "imageConcat",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": false
  },
  "easy imageSplitList": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "images",
      "images",
      "images"
    ],
    "name": "easy imageSplitList",
    "display_name": "imageSplitList",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": false
  },
  "easy imageSplitGrid": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "row": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ],
        "column": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "easy imageSplitGrid",
    "display_name": "imageSplitGrid",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": false
  },
  "easy imagesSplitImage": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "image1",
      "image2",
      "image3",
      "image4",
      "image5"
    ],
    "name": "easy imagesSplitImage",
    "display_name": "imagesSplitImage",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": false
  },
  "easy imageCropFromMask": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "image_crop_multi": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "mask_crop_multi": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "bbox_smooth_alpha": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "BBOX"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "crop_image",
      "crop_mask",
      "bbox"
    ],
    "name": "easy imageCropFromMask",
    "display_name": "imageCropFromMask",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": false
  },
  "easy imageUncropFromBBOX": {
    "input": {
      "required": {
        "original_image": [
          "IMAGE"
        ],
        "crop_image": [
          "IMAGE"
        ],
        "bbox": [
          "BBOX"
        ],
        "border_blending": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "use_square_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      },
      "optional": {
        "optional_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "easy imageUncropFromBBOX",
    "display_name": "imageUncropFromBBOX",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": false
  },
  "easy imageSave": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ],
        "only_preview": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "easy imageSave",
    "display_name": "SaveImage (Simple)",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": true
  },
  "easy imageRemBg": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "rem_mode": [
          [
            "RMBG-1.4"
          ]
        ],
        "image_output": [
          [
            "Hide",
            "Preview",
            "Save",
            "Hide/Save"
          ],
          {
            "default": "Preview"
          }
        ],
        "save_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "mask"
    ],
    "name": "easy imageRemBg",
    "display_name": "Image Remove Bg",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": true
  },
  "easy imageChooser": {
    "input": {
      "required": {
        "mode": [
          [
            "Always Pause",
            "Keep Last Selection"
          ],
          {
            "default": "Always Pause"
          }
        ]
      },
      "optional": {
        "images": [
          "IMAGE"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "my_unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "easy imageChooser",
    "display_name": "Image Chooser",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": true
  },
  "easy imageColorMatch": {
    "input": {
      "required": {
        "image_ref": [
          "IMAGE"
        ],
        "image_target": [
          "IMAGE"
        ],
        "method": [
          [
            "wavelet",
            "adain",
            "mkl",
            "hm",
            "reinhard",
            "mvgd",
            "hm-mvgd-hm",
            "hm-mkl-hm"
          ]
        ],
        "image_output": [
          [
            "Hide",
            "Preview",
            "Save",
            "Hide/Save"
          ],
          {
            "default": "Preview"
          }
        ],
        "save_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "easy imageColorMatch",
    "display_name": "Image Color Match",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": true
  },
  "easy imageDetailTransfer": {
    "input": {
      "required": {
        "target": [
          "IMAGE"
        ],
        "source": [
          "IMAGE"
        ],
        "mode": [
          [
            "add",
            "multiply",
            "screen",
            "overlay",
            "soft_light",
            "hard_light",
            "color_dodge",
            "color_burn",
            "difference",
            "exclusion",
            "divide"
          ],
          {
            "default": "add"
          }
        ],
        "blur_sigma": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 100,
            "step": 0.01
          }
        ],
        "blend_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.001,
            "round": 0.001
          }
        ],
        "image_output": [
          [
            "Hide",
            "Preview",
            "Save",
            "Hide/Save"
          ],
          {
            "default": "Preview"
          }
        ],
        "save_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "easy imageDetailTransfer",
    "display_name": "Image Detail Transfer",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": true
  },
  "easy imageInterrogator": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mode": [
          [
            "fast",
            "classic",
            "best",
            "negative"
          ]
        ],
        "use_lowvram": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [true],
    "output_name": [
      "prompt"
    ],
    "name": "easy imageInterrogator",
    "display_name": "Image To Prompt",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": true
  },
  "easy loadImageBase64": {
    "input": {
      "required": {
        "base64_data": [
          "STRING",
          {
            "default": ""
          }
        ],
        "image_output": [
          [
            "Hide",
            "Preview",
            "Save",
            "Hide/Save"
          ],
          {
            "default": "Preview"
          }
        ],
        "save_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "optional": {

      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "easy loadImageBase64",
    "display_name": "Load Image (Base64)",
    "description": "",
    "category": "EasyUse/Image/LoadImage",
    "output_node": true
  },
  "easy imageToBase64": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "easy imageToBase64",
    "display_name": "Image To Base64",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": true
  },
  "easy joinImageBatch": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "mode": [
          [
            "horizontal",
            "vertical"
          ],
          {
            "default": "horizontal"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "easy joinImageBatch",
    "display_name": "JoinImageBatch",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": false
  },
  "easy humanSegmentation": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "method": [
          [
            "selfie_multiclass_256x256",
            "human_parsing_lip"
          ]
        ],
        "confidence": [
          "FLOAT",
          {
            "default": 0.4,
            "min": 0.05,
            "max": 0.95,
            "step": 0.01
          }
        ],
        "crop_multi": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "BBOX"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "image",
      "mask",
      "bbox"
    ],
    "name": "easy humanSegmentation",
    "display_name": "Human Segmentation",
    "description": "",
    "category": "EasyUse/Segmentation",
    "output_node": false
  },
  "easy removeLocalImage": {
    "input": {
      "required": {
        "any": [
          "*"
        ],
        "file_name": [
          "STRING",
          {
            "default": ""
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "easy removeLocalImage",
    "display_name": "Remove Local Image",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": true
  },
  "easy poseEditor": {
    "input": {
      "required": {
        "image": [
          []
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "easy poseEditor",
    "display_name": "PoseEditor",
    "description": "",
    "category": "EasyUse/Image",
    "output_node": false
  },
  "easy string": {
    "input": {
      "required": {
        "value": [
          "STRING",
          {
            "default": ""
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "string"
    ],
    "name": "easy string",
    "display_name": "String",
    "description": "",
    "category": "EasyUse/Logic/Type",
    "output_node": false
  },
  "easy int": {
    "input": {
      "required": {
        "value": [
          "INT",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "int"
    ],
    "name": "easy int",
    "display_name": "Int",
    "description": "",
    "category": "EasyUse/Logic/Type",
    "output_node": false
  },
  "easy rangeInt": {
    "input": {
      "required": {
        "range_mode": [
          [
            "step",
            "num_steps"
          ],
          {
            "default": "step"
          }
        ],
        "start": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096,
            "step": 1
          }
        ],
        "stop": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096,
            "step": 1
          }
        ],
        "step": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096,
            "step": 1
          }
        ],
        "num_steps": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096,
            "step": 1
          }
        ],
        "end_mode": [
          [
            "Inclusive",
            "Exclusive"
          ],
          {
            "default": "Inclusive"
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [true, true],
    "output_name": [
      "range",
      "range_sizes"
    ],
    "name": "easy rangeInt",
    "display_name": "Range(Int)",
    "description": "",
    "category": "EasyUse/Logic/Type",
    "output_node": false
  },
  "easy float": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "float"
    ],
    "name": "easy float",
    "display_name": "Float",
    "description": "",
    "category": "EasyUse/Logic/Type",
    "output_node": false
  },
  "easy rangeFloat": {
    "input": {
      "required": {
        "range_mode": [
          [
            "step",
            "num_steps"
          ],
          {
            "default": "step"
          }
        ],
        "start": [
          "FLOAT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096,
            "step": 0.1
          }
        ],
        "stop": [
          "FLOAT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096,
            "step": 0.1
          }
        ],
        "step": [
          "FLOAT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096,
            "step": 0.1
          }
        ],
        "num_steps": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096,
            "step": 1
          }
        ],
        "end_mode": [
          [
            "Inclusive",
            "Exclusive"
          ],
          {
            "default": "Inclusive"
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT"
    ],
    "output_is_list": [true, true],
    "output_name": [
      "range",
      "range_sizes"
    ],
    "name": "easy rangeFloat",
    "display_name": "Range(Float)",
    "description": "",
    "category": "EasyUse/Logic/Type",
    "output_node": false
  },
  "easy boolean": {
    "input": {
      "required": {
        "value": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [false],
    "output_name": [
      "boolean"
    ],
    "name": "easy boolean",
    "display_name": "Boolean",
    "description": "",
    "category": "EasyUse/Logic/Type",
    "output_node": false
  },
  "easy compare": {
    "input": {
      "required": {
        "a": [
          "*",
          {
            "default": 0
          }
        ],
        "b": [
          "*",
          {
            "default": 0
          }
        ],
        "comparison": [
          [
            "a == b",
            "a != b",
            "a \u003C b",
            "a \u003E b",
            "a \u003C= b",
            "a \u003E= b"
          ],
          {
            "default": "a == b"
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [false],
    "output_name": [
      "boolean"
    ],
    "name": "easy compare",
    "display_name": "Compare",
    "description": "",
    "category": "EasyUse/Logic/Math",
    "output_node": false
  },
  "easy imageSwitch": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "easy imageSwitch",
    "display_name": "Image Switch",
    "description": "",
    "category": "EasyUse/Logic/Switch",
    "output_node": false
  },
  "easy textSwitch": {
    "input": {
      "required": {
        "input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 2
          }
        ]
      },
      "optional": {
        "text1": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text2": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "easy textSwitch",
    "display_name": "Text Switch",
    "description": "",
    "category": "EasyUse/Logic/Switch",
    "output_node": false
  },
  "easy if": {
    "input": {
      "required": {
        "any": [
          "*"
        ],
        "if": [
          "*"
        ],
        "else": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": [
      "?"
    ],
    "name": "easy if",
    "display_name": "If",
    "description": "",
    "category": "EasyUse/Logic/Math",
    "output_node": false
  },
  "easy isSDXL": {
    "input": {
      "required": {

      },
      "optional": {
        "optional_pipe": [
          "PIPE_LINE"
        ],
        "optional_clip": [
          "CLIP"
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [false],
    "output_name": [
      "boolean"
    ],
    "name": "easy isSDXL",
    "display_name": "Is SDXL",
    "description": "",
    "category": "EasyUse/Logic",
    "output_node": false
  },
  "easy xyAny": {
    "input": {
      "required": {
        "X": [
          "*",
          {

          }
        ],
        "Y": [
          "*",
          {

          }
        ],
        "direction": [
          [
            "horizontal",
            "vertical"
          ],
          {
            "default": "horizontal"
          }
        ]
      }
    },
    "output": [
      "*",
      "*"
    ],
    "output_is_list": [true, true],
    "output_name": [
      "X",
      "Y"
    ],
    "name": "easy xyAny",
    "display_name": "XYAny",
    "description": "",
    "category": "EasyUse/Logic",
    "output_node": false
  },
  "easy convertAnything": {
    "input": {
      "required": {
        "anything": [
          "*"
        ],
        "output_type": [
          [
            "string",
            "int",
            "float",
            "boolean"
          ],
          {
            "default": "string"
          }
        ]
      }
    },
    "output": [
      [
        "*"
      ]
    ],
    "output_is_list": [false],
    "output_name": [
      "*"
    ],
    "name": "easy convertAnything",
    "display_name": "Convert Any",
    "description": "",
    "category": "EasyUse/Logic",
    "output_node": true
  },
  "easy showAnything": {
    "input": {
      "required": {

      },
      "optional": {
        "anything": [
          "*",
          {

          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "easy showAnything",
    "display_name": "Show Any",
    "description": "",
    "category": "EasyUse/Logic",
    "output_node": true
  },
  "easy showTensorShape": {
    "input": {
      "required": {
        "tensor": [
          "*"
        ]
      },
      "optional": {

      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "easy showTensorShape",
    "display_name": "Show Tensor Shape",
    "description": "",
    "category": "EasyUse/Logic",
    "output_node": true
  },
  "easy clearCacheKey": {
    "input": {
      "required": {
        "anything": [
          "*",
          {

          }
        ],
        "cache_key": [
          "STRING",
          {
            "default": "*"
          }
        ]
      },
      "optional": {

      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "easy clearCacheKey",
    "display_name": "Clear Cache Key",
    "description": "",
    "category": "EasyUse/Logic",
    "output_node": true
  },
  "easy clearCacheAll": {
    "input": {
      "required": {
        "anything": [
          "*",
          {

          }
        ]
      },
      "optional": {

      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "easy clearCacheAll",
    "display_name": "Clear Cache All",
    "description": "",
    "category": "EasyUse/Logic",
    "output_node": true
  },
  "easy cleanGpuUsed": {
    "input": {
      "required": {
        "anything": [
          "*",
          {

          }
        ]
      },
      "optional": {

      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "easy cleanGpuUsed",
    "display_name": "Clean GPU Used",
    "description": "",
    "category": "EasyUse/Logic",
    "output_node": true
  },
  "ControlLoraSave": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "control_net": [
          "CONTROL_NET"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "controlnet_loras/ComfyUI_control_lora"
          }
        ],
        "rank": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 1024,
            "step": 8
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ControlLoraSave",
    "display_name": "ControlLoraSave",
    "description": "",
    "category": "stability/controlnet",
    "output_node": true
  },
  "GetImageSize": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "width",
      "height"
    ],
    "name": "GetImageSize",
    "display_name": "GetImageSize",
    "description": "",
    "category": "stability/image",
    "output_node": false
  },
  "TimestepKeyframe": {
    "input": {
      "required": {
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "prev_timestep_kf": [
          "TIMESTEP_KEYFRAME"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "cn_weights": [
          "CONTROL_NET_WEIGHTS"
        ],
        "latent_keyframe": [
          "LATENT_KEYFRAME"
        ],
        "null_latent_kf_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "inherit_missing": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "guarantee_steps": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "mask_optional": [
          "MASK"
        ]
      }
    },
    "output": [
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [false],
    "output_name": [
      "TIMESTEP_KF"
    ],
    "name": "TimestepKeyframe",
    "display_name": "Timestep Keyframe 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes",
    "output_node": false
  },
  "ACN_TimestepKeyframeInterpolation": {
    "input": {
      "required": {
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "strength_start": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "strength_end": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "interpolation": [
          [
            "linear",
            "ease-in",
            "ease-out",
            "ease-in-out"
          ]
        ],
        "intervals": [
          "INT",
          {
            "default": 50,
            "min": 2,
            "max": 100,
            "step": 1
          }
        ]
      },
      "optional": {
        "prev_timestep_kf": [
          "TIMESTEP_KEYFRAME"
        ],
        "cn_weights": [
          "CONTROL_NET_WEIGHTS"
        ],
        "latent_keyframe": [
          "LATENT_KEYFRAME"
        ],
        "null_latent_kf_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "inherit_missing": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "mask_optional": [
          "MASK"
        ],
        "print_keyframes": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [false],
    "output_name": [
      "TIMESTEP_KF"
    ],
    "name": "ACN_TimestepKeyframeInterpolation",
    "display_name": "Timestep Keyframe Interpolation 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes",
    "output_node": false
  },
  "ACN_TimestepKeyframeFromStrengthList": {
    "input": {
      "required": {
        "float_strengths": [
          "FLOAT",
          {
            "default": -1,
            "min": -1,
            "step": 0.001,
            "forceInput": true
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "prev_timestep_kf": [
          "TIMESTEP_KEYFRAME"
        ],
        "cn_weights": [
          "CONTROL_NET_WEIGHTS"
        ],
        "latent_keyframe": [
          "LATENT_KEYFRAME"
        ],
        "null_latent_kf_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "inherit_missing": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "mask_optional": [
          "MASK"
        ],
        "print_keyframes": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [false],
    "output_name": [
      "TIMESTEP_KF"
    ],
    "name": "ACN_TimestepKeyframeFromStrengthList",
    "display_name": "Timestep Keyframe From List 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes",
    "output_node": false
  },
  "LatentKeyframe": {
    "input": {
      "required": {
        "batch_index": [
          "INT",
          {
            "default": 0,
            "min": -9007199254740991,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "prev_latent_kf": [
          "LATENT_KEYFRAME"
        ]
      }
    },
    "output": [
      "LATENT_KEYFRAME"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT_KF"
    ],
    "name": "LatentKeyframe",
    "display_name": "Latent Keyframe 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes",
    "output_node": false
  },
  "LatentKeyframeTiming": {
    "input": {
      "required": {
        "batch_index_from": [
          "INT",
          {
            "default": 0,
            "min": -9007199254740991,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "batch_index_to_excl": [
          "INT",
          {
            "default": 0,
            "min": -9007199254740991,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "strength_from": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "strength_to": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "interpolation": [
          [
            "linear",
            "ease-in",
            "ease-out",
            "ease-in-out"
          ]
        ]
      },
      "optional": {
        "prev_latent_kf": [
          "LATENT_KEYFRAME"
        ],
        "print_keyframes": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "LATENT_KEYFRAME"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT_KF"
    ],
    "name": "LatentKeyframeTiming",
    "display_name": "Latent Keyframe Interpolation 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes",
    "output_node": false
  },
  "LatentKeyframeBatchedGroup": {
    "input": {
      "required": {
        "float_strengths": [
          "FLOAT",
          {
            "default": -1,
            "min": -1,
            "step": 0.001,
            "forceInput": true
          }
        ]
      },
      "optional": {
        "prev_latent_kf": [
          "LATENT_KEYFRAME"
        ],
        "print_keyframes": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "LATENT_KEYFRAME"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT_KF"
    ],
    "name": "LatentKeyframeBatchedGroup",
    "display_name": "Latent Keyframe From List 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes",
    "output_node": false
  },
  "LatentKeyframeGroup": {
    "input": {
      "required": {
        "index_strengths": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ]
      },
      "optional": {
        "prev_latent_kf": [
          "LATENT_KEYFRAME"
        ],
        "latent_optional": [
          "LATENT"
        ],
        "print_keyframes": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "LATENT_KEYFRAME"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT_KF"
    ],
    "name": "LatentKeyframeGroup",
    "display_name": "Latent Keyframe Group 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes",
    "output_node": false
  },
  "ACN_AdvancedControlNetApply": {
    "input": {
      "required": {
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "mask_optional": [
          "MASK"
        ],
        "timestep_kf": [
          "TIMESTEP_KEYFRAME"
        ],
        "latent_kf_override": [
          "LATENT_KEYFRAME"
        ],
        "weights_override": [
          "CONTROL_NET_WEIGHTS"
        ],
        "model_optional": [
          "MODEL"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "MODEL"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "positive",
      "negative",
      "model_opt"
    ],
    "name": "ACN_AdvancedControlNetApply",
    "display_name": "Apply Advanced ControlNet 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝",
    "output_node": false
  },
  "ControlNetLoaderAdvanced": {
    "input": {
      "required": {
        "control_net_name": [
          [
            "SD1.5/animatediff/v3_sd15_sparsectrl_rgb.ckpt",
            "canny.safetensors",
            "control-lora-canny-rank256.safetensors",
            "control-lora-depth-rank256.safetensors",
            "control-lora-sketch-rank256.safetensors",
            "control_v11e_sd15_ip2p.pth",
            "control_v11f1e_sd15_tile.safetensors",
            "control_v11f1p_sd15_depth.pth",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny.pth",
            "control_v11p_sd15_lineart.pth",
            "control_v11p_sd15_openpose.pth",
            "control_v11p_sd15_seg.pth",
            "control_v1p_sd15_qrcode_monster.safetensors",
            "controlnet-canny-sdxl-1.0-mid.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusion_pytorch_model.fp16.safetensors",
            "mistoLine_fp16.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_softedge.safetensors"
          ]
        ]
      },
      "optional": {
        "timestep_keyframe": [
          "TIMESTEP_KEYFRAME"
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "ControlNetLoaderAdvanced",
    "display_name": "Load Advanced ControlNet Model 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝",
    "output_node": false
  },
  "DiffControlNetLoaderAdvanced": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "control_net_name": [
          [
            "SD1.5/animatediff/v3_sd15_sparsectrl_rgb.ckpt",
            "canny.safetensors",
            "control-lora-canny-rank256.safetensors",
            "control-lora-depth-rank256.safetensors",
            "control-lora-sketch-rank256.safetensors",
            "control_v11e_sd15_ip2p.pth",
            "control_v11f1e_sd15_tile.safetensors",
            "control_v11f1p_sd15_depth.pth",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny.pth",
            "control_v11p_sd15_lineart.pth",
            "control_v11p_sd15_openpose.pth",
            "control_v11p_sd15_seg.pth",
            "control_v1p_sd15_qrcode_monster.safetensors",
            "controlnet-canny-sdxl-1.0-mid.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusion_pytorch_model.fp16.safetensors",
            "mistoLine_fp16.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_softedge.safetensors"
          ]
        ]
      },
      "optional": {
        "timestep_keyframe": [
          "TIMESTEP_KEYFRAME"
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "DiffControlNetLoaderAdvanced",
    "display_name": "Load Advanced ControlNet Model (diff) 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝",
    "output_node": false
  },
  "ScaledSoftControlNetWeights": {
    "input": {
      "required": {
        "base_multiplier": [
          "FLOAT",
          {
            "default": 0.825,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "flip_weights": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "uncond_multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "cn_extras": [
          "CN_WEIGHTS_EXTRAS"
        ]
      }
    },
    "output": [
      "CONTROL_NET_WEIGHTS",
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CN_WEIGHTS",
      "TK_SHORTCUT"
    ],
    "name": "ScaledSoftControlNetWeights",
    "display_name": "Scaled Soft Weights 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/weights",
    "output_node": false
  },
  "ScaledSoftMaskedUniversalWeights": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "min_base_multiplier": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "max_base_multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "uncond_multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "cn_extras": [
          "CN_WEIGHTS_EXTRAS"
        ]
      }
    },
    "output": [
      "CONTROL_NET_WEIGHTS",
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CN_WEIGHTS",
      "TK_SHORTCUT"
    ],
    "name": "ScaledSoftMaskedUniversalWeights",
    "display_name": "Scaled Soft Masked Weights 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/weights",
    "output_node": false
  },
  "SoftControlNetWeights": {
    "input": {
      "required": {
        "weight_00": [
          "FLOAT",
          {
            "default": 0.0994139620633712,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_01": [
          "FLOAT",
          {
            "default": 0.120501772198026,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_02": [
          "FLOAT",
          {
            "default": 0.146062754179425,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_03": [
          "FLOAT",
          {
            "default": 0.177045762641727,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_04": [
          "FLOAT",
          {
            "default": 0.214600924414215,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_05": [
          "FLOAT",
          {
            "default": 0.260122332623291,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_06": [
          "FLOAT",
          {
            "default": 0.315299797119141,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_07": [
          "FLOAT",
          {
            "default": 0.382181572265625,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_08": [
          "FLOAT",
          {
            "default": 0.463250390625,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_09": [
          "FLOAT",
          {
            "default": 0.561515625,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_10": [
          "FLOAT",
          {
            "default": 0.680625,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_11": [
          "FLOAT",
          {
            "default": 0.825,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_12": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "flip_weights": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "uncond_multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "cn_extras": [
          "CN_WEIGHTS_EXTRAS"
        ]
      }
    },
    "output": [
      "CONTROL_NET_WEIGHTS",
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CN_WEIGHTS",
      "TK_SHORTCUT"
    ],
    "name": "SoftControlNetWeights",
    "display_name": "ControlNet Soft Weights 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/weights/ControlNet",
    "output_node": false
  },
  "CustomControlNetWeights": {
    "input": {
      "required": {
        "weight_00": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_01": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_02": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_03": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_04": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_05": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_06": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_07": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_08": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_09": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_10": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_11": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_12": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "flip_weights": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "uncond_multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "cn_extras": [
          "CN_WEIGHTS_EXTRAS"
        ]
      }
    },
    "output": [
      "CONTROL_NET_WEIGHTS",
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CN_WEIGHTS",
      "TK_SHORTCUT"
    ],
    "name": "CustomControlNetWeights",
    "display_name": "ControlNet Custom Weights 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/weights/ControlNet",
    "output_node": false
  },
  "SoftT2IAdapterWeights": {
    "input": {
      "required": {
        "weight_00": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_01": [
          "FLOAT",
          {
            "default": 0.62,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_02": [
          "FLOAT",
          {
            "default": 0.825,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_03": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "flip_weights": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "uncond_multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "cn_extras": [
          "CN_WEIGHTS_EXTRAS"
        ]
      }
    },
    "output": [
      "CONTROL_NET_WEIGHTS",
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CN_WEIGHTS",
      "TK_SHORTCUT"
    ],
    "name": "SoftT2IAdapterWeights",
    "display_name": "T2IAdapter Soft Weights 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/weights/T2IAdapter",
    "output_node": false
  },
  "CustomT2IAdapterWeights": {
    "input": {
      "required": {
        "weight_00": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_01": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_02": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_03": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "flip_weights": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "uncond_multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "cn_extras": [
          "CN_WEIGHTS_EXTRAS"
        ]
      }
    },
    "output": [
      "CONTROL_NET_WEIGHTS",
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CN_WEIGHTS",
      "TK_SHORTCUT"
    ],
    "name": "CustomT2IAdapterWeights",
    "display_name": "T2IAdapter Custom Weights 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/weights/T2IAdapter",
    "output_node": false
  },
  "ACN_DefaultUniversalWeights": {
    "input": {
      "optional": {
        "cn_extras": [
          "CN_WEIGHTS_EXTRAS"
        ]
      }
    },
    "output": [
      "CONTROL_NET_WEIGHTS",
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CN_WEIGHTS",
      "TK_SHORTCUT"
    ],
    "name": "ACN_DefaultUniversalWeights",
    "display_name": "Default Weights 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/weights",
    "output_node": false
  },
  "ACN_SparseCtrlRGBPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "latent_size": [
          "LATENT"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "proc_IMAGE"
    ],
    "name": "ACN_SparseCtrlRGBPreprocessor",
    "display_name": "RGB SparseCtrl 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl/preprocess",
    "output_node": false
  },
  "ACN_SparseCtrlLoaderAdvanced": {
    "input": {
      "required": {
        "sparsectrl_name": [
          [
            "SD1.5/animatediff/v3_sd15_sparsectrl_rgb.ckpt",
            "canny.safetensors",
            "control-lora-canny-rank256.safetensors",
            "control-lora-depth-rank256.safetensors",
            "control-lora-sketch-rank256.safetensors",
            "control_v11e_sd15_ip2p.pth",
            "control_v11f1e_sd15_tile.safetensors",
            "control_v11f1p_sd15_depth.pth",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny.pth",
            "control_v11p_sd15_lineart.pth",
            "control_v11p_sd15_openpose.pth",
            "control_v11p_sd15_seg.pth",
            "control_v1p_sd15_qrcode_monster.safetensors",
            "controlnet-canny-sdxl-1.0-mid.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusion_pytorch_model.fp16.safetensors",
            "mistoLine_fp16.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_softedge.safetensors"
          ]
        ],
        "use_motion": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "motion_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "motion_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "sparse_method": [
          "SPARSE_METHOD"
        ],
        "tk_optional": [
          "TIMESTEP_KEYFRAME"
        ],
        "context_aware": [
          [
            "nearest_hint",
            "off"
          ]
        ],
        "sparse_hint_mult": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "sparse_nonhint_mult": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "sparse_mask_mult": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "ACN_SparseCtrlLoaderAdvanced",
    "display_name": "Load SparseCtrl Model 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl",
    "output_node": false
  },
  "ACN_SparseCtrlMergedLoaderAdvanced": {
    "input": {
      "required": {
        "sparsectrl_name": [
          [
            "SD1.5/animatediff/v3_sd15_sparsectrl_rgb.ckpt",
            "canny.safetensors",
            "control-lora-canny-rank256.safetensors",
            "control-lora-depth-rank256.safetensors",
            "control-lora-sketch-rank256.safetensors",
            "control_v11e_sd15_ip2p.pth",
            "control_v11f1e_sd15_tile.safetensors",
            "control_v11f1p_sd15_depth.pth",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny.pth",
            "control_v11p_sd15_lineart.pth",
            "control_v11p_sd15_openpose.pth",
            "control_v11p_sd15_seg.pth",
            "control_v1p_sd15_qrcode_monster.safetensors",
            "controlnet-canny-sdxl-1.0-mid.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusion_pytorch_model.fp16.safetensors",
            "mistoLine_fp16.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_softedge.safetensors"
          ]
        ],
        "control_net_name": [
          [
            "SD1.5/animatediff/v3_sd15_sparsectrl_rgb.ckpt",
            "canny.safetensors",
            "control-lora-canny-rank256.safetensors",
            "control-lora-depth-rank256.safetensors",
            "control-lora-sketch-rank256.safetensors",
            "control_v11e_sd15_ip2p.pth",
            "control_v11f1e_sd15_tile.safetensors",
            "control_v11f1p_sd15_depth.pth",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny.pth",
            "control_v11p_sd15_lineart.pth",
            "control_v11p_sd15_openpose.pth",
            "control_v11p_sd15_seg.pth",
            "control_v1p_sd15_qrcode_monster.safetensors",
            "controlnet-canny-sdxl-1.0-mid.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusion_pytorch_model.fp16.safetensors",
            "mistoLine_fp16.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_softedge.safetensors"
          ]
        ],
        "use_motion": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "motion_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "motion_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "sparse_method": [
          "SPARSE_METHOD"
        ],
        "tk_optional": [
          "TIMESTEP_KEYFRAME"
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "ACN_SparseCtrlMergedLoaderAdvanced",
    "display_name": "🧪Load Merged SparseCtrl Model 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl/experimental",
    "output_node": false
  },
  "ACN_SparseCtrlIndexMethodNode": {
    "input": {
      "required": {
        "indexes": [
          "STRING",
          {
            "default": "0"
          }
        ]
      }
    },
    "output": [
      "SPARSE_METHOD"
    ],
    "output_is_list": [false],
    "output_name": [
      "SPARSE_METHOD"
    ],
    "name": "ACN_SparseCtrlIndexMethodNode",
    "display_name": "SparseCtrl Index Method 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl",
    "output_node": false
  },
  "ACN_SparseCtrlSpreadMethodNode": {
    "input": {
      "required": {
        "spread": [
          [
            "uniform",
            "starting",
            "ending",
            "center"
          ]
        ]
      }
    },
    "output": [
      "SPARSE_METHOD"
    ],
    "output_is_list": [false],
    "output_name": [
      "SPARSE_METHOD"
    ],
    "name": "ACN_SparseCtrlSpreadMethodNode",
    "display_name": "SparseCtrl Spread Method 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl",
    "output_node": false
  },
  "ACN_SparseCtrlWeightExtras": {
    "input": {
      "optional": {
        "cn_extras": [
          "CN_WEIGHTS_EXTRAS"
        ],
        "sparse_hint_mult": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "sparse_nonhint_mult": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "sparse_mask_mult": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "CN_WEIGHTS_EXTRAS"
    ],
    "output_is_list": [false],
    "output_name": [
      "cn_extras"
    ],
    "name": "ACN_SparseCtrlWeightExtras",
    "display_name": "SparseCtrl Weight Extras 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl/extras",
    "output_node": false
  },
  "ACN_ReferencePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "latent_size": [
          "LATENT"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "proc_IMAGE"
    ],
    "name": "ACN_ReferencePreprocessor",
    "display_name": "Reference Preproccessor 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/Reference/preprocess",
    "output_node": false
  },
  "ACN_ReferenceControlNet": {
    "input": {
      "required": {
        "reference_type": [
          [
            "reference_attn",
            "reference_adain",
            "reference_attn+adain"
          ]
        ],
        "style_fidelity": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "ref_weight": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "ACN_ReferenceControlNet",
    "display_name": "Reference ControlNet 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/Reference",
    "output_node": false
  },
  "ACN_ReferenceControlNetFinetune": {
    "input": {
      "required": {
        "attn_style_fidelity": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "attn_ref_weight": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "attn_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "adain_style_fidelity": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "adain_ref_weight": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "adain_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "ACN_ReferenceControlNetFinetune",
    "display_name": "Reference ControlNet (Finetune) 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/Reference",
    "output_node": false
  },
  "LoadImagesFromDirectory": {
    "input": {
      "required": {
        "directory": [
          "STRING",
          {
            "default": ""
          }
        ]
      },
      "optional": {
        "image_load_cap": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "start_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "IMAGE",
      "MASK",
      "INT"
    ],
    "name": "LoadImagesFromDirectory",
    "display_name": "🚫Load Images [DEPRECATED] 🛂🅐🅒🅝",
    "description": "",
    "category": "",
    "output_node": false
  },
  "INTConstant": {
    "input": {
      "required": {
        "value": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "value"
    ],
    "name": "INTConstant",
    "display_name": "INT Constant",
    "description": "",
    "category": "KJNodes/constants",
    "output_node": false
  },
  "FloatConstant": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "value"
    ],
    "name": "FloatConstant",
    "display_name": "Float Constant",
    "description": "",
    "category": "KJNodes/constants",
    "output_node": false
  },
  "StringConstant": {
    "input": {
      "required": {
        "string": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "StringConstant",
    "display_name": "String Constant",
    "description": "",
    "category": "KJNodes/constants",
    "output_node": false
  },
  "StringConstantMultiline": {
    "input": {
      "required": {
        "string": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "strip_newlines": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "StringConstantMultiline",
    "display_name": "String Constant Multiline",
    "description": "",
    "category": "KJNodes/constants",
    "output_node": false
  },
  "ConditioningMultiCombine": {
    "input": {
      "required": {
        "inputcount": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 20,
            "step": 1
          }
        ],
        "conditioning_1": [
          "CONDITIONING"
        ],
        "conditioning_2": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "combined",
      "inputcount"
    ],
    "name": "ConditioningMultiCombine",
    "display_name": "Conditioning Multi Combine",
    "description": "\nCombines multiple conditioning nodes into one\n",
    "category": "KJNodes/masking/conditioning",
    "output_node": false
  },
  "ConditioningSetMaskAndCombine": {
    "input": {
      "required": {
        "positive_1": [
          "CONDITIONING"
        ],
        "negative_1": [
          "CONDITIONING"
        ],
        "positive_2": [
          "CONDITIONING"
        ],
        "negative_2": [
          "CONDITIONING"
        ],
        "mask_1": [
          "MASK"
        ],
        "mask_2": [
          "MASK"
        ],
        "mask_1_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "mask_2_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "set_cond_area": [
          [
            "default",
            "mask bounds"
          ]
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "combined_positive",
      "combined_negative"
    ],
    "name": "ConditioningSetMaskAndCombine",
    "display_name": "ConditioningSetMaskAndCombine",
    "description": "\nBundles multiple conditioning mask and combine nodes into one,functionality is identical to ComfyUI native nodes\n",
    "category": "KJNodes/masking/conditioning",
    "output_node": false
  },
  "ConditioningSetMaskAndCombine3": {
    "input": {
      "required": {
        "positive_1": [
          "CONDITIONING"
        ],
        "negative_1": [
          "CONDITIONING"
        ],
        "positive_2": [
          "CONDITIONING"
        ],
        "negative_2": [
          "CONDITIONING"
        ],
        "positive_3": [
          "CONDITIONING"
        ],
        "negative_3": [
          "CONDITIONING"
        ],
        "mask_1": [
          "MASK"
        ],
        "mask_2": [
          "MASK"
        ],
        "mask_3": [
          "MASK"
        ],
        "mask_1_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "mask_2_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "mask_3_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "set_cond_area": [
          [
            "default",
            "mask bounds"
          ]
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "combined_positive",
      "combined_negative"
    ],
    "name": "ConditioningSetMaskAndCombine3",
    "display_name": "ConditioningSetMaskAndCombine3",
    "description": "\nBundles multiple conditioning mask and combine nodes into one,functionality is identical to ComfyUI native nodes\n",
    "category": "KJNodes/masking/conditioning",
    "output_node": false
  },
  "ConditioningSetMaskAndCombine4": {
    "input": {
      "required": {
        "positive_1": [
          "CONDITIONING"
        ],
        "negative_1": [
          "CONDITIONING"
        ],
        "positive_2": [
          "CONDITIONING"
        ],
        "negative_2": [
          "CONDITIONING"
        ],
        "positive_3": [
          "CONDITIONING"
        ],
        "negative_3": [
          "CONDITIONING"
        ],
        "positive_4": [
          "CONDITIONING"
        ],
        "negative_4": [
          "CONDITIONING"
        ],
        "mask_1": [
          "MASK"
        ],
        "mask_2": [
          "MASK"
        ],
        "mask_3": [
          "MASK"
        ],
        "mask_4": [
          "MASK"
        ],
        "mask_1_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "mask_2_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "mask_3_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "mask_4_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "set_cond_area": [
          [
            "default",
            "mask bounds"
          ]
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "combined_positive",
      "combined_negative"
    ],
    "name": "ConditioningSetMaskAndCombine4",
    "display_name": "ConditioningSetMaskAndCombine4",
    "description": "\nBundles multiple conditioning mask and combine nodes into one,functionality is identical to ComfyUI native nodes\n",
    "category": "KJNodes/masking/conditioning",
    "output_node": false
  },
  "ConditioningSetMaskAndCombine5": {
    "input": {
      "required": {
        "positive_1": [
          "CONDITIONING"
        ],
        "negative_1": [
          "CONDITIONING"
        ],
        "positive_2": [
          "CONDITIONING"
        ],
        "negative_2": [
          "CONDITIONING"
        ],
        "positive_3": [
          "CONDITIONING"
        ],
        "negative_3": [
          "CONDITIONING"
        ],
        "positive_4": [
          "CONDITIONING"
        ],
        "negative_4": [
          "CONDITIONING"
        ],
        "positive_5": [
          "CONDITIONING"
        ],
        "negative_5": [
          "CONDITIONING"
        ],
        "mask_1": [
          "MASK"
        ],
        "mask_2": [
          "MASK"
        ],
        "mask_3": [
          "MASK"
        ],
        "mask_4": [
          "MASK"
        ],
        "mask_5": [
          "MASK"
        ],
        "mask_1_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "mask_2_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "mask_3_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "mask_4_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "mask_5_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "set_cond_area": [
          [
            "default",
            "mask bounds"
          ]
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "combined_positive",
      "combined_negative"
    ],
    "name": "ConditioningSetMaskAndCombine5",
    "display_name": "ConditioningSetMaskAndCombine5",
    "description": "\nBundles multiple conditioning mask and combine nodes into one,functionality is identical to ComfyUI native nodes\n",
    "category": "KJNodes/masking/conditioning",
    "output_node": false
  },
  "CondPassThrough": {
    "input": {
      "required": {
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "positive",
      "negative"
    ],
    "name": "CondPassThrough",
    "display_name": "CondPassThrough",
    "description": "\n    Simply passes through the positive and negative conditioning,\n    workaround for Set node not allowing bypassed inputs.\n",
    "category": "KJNodes/misc",
    "output_node": false
  },
  "DownloadAndLoadCLIPSeg": {
    "input": {
      "required": {
        "model": [
          [
            "Kijai/clipseg-rd64-refined-fp16",
            "CIDAS/clipseg-rd64-refined"
          ],
          {
            "default": "clipseg-rd64-refined-fp16"
          }
        ]
      }
    },
    "output": [
      "CLIPSEGMODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "clipseg_model"
    ],
    "name": "DownloadAndLoadCLIPSeg",
    "display_name": "(Down)load CLIPSeg",
    "description": "\nDownloads and loads CLIPSeg model with huggingface_hub,  \nto ComfyUI/models/clip_seg\n",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "BatchCLIPSeg": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "text": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "binary_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "combine_mask": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "use_cuda": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      },
      "optional": {
        "blur_sigma": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.1
          }
        ],
        "opt_model": [
          "CLIPSEGMODEL"
        ],
        "prev_mask": [
          "MASK",
          {
            "default": null
          }
        ],
        "image_bg_level": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "invert": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "MASK",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "Mask",
      "Image"
    ],
    "name": "BatchCLIPSeg",
    "display_name": "Batch CLIPSeg",
    "description": "\nSegments an image or batch of images using CLIPSeg.\n",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "ColorToMask": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "invert": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "red": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "green": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "threshold": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "per_batch": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "ColorToMask",
    "display_name": "Color To Mask",
    "description": "\nConverts chosen RGB value to a mask.  \nWith batch inputs, the **per_batch**  \ncontrols the number of images processed at once.\n",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "CreateGradientMask": {
    "input": {
      "required": {
        "invert": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "frames": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "CreateGradientMask",
    "display_name": "Create Gradient Mask",
    "description": "",
    "category": "KJNodes/masking/generate",
    "output_node": false
  },
  "CreateTextMask": {
    "input": {
      "required": {
        "invert": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "frames": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "text_x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "text_y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "font_size": [
          "INT",
          {
            "default": 32,
            "min": 8,
            "max": 4096,
            "step": 1
          }
        ],
        "font_color": [
          "STRING",
          {
            "default": "white"
          }
        ],
        "text": [
          "STRING",
          {
            "default": "HELLO!",
            "multiline": true
          }
        ],
        "font": [
          [
            "FreeMono.ttf",
            "FreeMonoBoldOblique.otf",
            "TTNorms-Black.otf"
          ]
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "start_rotation": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 359,
            "step": 1
          }
        ],
        "end_rotation": [
          "INT",
          {
            "default": 0,
            "min": -359,
            "max": 359,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "CreateTextMask",
    "display_name": "Create Text Mask",
    "description": "\nCreates a text image and mask.  \nLooks for fonts from this folder:  \nComfyUI/custom_nodes/ComfyUI-KJNodes/fonts\n  \nIf start_rotation and/or end_rotation are different values,  \ncreates animation between them.\n",
    "category": "KJNodes/text",
    "output_node": false
  },
  "CreateAudioMask": {
    "input": {
      "required": {
        "invert": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "frames": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ],
        "scale": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 2,
            "step": 0.01
          }
        ],
        "audio_path": [
          "STRING",
          {
            "default": "audio.wav"
          }
        ],
        "width": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "CreateAudioMask",
    "display_name": "Create Audio Mask",
    "description": "",
    "category": "KJNodes/deprecated",
    "output_node": false
  },
  "CreateFadeMask": {
    "input": {
      "required": {
        "invert": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "frames": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 255,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "interpolation": [
          [
            "linear",
            "ease_in",
            "ease_out",
            "ease_in_out"
          ]
        ],
        "start_level": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "midpoint_level": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_level": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "midpoint_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "CreateFadeMask",
    "display_name": "Create Fade Mask",
    "description": "",
    "category": "KJNodes/deprecated",
    "output_node": false
  },
  "CreateFadeMaskAdvanced": {
    "input": {
      "required": {
        "points_string": [
          "STRING",
          {
            "default": "0:(0.0),\n7:(1.0),\n15:(0.0)\n",
            "multiline": true
          }
        ],
        "invert": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "frames": [
          "INT",
          {
            "default": 16,
            "min": 2,
            "max": 255,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "interpolation": [
          [
            "linear",
            "ease_in",
            "ease_out",
            "ease_in_out"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "CreateFadeMaskAdvanced",
    "display_name": "Create Fade Mask Advanced",
    "description": "\nCreate a batch of masks interpolated between given frames and values. \nUses same syntax as Fizz' BatchValueSchedule.\nFirst value is the frame index (not that this starts from 0, not 1) \nand the second value inside the brackets is the float value of the mask in range 0.0 - 1.0  \n\nFor example the default values:  \n0:(0.0)  \n7:(1.0)  \n15:(0.0)  \n  \nWould create a mask batch fo 16 frames, starting from black, \ninterpolating with the chosen curve to fully white at the 8th frame, \nand interpolating from that to fully black at the 16th frame.\n",
    "category": "KJNodes/masking/generate",
    "output_node": false
  },
  "CreateFluidMask": {
    "input": {
      "required": {
        "invert": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "frames": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "inflow_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "inflow_velocity": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "inflow_radius": [
          "INT",
          {
            "default": 8,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "inflow_padding": [
          "INT",
          {
            "default": 50,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "inflow_duration": [
          "INT",
          {
            "default": 60,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "CreateFluidMask",
    "display_name": "Create Fluid Mask",
    "description": "",
    "category": "KJNodes/masking/generate",
    "output_node": false
  },
  "CreateShapeMask": {
    "input": {
      "required": {
        "shape": [
          [
            "circle",
            "square",
            "triangle"
          ],
          {
            "default": "circle"
          }
        ],
        "frames": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "location_x": [
          "INT",
          {
            "default": 256,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "location_y": [
          "INT",
          {
            "default": 256,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "grow": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "frame_width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "frame_height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "shape_width": [
          "INT",
          {
            "default": 128,
            "min": 8,
            "max": 4096,
            "step": 1
          }
        ],
        "shape_height": [
          "INT",
          {
            "default": 128,
            "min": 8,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "mask",
      "mask_inverted"
    ],
    "name": "CreateShapeMask",
    "display_name": "Create Shape Mask",
    "description": "\nCreates a mask or batch of masks with the specified shape.  \nLocations are center locations.  \nGrow value is the amount to grow the shape on each frame, creating animated masks.\n",
    "category": "KJNodes/masking/generate",
    "output_node": false
  },
  "CreateVoronoiMask": {
    "input": {
      "required": {
        "frames": [
          "INT",
          {
            "default": 16,
            "min": 2,
            "max": 4096,
            "step": 1
          }
        ],
        "num_points": [
          "INT",
          {
            "default": 15,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "line_width": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "speed": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "frame_width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "frame_height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "mask",
      "mask_inverted"
    ],
    "name": "CreateVoronoiMask",
    "display_name": "Create Voronoi Mask",
    "description": "",
    "category": "KJNodes/masking/generate",
    "output_node": false
  },
  "CreateMagicMask": {
    "input": {
      "required": {
        "frames": [
          "INT",
          {
            "default": 16,
            "min": 2,
            "max": 4096,
            "step": 1
          }
        ],
        "depth": [
          "INT",
          {
            "default": 12,
            "min": 1,
            "max": 500,
            "step": 1
          }
        ],
        "distortion": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 0,
            "max": 100,
            "step": 0.01
          }
        ],
        "seed": [
          "INT",
          {
            "default": 123,
            "min": 0,
            "max": 99999999,
            "step": 1
          }
        ],
        "transitions": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 20,
            "step": 1
          }
        ],
        "frame_width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "frame_height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "mask",
      "mask_inverted"
    ],
    "name": "CreateMagicMask",
    "display_name": "Create Magic Mask",
    "description": "",
    "category": "KJNodes/masking/generate",
    "output_node": false
  },
  "GetMaskSizeAndCount": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK",
      "INT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "mask",
      "width",
      "height",
      "count"
    ],
    "name": "GetMaskSizeAndCount",
    "display_name": "Get Mask Size & Count",
    "description": "\nReturns the width, height and batch size of the mask,  \nand passes it through unchanged.  \n\n",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "GrowMaskWithBlur": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "expand": [
          "INT",
          {
            "default": 0,
            "min": -16384,
            "max": 16384,
            "step": 1
          }
        ],
        "incremental_expandrate": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.1
          }
        ],
        "tapered_corners": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "flip_input": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "blur_radius": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.1
          }
        ],
        "lerp_alpha": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "decay_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "fill_holes": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "MASK",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "mask",
      "mask_inverted"
    ],
    "name": "GrowMaskWithBlur",
    "display_name": "Grow Mask With Blur",
    "description": "\n# GrowMaskWithBlur\n- mask: Input mask or mask batch\n- expand: Expand or contract mask or mask batch by a given amount\n- incremental_expandrate: increase expand rate by a given amount per frame\n- tapered_corners: use tapered corners\n- flip_input: flip input mask\n- blur_radius: value higher than 0 will blur the mask\n- lerp_alpha: alpha value for interpolation between frames\n- decay_factor: decay value for interpolation between frames\n- fill_holes: fill holes in the mask (slow)",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "MaskBatchMulti": {
    "input": {
      "required": {
        "inputcount": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 1000,
            "step": 1
          }
        ],
        "mask_1": [
          "MASK"
        ],
        "mask_2": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "masks"
    ],
    "name": "MaskBatchMulti",
    "display_name": "Mask Batch Multi",
    "description": "\nCreates an image batch from multiple masks.  \nYou can set how many inputs the node has,  \nwith the **inputcount** and clicking update.\n",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "OffsetMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 16384,
            "step": 1,
            "display": "number"
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 16384,
            "step": 1,
            "display": "number"
          }
        ],
        "angle": [
          "INT",
          {
            "default": 0,
            "min": -360,
            "max": 360,
            "step": 1,
            "display": "number"
          }
        ],
        "duplication_factor": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 1000,
            "step": 1,
            "display": "number"
          }
        ],
        "roll": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "incremental": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "padding_mode": [
          [
            "empty",
            "border",
            "reflection"
          ],
          {
            "default": "empty"
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "mask"
    ],
    "name": "OffsetMask",
    "display_name": "Offset Mask",
    "description": "\nOffsets the mask by the specified amount.  \n - mask: Input mask or mask batch\n - x: Horizontal offset\n - y: Vertical offset\n - angle: Angle in degrees\n - roll: roll edge wrapping\n - duplication_factor: Number of times to duplicate the mask to form a batch\n - border padding_mode: Padding mode for the mask\n",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "RemapMaskRange": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "min": [
          "FLOAT",
          {
            "default": 0,
            "min": -10,
            "max": 1,
            "step": 0.01
          }
        ],
        "max": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "mask"
    ],
    "name": "RemapMaskRange",
    "display_name": "Remap Mask Range",
    "description": "\nSets new min and max values for the mask.\n",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "ResizeMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 8,
            "display": "number"
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 8,
            "display": "number"
          }
        ],
        "keep_proportions": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "MASK",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "mask",
      "width",
      "height"
    ],
    "name": "ResizeMask",
    "display_name": "Resize Mask",
    "description": "\nResizes the mask or batch of masks to the specified width and height.\n",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "RoundMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "RoundMask",
    "display_name": "Round Mask",
    "description": "\nRounds the mask or batch of masks to a binary mask.  \n\u003Cimg src=\"https://github.com/kijai/ComfyUI-KJNodes/assets/40791699/52c85202-f74e-4b96-9dac-c8bda5ddcc40\" width=\"300\" height=\"250\" alt=\"RoundMask example\"\u003E\n\n",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "AddLabel": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "text_x": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "text_y": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 48,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "font_size": [
          "INT",
          {
            "default": 32,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "font_color": [
          "STRING",
          {
            "default": "white"
          }
        ],
        "label_color": [
          "STRING",
          {
            "default": "black"
          }
        ],
        "font": [
          [
            "FreeMono.ttf",
            "FreeMonoBoldOblique.otf",
            "TTNorms-Black.otf"
          ]
        ],
        "text": [
          "STRING",
          {
            "default": "Text"
          }
        ],
        "direction": [
          [
            "up",
            "down",
            "left",
            "right",
            "overlay"
          ],
          {
            "default": "up"
          }
        ]
      },
      "optional": {
        "caption": [
          "STRING",
          {
            "default": "",
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "AddLabel",
    "display_name": "Add Label",
    "description": "\nCreates a new with the given text, and concatenates it to  \neither above or below the input image.  \nNote that this changes the input image's height!  \nFonts are loaded from this folder:  \nComfyUI/custom_nodes/ComfyUI-KJNodes/fonts\n",
    "category": "KJNodes/text",
    "output_node": false
  },
  "ColorMatch": {
    "input": {
      "required": {
        "image_ref": [
          "IMAGE"
        ],
        "image_target": [
          "IMAGE"
        ],
        "method": [
          [
            "mkl",
            "hm",
            "reinhard",
            "mvgd",
            "hm-mvgd-hm",
            "hm-mkl-hm"
          ],
          {
            "default": "mkl"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "ColorMatch",
    "display_name": "Color Match",
    "description": "\ncolor-matcher enables color transfer across images which comes in handy for automatic  \ncolor-grading of photographs, paintings and film sequences as well as light-field  \nand stopmotion corrections.  \n\nThe methods behind the mappings are based on the approach from Reinhard et al.,  \nthe Monge-Kantorovich Linearization (MKL) as proposed by Pitie et al. and our analytical solution  \nto a Multi-Variate Gaussian Distribution (MVGD) transfer in conjunction with classical histogram   \nmatching. As shown below our HM-MVGD-HM compound outperforms existing methods.   \nhttps://github.com/hahnec/color-matcher/\n\n",
    "category": "KJNodes/image",
    "output_node": false
  },
  "CrossFadeImages": {
    "input": {
      "required": {
        "images_1": [
          "IMAGE"
        ],
        "images_2": [
          "IMAGE"
        ],
        "interpolation": [
          [
            "linear",
            "ease_in",
            "ease_out",
            "ease_in_out",
            "bounce",
            "elastic",
            "glitchy",
            "exponential_ease_out"
          ]
        ],
        "transition_start_index": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "transitioning_frames": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "start_level": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_level": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "CrossFadeImages",
    "display_name": "Cross Fade Images",
    "description": "",
    "category": "KJNodes/image",
    "output_node": false
  },
  "GetImagesFromBatchIndexed": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "indexes": [
          "STRING",
          {
            "default": "0, 1, 2",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "GetImagesFromBatchIndexed",
    "display_name": "Get Images From Batch Indexed",
    "description": "\nSelects and returns the images at the specified indices as an image batch.\n",
    "category": "KJNodes/image",
    "output_node": false
  },
  "GetImageRangeFromBatch": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "start_index": [
          "INT",
          {
            "default": 0,
            "min": -1,
            "max": 4096,
            "step": 1
          }
        ],
        "num_frames": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ]
      },
      "optional": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "GetImageRangeFromBatch",
    "display_name": "Get Image Range From Batch",
    "description": "\nCreates a new batch using images from the input,  \nbatch, starting from start_index.\n",
    "category": "KJNodes/image",
    "output_node": false
  },
  "GetImageSizeAndCount": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "INT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "image",
      "width",
      "height",
      "count"
    ],
    "name": "GetImageSizeAndCount",
    "display_name": "Get Image Size & Count",
    "description": "\nReturns width, height and batch size of the image,  \nand passes it through unchanged.  \n\n",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "ImageAndMaskPreview": {
    "input": {
      "required": {
        "mask_opacity": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "mask_color": [
          "STRING",
          {
            "default": "255, 255, 255"
          }
        ],
        "pass_through": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "composite"
    ],
    "name": "ImageAndMaskPreview",
    "display_name": "ImageAndMaskPreview",
    "description": "\nPreview an image or a mask, when both inputs are used  \ncomposites the mask on top of the image.\nwith pass_through on the preview is disabled and the  \ncomposite is returned from the composite slot instead,  \nthis allows for the preview to be passed for video combine  \nnodes for example.\n",
    "category": "KJNodes",
    "output_node": true
  },
  "ImageAddMulti": {
    "input": {
      "required": {
        "inputcount": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 1000,
            "step": 1
          }
        ],
        "image_1": [
          "IMAGE"
        ],
        "image_2": [
          "IMAGE"
        ],
        "blending": [
          [
            "add",
            "subtract",
            "multiply",
            "difference"
          ],
          {
            "default": "add"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "ImageAddMulti",
    "display_name": "Image Add Multi",
    "description": "\nAdd blends multiple images together.    \nYou can set how many inputs the node has,  \nwith the **inputcount** and clicking update.\n",
    "category": "KJNodes/image",
    "output_node": false
  },
  "ImageBatchMulti": {
    "input": {
      "required": {
        "inputcount": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 1000,
            "step": 1
          }
        ],
        "image_1": [
          "IMAGE"
        ],
        "image_2": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "ImageBatchMulti",
    "display_name": "Image Batch Multi",
    "description": "\nCreates an image batch from multiple images.  \nYou can set how many inputs the node has,  \nwith the **inputcount** and clicking update.\n",
    "category": "KJNodes/image",
    "output_node": false
  },
  "ImageBatchRepeatInterleaving": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "repeats": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageBatchRepeatInterleaving",
    "display_name": "ImageBatchRepeatInterleaving",
    "description": "\nRepeats each image in a batch by the specified number of times.  \nExample batch of 5 images: 0, 1 ,2, 3, 4  \nwith repeats 2 becomes batch of 10 images: 0, 0, 1, 1, 2, 2, 3, 3, 4, 4  \n",
    "category": "KJNodes/image",
    "output_node": false
  },
  "ImageBatchTestPattern": {
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ],
        "start_from": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "text_x": [
          "INT",
          {
            "default": 256,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "text_y": [
          "INT",
          {
            "default": 256,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "font": [
          [
            "FreeMono.ttf",
            "FreeMonoBoldOblique.otf",
            "TTNorms-Black.otf"
          ]
        ],
        "font_size": [
          "INT",
          {
            "default": 255,
            "min": 8,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageBatchTestPattern",
    "display_name": "Image Batch Test Pattern",
    "description": "",
    "category": "KJNodes/text",
    "output_node": false
  },
  "ImageConcanate": {
    "input": {
      "required": {
        "image1": [
          "IMAGE"
        ],
        "image2": [
          "IMAGE"
        ],
        "direction": [
          [
            "right",
            "down",
            "left",
            "up"
          ],
          {
            "default": "right"
          }
        ],
        "match_image_size": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageConcanate",
    "display_name": "Image Concatenate",
    "description": "\nConcatenates the image2 to image1 in the specified direction.\n",
    "category": "KJNodes/image",
    "output_node": false
  },
  "ImageGrabPIL": {
    "input": {
      "required": {
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "num_frames": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ],
        "delay": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "ImageGrabPIL",
    "display_name": "Image Grab PIL",
    "description": "\nCaptures an area specified by screen coordinates.  \nCan be used for realtime diffusion with autoqueue.\n",
    "category": "KJNodes/experimental",
    "output_node": false
  },
  "ImageGridComposite2x2": {
    "input": {
      "required": {
        "image1": [
          "IMAGE"
        ],
        "image2": [
          "IMAGE"
        ],
        "image3": [
          "IMAGE"
        ],
        "image4": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageGridComposite2x2",
    "display_name": "Image Grid Composite 2x2",
    "description": "\nConcatenates the 4 input images into a 2x2 grid. \n",
    "category": "KJNodes/image",
    "output_node": false
  },
  "ImageGridComposite3x3": {
    "input": {
      "required": {
        "image1": [
          "IMAGE"
        ],
        "image2": [
          "IMAGE"
        ],
        "image3": [
          "IMAGE"
        ],
        "image4": [
          "IMAGE"
        ],
        "image5": [
          "IMAGE"
        ],
        "image6": [
          "IMAGE"
        ],
        "image7": [
          "IMAGE"
        ],
        "image8": [
          "IMAGE"
        ],
        "image9": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageGridComposite3x3",
    "display_name": "Image Grid Composite 3x3",
    "description": "\nConcatenates the 9 input images into a 3x3 grid. \n",
    "category": "KJNodes/image",
    "output_node": false
  },
  "ImageNormalize_Neg1_To_1": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageNormalize_Neg1_To_1",
    "display_name": "Image Normalize -1 to 1",
    "description": "\nNormalize the images to be in the range [-1, 1]  \n",
    "category": "KJNodes/image",
    "output_node": false
  },
  "ImagePass": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImagePass",
    "display_name": "ImagePass",
    "description": "\nPasses the image through without modifying it.\n",
    "category": "KJNodes/image",
    "output_node": false
  },
  "ImagePadForOutpaintMasked": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "left": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "top": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "right": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "bottom": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "feathering": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "ImagePadForOutpaintMasked",
    "display_name": "Image Pad For Outpaint Masked",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "ImagePadForOutpaintTargetSize": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "target_width": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "target_height": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "feathering": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos"
          ]
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "ImagePadForOutpaintTargetSize",
    "display_name": "Image Pad For Outpaint Target Size",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "ImageResizeKJ": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos"
          ]
        ],
        "keep_proportion": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "divisible_by": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "max": 512,
            "step": 1
          }
        ]
      },
      "optional": {
        "width_input": [
          "INT",
          {
            "forceInput": true
          }
        ],
        "height_input": [
          "INT",
          {
            "forceInput": true
          }
        ],
        "get_image_size": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "IMAGE",
      "width",
      "height"
    ],
    "name": "ImageResizeKJ",
    "display_name": "Resize Image",
    "description": "\nResizes the image to the specified width and height.  \nSize can be retrieved from the inputs, and the final scale  \nis  determined in this order of importance:  \n- get_image_size  \n- width_input and height_input  \n- width and height widgets  \n  \nKeep proportions keeps the aspect ratio of the image, by  \nhighest dimension.  \n",
    "category": "KJNodes/image",
    "output_node": false
  },
  "ImageUpscaleWithModelBatched": {
    "input": {
      "required": {
        "upscale_model": [
          "UPSCALE_MODEL"
        ],
        "images": [
          "IMAGE"
        ],
        "per_batch": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageUpscaleWithModelBatched",
    "display_name": "Image Upscale With Model Batched",
    "description": "\nSame as ComfyUI native model upscaling node,  \nbut allows setting sub-batches for reduced VRAM usage.\n",
    "category": "KJNodes/image",
    "output_node": false
  },
  "InsertImagesToBatchIndexed": {
    "input": {
      "required": {
        "original_images": [
          "IMAGE"
        ],
        "images_to_insert": [
          "IMAGE"
        ],
        "indexes": [
          "STRING",
          {
            "default": "0, 1, 2",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "InsertImagesToBatchIndexed",
    "display_name": "Insert Images To Batch Indexed",
    "description": "\nInserts images at the specified indices into the original image batch.\n",
    "category": "KJNodes/image",
    "output_node": false
  },
  "LoadAndResizeImage": {
    "input": {
      "required": {
        "image": [
          [
            "example.png"
          ],
          {
            "image_upload": true
          }
        ],
        "resize": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "repeat": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "keep_proportion": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "divisible_by": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "max": 512,
            "step": 1
          }
        ],
        "mask_channel": [
          [
            "alpha",
            "red",
            "green",
            "blue"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "image",
      "mask",
      "width",
      "height"
    ],
    "name": "LoadAndResizeImage",
    "display_name": "Load & Resize Image",
    "description": "",
    "category": "KJNodes/image",
    "output_node": false
  },
  "MergeImageChannels": {
    "input": {
      "required": {
        "red": [
          "IMAGE"
        ],
        "green": [
          "IMAGE"
        ],
        "blue": [
          "IMAGE"
        ]
      },
      "optional": {
        "mask": [
          "MASK",
          {
            "default": null
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "MergeImageChannels",
    "display_name": "Merge Image Channels",
    "description": "\nMerges channel data into an image.  \n",
    "category": "KJNodes/image",
    "output_node": false
  },
  "PreviewAnimation": {
    "input": {
      "required": {
        "fps": [
          "FLOAT",
          {
            "default": 8,
            "min": 0.01,
            "max": 1000,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "images": [
          "IMAGE"
        ],
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "PreviewAnimation",
    "display_name": "Preview Animation",
    "description": "",
    "category": "KJNodes/image",
    "output_node": true
  },
  "RemapImageRange": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "min": [
          "FLOAT",
          {
            "default": 0,
            "min": -10,
            "max": 1,
            "step": 0.01
          }
        ],
        "max": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "clamp": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "RemapImageRange",
    "display_name": "Remap Image Range",
    "description": "\nRemaps the image values to the specified range. \n",
    "category": "KJNodes/image",
    "output_node": false
  },
  "ReverseImageBatch": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ReverseImageBatch",
    "display_name": "Reverse Image Batch",
    "description": "\nReverses the order of the images in a batch.\n",
    "category": "KJNodes/image",
    "output_node": false
  },
  "ReplaceImagesInBatch": {
    "input": {
      "required": {
        "original_images": [
          "IMAGE"
        ],
        "replacement_images": [
          "IMAGE"
        ],
        "start_index": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ReplaceImagesInBatch",
    "display_name": "Replace Images In Batch",
    "description": "\nReplaces the images in a batch, starting from the specified start index,  \nwith the replacement images.\n",
    "category": "KJNodes/image",
    "output_node": false
  },
  "SaveImageWithAlpha": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SaveImageWithAlpha",
    "display_name": "Save Image With Alpha",
    "description": "\nSaves an image and mask as .PNG with the mask as the alpha channel. \n",
    "category": "KJNodes/image",
    "output_node": true
  },
  "SplitImageChannels": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "red",
      "green",
      "blue",
      "mask"
    ],
    "name": "SplitImageChannels",
    "display_name": "Split Image Channels",
    "description": "\nSplits image channels into images where the selected channel  \nis repeated for all channels, and the alpha as a mask. \n",
    "category": "KJNodes/image",
    "output_node": false
  },
  "BatchCropFromMask": {
    "input": {
      "required": {
        "original_images": [
          "IMAGE"
        ],
        "masks": [
          "MASK"
        ],
        "crop_size_mult": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "bbox_smooth_alpha": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "BBOX",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "original_images",
      "cropped_images",
      "bboxes",
      "width",
      "height"
    ],
    "name": "BatchCropFromMask",
    "display_name": "Batch Crop From Mask",
    "description": "",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "BatchCropFromMaskAdvanced": {
    "input": {
      "required": {
        "original_images": [
          "IMAGE"
        ],
        "masks": [
          "MASK"
        ],
        "crop_size_mult": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "bbox_smooth_alpha": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "MASK",
      "IMAGE",
      "MASK",
      "BBOX",
      "BBOX",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false, false],
    "output_name": [
      "original_images",
      "cropped_images",
      "cropped_masks",
      "combined_crop_image",
      "combined_crop_masks",
      "bboxes",
      "combined_bounding_box",
      "bbox_width",
      "bbox_height"
    ],
    "name": "BatchCropFromMaskAdvanced",
    "display_name": "Batch Crop From Mask Advanced",
    "description": "",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "FilterZeroMasksAndCorrespondingImages": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      },
      "optional": {
        "original_images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "MASK",
      "IMAGE",
      "IMAGE",
      "INDEXES"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "non_zero_masks_out",
      "non_zero_mask_images_out",
      "zero_mask_images_out",
      "zero_mask_images_out_indexes"
    ],
    "name": "FilterZeroMasksAndCorrespondingImages",
    "display_name": "FilterZeroMasksAndCorrespondingImages",
    "description": "\nFilter out all the empty (i.e. all zero) mask in masks  \nAlso filter out all the corresponding images in original_images by indexes if provide  \n  \noriginal_images (optional): If provided, need have same length as masks.\n",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "InsertImageBatchByIndexes": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "images_to_insert": [
          "IMAGE"
        ],
        "insert_indexes": [
          "INDEXES"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images_after_insert"
    ],
    "name": "InsertImageBatchByIndexes",
    "display_name": "Insert Image Batch By Indexes",
    "description": "\nThis node is designed to be use with node FilterZeroMasksAndCorrespondingImages\nIt inserts the images_to_insert into images according to insert_indexes\n\nReturns:\n    images_after_insert: updated original images with origonal sequence order\n",
    "category": "KJNodes/image",
    "output_node": false
  },
  "BatchUncrop": {
    "input": {
      "required": {
        "original_images": [
          "IMAGE"
        ],
        "cropped_images": [
          "IMAGE"
        ],
        "bboxes": [
          "BBOX"
        ],
        "border_blending": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "crop_rescale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "border_top": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "border_bottom": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "border_left": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "border_right": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "BatchUncrop",
    "display_name": "Batch Uncrop",
    "description": "",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "BatchUncropAdvanced": {
    "input": {
      "required": {
        "original_images": [
          "IMAGE"
        ],
        "cropped_images": [
          "IMAGE"
        ],
        "cropped_masks": [
          "MASK"
        ],
        "combined_crop_mask": [
          "MASK"
        ],
        "bboxes": [
          "BBOX"
        ],
        "border_blending": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "crop_rescale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "use_combined_mask": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "use_square_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      },
      "optional": {
        "combined_bounding_box": [
          "BBOX",
          {
            "default": null
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "BatchUncropAdvanced",
    "display_name": "Batch Uncrop Advanced",
    "description": "",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "SplitBboxes": {
    "input": {
      "required": {
        "bboxes": [
          "BBOX"
        ],
        "index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 99999999,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "BBOX",
      "BBOX"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "bboxes_a",
      "bboxes_b"
    ],
    "name": "SplitBboxes",
    "display_name": "Split Bboxes",
    "description": "\nSplits the specified bbox list at the given index into two lists.\n",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "BboxToInt": {
    "input": {
      "required": {
        "bboxes": [
          "BBOX"
        ],
        "index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 99999999,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "INT",
      "INT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "x_min",
      "y_min",
      "width",
      "height",
      "center_x",
      "center_y"
    ],
    "name": "BboxToInt",
    "display_name": "Bbox To Int",
    "description": "\nReturns selected index from bounding box list as integers.\n",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "BboxVisualize": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "bboxes": [
          "BBOX"
        ],
        "line_width": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "BboxVisualize",
    "display_name": "Bbox Visualize",
    "description": "\nVisualizes the specified bbox on the image.\n",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "GenerateNoise": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ],
        "seed": [
          "INT",
          {
            "default": 123,
            "min": 0,
            "max": 1.8446744073709552e+19,
            "step": 1
          }
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 4096,
            "step": 0.01
          }
        ],
        "constant_batch_noise": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "normalize": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "model": [
          "MODEL"
        ],
        "sigmas": [
          "SIGMAS"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "GenerateNoise",
    "display_name": "Generate Noise",
    "description": "\nGenerates noise for injection or to be used as empty latents on samplers with add_noise off.\n",
    "category": "KJNodes/noise",
    "output_node": false
  },
  "FlipSigmasAdjusted": {
    "input": {
      "required": {
        "sigmas": [
          "SIGMAS"
        ],
        "divide_by_last_sigma": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "divide_by": [
          "FLOAT",
          {
            "default": 1,
            "min": 1,
            "max": 255,
            "step": 0.01
          }
        ],
        "offset_by": [
          "INT",
          {
            "default": 1,
            "min": -100,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "SIGMAS",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "SIGMAS",
      "sigmas_string"
    ],
    "name": "FlipSigmasAdjusted",
    "display_name": "Flip Sigmas Adjusted",
    "description": "",
    "category": "KJNodes/noise",
    "output_node": false
  },
  "InjectNoiseToLatent": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 200,
            "step": 0.0001
          }
        ],
        "noise": [
          "LATENT"
        ],
        "normalize": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "average": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ],
        "mix_randn_amount": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 0.001
          }
        ],
        "seed": [
          "INT",
          {
            "default": 123,
            "min": 0,
            "max": 1.8446744073709552e+19,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "InjectNoiseToLatent",
    "display_name": "Inject Noise To Latent",
    "description": "",
    "category": "KJNodes/noise",
    "output_node": false
  },
  "CustomSigmas": {
    "input": {
      "required": {
        "sigmas_string": [
          "STRING",
          {
            "default": "14.615, 6.475, 3.861, 2.697, 1.886, 1.396, 0.963, 0.652, 0.399, 0.152, 0.029",
            "multiline": true
          }
        ],
        "interpolate_to_steps": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SIGMAS"
    ],
    "name": "CustomSigmas",
    "display_name": "Custom Sigmas",
    "description": "\nCreates a sigmas tensor from a string of comma separated values.  \nExamples: \n   \nNvidia's optimized AYS 10 step schedule for SD 1.5:  \n14.615, 6.475, 3.861, 2.697, 1.886, 1.396, 0.963, 0.652, 0.399, 0.152, 0.029  \nSDXL:   \n14.615, 6.315, 3.771, 2.181, 1.342, 0.862, 0.555, 0.380, 0.234, 0.113, 0.029  \nSVD:  \n700.00, 54.5, 15.886, 7.977, 4.248, 1.789, 0.981, 0.403, 0.173, 0.034, 0.002  \n",
    "category": "KJNodes/noise",
    "output_node": false
  },
  "WidgetToString": {
    "input": {
      "required": {
        "id": [
          "INT",
          {
            "default": 0
          }
        ],
        "widget_name": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "return_all": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "hidden": {
        "extra_pnginfo": "EXTRA_PNGINFO",
        "prompt": "PROMPT"
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "WidgetToString",
    "display_name": "Widget To String",
    "description": "\nSelects a node and it's specified widget and outputs the value as a string.  \nTo see node id's, enable node id display from Manager badge menu.\n",
    "category": "KJNodes/text",
    "output_node": false
  },
  "DummyLatentOut": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "DummyLatentOut",
    "display_name": "Dummy Latent Out",
    "description": "\nDoes nothing, used to trigger generic workflow output.    \nA way to get previews in the UI without saving anything to disk.\n",
    "category": "KJNodes/misc",
    "output_node": true
  },
  "GetLatentsFromBatchIndexed": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ],
        "indexes": [
          "STRING",
          {
            "default": "0, 1, 2",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "GetLatentsFromBatchIndexed",
    "display_name": "Get Latents From Batch Indexed",
    "description": "\nSelects and returns the latents at the specified indices as an latent batch.\n",
    "category": "KJNodes",
    "output_node": false
  },
  "ScaleBatchPromptSchedule": {
    "input": {
      "required": {
        "input_str": [
          "STRING",
          {
            "forceInput": true,
            "default": "0:(0.0),\n7:(1.0),\n15:(0.0)\n"
          }
        ],
        "old_frame_count": [
          "INT",
          {
            "forceInput": true,
            "default": 1,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "new_frame_count": [
          "INT",
          {
            "forceInput": true,
            "default": 1,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "ScaleBatchPromptSchedule",
    "display_name": "Scale Batch Prompt Schedule",
    "description": "\nScales a batch schedule from Fizz' nodes BatchPromptSchedule\nto a different frame count.\n",
    "category": "KJNodes",
    "output_node": false
  },
  "CameraPoseVisualizer": {
    "input": {
      "required": {
        "pose_file_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "base_xval": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 100,
            "step": 0.01
          }
        ],
        "zval": [
          "FLOAT",
          {
            "default": 0.3,
            "min": 0,
            "max": 100,
            "step": 0.01
          }
        ],
        "scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 10,
            "step": 0.01
          }
        ],
        "use_exact_fx": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "relative_c2w": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "use_viewer": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "cameractrl_poses": [
          "CAMERACTRL_POSES",
          {
            "default": null
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "CameraPoseVisualizer",
    "display_name": "Camera Pose Visualizer",
    "description": "\nVisualizes the camera poses, from Animatediff-Evolved CameraCtrl Pose  \nor a .txt file with RealEstate camera intrinsics and coordinates, in a 3D plot. \n",
    "category": "KJNodes/misc",
    "output_node": false
  },
  "JoinStrings": {
    "input": {
      "required": {
        "string1": [
          "STRING",
          {
            "default": "",
            "forceInput": true
          }
        ],
        "string2": [
          "STRING",
          {
            "default": "",
            "forceInput": true
          }
        ],
        "delimiter": [
          "STRING",
          {
            "default": " ",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "JoinStrings",
    "display_name": "Join Strings",
    "description": "",
    "category": "KJNodes/constants",
    "output_node": false
  },
  "JoinStringMulti": {
    "input": {
      "required": {
        "inputcount": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 1000,
            "step": 1
          }
        ],
        "string_1": [
          "STRING",
          {
            "default": "",
            "forceInput": true
          }
        ],
        "string_2": [
          "STRING",
          {
            "default": "",
            "forceInput": true
          }
        ],
        "delimiter": [
          "STRING",
          {
            "default": " ",
            "multiline": false
          }
        ],
        "return_list": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "string"
    ],
    "name": "JoinStringMulti",
    "display_name": "Join String Multi",
    "description": "\nCreates single string, or a list of strings, from  \nmultiple input strings.  \nYou can set how many inputs the node has,  \nwith the **inputcount** and clicking update.\n",
    "category": "KJNodes",
    "output_node": false
  },
  "SomethingToString": {
    "input": {
      "required": {
        "input": [
          "*",
          {

          }
        ]
      },
      "optional": {
        "prefix": [
          "STRING",
          {
            "default": ""
          }
        ],
        "suffix": [
          "STRING",
          {
            "default": ""
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "SomethingToString",
    "display_name": "Something To String",
    "description": "\nConverts any type to a string.\n",
    "category": "KJNodes/text",
    "output_node": false
  },
  "Sleep": {
    "input": {
      "required": {
        "input": [
          "*",
          {

          }
        ],
        "minutes": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1439
          }
        ],
        "seconds": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 59.99,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": [
      "*"
    ],
    "name": "Sleep",
    "display_name": "Sleep",
    "description": "\nDelays the execution for the input amount of time.\n",
    "category": "KJNodes/misc",
    "output_node": false
  },
  "VRAM_Debug": {
    "input": {
      "required": {
        "empty_cache": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "gc_collect": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "unload_all_models": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "any_input": [
          "*",
          {

          }
        ],
        "image_pass": [
          "IMAGE"
        ],
        "model_pass": [
          "MODEL"
        ]
      }
    },
    "output": [
      "*",
      "IMAGE",
      "MODEL",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "any_output",
      "image_pass",
      "model_pass",
      "freemem_before",
      "freemem_after"
    ],
    "name": "VRAM_Debug",
    "display_name": "VRAM Debug",
    "description": "\nReturns the inputs unchanged, they are only used as triggers,  \nand performs comfy model management functions and garbage collection,  \nreports free VRAM before and after the operations.\n",
    "category": "KJNodes/misc",
    "output_node": false
  },
  "EmptyLatentImagePresets": {
    "input": {
      "required": {
        "dimensions": [
          [
            "512 x 512",
            "768 x 512",
            "960 x 512",
            "1024 x 512",
            "1536 x 640",
            "1344 x 768",
            "1216 x 832",
            "1152 x 896",
            "1024 x 1024"
          ],
          {
            "default": "512 x 512"
          }
        ],
        "invert": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "Latent",
      "Width",
      "Height"
    ],
    "name": "EmptyLatentImagePresets",
    "display_name": "Empty Latent Image Presets",
    "description": "",
    "category": "KJNodes",
    "output_node": false
  },
  "ModelPassThrough": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "model"
    ],
    "name": "ModelPassThrough",
    "display_name": "ModelPass",
    "description": "\n    Simply passes through the model,\n    workaround for Set node not allowing bypassed inputs.\n",
    "category": "KJNodes/misc",
    "output_node": false
  },
  "NormalizedAmplitudeToMask": {
    "input": {
      "required": {
        "normalized_amp": [
          "NORMALIZED_AMPLITUDE"
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "frame_offset": [
          "INT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "location_x": [
          "INT",
          {
            "default": 256,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "location_y": [
          "INT",
          {
            "default": 256,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "size": [
          "INT",
          {
            "default": 128,
            "min": 8,
            "max": 4096,
            "step": 1
          }
        ],
        "shape": [
          [
            "none",
            "circle",
            "square",
            "triangle"
          ],
          {
            "default": "none"
          }
        ],
        "color": [
          [
            "white",
            "amplitude"
          ],
          {
            "default": "amplitude"
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "NormalizedAmplitudeToMask",
    "display_name": "NormalizedAmplitudeToMask",
    "description": "\nWorks as a bridge to the AudioScheduler -nodes:  \nhttps://github.com/a1lazydog/ComfyUI-AudioScheduler  \nCreates masks based on the normalized amplitude.\n",
    "category": "KJNodes/audio",
    "output_node": false
  },
  "NormalizedAmplitudeToFloatList": {
    "input": {
      "required": {
        "normalized_amp": [
          "NORMALIZED_AMPLITUDE"
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "NormalizedAmplitudeToFloatList",
    "display_name": "NormalizedAmplitudeToFloatList",
    "description": "\nWorks as a bridge to the AudioScheduler -nodes:  \nhttps://github.com/a1lazydog/ComfyUI-AudioScheduler  \nCreates a list of floats from the normalized amplitude.\n",
    "category": "KJNodes/audio",
    "output_node": false
  },
  "OffsetMaskByNormalizedAmplitude": {
    "input": {
      "required": {
        "normalized_amp": [
          "NORMALIZED_AMPLITUDE"
        ],
        "mask": [
          "MASK"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 16384,
            "step": 1,
            "display": "number"
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 16384,
            "step": 1,
            "display": "number"
          }
        ],
        "rotate": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "angle_multiplier": [
          "FLOAT",
          {
            "default": 0,
            "min": -1,
            "max": 1,
            "step": 0.001,
            "display": "number"
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "mask"
    ],
    "name": "OffsetMaskByNormalizedAmplitude",
    "display_name": "OffsetMaskByNormalizedAmplitude",
    "description": "\nWorks as a bridge to the AudioScheduler -nodes:  \nhttps://github.com/a1lazydog/ComfyUI-AudioScheduler  \nOffsets masks based on the normalized amplitude.\n",
    "category": "KJNodes/audio",
    "output_node": false
  },
  "ImageTransformByNormalizedAmplitude": {
    "input": {
      "required": {
        "normalized_amp": [
          "NORMALIZED_AMPLITUDE"
        ],
        "zoom_scale": [
          "FLOAT",
          {
            "default": 0,
            "min": -1,
            "max": 1,
            "step": 0.001,
            "display": "number"
          }
        ],
        "x_offset": [
          "INT",
          {
            "default": 0,
            "min": -16383,
            "max": 16384,
            "step": 1,
            "display": "number"
          }
        ],
        "y_offset": [
          "INT",
          {
            "default": 0,
            "min": -16383,
            "max": 16384,
            "step": 1,
            "display": "number"
          }
        ],
        "cumulative": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageTransformByNormalizedAmplitude",
    "display_name": "ImageTransformByNormalizedAmplitude",
    "description": "\nWorks as a bridge to the AudioScheduler -nodes:  \nhttps://github.com/a1lazydog/ComfyUI-AudioScheduler  \nTransforms image based on the normalized amplitude.\n",
    "category": "KJNodes/audio",
    "output_node": false
  },
  "SplineEditor": {
    "input": {
      "required": {
        "points_store": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "coordinates": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "mask_width": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 4096,
            "step": 8
          }
        ],
        "mask_height": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 4096,
            "step": 8
          }
        ],
        "points_to_sample": [
          "INT",
          {
            "default": 16,
            "min": 2,
            "max": 1000,
            "step": 1
          }
        ],
        "sampling_method": [
          [
            "path",
            "time"
          ],
          {
            "default": "time"
          }
        ],
        "interpolation": [
          [
            "cardinal",
            "monotone",
            "basis",
            "linear",
            "step-before",
            "step-after",
            "polar",
            "polar-reverse"
          ],
          {
            "default": "cardinal"
          }
        ],
        "tension": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "repeat_output": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "float_output_type": [
          [
            "list",
            "pandas series",
            "tensor"
          ],
          {
            "default": "list"
          }
        ]
      },
      "optional": {
        "min_value": [
          "FLOAT",
          {
            "default": 0,
            "min": -10000,
            "max": 10000,
            "step": 0.01
          }
        ],
        "max_value": [
          "FLOAT",
          {
            "default": 1,
            "min": -10000,
            "max": 10000,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MASK",
      "STRING",
      "FLOAT",
      "INT",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "mask",
      "coord_str",
      "float",
      "count",
      "normalized_str"
    ],
    "name": "SplineEditor",
    "display_name": "Spline Editor",
    "description": "\n# WORK IN PROGRESS  \nDo not count on this as part of your workflow yet,  \nprobably contains lots of bugs and stability is not  \nguaranteed!!  \n  \n## Graphical editor to create values for various   \n## schedules and/or mask batches.  \n\n**Shift + click** to add control point at end.\n**Ctrl + click** to add control point (subdivide) between two points.  \n**Right click on a point** to delete it.    \nNote that you can't delete from start/end.  \n  \nRight click on canvas for context menu:  \nThese are purely visual options, doesn't affect the output:  \n - Toggle handles visibility\n - Display sample points: display the points to be returned.  \n\n**points_to_sample** value sets the number of samples  \nreturned from the **drawn spline itself**, this is independent from the  \nactual control points, so the interpolation type matters.  \nsampling_method: \n - time: samples along the time axis, used for schedules  \n - path: samples along the path itself, useful for coordinates  \n\noutput types:\n - mask batch  \n        example compatible nodes: anything that takes masks  \n - list of floats\n        example compatible nodes: IPAdapter weights  \n - pandas series\n        example compatible nodes: anything that takes Fizz'  \n        nodes Batch Value Schedule  \n - torch tensor  \n        example compatible nodes: unknown\n",
    "category": "KJNodes/weights",
    "output_node": false
  },
  "CreateShapeImageOnPath": {
    "input": {
      "required": {
        "shape": [
          [
            "circle",
            "square",
            "triangle"
          ],
          {
            "default": "circle"
          }
        ],
        "coordinates": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "frame_width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "frame_height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "shape_width": [
          "INT",
          {
            "default": 128,
            "min": 8,
            "max": 4096,
            "step": 1
          }
        ],
        "shape_height": [
          "INT",
          {
            "default": 128,
            "min": 8,
            "max": 4096,
            "step": 1
          }
        ],
        "shape_color": [
          "STRING",
          {
            "default": "white"
          }
        ],
        "bg_color": [
          "STRING",
          {
            "default": "black"
          }
        ],
        "blur_radius": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.1
          }
        ],
        "intensity": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 100,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "size_multiplier": [
          "FLOAT",
          {
            "default": [1],
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "mask"
    ],
    "name": "CreateShapeImageOnPath",
    "display_name": "Create Shape Image On Path",
    "description": "\nCreates an image or batch of images with the specified shape.  \nLocations are center locations.  \n",
    "category": "KJNodes/image",
    "output_node": false
  },
  "CreateShapeMaskOnPath": {
    "input": {
      "required": {
        "shape": [
          [
            "circle",
            "square",
            "triangle"
          ],
          {
            "default": "circle"
          }
        ],
        "coordinates": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "frame_width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "frame_height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "shape_width": [
          "INT",
          {
            "default": 128,
            "min": 8,
            "max": 4096,
            "step": 1
          }
        ],
        "shape_height": [
          "INT",
          {
            "default": 128,
            "min": 8,
            "max": 4096,
            "step": 1
          }
        ]
      },
      "optional": {
        "size_multiplier": [
          "FLOAT",
          {
            "default": [1],
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "MASK",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "mask",
      "mask_inverted"
    ],
    "name": "CreateShapeMaskOnPath",
    "display_name": "Create Shape Mask On Path",
    "description": "\nCreates a mask or batch of masks with the specified shape.  \nLocations are center locations.  \n",
    "category": "KJNodes/masking/generate",
    "output_node": false
  },
  "CreateTextOnPath": {
    "input": {
      "required": {
        "coordinates": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text": [
          "STRING",
          {
            "default": "text",
            "multiline": true
          }
        ],
        "frame_width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "frame_height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "font": [
          [
            "FreeMono.ttf",
            "FreeMonoBoldOblique.otf",
            "TTNorms-Black.otf"
          ]
        ],
        "font_size": [
          "INT",
          {
            "default": 42
          }
        ],
        "alignment": [
          [
            "left",
            "center",
            "right"
          ],
          {
            "default": "center"
          }
        ],
        "text_color": [
          "STRING",
          {
            "default": "white"
          }
        ]
      },
      "optional": {
        "size_multiplier": [
          "FLOAT",
          {
            "default": [1],
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "MASK"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "image",
      "mask",
      "mask_inverted"
    ],
    "name": "CreateTextOnPath",
    "display_name": "Create Text On Path",
    "description": "\nCreates a mask or batch of masks with the specified text.  \nLocations are center locations.  \n",
    "category": "KJNodes/masking/generate",
    "output_node": false
  },
  "CreateGradientFromCoords": {
    "input": {
      "required": {
        "coordinates": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "frame_width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "frame_height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "start_color": [
          "STRING",
          {
            "default": "white"
          }
        ],
        "end_color": [
          "STRING",
          {
            "default": "black"
          }
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 100,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "CreateGradientFromCoords",
    "display_name": "Create Gradient From Coords",
    "description": "\nCreates a gradient image from coordinates.    \n",
    "category": "KJNodes/image",
    "output_node": false
  },
  "GradientToFloat": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "steps": [
          "INT",
          {
            "default": 10,
            "min": 2,
            "max": 10000,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "FLOAT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "float_x",
      "float_y"
    ],
    "name": "GradientToFloat",
    "display_name": "Gradient To Float",
    "description": "\nCalculates list of floats from image.    \n",
    "category": "KJNodes/image",
    "output_node": false
  },
  "WeightScheduleExtend": {
    "input": {
      "required": {
        "input_values_1": [
          "FLOAT",
          {
            "default": 0,
            "forceInput": true
          }
        ],
        "input_values_2": [
          "FLOAT",
          {
            "default": 0,
            "forceInput": true
          }
        ],
        "output_type": [
          [
            "match_input",
            "list",
            "pandas series",
            "tensor"
          ],
          {
            "default": "match_input"
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "WeightScheduleExtend",
    "display_name": "Weight Schedule Extend",
    "description": "\nExtends, and converts if needed, different value lists/series  \n",
    "category": "KJNodes/weights",
    "output_node": false
  },
  "MaskOrImageToWeight": {
    "input": {
      "required": {
        "output_type": [
          [
            "list",
            "pandas series",
            "tensor",
            "string"
          ],
          {
            "default": "list"
          }
        ]
      },
      "optional": {
        "images": [
          "IMAGE"
        ],
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "FLOAT",
      "STRING"
    ],
    "name": "MaskOrImageToWeight",
    "display_name": "Mask Or Image To Weight",
    "description": "\nGets the mean values from mask or image batch  \nand returns that as the selected output type.   \n",
    "category": "KJNodes/weights",
    "output_node": false
  },
  "WeightScheduleConvert": {
    "input": {
      "required": {
        "input_values": [
          "FLOAT",
          {
            "default": 0,
            "forceInput": true
          }
        ],
        "output_type": [
          [
            "match_input",
            "list",
            "pandas series",
            "tensor"
          ],
          {
            "default": "list"
          }
        ],
        "invert": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "repeat": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ]
      },
      "optional": {
        "remap_to_frames": [
          "INT",
          {
            "default": 0
          }
        ],
        "interpolation_curve": [
          "FLOAT",
          {
            "forceInput": true
          }
        ],
        "remap_values": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "remap_min": [
          "FLOAT",
          {
            "default": 0,
            "min": -100000,
            "max": 100000,
            "step": 0.01
          }
        ],
        "remap_max": [
          "FLOAT",
          {
            "default": 1,
            "min": -100000,
            "max": 100000,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "STRING",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "FLOAT",
      "STRING",
      "INT"
    ],
    "name": "WeightScheduleConvert",
    "display_name": "Weight Schedule Convert",
    "description": "\nConverts different value lists/series to another type.  \n",
    "category": "KJNodes/weights",
    "output_node": false
  },
  "FloatToMask": {
    "input": {
      "required": {
        "input_values": [
          "FLOAT",
          {
            "forceInput": true,
            "default": 0
          }
        ],
        "width": [
          "INT",
          {
            "default": 100,
            "min": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 100,
            "min": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "FloatToMask",
    "display_name": "Float To Mask",
    "description": "\nGenerates a batch of masks based on the input float values.\nThe batch size is determined by the length of the input float values.\nEach mask is generated with the specified width and height.\n",
    "category": "KJNodes/masking/generate",
    "output_node": false
  },
  "FloatToSigmas": {
    "input": {
      "required": {
        "float_list": [
          "FLOAT",
          {
            "default": 0,
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SIGMAS"
    ],
    "name": "FloatToSigmas",
    "display_name": "Float To Sigmas",
    "description": "\nCreates a sigmas tensor from list of float values.  \n\n",
    "category": "KJNodes/noise",
    "output_node": false
  },
  "PlotCoordinates": {
    "input": {
      "required": {
        "coordinates": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text": [
          "STRING",
          {
            "default": "title",
            "multiline": false
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 4096,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 4096,
            "step": 8
          }
        ],
        "bbox_width": [
          "INT",
          {
            "default": 128,
            "min": 8,
            "max": 4096,
            "step": 8
          }
        ],
        "bbox_height": [
          "INT",
          {
            "default": 128,
            "min": 8,
            "max": 4096,
            "step": 8
          }
        ]
      },
      "optional": {
        "size_multiplier": [
          "FLOAT",
          {
            "default": [1],
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "INT",
      "INT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "images",
      "width",
      "height",
      "bbox_width",
      "bbox_height"
    ],
    "name": "PlotCoordinates",
    "display_name": "Plot Coordinates",
    "description": "\nPlots coordinates to sequence of images using Matplotlib.  \n\n",
    "category": "KJNodes/experimental",
    "output_node": false
  },
  "InterpolateCoords": {
    "input": {
      "required": {
        "coordinates": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "interpolation_curve": [
          "FLOAT",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "coordinates"
    ],
    "name": "InterpolateCoords",
    "display_name": "Interpolate Coords",
    "description": "\nInterpolates coordinates based on a curve.   \n",
    "category": "KJNodes/experimental",
    "output_node": false
  },
  "StabilityAPI_SD3": {
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "n_prompt": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "seed": [
          "INT",
          {
            "default": 123,
            "min": 0,
            "max": 4294967294,
            "step": 1
          }
        ],
        "model": [
          [
            "sd3",
            "sd3-turbo"
          ],
          {
            "default": "sd3"
          }
        ],
        "aspect_ratio": [
          [
            "1:1",
            "16:9",
            "21:9",
            "2:3",
            "3:2",
            "4:5",
            "5:4",
            "9:16",
            "9:21"
          ],
          {
            "default": "1:1"
          }
        ],
        "output_format": [
          [
            "png",
            "jpeg"
          ],
          {
            "default": "jpeg"
          }
        ]
      },
      "optional": {
        "api_key": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "image": [
          "IMAGE"
        ],
        "img2img_strength": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "disable_metadata": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "StabilityAPI_SD3",
    "display_name": "Stability API SD3",
    "description": "\n## Calls StabilityAI API\n   \nAlthough you may have multiple keys in your account,  \nyou should use the same key for all requests to this API.  \n\nGet your API key here: https://platform.stability.ai/account/keys  \nRecommended to set the key in the config.json -file under this  \nnode packs folder.  \n# WARNING:  \nOtherwise the API key may get saved in the image metadata even  \nwith \"disable_metadata\" on if the workflow includes save nodes  \nseparate from this node.  \n   \nsd3 requires 6.5 credits per generation  \nsd3-turbo requires 4 credits per generation  \n\nIf no image is provided, mode is set to text-to-image  \n\n",
    "category": "KJNodes/experimental",
    "output_node": false
  },
  "SoundReactive": {
    "input": {
      "required": {
        "sound_level": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 99999,
            "step": 0.01
          }
        ],
        "start_range_hz": [
          "INT",
          {
            "default": 150,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "end_range_hz": [
          "INT",
          {
            "default": 2000,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 99999,
            "step": 0.01
          }
        ],
        "smoothing_factor": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "normalize": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "sound_level",
      "sound_level_int"
    ],
    "name": "SoundReactive",
    "display_name": "Sound Reactive",
    "description": "\nReacts to the sound level of the input.  \nUses your browsers sound input options and requires.  \nMeant to be used with realtime diffusion with autoqueue.\n",
    "category": "KJNodes/audio",
    "output_node": false
  },
  "StableZero123_BatchSchedule": {
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "init_image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ],
        "interpolation": [
          [
            "linear",
            "ease_in",
            "ease_out",
            "ease_in_out"
          ]
        ],
        "azimuth_points_string": [
          "STRING",
          {
            "default": "0:(0.0),\n7:(1.0),\n15:(0.0)\n",
            "multiline": true
          }
        ],
        "elevation_points_string": [
          "STRING",
          {
            "default": "0:(0.0),\n7:(0.0),\n15:(0.0)\n",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "name": "StableZero123_BatchSchedule",
    "display_name": "Stable Zero123 Batch Schedule",
    "description": "",
    "category": "KJNodes/experimental",
    "output_node": false
  },
  "SV3D_BatchSchedule": {
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "init_image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "default": 576,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 576,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 21,
            "min": 1,
            "max": 4096
          }
        ],
        "interpolation": [
          [
            "linear",
            "ease_in",
            "ease_out",
            "ease_in_out"
          ]
        ],
        "azimuth_points_string": [
          "STRING",
          {
            "default": "0:(0.0),\n9:(180.0),\n20:(360.0)\n",
            "multiline": true
          }
        ],
        "elevation_points_string": [
          "STRING",
          {
            "default": "0:(0.0),\n9:(0.0),\n20:(0.0)\n",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "name": "SV3D_BatchSchedule",
    "display_name": "SV3D Batch Schedule",
    "description": "\nAllow scheduling of the azimuth and elevation conditions for SV3D.  \nNote that SV3D is still a video model and the schedule needs to always go forward  \nhttps://huggingface.co/stabilityai/sv3d\n",
    "category": "KJNodes/experimental",
    "output_node": false
  },
  "LoadResAdapterNormalization": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "resadapter_path": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "LoadResAdapterNormalization",
    "display_name": "LoadResAdapterNormalization",
    "description": "",
    "category": "KJNodes/experimental",
    "output_node": false
  },
  "Superprompt": {
    "input": {
      "required": {
        "instruction_prompt": [
          "STRING",
          {
            "default": "Expand the following prompt to add more detail",
            "multiline": true
          }
        ],
        "prompt": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "forceInput": true
          }
        ],
        "max_new_tokens": [
          "INT",
          {
            "default": 128,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Superprompt",
    "display_name": "Superprompt",
    "description": "\n# SuperPrompt\nA T5 model fine-tuned on the SuperPrompt dataset for  \nupsampling text prompts to more detailed descriptions.  \nMeant to be used as a pre-generation step for text-to-image  \nmodels that benefit from more detailed prompts.  \nhttps://huggingface.co/roborovski/superprompt-v1\n",
    "category": "KJNodes/text",
    "output_node": false
  },
  "GLIGENTextBoxApplyBatchCoords": {
    "input": {
      "required": {
        "conditioning_to": [
          "CONDITIONING"
        ],
        "latents": [
          "LATENT"
        ],
        "clip": [
          "CLIP"
        ],
        "gligen_textbox_model": [
          "GLIGEN"
        ],
        "coordinates": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "width": [
          "INT",
          {
            "default": 128,
            "min": 8,
            "max": 4096,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 128,
            "min": 8,
            "max": 4096,
            "step": 8
          }
        ]
      },
      "optional": {
        "size_multiplier": [
          "FLOAT",
          {
            "default": [1],
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "conditioning",
      "coord_preview"
    ],
    "name": "GLIGENTextBoxApplyBatchCoords",
    "display_name": "GLIGENTextBoxApplyBatchCoords",
    "description": "\nThis node allows scheduling GLIGEN text box positions in a batch,  \nto be used with AnimateDiff-Evolved. Intended to pair with the  \nSpline Editor -node.  \n\nGLIGEN model can be downloaded through the Manage's \"Install Models\" menu.  \nOr directly from here:  \nhttps://huggingface.co/comfyanonymous/GLIGEN_pruned_safetensors/tree/main  \n  \nInputs:  \n- **latents** input is used to calculate batch size  \n- **clip** is your standard text encoder, use same as for the main prompt  \n- **gligen_textbox_model** connects to GLIGEN Loader  \n- **coordinates** takes a json string of points, directly compatible  \nwith the spline editor node.\n- **text** is the part of the prompt to set position for  \n- **width** and **height** are the size of the GLIGEN bounding box  \n  \nOutputs:\n- **conditioning** goes between to clip text encode and the sampler  \n- **coord_preview** is an optional preview of the coordinates and  \nbounding boxes.\n\n",
    "category": "KJNodes/experimental",
    "output_node": false
  },
  "Intrinsic_lora_sampling": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "lora_name": [
          [
            "intrinsic_lora_sd15_albedo.safetensors",
            "intrinsic_lora_sd15_depth.safetensors",
            "intrinsic_lora_sd15_normal.safetensors",
            "intrinsic_lora_sd15_shading.safetensors",
            "intrinsic_loras.txt"
          ]
        ],
        "task": [
          [
            "depth map",
            "surface normals",
            "albedo",
            "shading"
          ],
          {
            "default": "depth map"
          }
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "per_batch": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ],
        "optional_latent": [
          "LATENT"
        ]
      }
    },
    "output": [
      "IMAGE",
      "LATENT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "LATENT"
    ],
    "name": "Intrinsic_lora_sampling",
    "display_name": "Intrinsic Lora Sampling",
    "description": "\nSampler to use the intrinsic loras:  \nhttps://github.com/duxiaodan/intrinsic-lora  \nThese LoRAs are tiny and thus included  \nwith this node pack.\n",
    "category": "KJNodes",
    "output_node": false
  },
  "CreateInstanceDiffusionTracking": {
    "input": {
      "required": {
        "coordinates": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "bbox_width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "bbox_height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "class_name": [
          "STRING",
          {
            "default": "class_name"
          }
        ],
        "class_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "prompt": [
          "STRING",
          {
            "default": "prompt",
            "multiline": true
          }
        ]
      },
      "optional": {
        "size_multiplier": [
          "FLOAT",
          {
            "default": [1],
            "forceInput": true
          }
        ],
        "fit_in_frame": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "TRACKING",
      "STRING",
      "INT",
      "INT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "tracking",
      "prompt",
      "width",
      "height",
      "bbox_width",
      "bbox_height"
    ],
    "name": "CreateInstanceDiffusionTracking",
    "display_name": "CreateInstanceDiffusionTracking",
    "description": "\nCreates tracking data to be used with InstanceDiffusion:  \nhttps://github.com/logtd/ComfyUI-InstanceDiffusion  \n  \nInstanceDiffusion prompt format:  \n\"class_id.class_name\": \"prompt\",  \nfor example:  \n\"1.head\": \"((head))\",  \n",
    "category": "KJNodes/InstanceDiffusion",
    "output_node": false
  },
  "AppendInstanceDiffusionTracking": {
    "input": {
      "required": {
        "tracking_1": [
          "TRACKING",
          {
            "forceInput": true
          }
        ],
        "tracking_2": [
          "TRACKING",
          {
            "forceInput": true
          }
        ]
      },
      "optional": {
        "prompt_1": [
          "STRING",
          {
            "default": "",
            "forceInput": true
          }
        ],
        "prompt_2": [
          "STRING",
          {
            "default": "",
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "TRACKING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "tracking",
      "prompt"
    ],
    "name": "AppendInstanceDiffusionTracking",
    "display_name": "AppendInstanceDiffusionTracking",
    "description": "\nAppends tracking data to be used with InstanceDiffusion:  \nhttps://github.com/logtd/ComfyUI-InstanceDiffusion  \n\n",
    "category": "KJNodes/InstanceDiffusion",
    "output_node": false
  },
  "DrawInstanceDiffusionTracking": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "tracking": [
          "TRACKING",
          {
            "forceInput": true
          }
        ],
        "box_line_width": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ],
        "draw_text": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "font": [
          [
            "FreeMono.ttf",
            "FreeMonoBoldOblique.otf",
            "TTNorms-Black.otf"
          ]
        ],
        "font_size": [
          "INT",
          {
            "default": 20
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "DrawInstanceDiffusionTracking",
    "display_name": "DrawInstanceDiffusionTracking",
    "description": "\nDraws the tracking data from  \nCreateInstanceDiffusionTracking -node.\n\n",
    "category": "KJNodes/InstanceDiffusion",
    "output_node": false
  },
  "Context Big (rgthree)": {
    "input": {
      "required": {

      },
      "optional": {
        "base_ctx": [
          "RGTHREE_CONTEXT"
        ],
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent": [
          "LATENT"
        ],
        "images": [
          "IMAGE"
        ],
        "seed": [
          "INT",
          {
            "forceInput": true
          }
        ],
        "steps": [
          "INT",
          {
            "forceInput": true
          }
        ],
        "step_refiner": [
          "INT",
          {
            "forceInput": true
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "forceInput": true
          }
        ],
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ],
          {
            "forceInput": true
          }
        ],
        "sampler": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ],
          {
            "forceInput": true
          }
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ],
          {
            "forceInput": true
          }
        ],
        "clip_width": [
          "INT",
          {
            "forceInput": true
          }
        ],
        "clip_height": [
          "INT",
          {
            "forceInput": true
          }
        ],
        "text_pos_g": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_pos_l": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_neg_g": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_neg_l": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "mask": [
          "MASK"
        ],
        "control_net": [
          "CONTROL_NET"
        ]
      },
      "hidden": {

      }
    },
    "output": [
      "RGTHREE_CONTEXT",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "IMAGE",
      "INT",
      "INT",
      "INT",
      "FLOAT",
      [
        "sd1.5/AOM3A1.safetensors",
        "sd1.5/CounterfeitV30_v30.safetensors",
        "sd1.5/Deliberate_v3.safetensors",
        "sd1.5/Deliberate_v4-inpainting.safetensors",
        "sd1.5/ProteusV0.4.safetensors",
        "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
        "sd1.5/allInOnePixelModel_v1.ckpt",
        "sd1.5/analogDiffusion_10Safetensors.safetensors",
        "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
        "sd1.5/anythingV3_fp16.ckpt",
        "sd1.5/arcaneDiffusion_v3.ckpt",
        "sd1.5/archer-v1.ckpt",
        "sd1.5/cardosAnime_v10.safetensors",
        "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
        "sd1.5/classicAnim-v1.ckpt",
        "sd1.5/comic-diffusion-V2.ckpt",
        "sd1.5/complexLineart_v1.ckpt",
        "sd1.5/ddosmix_V2.safetensors",
        "sd1.5/deepSpaceDiffusion_v1.ckpt",
        "sd1.5/deliberate_v2.safetensors",
        "sd1.5/dosmix_.safetensors",
        "sd1.5/dreamshaper_631BakedVae.safetensors",
        "sd1.5/dreamshaper_8.safetensors",
        "sd1.5/eldenRingStyle_v3.ckpt",
        "sd1.5/elldrethsLucidMix_v10.safetensors",
        "sd1.5/elldrethsOG4060Mix_v10.ckpt",
        "sd1.5/elldrethsRetroMix_v10.safetensors",
        "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
        "sd1.5/f222_v1.ckpt",
        "sd1.5/helloyoung25d_V10f.safetensors",
        "sd1.5/inkpunkDiffusion_v2.ckpt",
        "sd1.5/instruct-pix2pix-00-22000.ckpt",
        "sd1.5/juggernaut_reborn.safetensors",
        "sd1.5/landscapeAnimePro_v20W768.safetensors",
        "sd1.5/meinamix_meinaV10.safetensors",
        "sd1.5/meinamix_meinaV11.safetensors",
        "sd1.5/microworlds_v1.ckpt",
        "sd1.5/midjourneyPapercut_v1.ckpt",
        "sd1.5/model.ckpt",
        "sd1.5/modelshootStyle_modelshoot10.ckpt",
        "sd1.5/modernDisney_v1.ckpt",
        "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
        "sd1.5/openjourney_V4.ckpt",
        "sd1.5/papercut_v1.ckpt",
        "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
        "sd1.5/perfectWorld_v6Baked.safetensors",
        "sd1.5/photonLCM_v10.safetensors",
        "sd1.5/photon_v1.safetensors",
        "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
        "sd1.5/portrait_10.ckpt",
        "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
        "sd1.5/realdosmix_.safetensors",
        "sd1.5/realisticVisionV13_v13.safetensors",
        "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
        "sd1.5/redshiftDiffusion_v1.ckpt",
        "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
        "sd1.5/rpg_V4.safetensors",
        "sd1.5/samdoesartV3_v3.ckpt",
        "sd1.5/samdoesartsUltmerge_v1.ckpt",
        "sd1.5/samdoessexyBlend_safetensor.safetensors",
        "sd1.5/sd-v1-5-inpainting.ckpt",
        "sd1.5/superhero-diffusion.ckpt",
        "sd1.5/supermixPreLineart_v1.safetensors",
        "sd1.5/svd.safetensors",
        "sd1.5/synthwavepunk_v2.ckpt",
        "sd1.5/theAllysMix_v10Safetensors.safetensors",
        "sd1.5/toonAme_version10.safetensors",
        "sd1.5/v1-5-pruned-emaonly.ckpt",
        "sd1.5/v1-5-pruned-emaonly.safetensors",
        "sd1.5/v1-5-pruned.ckpt",
        "sd1.5/v2-1_512-ema-pruned.safetensors",
        "sd1.5/v2-1_768-ema-pruned.safetensors",
        "sd1.5/vintedois-diffusion-v0-2.safetensors",
        "sd1.5/vinteprotogenmix_V20.safetensors",
        "sd1.5/waifuDiffusion_v13Fp32.ckpt",
        "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
        "sdxl/albedobaseXL_v21.safetensors",
        "sdxl/cosxl.safetensors",
        "sdxl/juggernautXL_v8Rundiffusion.safetensors",
        "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
        "sdxl/juggernautXL_version6Rundiffusion.safetensors",
        "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
        "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
        "sdxl/sd_xl_base_1.0.safetensors",
        "sdxl/sd_xl_refiner_1.0.safetensors",
        "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
        "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
        "stable_cascade/stable_cascade_stage_b.safetensors",
        "stable_cascade/stable_cascade_stage_c.safetensors",
        "stable_cascade/stage_b_bf16.safetensors",
        "stable_cascade/stage_c_bf16.safetensors",
        "supir/SUPIR-v0F.ckpt",
        "supir/SUPIR-v0Q.ckpt"
      ],
      [
        "euler",
        "euler_ancestral",
        "heun",
        "heunpp2",
        "dpm_2",
        "dpm_2_ancestral",
        "lms",
        "dpm_fast",
        "dpm_adaptive",
        "dpmpp_2s_ancestral",
        "dpmpp_sde",
        "dpmpp_sde_gpu",
        "dpmpp_2m",
        "dpmpp_2m_sde",
        "dpmpp_2m_sde_gpu",
        "dpmpp_3m_sde",
        "dpmpp_3m_sde_gpu",
        "ddpm",
        "lcm",
        "ddim",
        "uni_pc",
        "uni_pc_bh2"
      ],
      [
        "normal",
        "karras",
        "exponential",
        "sgm_uniform",
        "simple",
        "ddim_uniform"
      ],
      "INT",
      "INT",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "MASK",
      "CONTROL_NET"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],
    "output_name": [
      "CONTEXT",
      "MODEL",
      "CLIP",
      "VAE",
      "POSITIVE",
      "NEGATIVE",
      "LATENT",
      "IMAGE",
      "SEED",
      "STEPS",
      "STEP_REFINER",
      "CFG",
      "CKPT_NAME",
      "SAMPLER",
      "SCHEDULER",
      "CLIP_WIDTH",
      "CLIP_HEIGHT",
      "TEXT_POS_G",
      "TEXT_POS_L",
      "TEXT_NEG_G",
      "TEXT_NEG_L",
      "MASK",
      "CONTROL_NET"
    ],
    "name": "Context Big (rgthree)",
    "display_name": "Context Big (rgthree)",
    "description": "",
    "category": "rgthree",
    "output_node": false
  },
  "Context (rgthree)": {
    "input": {
      "required": {

      },
      "optional": {
        "base_ctx": [
          "RGTHREE_CONTEXT"
        ],
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent": [
          "LATENT"
        ],
        "images": [
          "IMAGE"
        ],
        "seed": [
          "INT",
          {
            "forceInput": true
          }
        ]
      },
      "hidden": {
        "version": "FLOAT"
      }
    },
    "output": [
      "RGTHREE_CONTEXT",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "IMAGE",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false, false],
    "output_name": [
      "CONTEXT",
      "MODEL",
      "CLIP",
      "VAE",
      "POSITIVE",
      "NEGATIVE",
      "LATENT",
      "IMAGE",
      "SEED"
    ],
    "name": "Context (rgthree)",
    "display_name": "Context (rgthree)",
    "description": "",
    "category": "rgthree",
    "output_node": false
  },
  "Context Switch (rgthree)": {
    "input": {
      "required": {

      },
      "optional": {
        "ctx_01": [
          "RGTHREE_CONTEXT"
        ],
        "ctx_02": [
          "RGTHREE_CONTEXT"
        ],
        "ctx_03": [
          "RGTHREE_CONTEXT"
        ],
        "ctx_04": [
          "RGTHREE_CONTEXT"
        ],
        "ctx_05": [
          "RGTHREE_CONTEXT"
        ]
      }
    },
    "output": [
      "RGTHREE_CONTEXT",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "IMAGE",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false, false],
    "output_name": [
      "CONTEXT",
      "MODEL",
      "CLIP",
      "VAE",
      "POSITIVE",
      "NEGATIVE",
      "LATENT",
      "IMAGE",
      "SEED"
    ],
    "name": "Context Switch (rgthree)",
    "display_name": "Context Switch (rgthree)",
    "description": "",
    "category": "rgthree",
    "output_node": false
  },
  "Context Switch Big (rgthree)": {
    "input": {
      "required": {

      },
      "optional": {
        "ctx_01": [
          "RGTHREE_CONTEXT"
        ],
        "ctx_02": [
          "RGTHREE_CONTEXT"
        ],
        "ctx_03": [
          "RGTHREE_CONTEXT"
        ],
        "ctx_04": [
          "RGTHREE_CONTEXT"
        ],
        "ctx_05": [
          "RGTHREE_CONTEXT"
        ]
      }
    },
    "output": [
      "RGTHREE_CONTEXT",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "IMAGE",
      "INT",
      "INT",
      "INT",
      "FLOAT",
      [
        "sd1.5/AOM3A1.safetensors",
        "sd1.5/CounterfeitV30_v30.safetensors",
        "sd1.5/Deliberate_v3.safetensors",
        "sd1.5/Deliberate_v4-inpainting.safetensors",
        "sd1.5/ProteusV0.4.safetensors",
        "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
        "sd1.5/allInOnePixelModel_v1.ckpt",
        "sd1.5/analogDiffusion_10Safetensors.safetensors",
        "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
        "sd1.5/anythingV3_fp16.ckpt",
        "sd1.5/arcaneDiffusion_v3.ckpt",
        "sd1.5/archer-v1.ckpt",
        "sd1.5/cardosAnime_v10.safetensors",
        "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
        "sd1.5/classicAnim-v1.ckpt",
        "sd1.5/comic-diffusion-V2.ckpt",
        "sd1.5/complexLineart_v1.ckpt",
        "sd1.5/ddosmix_V2.safetensors",
        "sd1.5/deepSpaceDiffusion_v1.ckpt",
        "sd1.5/deliberate_v2.safetensors",
        "sd1.5/dosmix_.safetensors",
        "sd1.5/dreamshaper_631BakedVae.safetensors",
        "sd1.5/dreamshaper_8.safetensors",
        "sd1.5/eldenRingStyle_v3.ckpt",
        "sd1.5/elldrethsLucidMix_v10.safetensors",
        "sd1.5/elldrethsOG4060Mix_v10.ckpt",
        "sd1.5/elldrethsRetroMix_v10.safetensors",
        "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
        "sd1.5/f222_v1.ckpt",
        "sd1.5/helloyoung25d_V10f.safetensors",
        "sd1.5/inkpunkDiffusion_v2.ckpt",
        "sd1.5/instruct-pix2pix-00-22000.ckpt",
        "sd1.5/juggernaut_reborn.safetensors",
        "sd1.5/landscapeAnimePro_v20W768.safetensors",
        "sd1.5/meinamix_meinaV10.safetensors",
        "sd1.5/meinamix_meinaV11.safetensors",
        "sd1.5/microworlds_v1.ckpt",
        "sd1.5/midjourneyPapercut_v1.ckpt",
        "sd1.5/model.ckpt",
        "sd1.5/modelshootStyle_modelshoot10.ckpt",
        "sd1.5/modernDisney_v1.ckpt",
        "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
        "sd1.5/openjourney_V4.ckpt",
        "sd1.5/papercut_v1.ckpt",
        "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
        "sd1.5/perfectWorld_v6Baked.safetensors",
        "sd1.5/photonLCM_v10.safetensors",
        "sd1.5/photon_v1.safetensors",
        "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
        "sd1.5/portrait_10.ckpt",
        "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
        "sd1.5/realdosmix_.safetensors",
        "sd1.5/realisticVisionV13_v13.safetensors",
        "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
        "sd1.5/redshiftDiffusion_v1.ckpt",
        "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
        "sd1.5/rpg_V4.safetensors",
        "sd1.5/samdoesartV3_v3.ckpt",
        "sd1.5/samdoesartsUltmerge_v1.ckpt",
        "sd1.5/samdoessexyBlend_safetensor.safetensors",
        "sd1.5/sd-v1-5-inpainting.ckpt",
        "sd1.5/superhero-diffusion.ckpt",
        "sd1.5/supermixPreLineart_v1.safetensors",
        "sd1.5/svd.safetensors",
        "sd1.5/synthwavepunk_v2.ckpt",
        "sd1.5/theAllysMix_v10Safetensors.safetensors",
        "sd1.5/toonAme_version10.safetensors",
        "sd1.5/v1-5-pruned-emaonly.ckpt",
        "sd1.5/v1-5-pruned-emaonly.safetensors",
        "sd1.5/v1-5-pruned.ckpt",
        "sd1.5/v2-1_512-ema-pruned.safetensors",
        "sd1.5/v2-1_768-ema-pruned.safetensors",
        "sd1.5/vintedois-diffusion-v0-2.safetensors",
        "sd1.5/vinteprotogenmix_V20.safetensors",
        "sd1.5/waifuDiffusion_v13Fp32.ckpt",
        "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
        "sdxl/albedobaseXL_v21.safetensors",
        "sdxl/cosxl.safetensors",
        "sdxl/juggernautXL_v8Rundiffusion.safetensors",
        "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
        "sdxl/juggernautXL_version6Rundiffusion.safetensors",
        "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
        "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
        "sdxl/sd_xl_base_1.0.safetensors",
        "sdxl/sd_xl_refiner_1.0.safetensors",
        "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
        "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
        "stable_cascade/stable_cascade_stage_b.safetensors",
        "stable_cascade/stable_cascade_stage_c.safetensors",
        "stable_cascade/stage_b_bf16.safetensors",
        "stable_cascade/stage_c_bf16.safetensors",
        "supir/SUPIR-v0F.ckpt",
        "supir/SUPIR-v0Q.ckpt"
      ],
      [
        "euler",
        "euler_ancestral",
        "heun",
        "heunpp2",
        "dpm_2",
        "dpm_2_ancestral",
        "lms",
        "dpm_fast",
        "dpm_adaptive",
        "dpmpp_2s_ancestral",
        "dpmpp_sde",
        "dpmpp_sde_gpu",
        "dpmpp_2m",
        "dpmpp_2m_sde",
        "dpmpp_2m_sde_gpu",
        "dpmpp_3m_sde",
        "dpmpp_3m_sde_gpu",
        "ddpm",
        "lcm",
        "ddim",
        "uni_pc",
        "uni_pc_bh2"
      ],
      [
        "normal",
        "karras",
        "exponential",
        "sgm_uniform",
        "simple",
        "ddim_uniform"
      ],
      "INT",
      "INT",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "MASK",
      "CONTROL_NET"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],
    "output_name": [
      "CONTEXT",
      "MODEL",
      "CLIP",
      "VAE",
      "POSITIVE",
      "NEGATIVE",
      "LATENT",
      "IMAGE",
      "SEED",
      "STEPS",
      "STEP_REFINER",
      "CFG",
      "CKPT_NAME",
      "SAMPLER",
      "SCHEDULER",
      "CLIP_WIDTH",
      "CLIP_HEIGHT",
      "TEXT_POS_G",
      "TEXT_POS_L",
      "TEXT_NEG_G",
      "TEXT_NEG_L",
      "MASK",
      "CONTROL_NET"
    ],
    "name": "Context Switch Big (rgthree)",
    "display_name": "Context Switch Big (rgthree)",
    "description": "",
    "category": "rgthree",
    "output_node": false
  },
  "Context Merge (rgthree)": {
    "input": {
      "required": {

      },
      "optional": {
        "ctx_01": [
          "RGTHREE_CONTEXT"
        ],
        "ctx_02": [
          "RGTHREE_CONTEXT"
        ],
        "ctx_03": [
          "RGTHREE_CONTEXT"
        ],
        "ctx_04": [
          "RGTHREE_CONTEXT"
        ],
        "ctx_05": [
          "RGTHREE_CONTEXT"
        ]
      }
    },
    "output": [
      "RGTHREE_CONTEXT",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "IMAGE",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false, false],
    "output_name": [
      "CONTEXT",
      "MODEL",
      "CLIP",
      "VAE",
      "POSITIVE",
      "NEGATIVE",
      "LATENT",
      "IMAGE",
      "SEED"
    ],
    "name": "Context Merge (rgthree)",
    "display_name": "Context Merge (rgthree)",
    "description": "",
    "category": "rgthree",
    "output_node": false
  },
  "Context Merge Big (rgthree)": {
    "input": {
      "required": {

      },
      "optional": {
        "ctx_01": [
          "RGTHREE_CONTEXT"
        ],
        "ctx_02": [
          "RGTHREE_CONTEXT"
        ],
        "ctx_03": [
          "RGTHREE_CONTEXT"
        ],
        "ctx_04": [
          "RGTHREE_CONTEXT"
        ],
        "ctx_05": [
          "RGTHREE_CONTEXT"
        ]
      }
    },
    "output": [
      "RGTHREE_CONTEXT",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "IMAGE",
      "INT",
      "INT",
      "INT",
      "FLOAT",
      [
        "sd1.5/AOM3A1.safetensors",
        "sd1.5/CounterfeitV30_v30.safetensors",
        "sd1.5/Deliberate_v3.safetensors",
        "sd1.5/Deliberate_v4-inpainting.safetensors",
        "sd1.5/ProteusV0.4.safetensors",
        "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
        "sd1.5/allInOnePixelModel_v1.ckpt",
        "sd1.5/analogDiffusion_10Safetensors.safetensors",
        "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
        "sd1.5/anythingV3_fp16.ckpt",
        "sd1.5/arcaneDiffusion_v3.ckpt",
        "sd1.5/archer-v1.ckpt",
        "sd1.5/cardosAnime_v10.safetensors",
        "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
        "sd1.5/classicAnim-v1.ckpt",
        "sd1.5/comic-diffusion-V2.ckpt",
        "sd1.5/complexLineart_v1.ckpt",
        "sd1.5/ddosmix_V2.safetensors",
        "sd1.5/deepSpaceDiffusion_v1.ckpt",
        "sd1.5/deliberate_v2.safetensors",
        "sd1.5/dosmix_.safetensors",
        "sd1.5/dreamshaper_631BakedVae.safetensors",
        "sd1.5/dreamshaper_8.safetensors",
        "sd1.5/eldenRingStyle_v3.ckpt",
        "sd1.5/elldrethsLucidMix_v10.safetensors",
        "sd1.5/elldrethsOG4060Mix_v10.ckpt",
        "sd1.5/elldrethsRetroMix_v10.safetensors",
        "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
        "sd1.5/f222_v1.ckpt",
        "sd1.5/helloyoung25d_V10f.safetensors",
        "sd1.5/inkpunkDiffusion_v2.ckpt",
        "sd1.5/instruct-pix2pix-00-22000.ckpt",
        "sd1.5/juggernaut_reborn.safetensors",
        "sd1.5/landscapeAnimePro_v20W768.safetensors",
        "sd1.5/meinamix_meinaV10.safetensors",
        "sd1.5/meinamix_meinaV11.safetensors",
        "sd1.5/microworlds_v1.ckpt",
        "sd1.5/midjourneyPapercut_v1.ckpt",
        "sd1.5/model.ckpt",
        "sd1.5/modelshootStyle_modelshoot10.ckpt",
        "sd1.5/modernDisney_v1.ckpt",
        "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
        "sd1.5/openjourney_V4.ckpt",
        "sd1.5/papercut_v1.ckpt",
        "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
        "sd1.5/perfectWorld_v6Baked.safetensors",
        "sd1.5/photonLCM_v10.safetensors",
        "sd1.5/photon_v1.safetensors",
        "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
        "sd1.5/portrait_10.ckpt",
        "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
        "sd1.5/realdosmix_.safetensors",
        "sd1.5/realisticVisionV13_v13.safetensors",
        "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
        "sd1.5/redshiftDiffusion_v1.ckpt",
        "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
        "sd1.5/rpg_V4.safetensors",
        "sd1.5/samdoesartV3_v3.ckpt",
        "sd1.5/samdoesartsUltmerge_v1.ckpt",
        "sd1.5/samdoessexyBlend_safetensor.safetensors",
        "sd1.5/sd-v1-5-inpainting.ckpt",
        "sd1.5/superhero-diffusion.ckpt",
        "sd1.5/supermixPreLineart_v1.safetensors",
        "sd1.5/svd.safetensors",
        "sd1.5/synthwavepunk_v2.ckpt",
        "sd1.5/theAllysMix_v10Safetensors.safetensors",
        "sd1.5/toonAme_version10.safetensors",
        "sd1.5/v1-5-pruned-emaonly.ckpt",
        "sd1.5/v1-5-pruned-emaonly.safetensors",
        "sd1.5/v1-5-pruned.ckpt",
        "sd1.5/v2-1_512-ema-pruned.safetensors",
        "sd1.5/v2-1_768-ema-pruned.safetensors",
        "sd1.5/vintedois-diffusion-v0-2.safetensors",
        "sd1.5/vinteprotogenmix_V20.safetensors",
        "sd1.5/waifuDiffusion_v13Fp32.ckpt",
        "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
        "sdxl/albedobaseXL_v21.safetensors",
        "sdxl/cosxl.safetensors",
        "sdxl/juggernautXL_v8Rundiffusion.safetensors",
        "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
        "sdxl/juggernautXL_version6Rundiffusion.safetensors",
        "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
        "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
        "sdxl/sd_xl_base_1.0.safetensors",
        "sdxl/sd_xl_refiner_1.0.safetensors",
        "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
        "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
        "stable_cascade/stable_cascade_stage_b.safetensors",
        "stable_cascade/stable_cascade_stage_c.safetensors",
        "stable_cascade/stage_b_bf16.safetensors",
        "stable_cascade/stage_c_bf16.safetensors",
        "supir/SUPIR-v0F.ckpt",
        "supir/SUPIR-v0Q.ckpt"
      ],
      [
        "euler",
        "euler_ancestral",
        "heun",
        "heunpp2",
        "dpm_2",
        "dpm_2_ancestral",
        "lms",
        "dpm_fast",
        "dpm_adaptive",
        "dpmpp_2s_ancestral",
        "dpmpp_sde",
        "dpmpp_sde_gpu",
        "dpmpp_2m",
        "dpmpp_2m_sde",
        "dpmpp_2m_sde_gpu",
        "dpmpp_3m_sde",
        "dpmpp_3m_sde_gpu",
        "ddpm",
        "lcm",
        "ddim",
        "uni_pc",
        "uni_pc_bh2"
      ],
      [
        "normal",
        "karras",
        "exponential",
        "sgm_uniform",
        "simple",
        "ddim_uniform"
      ],
      "INT",
      "INT",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "MASK",
      "CONTROL_NET"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],
    "output_name": [
      "CONTEXT",
      "MODEL",
      "CLIP",
      "VAE",
      "POSITIVE",
      "NEGATIVE",
      "LATENT",
      "IMAGE",
      "SEED",
      "STEPS",
      "STEP_REFINER",
      "CFG",
      "CKPT_NAME",
      "SAMPLER",
      "SCHEDULER",
      "CLIP_WIDTH",
      "CLIP_HEIGHT",
      "TEXT_POS_G",
      "TEXT_POS_L",
      "TEXT_NEG_G",
      "TEXT_NEG_L",
      "MASK",
      "CONTROL_NET"
    ],
    "name": "Context Merge Big (rgthree)",
    "display_name": "Context Merge Big (rgthree)",
    "description": "",
    "category": "rgthree",
    "output_node": false
  },
  "Display Int (rgthree)": {
    "input": {
      "required": {
        "input": [
          "INT",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Display Int (rgthree)",
    "display_name": "Display Int (rgthree)",
    "description": "",
    "category": "rgthree",
    "output_node": true
  },
  "Display Any (rgthree)": {
    "input": {
      "required": {
        "source": [
          "*",
          {

          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Display Any (rgthree)",
    "display_name": "Display Any (rgthree)",
    "description": "",
    "category": "rgthree",
    "output_node": true
  },
  "Lora Loader Stack (rgthree)": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_01": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "strength_01": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_02": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "strength_02": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_03": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "strength_03": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_04": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "strength_04": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL",
      "CLIP"
    ],
    "name": "Lora Loader Stack (rgthree)",
    "display_name": "Lora Loader Stack (rgthree)",
    "description": "",
    "category": "rgthree",
    "output_node": false
  },
  "Seed (rgthree)": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": -1125899906842624,
            "max": 1125899906842624
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEED"
    ],
    "name": "Seed (rgthree)",
    "display_name": "Seed (rgthree)",
    "description": "",
    "category": "rgthree",
    "output_node": false
  },
  "Image Inset Crop (rgthree)": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "measurement": [
          [
            "Pixels",
            "Percentage"
          ]
        ],
        "left": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "right": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "top": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "bottom": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Inset Crop (rgthree)",
    "display_name": "Image Inset Crop (rgthree)",
    "description": "",
    "category": "rgthree",
    "output_node": false
  },
  "Power Prompt (rgthree)": {
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "multiline": true
          }
        ]
      },
      "optional": {
        "opt_model": [
          "MODEL"
        ],
        "opt_clip": [
          "CLIP"
        ],
        "insert_lora": [
          [
            "CHOOSE",
            "DISABLE LORAS",
            "CLAYMATE_V2.03_",
            "DD-made-of-clay-XL-v2",
            "Hyper-SD15-12steps-CFG-lora",
            "Hyper-SD15-8steps-lora",
            "Hyper-SDXL-8steps-lora",
            "InstantPhotoX3",
            "JuggerCineXL2",
            "LCMTurboMix_Euler_A_fix",
            "YaeMiko_Test",
            "add_detail",
            "animemix_v3_offset",
            "charsheet",
            "ec",
            "epiNoiseoffset_v2",
            "ghibli_style_offset",
            "hipoly_3dcg_v7-epoch-000012",
            "howlbgsv3",
            "ip-adapter-faceid-plus_sd15_lora",
            "ip-adapter-faceid-plusv2_sd15_lora",
            "ip-adapter-faceid-plusv2_sdxl_lora",
            "ip-adapter-faceid_sd15_lora",
            "ip-adapter-faceid_sdxl_lora",
            "jirai_v2",
            "leosamHelloworldTurbo_20TurboLCM",
            "more_details",
            "mouth_slider_v1",
            "pytorch_lora_weights",
            "room",
            "sd15_lora_beta",
            "sdxl_lightning_4step_lora",
            "shirt_tug",
            "theovercomer8sContrastFix_sd15",
            "v2_lora_ZoomIn",
            "v2_lora_ZoomOut",
            "v3_sd15_mm",
            "vtuber-poses-05",
            "xl_more_art-full_v1",
            "zoom_slider_v1"
          ]
        ],
        "insert_embedding": [
          [
            "CHOOSE",
            "bad-hands-5",
            "easynegative"
          ]
        ],
        "insert_saved": [
          [
            "CHOOSE"
          ]
        ]
      },
      "hidden": {
        "values_insert_saved": [
          [
            "CHOOSE"
          ]
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "MODEL",
      "CLIP",
      "STRING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "CONDITIONING",
      "MODEL",
      "CLIP",
      "TEXT"
    ],
    "name": "Power Prompt (rgthree)",
    "display_name": "Power Prompt (rgthree)",
    "description": "",
    "category": "rgthree",
    "output_node": false
  },
  "Power Prompt - Simple (rgthree)": {
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "multiline": true
          }
        ]
      },
      "optional": {
        "opt_clip": [
          "CLIP"
        ],
        "insert_embedding": [
          [
            "CHOOSE",
            "bad-hands-5",
            "easynegative"
          ]
        ],
        "insert_saved": [
          [
            "CHOOSE"
          ]
        ]
      },
      "hidden": {
        "values_insert_saved": [
          [
            "CHOOSE"
          ]
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CONDITIONING",
      "TEXT"
    ],
    "name": "Power Prompt - Simple (rgthree)",
    "display_name": "Power Prompt - Simple (rgthree)",
    "description": "",
    "category": "rgthree",
    "output_node": false
  },
  "KSampler Config (rgthree)": {
    "input": {
      "required": {
        "steps_total": [
          "INT",
          {
            "default": 30,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "refiner_step": [
          "INT",
          {
            "default": 24,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.5
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "FLOAT",
      [
        "euler",
        "euler_ancestral",
        "heun",
        "heunpp2",
        "dpm_2",
        "dpm_2_ancestral",
        "lms",
        "dpm_fast",
        "dpm_adaptive",
        "dpmpp_2s_ancestral",
        "dpmpp_sde",
        "dpmpp_sde_gpu",
        "dpmpp_2m",
        "dpmpp_2m_sde",
        "dpmpp_2m_sde_gpu",
        "dpmpp_3m_sde",
        "dpmpp_3m_sde_gpu",
        "ddpm",
        "lcm",
        "ddim",
        "uni_pc",
        "uni_pc_bh2"
      ],
      [
        "normal",
        "karras",
        "exponential",
        "sgm_uniform",
        "simple",
        "ddim_uniform"
      ]
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "STEPS",
      "REFINER_STEP",
      "CFG",
      "SAMPLER",
      "SCHEDULER"
    ],
    "name": "KSampler Config (rgthree)",
    "display_name": "KSampler Config (rgthree)",
    "description": "",
    "category": "rgthree",
    "output_node": false
  },
  "SDXL Empty Latent Image (rgthree)": {
    "input": {
      "required": {
        "dimensions": [
          [
            "1536 x 640   (landscape)",
            "1344 x 768   (landscape)",
            "1216 x 832   (landscape)",
            "1152 x 896   (landscape)",
            "1024 x 1024  (square)",
            " 896 x 1152  (portrait)",
            " 832 x 1216  (portrait)",
            " 768 x 1344  (portrait)",
            " 640 x 1536  (portrait)"
          ],
          {
            "default": "1024 x 1024  (square)"
          }
        ],
        "clip_scale": [
          "FLOAT",
          {
            "default": 2,
            "min": 1,
            "max": 10,
            "step": 0.5
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "LATENT",
      "CLIP_WIDTH",
      "CLIP_HEIGHT"
    ],
    "name": "SDXL Empty Latent Image (rgthree)",
    "display_name": "SDXL Empty Latent Image (rgthree)",
    "description": "",
    "category": "rgthree",
    "output_node": false
  },
  "SDXL Power Prompt - Positive (rgthree)": {
    "input": {
      "required": {
        "prompt_g": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "prompt_l": [
          "STRING",
          {
            "multiline": true
          }
        ]
      },
      "optional": {
        "opt_model": [
          "MODEL"
        ],
        "opt_clip": [
          "CLIP"
        ],
        "opt_clip_width": [
          "INT",
          {
            "forceInput": true,
            "default": 1024,
            "min": 0,
            "max": 16384
          }
        ],
        "opt_clip_height": [
          "INT",
          {
            "forceInput": true,
            "default": 1024,
            "min": 0,
            "max": 16384
          }
        ],
        "insert_lora": [
          [
            "CHOOSE",
            "DISABLE LORAS",
            "CLAYMATE_V2.03_",
            "DD-made-of-clay-XL-v2",
            "Hyper-SD15-12steps-CFG-lora",
            "Hyper-SD15-8steps-lora",
            "Hyper-SDXL-8steps-lora",
            "InstantPhotoX3",
            "JuggerCineXL2",
            "LCMTurboMix_Euler_A_fix",
            "YaeMiko_Test",
            "add_detail",
            "animemix_v3_offset",
            "charsheet",
            "ec",
            "epiNoiseoffset_v2",
            "ghibli_style_offset",
            "hipoly_3dcg_v7-epoch-000012",
            "howlbgsv3",
            "ip-adapter-faceid-plus_sd15_lora",
            "ip-adapter-faceid-plusv2_sd15_lora",
            "ip-adapter-faceid-plusv2_sdxl_lora",
            "ip-adapter-faceid_sd15_lora",
            "ip-adapter-faceid_sdxl_lora",
            "jirai_v2",
            "leosamHelloworldTurbo_20TurboLCM",
            "more_details",
            "mouth_slider_v1",
            "pytorch_lora_weights",
            "room",
            "sd15_lora_beta",
            "sdxl_lightning_4step_lora",
            "shirt_tug",
            "theovercomer8sContrastFix_sd15",
            "v2_lora_ZoomIn",
            "v2_lora_ZoomOut",
            "v3_sd15_mm",
            "vtuber-poses-05",
            "xl_more_art-full_v1",
            "zoom_slider_v1"
          ]
        ],
        "insert_embedding": [
          [
            "CHOOSE",
            "bad-hands-5",
            "easynegative"
          ]
        ],
        "insert_saved": [
          [
            "CHOOSE"
          ]
        ],
        "target_width": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "max": 16384
          }
        ],
        "target_height": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "max": 16384
          }
        ],
        "crop_width": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "max": 16384
          }
        ],
        "crop_height": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "max": 16384
          }
        ]
      },
      "hidden": {
        "values_insert_saved": [
          [
            "CHOOSE"
          ]
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "MODEL",
      "CLIP",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "CONDITIONING",
      "MODEL",
      "CLIP",
      "TEXT_G",
      "TEXT_L"
    ],
    "name": "SDXL Power Prompt - Positive (rgthree)",
    "display_name": "SDXL Power Prompt - Positive (rgthree)",
    "description": "",
    "category": "rgthree",
    "output_node": false
  },
  "SDXL Power Prompt - Simple / Negative (rgthree)": {
    "input": {
      "required": {
        "prompt_g": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "prompt_l": [
          "STRING",
          {
            "multiline": true
          }
        ]
      },
      "optional": {
        "opt_clip": [
          "CLIP"
        ],
        "opt_clip_width": [
          "INT",
          {
            "forceInput": true,
            "default": 1024,
            "min": 0,
            "max": 16384
          }
        ],
        "opt_clip_height": [
          "INT",
          {
            "forceInput": true,
            "default": 1024,
            "min": 0,
            "max": 16384
          }
        ],
        "insert_embedding": [
          [
            "CHOOSE",
            "bad-hands-5",
            "easynegative"
          ]
        ],
        "insert_saved": [
          [
            "CHOOSE"
          ]
        ],
        "target_width": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "max": 16384
          }
        ],
        "target_height": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "max": 16384
          }
        ],
        "crop_width": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "max": 16384
          }
        ],
        "crop_height": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "max": 16384
          }
        ]
      },
      "hidden": {
        "values_insert_saved": [
          [
            "CHOOSE"
          ]
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "CONDITIONING",
      "TEXT_G",
      "TEXT_L"
    ],
    "name": "SDXL Power Prompt - Simple / Negative (rgthree)",
    "display_name": "SDXL Power Prompt - Simple / Negative (rgthree)",
    "description": "",
    "category": "rgthree",
    "output_node": false
  },
  "Any Switch (rgthree)": {
    "input": {
      "required": {

      },
      "optional": {
        "any_01": [
          "*"
        ],
        "any_02": [
          "*"
        ],
        "any_03": [
          "*"
        ],
        "any_04": [
          "*"
        ],
        "any_05": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": [
      "*"
    ],
    "name": "Any Switch (rgthree)",
    "display_name": "Any Switch (rgthree)",
    "description": "",
    "category": "rgthree",
    "output_node": false
  },
  "Image Comparer (rgthree)": {
    "input": {
      "required": {

      },
      "optional": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Image Comparer (rgthree)",
    "display_name": "Image Comparer (rgthree)",
    "description": "",
    "category": "rgthree",
    "output_node": true
  },
  "Power Lora Loader (rgthree)": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ]
      },
      "optional": {

      },
      "hidden": {

      }
    },
    "output": [
      "MODEL",
      "CLIP"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL",
      "CLIP"
    ],
    "name": "Power Lora Loader (rgthree)",
    "display_name": "Power Lora Loader (rgthree)",
    "description": "",
    "category": "rgthree",
    "output_node": false
  },
  "SUPIR_Upscale": {
    "input": {
      "required": {
        "supir_model": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "sdxl_model": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "image": [
          "IMAGE"
        ],
        "seed": [
          "INT",
          {
            "default": 123,
            "min": 0,
            "max": 1.8446744073709552e+19,
            "step": 1
          }
        ],
        "resize_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos"
          ],
          {
            "default": "lanczos"
          }
        ],
        "scale_by": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 20,
            "step": 0.01
          }
        ],
        "steps": [
          "INT",
          {
            "default": 45,
            "min": 3,
            "max": 4096,
            "step": 1
          }
        ],
        "restoration_scale": [
          "FLOAT",
          {
            "default": -1,
            "min": -1,
            "max": 6,
            "step": 1
          }
        ],
        "cfg_scale": [
          "FLOAT",
          {
            "default": 4,
            "min": 0,
            "max": 100,
            "step": 0.01
          }
        ],
        "a_prompt": [
          "STRING",
          {
            "multiline": true,
            "default": "high quality, detailed"
          }
        ],
        "n_prompt": [
          "STRING",
          {
            "multiline": true,
            "default": "bad quality, blurry, messy"
          }
        ],
        "s_churn": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 40,
            "step": 1
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "default": 1.003,
            "min": 1,
            "max": 1.1,
            "step": 0.001
          }
        ],
        "control_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.05
          }
        ],
        "cfg_scale_start": [
          "FLOAT",
          {
            "default": 4,
            "min": 0,
            "max": 100,
            "step": 0.05
          }
        ],
        "control_scale_start": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "color_fix_type": [
          [
            "None",
            "AdaIn",
            "Wavelet"
          ],
          {
            "default": "Wavelet"
          }
        ],
        "keep_model_loaded": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "use_tiled_vae": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "encoder_tile_size_pixels": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 64
          }
        ],
        "decoder_tile_size_latent": [
          "INT",
          {
            "default": 64,
            "min": 32,
            "max": 8192,
            "step": 64
          }
        ]
      },
      "optional": {
        "captions": [
          "STRING",
          {
            "forceInput": true,
            "multiline": false,
            "default": ""
          }
        ],
        "diffusion_dtype": [
          [
            "fp16",
            "bf16",
            "fp32",
            "auto"
          ],
          {
            "default": "auto"
          }
        ],
        "encoder_dtype": [
          [
            "bf16",
            "fp32",
            "auto"
          ],
          {
            "default": "auto"
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 128,
            "step": 1
          }
        ],
        "use_tiled_sampling": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "sampler_tile_size": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 4096,
            "step": 32
          }
        ],
        "sampler_tile_stride": [
          "INT",
          {
            "default": 512,
            "min": 32,
            "max": 2048,
            "step": 32
          }
        ],
        "fp8_unet": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "fp8_vae": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "sampler": [
          [
            "RestoreDPMPP2MSampler",
            "RestoreEDMSampler"
          ],
          {
            "default": "RestoreEDMSampler"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "upscaled_image"
    ],
    "name": "SUPIR_Upscale",
    "display_name": "SUPIR Upscale (Legacy)",
    "description": "",
    "category": "SUPIR",
    "output_node": false
  },
  "SUPIR_sample": {
    "input": {
      "required": {
        "SUPIR_model": [
          "SUPIRMODEL"
        ],
        "latents": [
          "LATENT"
        ],
        "positive": [
          "SUPIR_cond_pos"
        ],
        "negative": [
          "SUPIR_cond_neg"
        ],
        "seed": [
          "INT",
          {
            "default": 123,
            "min": 0,
            "max": 1.8446744073709552e+19,
            "step": 1
          }
        ],
        "steps": [
          "INT",
          {
            "default": 45,
            "min": 3,
            "max": 4096,
            "step": 1
          }
        ],
        "cfg_scale_start": [
          "FLOAT",
          {
            "default": 4,
            "min": 0,
            "max": 100,
            "step": 0.01
          }
        ],
        "cfg_scale_end": [
          "FLOAT",
          {
            "default": 4,
            "min": 0,
            "max": 100,
            "step": 0.01
          }
        ],
        "EDM_s_churn": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 40,
            "step": 1
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "default": 1.003,
            "min": 1,
            "max": 1.1,
            "step": 0.001
          }
        ],
        "DPMPP_eta": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "control_scale_start": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.05
          }
        ],
        "control_scale_end": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.05
          }
        ],
        "restore_cfg": [
          "FLOAT",
          {
            "default": -1,
            "min": -1,
            "max": 20,
            "step": 0.05
          }
        ],
        "keep_model_loaded": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "sampler": [
          [
            "RestoreDPMPP2MSampler",
            "RestoreEDMSampler",
            "TiledRestoreDPMPP2MSampler",
            "TiledRestoreEDMSampler"
          ],
          {
            "default": "RestoreEDMSampler"
          }
        ]
      },
      "optional": {
        "sampler_tile_size": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 4096,
            "step": 32
          }
        ],
        "sampler_tile_stride": [
          "INT",
          {
            "default": 512,
            "min": 32,
            "max": 2048,
            "step": 32
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "latent"
    ],
    "name": "SUPIR_sample",
    "display_name": "SUPIR Sampler",
    "description": "\n- **latent:**\nLatent to sample from, when using SUPIR latent this is just for the noise shape,  \nit's actually not used otherwise here. Identical to feeding this comfy empty latent.  \nIf fed anything else it's used as it is, no noise is added.  \n- **cfg:**\nLinearly scaled CFG is always used, first step will use the cfg_scale_start value,  \nand that is interpolated to the cfg_scale_end value at last step.  \nTo disable scaling set these values to be the same.  \n- **EDM_s_churn:**\ncontrols the rate of adaptation of the diffusion process to changes in noise levels  \nover time. Has no effect with DPMPP samplers.  \n- **s_noise:**\nThis parameter directly controls the amount of noise added to the image at each  \nstep of the diffusion process.  \n- **DPMPP_eta:**\nScaling factor that influences the diffusion process by adjusting how the denoising  \nprocess adapts to changes in noise levels over time.\nNo effect with EDM samplers.  \n- **control_scale:**\nThe strenght of the SUPIR control model, scales linearly from start to end.  \nLower values allow more freedom from the input image.  \n- **restore_cfg:**\nControls the degree of restoration towards the original image during the diffusion   \nprocess. It allows for dome fine-tuning of the process.  \n- **samplers:**\nEDM samplers need lots of steps but generally have better quality.  \nDPMPP samplers work well with lower steps, good for lightning models.  \nTiled samplers enable tiled diffusion process, this is very slow but allows higher  \nresolutions to be used by saving VRAM.  Tile size should be chosen so the image  \nis evenly tiled.  Tile stride affects the overlap of the tiles.  Check the  \nSUPIR Tiles -node for preview to understand how the image is tiled.\n\n",
    "category": "SUPIR",
    "output_node": false
  },
  "SUPIR_model_loader": {
    "input": {
      "required": {
        "supir_model": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "sdxl_model": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "fp8_unet": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "diffusion_dtype": [
          [
            "fp16",
            "bf16",
            "fp32",
            "auto"
          ],
          {
            "default": "auto"
          }
        ]
      }
    },
    "output": [
      "SUPIRMODEL",
      "SUPIRVAE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "SUPIR_model",
      "SUPIR_VAE"
    ],
    "name": "SUPIR_model_loader",
    "display_name": "SUPIR Model Loader (Legacy)",
    "description": "\nOld loader, not recommended to be used.  \nLoads the SUPIR model and the selected SDXL model and merges them.\n",
    "category": "SUPIR",
    "output_node": false
  },
  "SUPIR_first_stage": {
    "input": {
      "required": {
        "SUPIR_VAE": [
          "SUPIRVAE"
        ],
        "image": [
          "IMAGE"
        ],
        "use_tiled_vae": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "encoder_tile_size": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 64
          }
        ],
        "decoder_tile_size": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 64
          }
        ],
        "encoder_dtype": [
          [
            "bf16",
            "fp32",
            "auto"
          ],
          {
            "default": "auto"
          }
        ]
      }
    },
    "output": [
      "SUPIRVAE",
      "IMAGE",
      "LATENT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "SUPIR_VAE",
      "denoised_image",
      "denoised_latents"
    ],
    "name": "SUPIR_first_stage",
    "display_name": "SUPIR First Stage (Denoiser)",
    "description": "\nSUPIR \"first stage\" processing.\nEncodes and decodes the image using SUPIR's \"denoise_encoder\", purpose  \nis to fix compression artifacts and such, ends up blurring the image often  \nwhich is expected. Can be replaced with any other denoiser/blur or not used at all.\n",
    "category": "SUPIR",
    "output_node": false
  },
  "SUPIR_encode": {
    "input": {
      "required": {
        "SUPIR_VAE": [
          "SUPIRVAE"
        ],
        "image": [
          "IMAGE"
        ],
        "use_tiled_vae": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "encoder_tile_size": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 64
          }
        ],
        "encoder_dtype": [
          [
            "bf16",
            "fp32",
            "auto"
          ],
          {
            "default": "auto"
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "latent"
    ],
    "name": "SUPIR_encode",
    "display_name": "SUPIR Encode",
    "description": "",
    "category": "SUPIR",
    "output_node": false
  },
  "SUPIR_decode": {
    "input": {
      "required": {
        "SUPIR_VAE": [
          "SUPIRVAE"
        ],
        "latents": [
          "LATENT"
        ],
        "use_tiled_vae": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "decoder_tile_size": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "SUPIR_decode",
    "display_name": "SUPIR Decode",
    "description": "",
    "category": "SUPIR",
    "output_node": false
  },
  "SUPIR_conditioner": {
    "input": {
      "required": {
        "SUPIR_model": [
          "SUPIRMODEL"
        ],
        "latents": [
          "LATENT"
        ],
        "positive_prompt": [
          "STRING",
          {
            "multiline": true,
            "default": "high quality, detailed"
          }
        ],
        "negative_prompt": [
          "STRING",
          {
            "multiline": true,
            "default": "bad quality, blurry, messy"
          }
        ]
      },
      "optional": {
        "captions": [
          "STRING",
          {
            "forceInput": true,
            "multiline": false,
            "default": ""
          }
        ]
      }
    },
    "output": [
      "SUPIR_cond_pos",
      "SUPIR_cond_neg"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "positive",
      "negative"
    ],
    "name": "SUPIR_conditioner",
    "display_name": "SUPIR Conditioner",
    "description": "\nCreates the conditioning for the sampler.  \nCaption input is optional, when it receives a single caption, it's added to the positive prompt.\n    \nIf a list of caption is given for single input image, the captions need to match the number of tiles,  \nrefer to the SUPIR Tiles node.  \n  \nIf a list of captions is given and it matches the incoming image batch, each image uses corresponding caption.\n",
    "category": "SUPIR",
    "output_node": false
  },
  "SUPIR_tiles": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 64
          }
        ],
        "tile_stride": [
          "INT",
          {
            "default": 256,
            "min": 64,
            "max": 8192,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "image_tiles",
      "tile_size",
      "tile_stride"
    ],
    "name": "SUPIR_tiles",
    "display_name": "SUPIR Tiles",
    "description": "\nTiles the image with same function as the Tiled samplers use.  \nUseful for previewing the tiling and generating captions per tile (WIP feature)\n",
    "category": "SUPIR",
    "output_node": false
  },
  "SUPIR_model_loader_v2": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "supir_model": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "fp8_unet": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "diffusion_dtype": [
          [
            "fp16",
            "bf16",
            "fp32",
            "auto"
          ],
          {
            "default": "auto"
          }
        ]
      },
      "optional": {
        "high_vram": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "SUPIRMODEL",
      "SUPIRVAE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "SUPIR_model",
      "SUPIR_VAE"
    ],
    "name": "SUPIR_model_loader_v2",
    "display_name": "SUPIR Model Loader (v2)",
    "description": "\nLoads the SUPIR model and merges it with the SDXL model.  \n\nDiffusion type should be kept on auto, unless you have issues loading the model.  \nfp8_unet casts the unet weights to torch.float8_e4m3fn, which saves a lot of VRAM but has slight quality impact.  \nhigh_vram: uses Accelerate to load weights to GPU, slightly faster model loading.\n",
    "category": "SUPIR",
    "output_node": false
  },
  "SUPIR_model_loader_v2_clip": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip_l": [
          "CLIP"
        ],
        "clip_g": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "supir_model": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "fp8_unet": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "diffusion_dtype": [
          [
            "fp16",
            "bf16",
            "fp32",
            "auto"
          ],
          {
            "default": "auto"
          }
        ]
      },
      "optional": {
        "high_vram": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "SUPIRMODEL",
      "SUPIRVAE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "SUPIR_model",
      "SUPIR_VAE"
    ],
    "name": "SUPIR_model_loader_v2_clip",
    "display_name": "SUPIR Model Loader (v2) (Clip)",
    "description": "\nLoads the SUPIR model and merges it with the SDXL model.  \n\nDiffusion type should be kept on auto, unless you have issues loading the model.  \nfp8_unet casts the unet weights to torch.float8_e4m3fn, which saves a lot of VRAM but has slight quality impact.  \nhigh_vram: uses Accelerate to load weights to GPU, slightly faster model loading.\n",
    "category": "SUPIR",
    "output_node": false
  },
  "ADMD_InitializeTraining": {
    "input": {
      "required": {
        "pipeline": [
          "PIPELINE"
        ],
        "lora_name": [
          "STRING",
          {
            "multiline": false,
            "default": "motiondirectorlora"
          }
        ],
        "images": [
          "IMAGE"
        ],
        "prompt": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "max_train_steps": [
          "INT",
          {
            "default": 300,
            "min": 0,
            "max": 100000,
            "step": 1
          }
        ],
        "learning_rate": [
          "FLOAT",
          {
            "default": 0.0005,
            "min": 0,
            "max": 10000,
            "step": 0.00001
          }
        ],
        "learning_rate_spatial": [
          "FLOAT",
          {
            "default": 0.0001,
            "min": 0,
            "max": 10000,
            "step": 0.00001
          }
        ],
        "lora_rank": [
          "INT",
          {
            "default": 64,
            "min": 8,
            "max": 4096,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "optimization_method": [
          [
            "Lion",
            "AdamW"
          ],
          {
            "default": "Lion"
          }
        ],
        "include_resnet": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "ADMDPIPELINE",
      "LORAINFO"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "sanitycheck",
      "admd_pipeline",
      "lora_info"
    ],
    "name": "ADMD_InitializeTraining",
    "display_name": "ADMD_InitializeTraining",
    "description": "",
    "category": "AD_MotionDirector",
    "output_node": false
  },
  "ADMD_DiffusersLoader": {
    "input": {
      "required": {
        "additional_models": [
          "ADDITIONAL_MODELS"
        ],
        "download_default": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "scheduler": [
          [
            "DDIMScheduler",
            "DDPMScheduler"
          ],
          {
            "default": "DDIMScheduler"
          }
        ],
        "use_xformers": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "model": [
          []
        ]
      }
    },
    "output": [
      "PIPELINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "PIPELINE"
    ],
    "name": "ADMD_DiffusersLoader",
    "display_name": "ADMD_DiffusersLoader",
    "description": "",
    "category": "AD_MotionDirector",
    "output_node": false
  },
  "ADMD_AdditionalModelSelect": {
    "input": {
      "required": {
        "motion_module": [
          [
            "mm_sd_v14.ckpt",
            "mm_sd_v15_v2.ckpt",
            "mm_sdxl_v10_beta.ckpt",
            "v2_lora_PanLeft.ckpt",
            "v2_lora_PanRight.ckpt",
            "v2_lora_RollingAnticlockwise.ckpt",
            "v2_lora_RollingClockwise.ckpt",
            "v2_lora_TiltDown.ckpt",
            "v2_lora_TiltUp.ckpt",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_adapter.ckpt",
            "v3_sd15_mm.ckpt",
            "v3_sd15_sparsectrl_scribble.ckpt"
          ]
        ],
        "use_adapter_lora": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      },
      "optional": {
        "optional_adapter_lora": [
          [
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ]
      }
    },
    "output": [
      "ADDITIONAL_MODELS"
    ],
    "output_is_list": [false],
    "output_name": [
      "additional_models"
    ],
    "name": "ADMD_AdditionalModelSelect",
    "display_name": "ADMD_AdditionalModelSelect",
    "description": "",
    "category": "AD_MotionDirector",
    "output_node": false
  },
  "ADMD_ValidationSettings": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "inference_steps": [
          "INT",
          {
            "default": 25,
            "min": 0,
            "max": 256,
            "step": 1
          }
        ],
        "guidance_scale": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 32,
            "step": 0.1
          }
        ],
        "spatial_scale": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "validation_prompt": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ]
      }
    },
    "output": [
      "VALIDATION_SETTINGS"
    ],
    "output_is_list": [false],
    "output_name": [
      "validation_settings"
    ],
    "name": "ADMD_ValidationSettings",
    "display_name": "ADMD_ValidationSettings",
    "description": "",
    "category": "AD_MotionDirector",
    "output_node": false
  },
  "ADMD_LoadLora": {
    "input": {
      "required": {
        "lora_path": [
          "STRING",
          {
            "forceInput": true,
            "multiline": false,
            "default": ""
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "prev_motion_lora": [
          "MOTION_LORA"
        ]
      }
    },
    "output": [
      "MOTION_LORA"
    ],
    "output_is_list": [false],
    "output_name": [
      "MOTION_LORA"
    ],
    "name": "ADMD_LoadLora",
    "display_name": "ADMD_LoadLora",
    "description": "",
    "category": "AD_MotionDirector",
    "output_node": false
  },
  "ADMD_SaveLora": {
    "input": {
      "required": {
        "admd_pipeline": [
          "ADMDPIPELINE"
        ],
        "lora_info": [
          "LORAINFO"
        ]
      }
    },
    "output": [
      "STRING",
      "ADMDPIPELINE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "lora_path",
      "admd_pipeline"
    ],
    "name": "ADMD_SaveLora",
    "display_name": "ADMD_SaveLora",
    "description": "",
    "category": "AD_MotionDirector",
    "output_node": false
  },
  "ADMD_TrainLora": {
    "input": {
      "required": {
        "admd_pipeline": [
          "ADMDPIPELINE"
        ],
        "steps": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 10000,
            "step": 1
          }
        ]
      },
      "optional": {
        "trigger_input": [
          "VHS_FILENAMES"
        ],
        "opt_images_override": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "ADMDPIPELINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "admd_pipeline"
    ],
    "name": "ADMD_TrainLora",
    "display_name": "ADMD_TrainLora",
    "description": "",
    "category": "AD_MotionDirector",
    "output_node": false
  },
  "ADMD_CheckpointLoader": {
    "input": {
      "required": {
        "additional_models": [
          "ADDITIONAL_MODELS"
        ],
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "scheduler": [
          [
            "DDIMScheduler",
            "DDPMScheduler"
          ],
          {
            "default": "DDIMScheduler"
          }
        ],
        "use_xformers": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "PIPELINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "PIPELINE"
    ],
    "name": "ADMD_CheckpointLoader",
    "display_name": "ADMD_CheckpointLoader",
    "description": "",
    "category": "AD_MotionDirector",
    "output_node": false
  },
  "ADMD_ValidationSampler": {
    "input": {
      "required": {
        "validation_settings": [
          "VALIDATION_SETTINGS"
        ],
        "admd_pipeline": [
          "ADMDPIPELINE"
        ]
      }
    },
    "output": [
      "ADMDPIPELINE",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "admd_pipeline",
      "images"
    ],
    "name": "ADMD_ValidationSampler",
    "display_name": "ADMD_ValidationSampler",
    "description": "",
    "category": "AD_MotionDirector",
    "output_node": false
  },
  "ADMD_MakeBatchList": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "images2": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image_batch_list"
    ],
    "name": "ADMD_MakeBatchList",
    "display_name": "ADMD_MakeBatchList",
    "description": "",
    "category": "AD_MotionDirector",
    "output_node": false
  },
  "ADMD_ComfyModelLoader": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "motion_model": [
          "MOTION_MODEL_ADE"
        ],
        "scheduler": [
          [
            "DDIMScheduler",
            "DDPMScheduler"
          ],
          {
            "default": "DDIMScheduler"
          }
        ],
        "use_xformers": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "PIPELINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "PIPELINE"
    ],
    "name": "ADMD_ComfyModelLoader",
    "display_name": "ADMD_ComfyModelLoader",
    "description": "",
    "category": "AD_MotionDirector",
    "output_node": false
  },
  "LoadAndApplyICLightUnet": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "model_path": [
          [
            "diffusion_pytorch_model.fp16.safetensors",
            "iclight_sd15_fc.safetensors",
            "sdxs.safetensors",
            "stage_b_bf16.safetensors",
            "stage_c_bf16.safetensors"
          ]
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "LoadAndApplyICLightUnet",
    "display_name": "Load And Apply IC-Light",
    "description": "\n  \nLoads and applies the diffusers SD1.5 IC-Light models available here:  \nhttps://huggingface.co/lllyasviel/ic-light/tree/main  \n  \nUsed with ICLightConditioning -node  \n",
    "category": "IC-Light",
    "output_node": false
  },
  "ICLightConditioning": {
    "input": {
      "required": {
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "vae": [
          "VAE"
        ],
        "foreground": [
          "LATENT"
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 0.18215,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "opt_background": [
          "LATENT"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "positive",
      "negative",
      "empty_latent"
    ],
    "name": "ICLightConditioning",
    "display_name": "IC-Light Conditioning",
    "description": "\n  \nConditioning for the IC-Light model.  \nTo use the \"opt_background\" input, you also need to use the  \n\"fbc\" version of the IC-Light models.  \n  \n",
    "category": "IC-Light",
    "output_node": false
  },
  "LightSource": {
    "input": {
      "required": {
        "light_position": [
          [
            "Left Light",
            "Right Light",
            "Top Light",
            "Bottom Light",
            "Top Left Light",
            "Top Right Light",
            "Bottom Left Light",
            "Bottom Right Light"
          ]
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.001
          }
        ],
        "start_color": [
          "STRING",
          {
            "default": "#FFFFFF"
          }
        ],
        "end_color": [
          "STRING",
          {
            "default": "#000000"
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ]
      },
      "optional": {
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "prev_image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "LightSource",
    "display_name": "Simple Light Source",
    "description": "\nGenerates a gradient image that can be used  \nas a simple light source.  The color can be  \nspecified in RGB or hex format.  \n",
    "category": "IC-Light",
    "output_node": false
  },
  "CalculateNormalsFromImages": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "sigma": [
          "FLOAT",
          {
            "default": 10,
            "min": 0.01,
            "max": 100,
            "step": 0.01
          }
        ],
        "center_input_range": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "normal",
      "divided"
    ],
    "name": "CalculateNormalsFromImages",
    "display_name": "Calculate Normals From Images",
    "description": "\nCalculates normal map from different directional exposures.  \nTakes in 4 images as a batch:  \nleft, right, bottom, top  \n\n",
    "category": "IC-Light",
    "output_node": false
  },
  "LoadHDRImage": {
    "input": {
      "required": {
        "image": [
          [
            "example.png"
          ],
          {
            "image_upload": false
          }
        ],
        "exposures": [
          "STRING",
          {
            "default": "-2,-1,0,1,2"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "LoadHDRImage",
    "display_name": "Load HDR Image",
    "description": "\nLoads a .hdr image from the input directory.  \nOutput is a batch of LDR images with the selected exposures.  \n\n",
    "category": "IC-Light",
    "output_node": false
  },
  "BackgroundScaler": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "scale": [
          "FLOAT",
          {
            "default": 0.5,
            "min": -10,
            "max": 10,
            "step": 0.001
          }
        ],
        "invert": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "BackgroundScaler",
    "display_name": "Background Scaler",
    "description": "\nSets the masked area color in grayscale range.  \n",
    "category": "IC-Light",
    "output_node": false
  },
  "DetailTransfer": {
    "input": {
      "required": {
        "target": [
          "IMAGE"
        ],
        "source": [
          "IMAGE"
        ],
        "mode": [
          [
            "add",
            "multiply",
            "screen",
            "overlay",
            "soft_light",
            "hard_light",
            "color_dodge",
            "color_burn",
            "difference",
            "exclusion",
            "divide"
          ],
          {
            "default": "add"
          }
        ],
        "blur_sigma": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 100,
            "step": 0.01
          }
        ],
        "blend_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.001,
            "round": 0.001
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "DetailTransfer",
    "display_name": "Detail Transfer",
    "description": "",
    "category": "IC-Light",
    "output_node": false
  },
  "DynamiCrafterI2V": {
    "input": {
      "required": {
        "model": [
          "DCMODEL"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "image": [
          "IMAGE"
        ],
        "steps": [
          "INT",
          {
            "default": 50,
            "min": 1,
            "max": 200,
            "step": 1
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 7,
            "min": 0,
            "max": 20,
            "step": 0.01
          }
        ],
        "eta": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "frames": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 100,
            "step": 1
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "fs": [
          "INT",
          {
            "default": 10,
            "min": 2,
            "max": 100,
            "step": 1
          }
        ],
        "keep_model_loaded": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "vae_dtype": [
          [
            "fp32",
            "fp16",
            "bf16",
            "auto"
          ],
          {
            "default": "auto"
          }
        ]
      },
      "optional": {
        "image2": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "frame_window_size": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 200,
            "step": 1
          }
        ],
        "frame_window_stride": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 200,
            "step": 1
          }
        ],
        "augmentation_level": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.0001
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "images",
      "last_image"
    ],
    "name": "DynamiCrafterI2V",
    "display_name": "DynamiCrafterI2V",
    "description": "",
    "category": "DynamiCrafterWrapper",
    "output_node": false
  },
  "DynamiCrafterModelLoader": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "dtype": [
          [
            "fp32",
            "fp16",
            "bf16",
            "auto"
          ],
          {
            "default": "auto"
          }
        ],
        "fp8_unet": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "DCMODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "DynCraft_model"
    ],
    "name": "DynamiCrafterModelLoader",
    "display_name": "DynamiCrafterModelLoader",
    "description": "",
    "category": "DynamiCrafterWrapper",
    "output_node": false
  },
  "DynamiCrafterBatchInterpolation": {
    "input": {
      "required": {
        "model": [
          "DCMODEL"
        ],
        "images": [
          "IMAGE"
        ],
        "steps": [
          "INT",
          {
            "default": 50,
            "min": 1,
            "max": 200,
            "step": 1
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 7,
            "min": 0,
            "max": 20,
            "step": 0.01
          }
        ],
        "eta": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 20,
            "step": 0.01
          }
        ],
        "frames": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 100,
            "step": 1
          }
        ],
        "prompt": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "fs": [
          "INT",
          {
            "default": 10,
            "min": 2,
            "max": 100,
            "step": 1
          }
        ],
        "keep_model_loaded": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "vae_dtype": [
          [
            "fp32",
            "fp16",
            "bf16",
            "auto"
          ],
          {
            "default": "auto"
          }
        ],
        "cut_near_keyframes": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 5,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "images",
      "last_image"
    ],
    "name": "DynamiCrafterBatchInterpolation",
    "display_name": "DynamiCrafterBatchInterpolation",
    "description": "",
    "category": "DynamiCrafterWrapper",
    "output_node": false
  },
  "ToonCrafterInterpolation": {
    "input": {
      "required": {
        "model": [
          "DCMODEL"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "images": [
          "IMAGE"
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 200,
            "step": 1
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 7,
            "min": 0,
            "max": 200,
            "step": 0.01
          }
        ],
        "eta": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "frames": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 100,
            "step": 1
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "fs": [
          "INT",
          {
            "default": 10,
            "min": 2,
            "max": 100,
            "step": 1
          }
        ],
        "vae_dtype": [
          [
            "fp32",
            "fp16",
            "bf16",
            "auto"
          ],
          {
            "default": "auto"
          }
        ]
      },
      "optional": {
        "image_embed_ratio": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "augmentation_level": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.0001
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "samples"
    ],
    "name": "ToonCrafterInterpolation",
    "display_name": "ToonCrafterInterpolation",
    "description": "",
    "category": "DynamiCrafterWrapper",
    "output_node": false
  },
  "ToonCrafterDecode": {
    "input": {
      "required": {
        "model": [
          "DCMODEL"
        ],
        "latent": [
          "LATENT"
        ],
        "vae_dtype": [
          [
            "fp32",
            "fp16",
            "bf16",
            "auto"
          ],
          {
            "default": "auto"
          }
        ]
      },
      "optional": {
        "prune_last_frame": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "ToonCrafterDecode",
    "display_name": "ToonCrafterDecode",
    "description": "",
    "category": "DynamiCrafterWrapper",
    "output_node": false
  },
  "DownloadAndLoadDynamiCrafterModel": {
    "input": {
      "required": {
        "model": [
          [
            "tooncrafter_512_interp-fp16.safetensors",
            "dynamicrafter_512_interp_v1_bf16.safetensors",
            "dynamicrafter_1024_v1_bf16.safetensors"
          ],
          {
            "default": "tooncrafter_512_interp-fp16.safetensors"
          }
        ],
        "dtype": [
          [
            "fp32",
            "fp16",
            "bf16",
            "auto"
          ],
          {
            "default": "auto"
          }
        ],
        "fp8_unet": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "DCMODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "DynCraft_model"
    ],
    "name": "DownloadAndLoadDynamiCrafterModel",
    "display_name": "DownloadAndLoadDynamiCrafterModel",
    "description": "",
    "category": "DynamiCrafterWrapper",
    "output_node": false
  },
  "DownloadAndLoadCLIPModel": {
    "input": {
      "required": {
        "model": [
          [
            "stable-diffusion-2-1-clip-fp16.safetensors",
            "stable-diffusion-2-1-clip.safetensors"
          ],
          {
            "default": "stable-diffusion-2-1-clip-fp16.safetensors"
          }
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [false],
    "output_name": [
      "clip"
    ],
    "name": "DownloadAndLoadCLIPModel",
    "display_name": "DownloadAndLoadCLIPModel",
    "description": "",
    "category": "DynamiCrafterWrapper",
    "output_node": false
  },
  "DownloadAndLoadCLIPVisionModel": {
    "input": {
      "required": {
        "model": [
          [
            "CLIP-ViT-H-14-laion2B-s32B-b79K.safetensors",
            "CLIP-ViT-H-fp16.safetensors"
          ],
          {
            "default": "CLIP-ViT-H-fp16.safetensors"
          }
        ]
      }
    },
    "output": [
      "CLIP_VISION"
    ],
    "output_is_list": [false],
    "output_name": [
      "clip_vision"
    ],
    "name": "DownloadAndLoadCLIPVisionModel",
    "display_name": "DownloadAndLoadCLIPVisionModel",
    "description": "",
    "category": "DynamiCrafterWrapper",
    "output_node": false
  },
  "InsightFaceLoader_Zho": {
    "input": {
      "required": {
        "provider": [
          [
            "CUDA",
            "CPU"
          ]
        ]
      }
    },
    "output": [
      "INSIGHTFACEMODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "INSIGHTFACEMODEL"
    ],
    "name": "InsightFaceLoader_Zho",
    "display_name": "📷InsightFace Loader",
    "description": "",
    "category": "📷InstantID",
    "output_node": false
  },
  "IDControlNetLoader": {
    "input": {
      "required": {
        "controlnet_path": [
          "STRING",
          {
            "default": "enter your path"
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "controlnet"
    ],
    "name": "IDControlNetLoader",
    "display_name": "📷ID ControlNet Loader",
    "description": "",
    "category": "📷InstantID",
    "output_node": false
  },
  "IDBaseModelLoader_fromhub": {
    "input": {
      "required": {
        "base_model_path": [
          "STRING",
          {
            "default": "wangqixun/YamerMIX_v8"
          }
        ],
        "controlnet": [
          "MODEL"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "pipe"
    ],
    "name": "IDBaseModelLoader_fromhub",
    "display_name": "📷ID Base Model Loader from hub 🤗",
    "description": "",
    "category": "📷InstantID",
    "output_node": false
  },
  "IDBaseModelLoader_local": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "controlnet": [
          "MODEL"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "pipe"
    ],
    "name": "IDBaseModelLoader_local",
    "display_name": "📷ID Base Model Loader locally",
    "description": "",
    "category": "📷InstantID",
    "output_node": false
  },
  "Ipadapter_instantidLoader": {
    "input": {
      "required": {
        "Ipadapter_instantid_path": [
          "STRING",
          {
            "default": "enter your path"
          }
        ],
        "filename": [
          "STRING",
          {
            "default": "ip-adapter.bin"
          }
        ],
        "pipe": [
          "MODEL"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "Ipadapter_instantidLoader",
    "display_name": "📷Ipadapter_instantid Loader",
    "description": "",
    "category": "📷InstantID",
    "output_node": false
  },
  "ID_Prompt_Styler": {
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "default": "a woman, retro futurism, retro game",
            "multiline": true
          }
        ],
        "negative_prompt": [
          "STRING",
          {
            "default": "(lowres, low quality, worst quality:1.2), (text:1.2), watermark, painting, drawing, illustration, glitch, deformed, mutated, cross-eyed, ugly",
            "multiline": true
          }
        ],
        "style_name": [
          [
            "(No style)",
            "Watercolor",
            "Film Noir",
            "Neon",
            "Jungle",
            "Mars",
            "Vibrant Color",
            "Snow",
            "Line art"
          ],
          {
            "default": "Neon"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "positive_prompt",
      "negative_prompt"
    ],
    "name": "ID_Prompt_Styler",
    "display_name": "📷ID Prompt_Styler",
    "description": "",
    "category": "📷InstantID",
    "output_node": false
  },
  "IDGenerationNode": {
    "input": {
      "required": {
        "face_image": [
          "IMAGE"
        ],
        "pipe": [
          "MODEL"
        ],
        "insightface": [
          "INSIGHTFACEMODEL"
        ],
        "positive": [
          "STRING",
          {
            "multiline": true,
            "forceInput": true
          }
        ],
        "negative": [
          "STRING",
          {
            "multiline": true,
            "forceInput": true
          }
        ],
        "ip_adapter_scale": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0,
            "max": 1,
            "display": "slider"
          }
        ],
        "controlnet_conditioning_scale": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0,
            "max": 1,
            "display": "slider"
          }
        ],
        "steps": [
          "INT",
          {
            "default": 50,
            "min": 1,
            "max": 100,
            "step": 1,
            "display": "slider"
          }
        ],
        "guidance_scale": [
          "FLOAT",
          {
            "default": 5,
            "min": 0,
            "max": 10,
            "display": "slider"
          }
        ],
        "enhance_face_region": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      },
      "optional": {
        "pose_image_optional": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "IDGenerationNode",
    "display_name": "📷InstantID Generation",
    "description": "",
    "category": "📷InstantID",
    "output_node": false
  },
  "Lora Training in ComfyUI": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "data_path": [
          "STRING",
          {
            "default": "Insert path of image folders"
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1
          }
        ],
        "max_train_epoches": [
          "INT",
          {
            "default": 10,
            "min": 1
          }
        ],
        "save_every_n_epochs": [
          "INT",
          {
            "default": 10,
            "min": 1
          }
        ],
        "output_name": [
          "STRING",
          {
            "default": "Desired name for LoRA."
          }
        ],
        "clip_skip": [
          "INT",
          {
            "default": 2,
            "min": 1
          }
        ],
        "output_dir": [
          "STRING",
          {
            "default": "models/loras"
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Lora Training in ComfyUI",
    "display_name": "Lora Training in ComfyUI",
    "description": "",
    "category": "LJRE/LORA",
    "output_node": true
  },
  "Lora Training in Comfy (Advanced)": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "v2": [
          [
            "No",
            "Yes"
          ]
        ],
        "networkmodule": [
          [
            "networks.lora",
            "lycoris.kohya"
          ]
        ],
        "networkdimension": [
          "INT",
          {
            "default": 32,
            "min": 0
          }
        ],
        "networkalpha": [
          "INT",
          {
            "default": 32,
            "min": 0
          }
        ],
        "trainingresolution": [
          "INT",
          {
            "default": 512,
            "step": 8
          }
        ],
        "data_path": [
          "STRING",
          {
            "default": "Insert path of image folders"
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1
          }
        ],
        "max_train_epoches": [
          "INT",
          {
            "default": 10,
            "min": 1
          }
        ],
        "save_every_n_epochs": [
          "INT",
          {
            "default": 10,
            "min": 1
          }
        ],
        "keeptokens": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ],
        "minSNRgamma": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "step": 0.1
          }
        ],
        "learningrateText": [
          "FLOAT",
          {
            "default": 0.0001,
            "min": 0,
            "step": 0.00001
          }
        ],
        "learningrateUnet": [
          "FLOAT",
          {
            "default": 0.0001,
            "min": 0,
            "step": 0.00001
          }
        ],
        "learningRateScheduler": [
          [
            "cosine_with_restarts",
            "linear",
            "cosine",
            "polynomial",
            "constant",
            "constant_with_warmup"
          ]
        ],
        "lrRestartCycles": [
          "INT",
          {
            "default": 1,
            "min": 1
          }
        ],
        "optimizerType": [
          [
            "AdamW8bit",
            "Lion8bit",
            "SGDNesterov8bit",
            "AdaFactor",
            "prodigy"
          ]
        ],
        "output_name": [
          "STRING",
          {
            "default": "Desired name for LoRA."
          }
        ],
        "algorithm": [
          [
            "lora",
            "loha",
            "lokr",
            "ia3",
            "dylora",
            "locon"
          ]
        ],
        "networkDropout": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.1
          }
        ],
        "clip_skip": [
          "INT",
          {
            "default": 2,
            "min": 1
          }
        ],
        "output_dir": [
          "STRING",
          {
            "default": "models/loras"
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Lora Training in Comfy (Advanced)",
    "display_name": "Lora Training in Comfy (Advanced)",
    "description": "",
    "category": "LJRE/LORA",
    "output_node": true
  },
  "Tensorboard Access": {
    "input": {
      "required": {

      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Tensorboard Access",
    "display_name": "Tensorboard Access",
    "description": "",
    "category": "LJRE/LORA",
    "output_node": true
  },
  "AdainFilterLatent": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ],
        "reference": [
          "LATENT"
        ],
        "filter_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 128
          }
        ],
        "factor": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01,
            "round": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "AdainFilterLatent",
    "display_name": "AdaIN Filter (Latent)",
    "description": "",
    "category": "latent/filters",
    "output_node": false
  },
  "AdainImage": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "reference": [
          "IMAGE"
        ],
        "factor": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01,
            "round": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "AdainImage",
    "display_name": "AdaIN (Image)",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "AdainLatent": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ],
        "reference": [
          "LATENT"
        ],
        "factor": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01,
            "round": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "AdainLatent",
    "display_name": "AdaIN (Latent)",
    "description": "",
    "category": "latent/filters",
    "output_node": false
  },
  "AlphaClean": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "radius": [
          "INT",
          {
            "default": 8,
            "min": 1,
            "max": 64,
            "step": 1
          }
        ],
        "fill_holes": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 16,
            "step": 1
          }
        ],
        "white_threshold": [
          "FLOAT",
          {
            "default": 0.9,
            "min": 0.01,
            "max": 1,
            "step": 0.01
          }
        ],
        "extra_clip": [
          "FLOAT",
          {
            "default": 0.98,
            "min": 0.01,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "AlphaClean",
    "display_name": "Alpha Clean",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "AlphaMatte": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "alpha_trimap": [
          "IMAGE"
        ],
        "preblur": [
          "INT",
          {
            "default": 8,
            "min": 0,
            "max": 256,
            "step": 1
          }
        ],
        "blackpoint": [
          "FLOAT",
          {
            "default": 0.01,
            "min": 0,
            "max": 0.99,
            "step": 0.01
          }
        ],
        "whitepoint": [
          "FLOAT",
          {
            "default": 0.99,
            "min": 0.01,
            "max": 1,
            "step": 0.01
          }
        ],
        "max_iterations": [
          "INT",
          {
            "default": 1000,
            "min": 100,
            "max": 10000,
            "step": 100
          }
        ],
        "estimate_fg": [
          [
            "true",
            "false"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "alpha",
      "fg",
      "bg"
    ],
    "name": "AlphaMatte",
    "display_name": "Alpha Matte",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "BatchAlign": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "ref_frame": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ],
        "direction": [
          [
            "forward",
            "backward"
          ]
        ],
        "blur": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "aligned",
      "flow"
    ],
    "name": "BatchAlign",
    "display_name": "Batch Align (RAFT)",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "BatchAverageImage": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "operation": [
          [
            "mean",
            "median"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "BatchAverageImage",
    "display_name": "Batch Average Image",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "BatchAverageUnJittered": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "operation": [
          [
            "mean",
            "median"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "BatchAverageUnJittered",
    "display_name": "Batch Average Un-Jittered",
    "description": "",
    "category": "image/filters/jitter",
    "output_node": false
  },
  "BatchNormalizeImage": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "factor": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01,
            "round": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "BatchNormalizeImage",
    "display_name": "Batch Normalize (Image)",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "BatchNormalizeLatent": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ],
        "factor": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01,
            "round": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "BatchNormalizeLatent",
    "display_name": "Batch Normalize (Latent)",
    "description": "",
    "category": "latent/filters",
    "output_node": false
  },
  "BetterFilmGrain": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "scale": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.25,
            "max": 2,
            "step": 0.05
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "saturation": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0,
            "max": 2,
            "step": 0.01
          }
        ],
        "toe": [
          "FLOAT",
          {
            "default": 0,
            "min": -0.2,
            "max": 0.5,
            "step": 0.001
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "BetterFilmGrain",
    "display_name": "Better Film Grain",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "BilateralFilterImage": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "size": [
          "INT",
          {
            "default": 8,
            "min": 1,
            "max": 64
          }
        ],
        "sigma_color": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.01,
            "max": 1000,
            "step": 0.01
          }
        ],
        "sigma_space": [
          "FLOAT",
          {
            "default": 100,
            "min": 0.01,
            "max": 1000,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "BilateralFilterImage",
    "display_name": "Bilateral Filter Image",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "BlurImageFast": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "radius_x": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 1023,
            "step": 1
          }
        ],
        "radius_y": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 1023,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "BlurImageFast",
    "display_name": "Blur Image (Fast)",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "BlurMaskFast": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "radius_x": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 1023,
            "step": 1
          }
        ],
        "radius_y": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 1023,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "BlurMaskFast",
    "display_name": "Blur Mask (Fast)",
    "description": "",
    "category": "mask/filters",
    "output_node": false
  },
  "ClampOutliers": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ],
        "std_dev": [
          "FLOAT",
          {
            "default": 3,
            "min": 0.1,
            "max": 100,
            "step": 0.1,
            "round": 0.1
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "ClampOutliers",
    "display_name": "Clamp Outliers",
    "description": "",
    "category": "latent/filters",
    "output_node": false
  },
  "ColorMatchImage": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "reference": [
          "IMAGE"
        ],
        "blur_type": [
          [
            "blur",
            "guidedFilter"
          ]
        ],
        "blur_size": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1023
          }
        ],
        "factor": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01,
            "round": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ColorMatchImage",
    "display_name": "Color Match Image",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "ConvertNormals": {
    "input": {
      "required": {
        "normals": [
          "IMAGE"
        ],
        "input_mode": [
          [
            "BAE",
            "MiDaS",
            "Standard"
          ]
        ],
        "output_mode": [
          [
            "BAE",
            "MiDaS",
            "Standard"
          ]
        ],
        "scale_XY": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.001
          }
        ],
        "normalize": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "fix_black": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      },
      "optional": {
        "optional_fill": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ConvertNormals",
    "display_name": "Convert Normals",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "DifferenceChecker": {
    "input": {
      "required": {
        "images1": [
          "IMAGE"
        ],
        "images2": [
          "IMAGE"
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 1000,
            "step": 0.01,
            "round": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "DifferenceChecker",
    "display_name": "Difference Checker",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "DilateErodeMask": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "radius": [
          "INT",
          {
            "default": 0,
            "min": -1023,
            "max": 1023,
            "step": 1
          }
        ],
        "shape": [
          [
            "box",
            "circle"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "DilateErodeMask",
    "display_name": "Dilate/Erode Mask",
    "description": "",
    "category": "mask/filters",
    "output_node": false
  },
  "EnhanceDetail": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "filter_radius": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 64,
            "step": 1
          }
        ],
        "sigma": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.01,
            "max": 100,
            "step": 0.01
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "detail_mult": [
          "FLOAT",
          {
            "default": 2,
            "min": 0,
            "max": 100,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "EnhanceDetail",
    "display_name": "Enhance Detail",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "ExposureAdjust": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "stops": [
          "FLOAT",
          {
            "default": 0,
            "min": -100,
            "max": 100,
            "step": 0.01
          }
        ],
        "input_mode": [
          [
            "sRGB",
            "linear"
          ]
        ],
        "output_mode": [
          [
            "sRGB",
            "linear"
          ]
        ],
        "use_tonemap": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "tonemap_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ExposureAdjust",
    "display_name": "Exposure Adjust",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "FrequencyCombine": {
    "input": {
      "required": {
        "high_frequency": [
          "IMAGE"
        ],
        "low_frequency": [
          "IMAGE"
        ],
        "mode": [
          [
            "subtract",
            "divide"
          ]
        ],
        "eps": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "FrequencyCombine",
    "display_name": "Frequency Combine",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "FrequencySeparate": {
    "input": {
      "required": {
        "original": [
          "IMAGE"
        ],
        "low_frequency": [
          "IMAGE"
        ],
        "mode": [
          [
            "subtract",
            "divide"
          ]
        ],
        "eps": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "high_frequency"
    ],
    "name": "FrequencySeparate",
    "display_name": "Frequency Separate",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "GuidedFilterAlpha": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "alpha": [
          "IMAGE"
        ],
        "filter_radius": [
          "INT",
          {
            "default": 8,
            "min": 1,
            "max": 64,
            "step": 1
          }
        ],
        "sigma": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.01,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "GuidedFilterAlpha",
    "display_name": "(DEPRECATED) Guided Filter Alpha",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "GuidedFilterImage": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "guide": [
          "IMAGE"
        ],
        "size": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 1023
          }
        ],
        "sigma": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.01,
            "max": 100,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "GuidedFilterImage",
    "display_name": "Guided Filter Image",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "ImageConstant": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8192,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8192,
            "step": 1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ],
        "red": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "green": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "blue": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageConstant",
    "display_name": "Image Constant Color (RGB)",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "ImageConstantHSV": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8192,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8192,
            "step": 1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ],
        "hue": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "saturation": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "value": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageConstantHSV",
    "display_name": "Image Constant Color (HSV)",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "InstructPixToPixConditioningAdvanced": {
    "input": {
      "required": {
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "new": [
          "LATENT"
        ],
        "new_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 100,
            "step": 0.01
          }
        ],
        "original": [
          "LATENT"
        ],
        "original_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 100,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "cond1",
      "cond2",
      "negative",
      "latent"
    ],
    "name": "InstructPixToPixConditioningAdvanced",
    "display_name": "InstructPixToPixConditioningAdvanced",
    "description": "",
    "category": "conditioning/instructpix2pix",
    "output_node": false
  },
  "JitterImage": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "jitter_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "JitterImage",
    "display_name": "Jitter Image",
    "description": "",
    "category": "image/filters/jitter",
    "output_node": false
  },
  "Keyer": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "operation": [
          [
            "luminance",
            "saturation",
            "max",
            "min",
            "red",
            "green",
            "blue",
            "redscreen",
            "greenscreen",
            "bluescreen"
          ]
        ],
        "low": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.001
          }
        ],
        "high": [
          "FLOAT",
          {
            "default": 1,
            "step": 0.001
          }
        ],
        "gamma": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.001,
            "step": 0.001
          }
        ],
        "premult": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "image",
      "alpha",
      "mask"
    ],
    "name": "Keyer",
    "display_name": "Keyer",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "LatentNormalizeShuffle": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ],
        "flatten": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16
          }
        ],
        "normalize": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "shuffle": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentNormalizeShuffle",
    "display_name": "LatentNormalizeShuffle",
    "description": "",
    "category": "latent/filters",
    "output_node": false
  },
  "LatentStats": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ]
      }
    },
    "output": [
      "STRING",
      "FLOAT",
      "FLOAT",
      "FLOAT",
      "FLOAT"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "stats",
      "c0_mean",
      "c1_mean",
      "c2_mean",
      "c3_mean"
    ],
    "name": "LatentStats",
    "display_name": "Latent Stats",
    "description": "",
    "category": "utils",
    "output_node": true
  },
  "MedianFilterImage": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 1023
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "MedianFilterImage",
    "display_name": "Median Filter Image",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "NormalMapSimple": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "scale_XY": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "NormalMapSimple",
    "display_name": "Normal Map (Simple)",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "OffsetLatentImage": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 8192,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 8192,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ],
        "offset_0": [
          "FLOAT",
          {
            "default": 0,
            "min": -10,
            "max": 10,
            "step": 0.1,
            "round": 0.1
          }
        ],
        "offset_1": [
          "FLOAT",
          {
            "default": 0,
            "min": -10,
            "max": 10,
            "step": 0.1,
            "round": 0.1
          }
        ],
        "offset_2": [
          "FLOAT",
          {
            "default": 0,
            "min": -10,
            "max": 10,
            "step": 0.1,
            "round": 0.1
          }
        ],
        "offset_3": [
          "FLOAT",
          {
            "default": 0,
            "min": -10,
            "max": 10,
            "step": 0.1,
            "round": 0.1
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "OffsetLatentImage",
    "display_name": "Offset Latent Image",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "PrintSigmas": {
    "input": {
      "required": {
        "sigmas": [
          "SIGMAS"
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SIGMAS"
    ],
    "name": "PrintSigmas",
    "display_name": "PrintSigmas",
    "description": "",
    "category": "utils",
    "output_node": true
  },
  "RelightSimple": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "normals": [
          "IMAGE"
        ],
        "x_dir": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.5,
            "max": 1.5,
            "step": 0.01
          }
        ],
        "y_dir": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.5,
            "max": 1.5,
            "step": 0.01
          }
        ],
        "brightness": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "RelightSimple",
    "display_name": "Relight (Simple)",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "RemapRange": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "blackpoint": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "whitepoint": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "RemapRange",
    "display_name": "Remap Range",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "RestoreDetail": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "detail": [
          "IMAGE"
        ],
        "mode": [
          [
            "add",
            "multiply"
          ]
        ],
        "blur_type": [
          [
            "blur",
            "guidedFilter"
          ]
        ],
        "blur_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 1023
          }
        ],
        "factor": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01,
            "round": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "RestoreDetail",
    "display_name": "Restore Detail",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "SharpenFilterLatent": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ],
        "filter_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 128
          }
        ],
        "factor": [
          "FLOAT",
          {
            "default": 1,
            "min": -100,
            "max": 100,
            "step": 0.01,
            "round": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "SharpenFilterLatent",
    "display_name": "Sharpen Filter (Latent)",
    "description": "",
    "category": "latent/filters",
    "output_node": false
  },
  "ShuffleChannels": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "red": [
          [
            "red",
            "green",
            "blue",
            "alpha",
            "white",
            "black"
          ],
          {
            "default": "red"
          }
        ],
        "green": [
          [
            "red",
            "green",
            "blue",
            "alpha",
            "white",
            "black"
          ],
          {
            "default": "green"
          }
        ],
        "blue": [
          [
            "red",
            "green",
            "blue",
            "alpha",
            "white",
            "black"
          ],
          {
            "default": "blue"
          }
        ],
        "alpha": [
          [
            "red",
            "green",
            "blue",
            "alpha",
            "white",
            "black",
            "none"
          ],
          {
            "default": "none"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ShuffleChannels",
    "display_name": "Shuffle Channels",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "Tonemap": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "input_mode": [
          [
            "linear",
            "sRGB"
          ]
        ],
        "output_mode": [
          [
            "sRGB",
            "linear"
          ]
        ],
        "tonemap_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Tonemap",
    "display_name": "Tonemap",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "UnJitterImage": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "jitter_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "step": 0.1
          }
        ],
        "oflow_align": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "UnJitterImage",
    "display_name": "Un-Jitter Image",
    "description": "",
    "category": "image/filters/jitter",
    "output_node": false
  },
  "UnTonemap": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "input_mode": [
          [
            "sRGB",
            "linear"
          ]
        ],
        "output_mode": [
          [
            "linear",
            "sRGB"
          ]
        ],
        "tonemap_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "UnTonemap",
    "display_name": "UnTonemap",
    "description": "",
    "category": "image/filters",
    "output_node": false
  },
  "Animation Builder (mtb)": {
    "input": {
      "required": {
        "total_frames": [
          "INT",
          {
            "default": 100,
            "min": 0
          }
        ],
        "scale_float": [
          "FLOAT",
          {
            "default": 1,
            "min": 0
          }
        ],
        "loop_count": [
          "INT",
          {
            "default": 1,
            "min": 0
          }
        ],
        "raw_iteration": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ],
        "raw_loop": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ]
      }
    },
    "output": [
      "INT",
      "FLOAT",
      "INT",
      "BOOLEAN"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "frame",
      "0-1 (scaled)",
      "count",
      "loop_ended"
    ],
    "name": "Animation Builder (mtb)",
    "display_name": "Animation Builder (mtb)",
    "description": "\n# Animation Builder\n\nCheck the\n[wiki page](https://github.com/melMass/comfy_mtb/wiki/nodes-animation-builder)\nfor more info.\n\n\n- This basic example should help to understand the meaning of\nits inputs and outputs thanks to the [debug](nodes-debug) node.\n\n![](https://github.com/melMass/comfy_mtb/assets/7041726/2b5c7e4f-372d-4494-9e73-abb2daa7cb36)\n\n- In this other example Animation Builder is used in combination with\n[Batch From History](https://github.com/melMass/comfy_mtb/wiki/nodes-batch-from-history)\nto create a zoom-in animation on a static image\n\n![](https://github.com/melMass/comfy_mtb/assets/7041726/77d37da1-0a8e-4519-a493-dfdef7f755ea)\n\n## Inputs\n\n| name | description |\n| ---- | :----------:|\n| total_frames | The number of frame to queue (this is multiplied by the `loop_count`)|\n| scale_float | Convenience input to scale the normalized `current value` (a float between 0 and 1 lerp over the current queue length) |\n| loop_count | The number of loops to queue |\n| **Reset Button** | resets the internal counters, although the node is though around using its queue button it should still work fine when using the regular queue button of comfy |\n| **Queue Button** | Convenience button to run the queues (`total_frames` * `loop_count`) |\n\n",
    "category": "mtb/animation",
    "output_node": false
  },
  "Batch Float (mtb)": {
    "input": {
      "required": {
        "mode": [
          [
            "Single",
            "Steps"
          ],
          {
            "default": "Steps"
          }
        ],
        "count": [
          "INT",
          {
            "default": 2
          }
        ],
        "min": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.001
          }
        ],
        "max": [
          "FLOAT",
          {
            "default": 1,
            "step": 0.001
          }
        ],
        "easing": [
          [
            "Linear",
            "Sine In",
            "Sine Out",
            "Sine In/Out",
            "Quart In",
            "Quart Out",
            "Quart In/Out",
            "Cubic In",
            "Cubic Out",
            "Cubic In/Out",
            "Circ In",
            "Circ Out",
            "Circ In/Out",
            "Back In",
            "Back Out",
            "Back In/Out",
            "Elastic In",
            "Elastic Out",
            "Elastic In/Out",
            "Bounce In",
            "Bounce Out",
            "Bounce In/Out"
          ],
          {
            "default": "Linear"
          }
        ]
      }
    },
    "output": [
      "FLOATS"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOATS"
    ],
    "name": "Batch Float (mtb)",
    "display_name": "Batch Float (mtb)",
    "description": "Generates a batch of float values with interpolation",
    "category": "mtb/batch",
    "output_node": false
  },
  "Batch Transform (mtb)": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "border_handling": [
          [
            "edge",
            "constant",
            "reflect",
            "symmetric"
          ],
          {
            "default": "edge"
          }
        ],
        "constant_color": [
          "COLOR",
          {
            "default": "#000000"
          }
        ]
      },
      "optional": {
        "x": [
          "FLOATS"
        ],
        "y": [
          "FLOATS"
        ],
        "zoom": [
          "FLOATS"
        ],
        "angle": [
          "FLOATS"
        ],
        "shear": [
          "FLOATS"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Batch Transform (mtb)",
    "display_name": "Batch Transform (mtb)",
    "description": "Transform a batch of images using a batch of keyframes",
    "category": "mtb/batch",
    "output_node": false
  },
  "Batch Shape (mtb)": {
    "input": {
      "required": {
        "count": [
          "INT",
          {
            "default": 1
          }
        ],
        "shape": [
          [
            "Box",
            "Circle",
            "Diamond",
            "Tube"
          ],
          {
            "default": "Circle"
          }
        ],
        "image_width": [
          "INT",
          {
            "default": 512
          }
        ],
        "image_height": [
          "INT",
          {
            "default": 512
          }
        ],
        "shape_size": [
          "INT",
          {
            "default": 100
          }
        ],
        "color": [
          "COLOR",
          {
            "default": "#ffffff"
          }
        ],
        "bg_color": [
          "COLOR",
          {
            "default": "#000000"
          }
        ],
        "shade_color": [
          "COLOR",
          {
            "default": "#000000"
          }
        ],
        "thickness": [
          "INT",
          {
            "default": 5
          }
        ],
        "shadex": [
          "FLOAT",
          {
            "default": 0
          }
        ],
        "shadey": [
          "FLOAT",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Batch Shape (mtb)",
    "display_name": "Batch Shape (mtb)",
    "description": "Generates a batch of 2D shapes with optional shading (experimental)",
    "category": "mtb/batch",
    "output_node": false
  },
  "Batch Make (mtb)": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "count": [
          "INT",
          {
            "default": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Batch Make (mtb)",
    "display_name": "Batch Make (mtb)",
    "description": "Simply duplicates the input frame as a batch",
    "category": "mtb/batch",
    "output_node": false
  },
  "Batch Float Assemble (mtb)": {
    "input": {
      "required": {
        "reverse": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "FLOATS"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOATS"
    ],
    "name": "Batch Float Assemble (mtb)",
    "display_name": "Batch Float Assemble (mtb)",
    "description": "Assembles mutiple batches of floats into a single stream (batch)",
    "category": "mtb/batch",
    "output_node": false
  },
  "Batch Float Fill (mtb)": {
    "input": {
      "required": {
        "floats": [
          "FLOATS"
        ],
        "direction": [
          [
            "head",
            "tail"
          ],
          {
            "default": "tail"
          }
        ],
        "value": [
          "FLOAT",
          {
            "default": 0
          }
        ],
        "count": [
          "INT",
          {
            "default": 1
          }
        ]
      }
    },
    "output": [
      "FLOATS"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOATS"
    ],
    "name": "Batch Float Fill (mtb)",
    "display_name": "Batch Float Fill (mtb)",
    "description": "Fills a batch float with a single value until it reaches the target length",
    "category": "mtb/batch",
    "output_node": false
  },
  "Batch Float Normalize (mtb)": {
    "input": {
      "required": {
        "floats": [
          "FLOATS"
        ]
      }
    },
    "output": [
      "FLOATS"
    ],
    "output_is_list": [false],
    "output_name": [
      "normalized_floats"
    ],
    "name": "Batch Float Normalize (mtb)",
    "display_name": "Batch Float Normalize (mtb)",
    "description": "Normalize the values in the list of floats",
    "category": "mtb/batch",
    "output_node": false
  },
  "Batch Merge (mtb)": {
    "input": {
      "required": {
        "fusion_mode": [
          [
            "add",
            "multiply",
            "average"
          ],
          {
            "default": "average"
          }
        ],
        "fill": [
          [
            "head",
            "tail"
          ],
          {
            "default": "tail"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Batch Merge (mtb)",
    "display_name": "Batch Merge (mtb)",
    "description": "Merges multiple image batches with different frame counts",
    "category": "mtb/batch",
    "output_node": false
  },
  "Batch Shake (mtb)": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "position_amount_x": [
          "FLOAT",
          {
            "default": 1
          }
        ],
        "position_amount_y": [
          "FLOAT",
          {
            "default": 1
          }
        ],
        "rotation_amount": [
          "FLOAT",
          {
            "default": 10
          }
        ],
        "frequency": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.005
          }
        ],
        "frequency_divider": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.005
          }
        ],
        "octaves": [
          "INT",
          {
            "default": 1,
            "min": 1
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "FLOATS",
      "FLOATS",
      "FLOATS"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "image",
      "pos_x",
      "pos_y",
      "rot"
    ],
    "name": "Batch Shake (mtb)",
    "display_name": "Batch Shake (mtb)",
    "description": "Applies a shaking effect to batches of images.",
    "category": "mtb/batch",
    "output_node": false
  },
  "Plot Batch Float (mtb)": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 768
          }
        ],
        "height": [
          "INT",
          {
            "default": 768
          }
        ],
        "point_size": [
          "INT",
          {
            "default": 4
          }
        ],
        "seed": [
          "INT",
          {
            "default": 1
          }
        ],
        "start_at_zero": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "plot"
    ],
    "name": "Plot Batch Float (mtb)",
    "display_name": "Plot Batch Float (mtb)",
    "description": "Plot floats",
    "category": "mtb/batch",
    "output_node": false
  },
  "Batch Time Wrap (mtb)": {
    "input": {
      "required": {
        "target_count": [
          "INT",
          {
            "default": 25,
            "min": 2
          }
        ],
        "frames": [
          "IMAGE"
        ],
        "curve": [
          "FLOATS"
        ]
      }
    },
    "output": [
      "IMAGE",
      "FLOATS"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "interpolated_floats"
    ],
    "name": "Batch Time Wrap (mtb)",
    "display_name": "Batch Time Wrap (mtb)",
    "description": "Remap a batch using a time curve (FLOATS)",
    "category": "mtb/batch",
    "output_node": false
  },
  "Batch Float Fit (mtb)": {
    "input": {
      "required": {
        "values": [
          "FLOATS",
          {
            "forceInput": true
          }
        ],
        "clamp": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "auto_compute_source": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "source_min": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.01
          }
        ],
        "source_max": [
          "FLOAT",
          {
            "default": 1,
            "step": 0.01
          }
        ],
        "target_min": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.01
          }
        ],
        "target_max": [
          "FLOAT",
          {
            "default": 1,
            "step": 0.01
          }
        ],
        "easing": [
          [
            "Linear",
            "Sine In",
            "Sine Out",
            "Sine In/Out",
            "Quart In",
            "Quart Out",
            "Quart In/Out",
            "Cubic In",
            "Cubic Out",
            "Cubic In/Out",
            "Circ In",
            "Circ Out",
            "Circ In/Out",
            "Back In",
            "Back Out",
            "Back In/Out",
            "Elastic In",
            "Elastic Out",
            "Elastic In/Out",
            "Bounce In",
            "Bounce Out",
            "Bounce In/Out"
          ],
          {
            "default": "Linear"
          }
        ]
      }
    },
    "output": [
      "FLOATS"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOATS"
    ],
    "name": "Batch Float Fit (mtb)",
    "display_name": "Batch Float Fit (mtb)",
    "description": "Fit a list of floats using a source and target range",
    "category": "mtb/batch",
    "output_node": false
  },
  "Batch Float Math (mtb)": {
    "input": {
      "required": {
        "reverse": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "operation": [
          [
            "add",
            "sub",
            "mul",
            "div",
            "pow",
            "abs"
          ],
          {
            "default": "add"
          }
        ]
      }
    },
    "output": [
      "FLOATS"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOATS"
    ],
    "name": "Batch Float Math (mtb)",
    "display_name": "Batch Float Math (mtb)",
    "description": "",
    "category": "mtb/utils",
    "output_node": false
  },
  "Smart Step (mtb)": {
    "input": {
      "required": {
        "step": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000,
            "step": 1
          }
        ],
        "start_percent": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "end_percent": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "step",
      "start",
      "end"
    ],
    "name": "Smart Step (mtb)",
    "display_name": "Smart Step (mtb)",
    "description": "Utils to control the steps start/stop of the KAdvancedSampler in percentage",
    "category": "mtb/conditioning",
    "output_node": false
  },
  "Styles Loader (mtb)": {
    "input": {
      "required": {
        "style_name": [
          [
            "name",
            "❌Low Token",
            "✅Line Art / Manga"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "positive",
      "negative"
    ],
    "name": "Styles Loader (mtb)",
    "display_name": "Styles Loader (mtb)",
    "description": "Load csv files and populate a dropdown from the rows (à la A111)",
    "category": "mtb/conditioning",
    "output_node": false
  },
  "Interpolate Clip Sequential (mtb)": {
    "input": {
      "required": {
        "base_text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "text_to_replace": [
          "STRING",
          {
            "default": ""
          }
        ],
        "clip": [
          "CLIP"
        ],
        "interpolation_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "Interpolate Clip Sequential (mtb)",
    "display_name": "Interpolate Clip Sequential (mtb)",
    "description": "",
    "category": "mtb/conditioning",
    "output_node": false
  },
  "Constant (mtb)": {
    "input": {
      "required": {
        "Value": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": [
      "output"
    ],
    "name": "Constant (mtb)",
    "display_name": "Constant (mtb)",
    "description": "",
    "category": "mtb/utils",
    "output_node": false
  },
  "Bbox From Mask (mtb)": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "invert": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "BBOX",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "bbox",
      "image (optional)"
    ],
    "name": "Bbox From Mask (mtb)",
    "display_name": "Bbox From Mask (mtb)",
    "description": "From a mask extract the bounding box",
    "category": "mtb/crop",
    "output_node": false
  },
  "Bbox (mtb)": {
    "input": {
      "required": {
        "x": [
          "INT",
          {
            "default": 0,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 256,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "BBOX"
    ],
    "output_is_list": [false],
    "output_name": [
      "BBOX"
    ],
    "name": "Bbox (mtb)",
    "display_name": "Bbox (mtb)",
    "description": "The bounding box (BBOX) custom type used by other nodes",
    "category": "mtb/crop",
    "output_node": false
  },
  "Crop (mtb)": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 256,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "bbox": [
          "BBOX"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "BBOX"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "IMAGE",
      "MASK",
      "BBOX"
    ],
    "name": "Crop (mtb)",
    "display_name": "Crop (mtb)",
    "description": "Crops an image and an optional mask to a given bounding box\n\n    The bounding box can be given as a tuple of (x, y, width, height) or as a BBOX type\n    The BBOX input takes precedence over the tuple input\n    ",
    "category": "mtb/crop",
    "output_node": false
  },
  "Uncrop (mtb)": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "crop_image": [
          "IMAGE"
        ],
        "bbox": [
          "BBOX"
        ],
        "border_blending": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Uncrop (mtb)",
    "display_name": "Uncrop (mtb)",
    "description": "Uncrops an image to a given bounding box\n\n    The bounding box can be given as a tuple of (x, y, width, height) or as a BBOX type\n    The BBOX input takes precedence over the tuple input\n    ",
    "category": "mtb/crop",
    "output_node": false
  },
  "Curve (mtb)": {
    "input": {
      "required": {
        "curve": [
          "FLOAT_CURVE"
        ]
      }
    },
    "output": [
      "FLOAT_CURVE"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT_CURVE"
    ],
    "name": "Curve (mtb)",
    "display_name": "Curve (mtb)",
    "description": "A basic FLOAT_CURVE input node.",
    "category": "mtb/curve",
    "output_node": false
  },
  "Curve To Float (mtb)": {
    "input": {
      "required": {
        "curve": [
          "FLOAT_CURVE",
          {
            "forceInput": true
          }
        ],
        "steps": [
          "INT",
          {
            "default": 10,
            "min": 2
          }
        ]
      }
    },
    "output": [
      "FLOATS",
      "FLOAT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "FLOATS",
      "FLOAT"
    ],
    "name": "Curve To Float (mtb)",
    "display_name": "Curve To Float (mtb)",
    "description": "Convert a FLOAT_CURVE to a FLOAT or FLOATS",
    "category": "mtb/curve",
    "output_node": false
  },
  "Debug (mtb)": {
    "input": {
      "required": {
        "output_to_console": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Debug (mtb)",
    "display_name": "Debug (mtb)",
    "description": "Experimental node to debug any Comfy values.\n\n    support for more types and widgets is planned.\n    ",
    "category": "mtb/debug",
    "output_node": true
  },
  "Save Tensors (mtb)": {
    "input": {
      "required": {
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyPickle"
          }
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "latent": [
          "LATENT"
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Save Tensors (mtb)",
    "display_name": "Save Tensors (mtb)",
    "description": "Save torch tensors (image, mask or latent) to disk.\n\n    useful to debug things outside comfy.\n    ",
    "category": "mtb/debug",
    "output_node": true
  },
  "Deep Bump (mtb)": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mode": [
          [
            "Color to Normals",
            "Normals to Curvature",
            "Normals to Height"
          ]
        ],
        "color_to_normals_overlap": [
          [
            "SMALL",
            "MEDIUM",
            "LARGE"
          ]
        ],
        "normals_to_curvature_blur_radius": [
          [
            "SMALLEST",
            "SMALLER",
            "SMALL",
            "MEDIUM",
            "LARGE",
            "LARGER",
            "LARGEST"
          ]
        ],
        "normals_to_height_seamless": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Deep Bump (mtb)",
    "display_name": "Deep Bump (mtb)",
    "description": "Normal & height maps generation from single pictures",
    "category": "mtb/textures",
    "output_node": false
  },
  "Restore Face (mtb)": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "model": [
          "FACEENHANCE_MODEL"
        ],
        "aligned": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "only_center_face": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0.5
          }
        ],
        "save_tmp_steps": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Restore Face (mtb)",
    "display_name": "Restore Face (mtb)",
    "description": "Uses GFPGan to restore faces",
    "category": "mtb/facetools",
    "output_node": false
  },
  "Load Face Enhance Model (mtb)": {
    "input": {
      "required": {
        "model_name": [
          [],
          {
            "default": "None"
          }
        ],
        "upscale": [
          "INT",
          {
            "default": 1
          }
        ]
      },
      "optional": {
        "bg_upsampler": [
          "UPSCALE_MODEL",
          {
            "default": null
          }
        ]
      }
    },
    "output": [
      "FACEENHANCE_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "model"
    ],
    "name": "Load Face Enhance Model (mtb)",
    "display_name": "Load Face Enhance Model (mtb)",
    "description": "Loads a GFPGan or RestoreFormer model for face enhancement.",
    "category": "mtb/facetools",
    "output_node": false
  },
  "Face Swap (mtb)": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "reference": [
          "IMAGE"
        ],
        "faces_index": [
          "STRING",
          {
            "default": "0"
          }
        ],
        "faceanalysis_model": [
          "FACE_ANALYSIS_MODEL",
          {
            "default": "None"
          }
        ],
        "faceswap_model": [
          "FACESWAP_MODEL",
          {
            "default": "None"
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Face Swap (mtb)",
    "display_name": "Face Swap (mtb)",
    "description": "Face swap using deepinsight/insightface models",
    "category": "mtb/facetools",
    "output_node": false
  },
  "Load Face Swap Model (mtb)": {
    "input": {
      "required": {
        "faceswap_model": [
          [],
          {
            "default": "None"
          }
        ]
      }
    },
    "output": [
      "FACESWAP_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "FACESWAP_MODEL"
    ],
    "name": "Load Face Swap Model (mtb)",
    "display_name": "Load Face Swap Model (mtb)",
    "description": "Loads a faceswap model",
    "category": "mtb/facetools",
    "output_node": false
  },
  "Load Face Analysis Model (mtb)": {
    "input": {
      "required": {
        "faceswap_model": [
          [
            "antelopev2",
            "buffalo_l",
            "buffalo_m",
            "buffalo_sc"
          ],
          {
            "default": "buffalo_l"
          }
        ]
      }
    },
    "output": [
      "FACE_ANALYSIS_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "FACE_ANALYSIS_MODEL"
    ],
    "name": "Load Face Analysis Model (mtb)",
    "display_name": "Load Face Analysis Model (mtb)",
    "description": "Loads a face analysis model",
    "category": "mtb/facetools",
    "output_node": false
  },
  "Filter Z (mtb)": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "depth": [
          "IMAGE"
        ],
        "to_black": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "step": 0.01,
            "min": 0,
            "max": 1
          }
        ],
        "invert": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Filter Z (mtb)",
    "display_name": "Filter Z (mtb)",
    "description": "Filters an image based on a depth map",
    "category": "mtb/filters",
    "output_node": false
  },
  "Qr Code (mtb)": {
    "input": {
      "required": {
        "url": [
          "STRING",
          {
            "default": "https://www.github.com"
          }
        ],
        "width": [
          "INT",
          {
            "default": 256,
            "max": 8096,
            "min": 0,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "max": 8096,
            "min": 0,
            "step": 1
          }
        ],
        "error_correct": [
          [
            "L",
            "M",
            "Q",
            "H"
          ],
          {
            "default": "L"
          }
        ],
        "box_size": [
          "INT",
          {
            "default": 10,
            "max": 8096,
            "min": 0,
            "step": 1
          }
        ],
        "border": [
          "INT",
          {
            "default": 4,
            "max": 8096,
            "min": 0,
            "step": 1
          }
        ],
        "invert": [
          [
            "BOOLEAN"
          ],
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Qr Code (mtb)",
    "display_name": "Qr Code (mtb)",
    "description": "Basic QR Code generator",
    "category": "mtb/generate",
    "output_node": false
  },
  "Unsplash Image (mtb)": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "max": 8096,
            "min": 0,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "max": 8096,
            "min": 0,
            "step": 1
          }
        ],
        "random_seed": [
          "INT",
          {
            "default": 0,
            "max": 100000,
            "min": 0,
            "step": 1
          }
        ]
      },
      "optional": {
        "keyword": [
          "STRING",
          {
            "default": "nature"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Unsplash Image (mtb)",
    "display_name": "Unsplash Image (mtb)",
    "description": "Unsplash Image given a keyword and a size",
    "category": "mtb/generate",
    "output_node": false
  },
  "Text To Image (mtb)": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "Hello world!"
          }
        ],
        "font": [
          [
            "font"
          ]
        ],
        "wrap": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "trim": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "line_height": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "step": 0.1
          }
        ],
        "font_size": [
          "INT",
          {
            "default": 32,
            "min": 1,
            "max": 2500,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8096,
            "step": 1
          }
        ],
        "color": [
          "COLOR",
          {
            "default": "black"
          }
        ],
        "background": [
          "COLOR",
          {
            "default": "white"
          }
        ],
        "h_align": [
          [
            "left",
            "center",
            "right"
          ],
          {
            "default": "left"
          }
        ],
        "v_align": [
          [
            "top",
            "center",
            "bottom"
          ],
          {
            "default": "top"
          }
        ],
        "h_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8096,
            "step": 1
          }
        ],
        "v_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8096,
            "step": 1
          }
        ],
        "h_coverage": [
          "INT",
          {
            "default": 100,
            "min": 1,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "Text To Image (mtb)",
    "display_name": "Text To Image (mtb)",
    "description": "# Text to Image\n\nThis node look for any font files in comfy_dir/fonts.  \nby default it fallsback to a default font.\n\n![img](https://i.imgur.com/3GT92hy.gif)\n",
    "category": "mtb/generate",
    "output_node": false
  },
  "String Replace (mtb)": {
    "input": {
      "required": {
        "string": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "old": [
          "STRING",
          {
            "default": ""
          }
        ],
        "new": [
          "STRING",
          {
            "default": ""
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "String Replace (mtb)",
    "display_name": "String Replace (mtb)",
    "description": "Basic string replacement.",
    "category": "mtb/string",
    "output_node": false
  },
  "Fit Number (mtb)": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 0,
            "forceInput": true
          }
        ],
        "clamp": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "source_min": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.01
          }
        ],
        "source_max": [
          "FLOAT",
          {
            "default": 1,
            "step": 0.01
          }
        ],
        "target_min": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.01
          }
        ],
        "target_max": [
          "FLOAT",
          {
            "default": 1,
            "step": 0.01
          }
        ],
        "easing": [
          [
            "Linear",
            "Sine In",
            "Sine Out",
            "Sine In/Out",
            "Quart In",
            "Quart Out",
            "Quart In/Out",
            "Cubic In",
            "Cubic Out",
            "Cubic In/Out",
            "Circ In",
            "Circ Out",
            "Circ In/Out",
            "Back In",
            "Back Out",
            "Back In/Out",
            "Elastic In",
            "Elastic Out",
            "Elastic In/Out",
            "Bounce In",
            "Bounce Out",
            "Bounce In/Out"
          ],
          {
            "default": "Linear"
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "Fit Number (mtb)",
    "display_name": "Fit Number (mtb)",
    "description": "Fit the input float using a source and target range",
    "category": "mtb/math",
    "output_node": false
  },
  "Get Batch From History (mtb)": {
    "input": {
      "required": {
        "enable": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "count": [
          "INT",
          {
            "default": 1,
            "min": 0
          }
        ],
        "offset": [
          "INT",
          {
            "default": 0,
            "min": -1000000000,
            "max": 1000000000
          }
        ],
        "internal_count": [
          "INT",
          {
            "default": 0
          }
        ]
      },
      "optional": {
        "passthrough_image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "Get Batch From History (mtb)",
    "display_name": "Get Batch From History (mtb)",
    "description": "Very experimental node to load images from the history of the server.\n\n    Queue items without output are ignored in the count.\n    ",
    "category": "mtb/animation",
    "output_node": false
  },
  "Any To String (mtb)": {
    "input": {
      "required": {
        "input": "*"
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Any To String (mtb)",
    "display_name": "Any To String (mtb)",
    "description": "Tries to take any input and convert it to a string.",
    "category": "mtb/converters",
    "output_node": false
  },
  "Concat Images (mtb)": {
    "input": {
      "required": {
        "reverse": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Concat Images (mtb)",
    "display_name": "Concat Images (mtb)",
    "description": "Add images to batch.",
    "category": "mtb/image",
    "output_node": false
  },
  "Math Expression (mtb)": {
    "input": {
      "required": {
        "expression": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "result (float)",
      "result (int)"
    ],
    "name": "Math Expression (mtb)",
    "display_name": "Math Expression (mtb)",
    "description": "evaluate a simple math expression string (!! Fallsback to eval)",
    "category": "mtb/math",
    "output_node": false
  },
  "To Device (mtb)": {
    "input": {
      "required": {
        "ignore_errors": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "device": [
          [
            "cpu",
            "cuda",
            "cuda0"
          ],
          {
            "default": "cpu"
          }
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "images",
      "masks"
    ],
    "name": "To Device (mtb)",
    "display_name": "To Device (mtb)",
    "description": "Send a image or mask tensor to the given device.",
    "category": "mtb/utils",
    "output_node": false
  },
  "Apply Text Template (mtb)": {
    "input": {
      "required": {
        "template": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "string"
    ],
    "name": "Apply Text Template (mtb)",
    "display_name": "Apply Text Template (mtb)",
    "description": "\n    Experimental node to interpolate strings from inputs.\n\n    Interpolation just requires {}, for instance:\n\n    Some string {var_1} and {var_2}\n    ",
    "category": "mtb/utils",
    "output_node": false
  },
  "Match Dimensions (mtb)": {
    "input": {
      "required": {
        "source": [
          "IMAGE"
        ],
        "reference": [
          "IMAGE"
        ],
        "match": [
          [
            "height",
            "width"
          ],
          {
            "default": "height"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "image",
      "new_width",
      "new_height"
    ],
    "name": "Match Dimensions (mtb)",
    "display_name": "Match Dimensions (mtb)",
    "description": "Match images dimensions along the given dimension, preserving aspect ratio.",
    "category": "mtb/utils",
    "output_node": false
  },
  "Auto Pan Equilateral (mtb)": {
    "input": {
      "required": {
        "equilateral_image": [
          "IMAGE"
        ],
        "fovX": [
          "FLOAT",
          {
            "default": 45
          }
        ],
        "fovY": [
          "FLOAT",
          {
            "default": 45
          }
        ],
        "elevation": [
          "FLOAT",
          {
            "default": 0.5
          }
        ],
        "frame_count": [
          "INT",
          {
            "default": 100
          }
        ],
        "width": [
          "INT",
          {
            "default": 768
          }
        ],
        "height": [
          "INT",
          {
            "default": 512
          }
        ]
      },
      "optional": {
        "floats_fovX": [
          "FLOATS"
        ],
        "floats_fovY": [
          "FLOATS"
        ],
        "floats_elevation": [
          "FLOATS"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "Auto Pan Equilateral (mtb)",
    "display_name": "Auto Pan Equilateral (mtb)",
    "description": "Generate a 360 panning video from an equilateral image.",
    "category": "mtb/utils",
    "output_node": false
  },
  "Floats To Float (mtb)": {
    "input": {
      "required": {
        "floats": [
          "FLOATS"
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "float"
    ],
    "name": "Floats To Float (mtb)",
    "display_name": "Floats To Float (mtb)",
    "description": "Conversion utility for compatibility with other extensions (AD, IPA, Fitz are using FLOAT to represent list of floats.)",
    "category": "mtb/utils",
    "output_node": false
  },
  "Float To Floats (mtb)": {
    "input": {
      "required": {
        "float": [
          "FLOAT",
          {
            "default": 0,
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "FLOATS"
    ],
    "output_is_list": [false],
    "output_name": [
      "floats"
    ],
    "name": "Float To Floats (mtb)",
    "display_name": "Float To Floats (mtb)",
    "description": "Conversion utility for compatibility with other extensions (AD, IPA, Fitz are using FLOAT to represent list of floats.)",
    "category": "mtb/utils",
    "output_node": false
  },
  "Floats To Ints (mtb)": {
    "input": {
      "required": {
        "floats": [
          "FLOATS",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "INTS",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "INTS",
      "INT"
    ],
    "name": "Floats To Ints (mtb)",
    "display_name": "Floats To Ints (mtb)",
    "description": "Conversion utility for compatibility with frame interpolation.",
    "category": "mtb/utils",
    "output_node": false
  },
  "Color Correct (mtb)": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "clamp": [
          [true, false],
          {
            "default": true
          }
        ],
        "gamma": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 5,
            "step": 0.01
          }
        ],
        "contrast": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 5,
            "step": 0.01
          }
        ],
        "exposure": [
          "FLOAT",
          {
            "default": 0,
            "min": -5,
            "max": 5,
            "step": 0.01
          }
        ],
        "offset": [
          "FLOAT",
          {
            "default": 0,
            "min": -5,
            "max": 5,
            "step": 0.01
          }
        ],
        "hue": [
          "FLOAT",
          {
            "default": 0,
            "min": -0.5,
            "max": 0.5,
            "step": 0.01
          }
        ],
        "saturation": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 5,
            "step": 0.01
          }
        ],
        "value": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 5,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Color Correct (mtb)",
    "display_name": "Color Correct (mtb)",
    "description": "Various color correction methods",
    "category": "mtb/image processing",
    "output_node": false
  },
  "Image Compare (mtb)": {
    "input": {
      "required": {
        "imageA": [
          "IMAGE"
        ],
        "imageB": [
          "IMAGE"
        ],
        "mode": [
          [
            "checkerboard",
            "diff",
            "blend"
          ],
          {
            "default": "checkerboard"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Compare (mtb)",
    "display_name": "Image Compare (mtb)",
    "description": "Compare two images and return a difference image",
    "category": "mtb/image",
    "output_node": false
  },
  "Image Tile Offset (mtb)": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "tilesX": [
          "INT",
          {
            "default": 2,
            "min": 1
          }
        ],
        "tilesY": [
          "INT",
          {
            "default": 2,
            "min": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Tile Offset (mtb)",
    "display_name": "Image Tile Offset (mtb)",
    "description": "Mimics an old photoshop technique to check for seamless textures",
    "category": "mtb/generate",
    "output_node": false
  },
  "Blur (mtb)": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "sigmaX": [
          "FLOAT",
          {
            "default": 3,
            "min": 0,
            "max": 200,
            "step": 0.01
          }
        ],
        "sigmaY": [
          "FLOAT",
          {
            "default": 3,
            "min": 0,
            "max": 200,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "sigmasX": [
          "FLOATS"
        ],
        "sigmasY": [
          "FLOATS"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Blur (mtb)",
    "display_name": "Blur (mtb)",
    "description": "Blur an image using a Gaussian filter.",
    "category": "mtb/image processing",
    "output_node": false
  },
  "Mask To Image (mtb)": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "color": [
          "COLOR"
        ],
        "background": [
          "COLOR",
          {
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Mask To Image (mtb)",
    "display_name": "Mask To Image (mtb)",
    "description": "Converts a mask (alpha) to an RGB image with a color and background",
    "category": "mtb/generate",
    "output_node": false
  },
  "Colored Image (mtb)": {
    "input": {
      "required": {
        "color": [
          "COLOR"
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 8160
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 8160
          }
        ]
      },
      "optional": {
        "foreground_image": [
          "IMAGE"
        ],
        "foreground_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Colored Image (mtb)",
    "display_name": "Colored Image (mtb)",
    "description": "Constant color image of given size.",
    "category": "mtb/generate",
    "output_node": false
  },
  "Image Premultiply (mtb)": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "invert": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "RGBA"
    ],
    "name": "Image Premultiply (mtb)",
    "display_name": "Image Premultiply (mtb)",
    "description": "Premultiply image with mask",
    "category": "mtb/image",
    "output_node": false
  },
  "Image Resize Factor (mtb)": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "factor": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.01,
            "max": 16,
            "step": 0.01
          }
        ],
        "supersample": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "resampling": [
          [
            "nearest",
            "linear",
            "bilinear",
            "bicubic",
            "trilinear",
            "area",
            "nearest-exact"
          ],
          {
            "default": "nearest"
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "Image Resize Factor (mtb)",
    "display_name": "Image Resize Factor (mtb)",
    "description": "Extracted mostly from WAS Node Suite, with a few edits (most notably multiple image support) and less features.",
    "category": "mtb/image",
    "output_node": false
  },
  "Save Image Grid (mtb)": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ],
        "save_intermediate": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Save Image Grid (mtb)",
    "display_name": "Save Image Grid (mtb)",
    "description": "Save all the images in the input batch as a grid of images.",
    "category": "mtb/IO",
    "output_node": true
  },
  "Load Image From Url (mtb)": {
    "input": {
      "required": {
        "url": [
          "STRING",
          {
            "default": "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/Example.jpg/800px-Example.jpg"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Load Image From Url (mtb)",
    "display_name": "Load Image From Url (mtb)",
    "description": "Load an image from the given URL",
    "category": "mtb/IO",
    "output_node": false
  },
  "Sharpen (mtb)": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "sharpen_radius": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 31,
            "step": 1
          }
        ],
        "sigma_x": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 10,
            "step": 0.1
          }
        ],
        "sigma_y": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 10,
            "step": 0.1
          }
        ],
        "alpha": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 5,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Sharpen (mtb)",
    "display_name": "Sharpen (mtb)",
    "description": "Sharpens an image using a Gaussian kernel.",
    "category": "mtb/image processing",
    "output_node": false
  },
  "Stack Images (mtb)": {
    "input": {
      "required": {
        "vertical": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Stack Images (mtb)",
    "display_name": "Stack Images (mtb)",
    "description": "Stack the input images horizontally or vertically.",
    "category": "mtb/image utils",
    "output_node": false
  },
  "Pick From Batch (mtb)": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "from_direction": [
          [
            "end",
            "start"
          ],
          {
            "default": "start"
          }
        ],
        "count": [
          "INT",
          {
            "default": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Pick From Batch (mtb)",
    "display_name": "Pick From Batch (mtb)",
    "description": "Pick a specific number of images from a batch.\n\n    either from the start or end.\n    ",
    "category": "mtb/image utils",
    "output_node": false
  },
  "Save Gif (mtb)": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "fps": [
          "INT",
          {
            "default": 12,
            "min": 1,
            "max": 120
          }
        ],
        "resize_by": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1
          }
        ],
        "optimize": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "pingpong": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "resample_filter": [
          [
            "nearest",
            "box",
            "bilinear",
            "hamming",
            "bicubic",
            "lanczos"
          ]
        ],
        "use_ffmpeg": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Save Gif (mtb)",
    "display_name": "Save Gif (mtb)",
    "description": "Save the images from the batch as a GIF",
    "category": "mtb/IO",
    "output_node": true
  },
  "Export With Ffmpeg (mtb)": {
    "input": {
      "optional": {
        "images": [
          "IMAGE"
        ],
        "playlist": [
          "PLAYLIST"
        ]
      },
      "required": {
        "fps": [
          "FLOAT",
          {
            "default": 24,
            "min": 1
          }
        ],
        "prefix": [
          "STRING",
          {
            "default": "export"
          }
        ],
        "format": [
          [
            "mov",
            "mp4",
            "mkv",
            "gif",
            "avi"
          ],
          {
            "default": "mov"
          }
        ],
        "codec": [
          [
            "prores_ks",
            "libx264",
            "libx265",
            "gif"
          ],
          {
            "default": "prores_ks"
          }
        ]
      }
    },
    "output": [
      "VIDEO"
    ],
    "output_is_list": [false],
    "output_name": [
      "VIDEO"
    ],
    "name": "Export With Ffmpeg (mtb)",
    "display_name": "Export With Ffmpeg (mtb)",
    "description": "Export with FFmpeg (Experimental)",
    "category": "mtb/IO",
    "output_node": true
  },
  "Add To Playlist (mtb)": {
    "input": {
      "required": {
        "relative_paths": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "persistant_playlist": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "playlist_name": [
          "STRING",
          {
            "default": "playlist_{index:04d}"
          }
        ],
        "index": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Add To Playlist (mtb)",
    "display_name": "Add To Playlist (mtb)",
    "description": "Add a video to the playlist",
    "category": "mtb/IO",
    "output_node": true
  },
  "Read Playlist (mtb)": {
    "input": {
      "required": {
        "enable": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "persistant_playlist": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "playlist_name": [
          "STRING",
          {
            "default": "playlist_{index:04d}"
          }
        ],
        "index": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ]
      }
    },
    "output": [
      "PLAYLIST"
    ],
    "output_is_list": [false],
    "output_name": [
      "PLAYLIST"
    ],
    "name": "Read Playlist (mtb)",
    "display_name": "Read Playlist (mtb)",
    "description": "Read a playlist",
    "category": "mtb/IO",
    "output_node": false
  },
  "Latent Lerp (mtb)": {
    "input": {
      "required": {
        "A": [
          "LATENT"
        ],
        "B": [
          "LATENT"
        ],
        "t": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "Latent Lerp (mtb)",
    "display_name": "Latent Lerp (mtb)",
    "description": "Linear interpolation (blend) between two latent vectors",
    "category": "mtb/latent",
    "output_node": false
  },
  "Image Remove Background Rembg (mtb)": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "alpha_matting": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "alpha_matting_foreground_threshold": [
          "INT",
          {
            "default": 240,
            "min": 0,
            "max": 255
          }
        ],
        "alpha_matting_background_threshold": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 255
          }
        ],
        "alpha_matting_erode_size": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 255
          }
        ],
        "post_process_mask": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "bgcolor": [
          "COLOR",
          {
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "IMAGE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "Image (rgba)",
      "Mask",
      "Image"
    ],
    "name": "Image Remove Background Rembg (mtb)",
    "display_name": "Image Remove Background Rembg (mtb)",
    "description": "Removes the background from the input using Rembg.",
    "category": "mtb/image",
    "output_node": false
  },
  "Model Patch Seamless (mtb)": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "startStep": [
          "INT",
          {
            "default": 0
          }
        ],
        "stopStep": [
          "INT",
          {
            "default": 999
          }
        ],
        "tilingX": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "tilingY": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "MODEL"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "Original Model (passthrough)",
      "Patched Model"
    ],
    "name": "Model Patch Seamless (mtb)",
    "display_name": "Model Patch Seamless (mtb)",
    "description": "Uses the stable diffusion 'hack' to infer seamless images by setting the model layers padding mode to circular (experimental)",
    "category": "mtb/textures",
    "output_node": false
  },
  "Vae Decode (mtb)": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "vae": [
          "VAE"
        ],
        "seamless_model": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "use_tiling_decoder": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Vae Decode (mtb)",
    "display_name": "Vae Decode (mtb)",
    "description": "Wrapper for the 2 core decoders but also adding the sd seamless hack, taken from: FlyingFireCo/tiled_ksampler",
    "category": "mtb/decode",
    "output_node": false
  },
  "Float To Number (mtb)": {
    "input": {
      "required": {
        "float": [
          "FLOAT",
          {
            "default": 0,
            "min": -1000000000,
            "max": 1000000000,
            "step": 1,
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "NUMBER"
    ],
    "output_is_list": [false],
    "output_name": [
      "NUMBER"
    ],
    "name": "Float To Number (mtb)",
    "display_name": "Float To Number (mtb)",
    "description": "Node addon for the WAS Suite. Converts a \"comfy\" FLOAT to a NUMBER.",
    "category": "mtb/number",
    "output_node": false
  },
  "Int To Bool (mtb)": {
    "input": {
      "required": {
        "int": [
          "INT",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "Int To Bool (mtb)",
    "display_name": "Int To Bool (mtb)",
    "description": "Basic int to bool conversion",
    "category": "mtb/number",
    "output_node": false
  },
  "Int To Number (mtb)": {
    "input": {
      "required": {
        "int": [
          "INT",
          {
            "default": 0,
            "min": -1000000000,
            "max": 1000000000,
            "step": 1,
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "NUMBER"
    ],
    "output_is_list": [false],
    "output_name": [
      "NUMBER"
    ],
    "name": "Int To Number (mtb)",
    "display_name": "Int To Number (mtb)",
    "description": "Node addon for the WAS Suite. Converts a \"comfy\" INT to a NUMBER.",
    "category": "mtb/number",
    "output_node": false
  },
  "Model Pruner (mtb)": {
    "input": {
      "optional": {
        "unet": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ]
      },
      "required": {
        "save_separately": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "save_folder": [
          "STRING",
          {
            "default": "checkpoints/ComfyUI"
          }
        ],
        "fix_clip": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "remove_junk": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "ema_mode": [
          [
            "disabled",
            "remove_ema",
            "ema_only"
          ],
          {
            "default": "remove_ema"
          }
        ],
        "precision_unet": [
          [
            "full",
            "fp32",
            "fp16",
            "bf16",
            "fp8"
          ],
          {
            "default": "full"
          }
        ],
        "operation_unet": [
          [
            "copy",
            "convert",
            "delete"
          ],
          {
            "default": "convert"
          }
        ],
        "precision_clip": [
          [
            "full",
            "fp32",
            "fp16",
            "bf16",
            "fp8"
          ],
          {
            "default": "full"
          }
        ],
        "operation_clip": [
          [
            "copy",
            "convert",
            "delete"
          ],
          {
            "default": "convert"
          }
        ],
        "precision_vae": [
          [
            "full",
            "fp32",
            "fp16",
            "bf16",
            "fp8"
          ],
          {
            "default": "full"
          }
        ],
        "operation_vae": [
          [
            "copy",
            "convert",
            "delete"
          ],
          {
            "default": "convert"
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Model Pruner (mtb)",
    "display_name": "Model Pruner (mtb)",
    "description": "",
    "category": "mtb/prune",
    "output_node": true
  },
  "Transform Image (mtb)": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "x": [
          "FLOAT",
          {
            "default": 0,
            "step": 1,
            "min": -4096,
            "max": 4096
          }
        ],
        "y": [
          "FLOAT",
          {
            "default": 0,
            "step": 1,
            "min": -4096,
            "max": 4096
          }
        ],
        "zoom": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.001,
            "step": 0.01
          }
        ],
        "angle": [
          "FLOAT",
          {
            "default": 0,
            "step": 1,
            "min": -360,
            "max": 360
          }
        ],
        "shear": [
          "FLOAT",
          {
            "default": 0,
            "step": 1,
            "min": -4096,
            "max": 4096
          }
        ],
        "border_handling": [
          [
            "edge",
            "constant",
            "reflect",
            "symmetric"
          ],
          {
            "default": "edge"
          }
        ],
        "constant_color": [
          "COLOR",
          {
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Transform Image (mtb)",
    "display_name": "Transform Image (mtb)",
    "description": "Save torch tensors (image, mask or latent) to disk, useful to debug things outside comfy\n\n    it return a tensor representing the transformed images with the same shape as the input tensor\n    ",
    "category": "mtb/transform",
    "output_node": false
  },
  "Load Image Sequence (mtb)": {
    "input": {
      "required": {
        "path": [
          "STRING",
          {
            "default": "videos/####.png"
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0,
            "min": -1,
            "max": 9999999
          }
        ]
      },
      "optional": {
        "range": [
          "STRING",
          {
            "default": ""
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "image",
      "mask",
      "current_frame",
      "total_frames"
    ],
    "name": "Load Image Sequence (mtb)",
    "display_name": "Load Image Sequence (mtb)",
    "description": "Load an image sequence from a folder. The current frame is used to determine which image to load.\n\n    Usually used in conjunction with the `Primitive` node set to increment to load a sequence of images from a folder.\n    Use -1 to load all matching frames as a batch.\n\n    ",
    "category": "mtb/IO",
    "output_node": false
  },
  "Save Image Sequence (mtb)": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "Sequence"
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999999
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Save Image Sequence (mtb)",
    "display_name": "Save Image Sequence (mtb)",
    "description": "Save an image sequence to a folder. The current frame is used to determine which image to save.\n\n    This is merely a wrapper around the `save_images` function with formatting for the output folder and filename.\n    ",
    "category": "mtb/IO",
    "output_node": true
  },
  "TY_UrlDownload": {
    "input": {
      "required": {
        "url": [
          "STRING",
          {
            "default": ""
          }
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "TyDev"
          }
        ]
      },
      "optional": {
        "save_file": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "file_path"
    ],
    "name": "TY_UrlDownload",
    "display_name": "Url Download",
    "description": "",
    "category": "TyDev-Utils/Utils",
    "output_node": false
  },
  "TY_UploadAnything": {
    "input": {
      "required": {
        "file": [
          [
            "example.png"
          ]
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "file_path"
    ],
    "name": "TY_UploadAnything",
    "display_name": "Upload Anything",
    "description": "",
    "category": "TyDev-Utils/Utils",
    "output_node": false
  },
  "TY_ExecutionTime": {
    "input": {
      "required": {

      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "TY_ExecutionTime",
    "display_name": "Execution Time",
    "description": "",
    "category": "TyDev-Utils/Debug",
    "output_node": false
  },
  "Fooocus Loader": {
    "input": {
      "required": {
        "base_model_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ],
          {
            "default": "juggernautXL_v8Rundiffusion.safetensors"
          }
        ],
        "refiner_model_name": [
          [
            "None",
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ],
          {
            "default": "None"
          }
        ],
        "refiner_switch": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.1,
            "max": 1,
            "step": 0.1
          }
        ],
        "refiner_swap_method": [
          [
            "joint",
            "separate",
            "vae"
          ]
        ],
        "positive": [
          "STRING",
          {
            "default": "",
            "placeholder": "Positive",
            "multiline": true
          }
        ],
        "negative": [
          "STRING",
          {
            "default": "",
            "placeholder": "Negative",
            "multiline": true
          }
        ],
        "resolution": [
          [
            "512 x 512",
            "512 x 768",
            "768 x 512",
            "576 x 1024",
            "768 x 1024",
            "768 x 1280",
            "768 x 1344",
            "768 x 1536",
            "832 x 1152",
            "896 x 1152",
            "896 x 1088",
            "1024 x 1024",
            "1024 x 576",
            "1024 x 768",
            "1088 x 896",
            "1152 x 832",
            "1152 x 896",
            "1280 x 768",
            "1344 x 768",
            "1536 x 640",
            "1536 x 768",
            "自定义 x 自定义"
          ],
          {
            "default": "1024 x 1024"
          }
        ],
        "empty_latent_width": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 2048,
            "step": 8
          }
        ],
        "empty_latent_height": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 2048,
            "step": 8
          }
        ],
        "image_number": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 100
          }
        ]
      },
      "optional": {
        "optional_lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "PIPE_LINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "pipe"
    ],
    "name": "Fooocus Loader",
    "display_name": "Fooocus Loader",
    "description": "",
    "category": "Fooocus",
    "output_node": false
  },
  "Fooocus PreKSampler": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "steps": [
          "INT",
          {
            "default": 30,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 4,
            "min": 0,
            "max": 100,
            "step": 0.5
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ],
          {
            "default": "dpmpp_2m_sde_gpu"
          }
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ],
          {
            "default": "karras"
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e+18
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "settings": [
          [
            "Simple",
            "Advanced"
          ],
          {
            "default": "Simple"
          }
        ],
        "sharpness": [
          "FLOAT",
          {
            "default": 2,
            "min": 0,
            "max": 100
          }
        ],
        "adaptive_cfg": [
          "FLOAT",
          {
            "default": 7,
            "min": 0,
            "max": 100
          }
        ],
        "adm_scaler_positive": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 0,
            "max": 3,
            "step": 0.1
          }
        ],
        "adm_scaler_negative": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0,
            "max": 3,
            "step": 0.1
          }
        ],
        "adm_scaler_end": [
          "FLOAT",
          {
            "default": 0.3,
            "min": 0,
            "max": 1,
            "step": 0.1
          }
        ],
        "controlnet_softness": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "freeu_enabled": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "image_to_latent": [
          "IMAGE"
        ],
        "latent": [
          "LATENT"
        ],
        "fooocus_inpaint": [
          "FOOOCUS_INPAINT"
        ],
        "fooocus_styles": [
          "FOOOCUS_STYLES"
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "pipe",
      "model",
      "clip",
      "vae",
      "CONDITIONING+",
      "CONDITIONING-"
    ],
    "name": "Fooocus PreKSampler",
    "display_name": "Fooocus PreKSampler",
    "description": "",
    "category": "Fooocus",
    "output_node": false
  },
  "Fooocus KSampler": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "image_output": [
          [
            "Hide",
            "Preview",
            "Save",
            "Hide/Save"
          ],
          {
            "default": "Preview"
          }
        ],
        "save_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "optional": {
        "model": [
          "MODEL"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "PIPE_LINE",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "pipe",
      "image"
    ],
    "name": "Fooocus KSampler",
    "display_name": "Fooocus KSampler",
    "description": "",
    "category": "Fooocus",
    "output_node": true
  },
  "Fooocus Upscale": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "upscale": [
          [1.5, 2],
          {
            "default": 1.5
          }
        ],
        "steps": [
          "INT",
          {
            "default": 18,
            "min": 1,
            "max": 100
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.382,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "fast": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "image_output": [
          [
            "Hide",
            "Preview",
            "Save",
            "Hide/Save"
          ],
          {
            "default": "Preview"
          }
        ],
        "save_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      },
      "optional": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "pipe",
      "image"
    ],
    "name": "Fooocus Upscale",
    "display_name": "Fooocus Upscale",
    "description": "",
    "category": "Fooocus",
    "output_node": true
  },
  "Fooocus LoraStack": {
    "input": {
      "required": {
        "toggle": [
          [true, false]
        ],
        "num_loras": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 10
          }
        ]
      },
      "optional": {
        "optional_lora_stack": [
          "LORA_STACK"
        ],
        "lora_1_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_1_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_2_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_2_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_3_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_3_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_4_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_4_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_5_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_5_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_6_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_6_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_7_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_7_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_8_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_8_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_9_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_9_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_10_name": [
          [
            "None",
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_10_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LORA_STACK"
    ],
    "output_is_list": [false],
    "output_name": [
      "lora_stack"
    ],
    "name": "Fooocus LoraStack",
    "display_name": "Fooocus LoraStack",
    "description": "",
    "category": "Fooocus",
    "output_node": false
  },
  "Fooocus Controlnet": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "image": [
          "IMAGE"
        ],
        "cn_type": [
          [
            "PyraCanny",
            "CPDS"
          ],
          {
            "default": "PyraCanny"
          }
        ],
        "cn_stop": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "cn_weight": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 2,
            "step": 0.01
          }
        ],
        "skip_cn_preprocess": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "pipe",
      "image"
    ],
    "name": "Fooocus Controlnet",
    "display_name": "Fooocus Controlnet",
    "description": "",
    "category": "Fooocus",
    "output_node": true
  },
  "Fooocus ImagePrompt": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "ip_type": [
          [
            "ImagePrompt",
            "FaceSwap"
          ],
          {
            "default": "ImagePrompt"
          }
        ],
        "ip_stop": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "ip_weight": [
          "FLOAT",
          {
            "default": 0.6,
            "min": 0,
            "max": 2,
            "step": 0.01
          }
        ],
        "skip_cn_preprocess": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "IMAGE_PROMPT"
    ],
    "output_is_list": [false],
    "output_name": [
      "image_prompt"
    ],
    "name": "Fooocus ImagePrompt",
    "display_name": "Fooocus ImagePrompt",
    "description": "",
    "category": "Fooocus",
    "output_node": true
  },
  "Fooocus ApplyImagePrompt": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ]
      },
      "optional": {
        "image_prompt_1": [
          "IMAGE_PROMPT"
        ],
        "image_prompt_2": [
          "IMAGE_PROMPT"
        ],
        "image_prompt_3": [
          "IMAGE_PROMPT"
        ],
        "image_prompt_4": [
          "IMAGE_PROMPT"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "model"
    ],
    "name": "Fooocus ApplyImagePrompt",
    "display_name": "Fooocus ApplyImagePrompt",
    "description": "",
    "category": "Fooocus",
    "output_node": true
  },
  "Fooocus Inpaint": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "inpaint_disable_initial_latent": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "inpaint_respective_field": [
          "FLOAT",
          {
            "default": 0.618,
            "min": 0,
            "max": 1,
            "step": 0.1
          }
        ],
        "inpaint_engine": [
          [
            "None",
            "v1",
            "v2.5",
            "v2.6"
          ],
          {
            "default": "v2.6"
          }
        ],
        "top": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "bottom": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "left": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "right": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "FOOOCUS_INPAINT"
    ],
    "output_is_list": [false],
    "output_name": [
      "fooocus_inpaint"
    ],
    "name": "Fooocus Inpaint",
    "display_name": "Fooocus Inpaint",
    "description": "",
    "category": "Fooocus",
    "output_node": true
  },
  "Fooocus PipeOut": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ]
      },
      "hidden": {
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE",
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "FLOAT"
    ],
    "output_is_list": [false, false, false, false, false, false, false],
    "output_name": [
      "pipe",
      "model",
      "pos",
      "neg",
      "latent",
      "vae",
      "switch"
    ],
    "name": "Fooocus PipeOut",
    "display_name": "Fooocus PipeOut",
    "description": "",
    "category": "Fooocus",
    "output_node": false
  },
  "Fooocus preDetailerFix": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 16384,
            "step": 1,
            "default": 10
          }
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "bbox_segm_pipe": [
          "PIPE_LINE"
        ],
        "sam_pipe": [
          "PIPE_LINE"
        ],
        "optional_image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "PIPE_LINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "pipe"
    ],
    "name": "Fooocus preDetailerFix",
    "display_name": "Fooocus preDetailerFix",
    "description": "",
    "category": "Fooocus/Fix",
    "output_node": false
  },
  "Fooocus ultralyticsDetectorPipe": {
    "input": {
      "required": {
        "model_name": [
          [
            "bbox/face_yolov8m.pt",
            "bbox/hand_yolov8s.pt",
            "segm/person_yolov8m-seg.pt"
          ]
        ],
        "bbox_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "bbox_dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "bbox_crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 10,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "PIPE_LINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "bbox_segm_pipe"
    ],
    "name": "Fooocus ultralyticsDetectorPipe",
    "display_name": "Fooocus ultralyticsDetectorPipe",
    "description": "",
    "category": "Fooocus/Fix",
    "output_node": false
  },
  "Fooocus samLoaderPipe": {
    "input": {
      "required": {
        "model_name": [
          [
            "sam_vit_b_01ec64.pth",
            "sam_vit_h_4b8939.pth"
          ]
        ],
        "device_mode": [
          [
            "AUTO",
            "Prefer GPU",
            "CPU"
          ],
          {
            "default": "AUTO"
          }
        ],
        "sam_detection_hint": [
          [
            "center-1",
            "horizontal-2",
            "vertical-2",
            "rect-4",
            "diamond-4",
            "mask-area",
            "mask-points",
            "mask-point-bbox",
            "none"
          ]
        ],
        "sam_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "sam_threshold": [
          "FLOAT",
          {
            "default": 0.93,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "sam_bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "sam_mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "sam_mask_hint_use_negative": [
          [
            "False",
            "Small",
            "Outter"
          ]
        ]
      }
    },
    "output": [
      "PIPE_LINE"
    ],
    "output_is_list": [false],
    "output_name": [
      "sam_pipe"
    ],
    "name": "Fooocus samLoaderPipe",
    "display_name": "Fooocus samLoaderPipe",
    "description": "",
    "category": "Fooocus/Fix",
    "output_node": false
  },
  "Fooocus detailerFix": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "image_output": [
          [
            "Hide",
            "Preview",
            "Save",
            "Hide/Save",
            "Sender",
            "Sender/Save"
          ],
          {
            "default": "Preview"
          }
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e+18,
            "step": 1
          }
        ],
        "save_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "optional": {
        "model": [
          "MODEL"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "pipe",
      "image"
    ],
    "name": "Fooocus detailerFix",
    "display_name": "Fooocus detailerFix",
    "description": "",
    "category": "Fooocus/Fix",
    "output_node": true
  },
  "Fooocus positive": {
    "input": {
      "required": {
        "positive": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "placeholder": "Positive"
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "positive"
    ],
    "name": "Fooocus positive",
    "display_name": "Positive",
    "description": "",
    "category": "Fooocus/Prompt",
    "output_node": false
  },
  "Fooocus negative": {
    "input": {
      "required": {
        "negative": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "placeholder": "Negative"
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "negative"
    ],
    "name": "Fooocus negative",
    "display_name": "Negative",
    "description": "",
    "category": "Fooocus/Prompt",
    "output_node": false
  },
  "Fooocus Styles": {
    "input": {
      "required": {
        "styles": [
          [
            "fooocus_styles",
            "sdxl_styles_diva",
            "sdxl_styles_fooocus",
            "sdxl_styles_marc_k3nt3l",
            "sdxl_styles_mre",
            "sdxl_styles_sai",
            "sdxl_styles_twri"
          ],
          {
            "default": "fooocus_styles"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "FOOOCUS_STYLES"
    ],
    "output_is_list": [false],
    "output_name": [
      "fooocus_styles"
    ],
    "name": "Fooocus Styles",
    "display_name": "Fooocus Styles",
    "description": "",
    "category": "Fooocus/Prompt",
    "output_node": false
  },
  "SD3_Zho": {
    "input": {
      "required": {
        "positive": [
          "STRING",
          {
            "default": "cat",
            "multiline": true
          }
        ],
        "negative": [
          "STRING",
          {
            "default": "worst quality, low quality",
            "multiline": true
          }
        ],
        "aspect_ratio": [
          [
            "21:9",
            "16:9",
            "5:4",
            "3:2",
            "1:1",
            "2:3",
            "4:5",
            "9:16",
            "9:21"
          ]
        ],
        "mode": [
          [
            "text-to-image",
            "image-to-image"
          ]
        ],
        "model": [
          [
            "sd3",
            "sd3-turbo"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 66,
            "min": 0,
            "max": 1000000
          }
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "SD3_Zho",
    "display_name": "🔥Stable Diffusion 3",
    "description": "",
    "category": "🔥SD3",
    "output_node": false
  },
  "ArgosTranslateCLIPTextEncodeNode": {
    "input": {
      "required": {
        "from_translate": [
          [
            "en",
            "sq",
            "ar",
            "az",
            "bn",
            "bg",
            "ca",
            "zh",
            "zt",
            "cs",
            "da",
            "nl",
            "eo",
            "et",
            "fi",
            "fr",
            "de",
            "el",
            "he",
            "hi",
            "hu",
            "id",
            "ga",
            "it",
            "ja",
            "ko",
            "lv",
            "lt",
            "ms",
            "nb",
            "fa",
            "pl",
            "pt",
            "ro",
            "ru",
            "sr",
            "sk",
            "sl",
            "es",
            "sv",
            "tl",
            "th",
            "tr",
            "uk",
            "ur",
            "vi"
          ],
          {
            "default": "ru"
          }
        ],
        "to_translate": [
          [
            "ar",
            "az",
            "bg",
            "bn",
            "ca",
            "cs",
            "da",
            "de",
            "el",
            "en",
            "eo",
            "es",
            "et",
            "fa",
            "fi",
            "fr",
            "ga",
            "he",
            "hi",
            "hu",
            "id",
            "it",
            "ja",
            "ko",
            "lt",
            "lv",
            "ms",
            "nb",
            "nl",
            "pl",
            "pt",
            "ro",
            "ru",
            "sk",
            "sl",
            "sq",
            "sr",
            "sv",
            "th",
            "tl",
            "tr",
            "uk",
            "ur",
            "vi",
            "zh",
            "zt"
          ],
          {
            "default": "en"
          }
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Input text"
          }
        ],
        "clip": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CONDITIONING",
      "STRING"
    ],
    "name": "ArgosTranslateCLIPTextEncodeNode",
    "display_name": "Argos Translate CLIP Text Encode Node",
    "description": "",
    "category": "AlekPet Nodes/conditioning",
    "output_node": false
  },
  "ArgosTranslateTextNode": {
    "input": {
      "required": {
        "from_translate": [
          [
            "en",
            "sq",
            "ar",
            "az",
            "bn",
            "bg",
            "ca",
            "zh",
            "zt",
            "cs",
            "da",
            "nl",
            "eo",
            "et",
            "fi",
            "fr",
            "de",
            "el",
            "he",
            "hi",
            "hu",
            "id",
            "ga",
            "it",
            "ja",
            "ko",
            "lv",
            "lt",
            "ms",
            "nb",
            "fa",
            "pl",
            "pt",
            "ro",
            "ru",
            "sr",
            "sk",
            "sl",
            "es",
            "sv",
            "tl",
            "th",
            "tr",
            "uk",
            "ur",
            "vi"
          ],
          {
            "default": "ru"
          }
        ],
        "to_translate": [
          [
            "ar",
            "az",
            "bg",
            "bn",
            "ca",
            "cs",
            "da",
            "de",
            "el",
            "en",
            "eo",
            "es",
            "et",
            "fa",
            "fi",
            "fr",
            "ga",
            "he",
            "hi",
            "hu",
            "id",
            "it",
            "ja",
            "ko",
            "lt",
            "lv",
            "ms",
            "nb",
            "nl",
            "pl",
            "pt",
            "ro",
            "ru",
            "sk",
            "sl",
            "sq",
            "sr",
            "sv",
            "th",
            "tl",
            "tr",
            "uk",
            "ur",
            "vi",
            "zh",
            "zt"
          ],
          {
            "default": "en"
          }
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Input text"
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "text"
    ],
    "name": "ArgosTranslateTextNode",
    "display_name": "Argos Translate Text Node",
    "description": "",
    "category": "AlekPet Nodes/text",
    "output_node": false
  },
  "DeepTranslatorCLIPTextEncodeNode": {
    "input": {
      "required": {
        "from_translate": [
          [
            "auto",
            "afrikaans",
            "albanian",
            "amharic",
            "arabic",
            "armenian",
            "assamese",
            "aymara",
            "azerbaijani",
            "bambara",
            "basque",
            "belarusian",
            "bengali",
            "bhojpuri",
            "bosnian",
            "bulgarian",
            "catalan",
            "cebuano",
            "chichewa",
            "chinese (simplified)",
            "chinese (traditional)",
            "corsican",
            "croatian",
            "czech",
            "danish",
            "dhivehi",
            "dogri",
            "dutch",
            "english",
            "esperanto",
            "estonian",
            "ewe",
            "filipino",
            "finnish",
            "french",
            "frisian",
            "galician",
            "georgian",
            "german",
            "greek",
            "guarani",
            "gujarati",
            "haitian creole",
            "hausa",
            "hawaiian",
            "hebrew",
            "hindi",
            "hmong",
            "hungarian",
            "icelandic",
            "igbo",
            "ilocano",
            "indonesian",
            "irish",
            "italian",
            "japanese",
            "javanese",
            "kannada",
            "kazakh",
            "khmer",
            "kinyarwanda",
            "konkani",
            "korean",
            "krio",
            "kurdish (kurmanji)",
            "kurdish (sorani)",
            "kyrgyz",
            "lao",
            "latin",
            "latvian",
            "lingala",
            "lithuanian",
            "luganda",
            "luxembourgish",
            "macedonian",
            "maithili",
            "malagasy",
            "malay",
            "malayalam",
            "maltese",
            "maori",
            "marathi",
            "meiteilon (manipuri)",
            "mizo",
            "mongolian",
            "myanmar",
            "nepali",
            "norwegian",
            "odia (oriya)",
            "oromo",
            "pashto",
            "persian",
            "polish",
            "portuguese",
            "punjabi",
            "quechua",
            "romanian",
            "russian",
            "samoan",
            "sanskrit",
            "scots gaelic",
            "sepedi",
            "serbian",
            "sesotho",
            "shona",
            "sindhi",
            "sinhala",
            "slovak",
            "slovenian",
            "somali",
            "spanish",
            "sundanese",
            "swahili",
            "swedish",
            "tajik",
            "tamil",
            "tatar",
            "telugu",
            "thai",
            "tigrinya",
            "tsonga",
            "turkish",
            "turkmen",
            "twi",
            "ukrainian",
            "urdu",
            "uyghur",
            "uzbek",
            "vietnamese",
            "welsh",
            "xhosa",
            "yiddish",
            "yoruba",
            "zulu"
          ],
          {
            "default": "auto"
          }
        ],
        "to_translate": [
          [
            "afrikaans",
            "albanian",
            "amharic",
            "arabic",
            "armenian",
            "assamese",
            "aymara",
            "azerbaijani",
            "bambara",
            "basque",
            "belarusian",
            "bengali",
            "bhojpuri",
            "bosnian",
            "bulgarian",
            "catalan",
            "cebuano",
            "chichewa",
            "chinese (simplified)",
            "chinese (traditional)",
            "corsican",
            "croatian",
            "czech",
            "danish",
            "dhivehi",
            "dogri",
            "dutch",
            "english",
            "esperanto",
            "estonian",
            "ewe",
            "filipino",
            "finnish",
            "french",
            "frisian",
            "galician",
            "georgian",
            "german",
            "greek",
            "guarani",
            "gujarati",
            "haitian creole",
            "hausa",
            "hawaiian",
            "hebrew",
            "hindi",
            "hmong",
            "hungarian",
            "icelandic",
            "igbo",
            "ilocano",
            "indonesian",
            "irish",
            "italian",
            "japanese",
            "javanese",
            "kannada",
            "kazakh",
            "khmer",
            "kinyarwanda",
            "konkani",
            "korean",
            "krio",
            "kurdish (kurmanji)",
            "kurdish (sorani)",
            "kyrgyz",
            "lao",
            "latin",
            "latvian",
            "lingala",
            "lithuanian",
            "luganda",
            "luxembourgish",
            "macedonian",
            "maithili",
            "malagasy",
            "malay",
            "malayalam",
            "maltese",
            "maori",
            "marathi",
            "meiteilon (manipuri)",
            "mizo",
            "mongolian",
            "myanmar",
            "nepali",
            "norwegian",
            "odia (oriya)",
            "oromo",
            "pashto",
            "persian",
            "polish",
            "portuguese",
            "punjabi",
            "quechua",
            "romanian",
            "russian",
            "samoan",
            "sanskrit",
            "scots gaelic",
            "sepedi",
            "serbian",
            "sesotho",
            "shona",
            "sindhi",
            "sinhala",
            "slovak",
            "slovenian",
            "somali",
            "spanish",
            "sundanese",
            "swahili",
            "swedish",
            "tajik",
            "tamil",
            "tatar",
            "telugu",
            "thai",
            "tigrinya",
            "tsonga",
            "turkish",
            "turkmen",
            "twi",
            "ukrainian",
            "urdu",
            "uyghur",
            "uzbek",
            "vietnamese",
            "welsh",
            "xhosa",
            "yiddish",
            "yoruba",
            "zulu"
          ],
          {
            "default": "english"
          }
        ],
        "add_proxies": [
          [
            [true, false]
          ],
          {
            "default": false
          }
        ],
        "proxies": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Proxies list (http=proxy), example:\nhttps=34.195.196.27:8080\nhttp=34.195.196.27:8080",
            "default": ""
          }
        ],
        "auth_data": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Authorization data...\nExample:\napi_key=your_api_key\ndetect_lang_api_key=your_api_key\nclient_id=your_client_id\nsecret_key=your_secret_key\nappid=your-appid\nappkey=your-appkey"
          }
        ],
        "service": [
          [
            "GoogleTranslator [free]",
            "MyMemoryTranslator [free]",
            "LingueeTranslator [free - word(s) only]",
            "PonsTranslator [free - word(s) only]",
            "LibreTranslator [free or api_key]",
            "QcriTranslator [free or api_key]"
          ],
          {
            "default": "GoogleTranslator"
          }
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Input text"
          }
        ],
        "clip": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CONDITIONING",
      "STRING"
    ],
    "name": "DeepTranslatorCLIPTextEncodeNode",
    "display_name": "Deep Translator CLIP Text Encode Node",
    "description": "",
    "category": "AlekPet Nodes/conditioning",
    "output_node": false
  },
  "DeepTranslatorTextNode": {
    "input": {
      "required": {
        "from_translate": [
          [
            "auto",
            "afrikaans",
            "albanian",
            "amharic",
            "arabic",
            "armenian",
            "assamese",
            "aymara",
            "azerbaijani",
            "bambara",
            "basque",
            "belarusian",
            "bengali",
            "bhojpuri",
            "bosnian",
            "bulgarian",
            "catalan",
            "cebuano",
            "chichewa",
            "chinese (simplified)",
            "chinese (traditional)",
            "corsican",
            "croatian",
            "czech",
            "danish",
            "dhivehi",
            "dogri",
            "dutch",
            "english",
            "esperanto",
            "estonian",
            "ewe",
            "filipino",
            "finnish",
            "french",
            "frisian",
            "galician",
            "georgian",
            "german",
            "greek",
            "guarani",
            "gujarati",
            "haitian creole",
            "hausa",
            "hawaiian",
            "hebrew",
            "hindi",
            "hmong",
            "hungarian",
            "icelandic",
            "igbo",
            "ilocano",
            "indonesian",
            "irish",
            "italian",
            "japanese",
            "javanese",
            "kannada",
            "kazakh",
            "khmer",
            "kinyarwanda",
            "konkani",
            "korean",
            "krio",
            "kurdish (kurmanji)",
            "kurdish (sorani)",
            "kyrgyz",
            "lao",
            "latin",
            "latvian",
            "lingala",
            "lithuanian",
            "luganda",
            "luxembourgish",
            "macedonian",
            "maithili",
            "malagasy",
            "malay",
            "malayalam",
            "maltese",
            "maori",
            "marathi",
            "meiteilon (manipuri)",
            "mizo",
            "mongolian",
            "myanmar",
            "nepali",
            "norwegian",
            "odia (oriya)",
            "oromo",
            "pashto",
            "persian",
            "polish",
            "portuguese",
            "punjabi",
            "quechua",
            "romanian",
            "russian",
            "samoan",
            "sanskrit",
            "scots gaelic",
            "sepedi",
            "serbian",
            "sesotho",
            "shona",
            "sindhi",
            "sinhala",
            "slovak",
            "slovenian",
            "somali",
            "spanish",
            "sundanese",
            "swahili",
            "swedish",
            "tajik",
            "tamil",
            "tatar",
            "telugu",
            "thai",
            "tigrinya",
            "tsonga",
            "turkish",
            "turkmen",
            "twi",
            "ukrainian",
            "urdu",
            "uyghur",
            "uzbek",
            "vietnamese",
            "welsh",
            "xhosa",
            "yiddish",
            "yoruba",
            "zulu"
          ],
          {
            "default": "auto"
          }
        ],
        "to_translate": [
          [
            "afrikaans",
            "albanian",
            "amharic",
            "arabic",
            "armenian",
            "assamese",
            "aymara",
            "azerbaijani",
            "bambara",
            "basque",
            "belarusian",
            "bengali",
            "bhojpuri",
            "bosnian",
            "bulgarian",
            "catalan",
            "cebuano",
            "chichewa",
            "chinese (simplified)",
            "chinese (traditional)",
            "corsican",
            "croatian",
            "czech",
            "danish",
            "dhivehi",
            "dogri",
            "dutch",
            "english",
            "esperanto",
            "estonian",
            "ewe",
            "filipino",
            "finnish",
            "french",
            "frisian",
            "galician",
            "georgian",
            "german",
            "greek",
            "guarani",
            "gujarati",
            "haitian creole",
            "hausa",
            "hawaiian",
            "hebrew",
            "hindi",
            "hmong",
            "hungarian",
            "icelandic",
            "igbo",
            "ilocano",
            "indonesian",
            "irish",
            "italian",
            "japanese",
            "javanese",
            "kannada",
            "kazakh",
            "khmer",
            "kinyarwanda",
            "konkani",
            "korean",
            "krio",
            "kurdish (kurmanji)",
            "kurdish (sorani)",
            "kyrgyz",
            "lao",
            "latin",
            "latvian",
            "lingala",
            "lithuanian",
            "luganda",
            "luxembourgish",
            "macedonian",
            "maithili",
            "malagasy",
            "malay",
            "malayalam",
            "maltese",
            "maori",
            "marathi",
            "meiteilon (manipuri)",
            "mizo",
            "mongolian",
            "myanmar",
            "nepali",
            "norwegian",
            "odia (oriya)",
            "oromo",
            "pashto",
            "persian",
            "polish",
            "portuguese",
            "punjabi",
            "quechua",
            "romanian",
            "russian",
            "samoan",
            "sanskrit",
            "scots gaelic",
            "sepedi",
            "serbian",
            "sesotho",
            "shona",
            "sindhi",
            "sinhala",
            "slovak",
            "slovenian",
            "somali",
            "spanish",
            "sundanese",
            "swahili",
            "swedish",
            "tajik",
            "tamil",
            "tatar",
            "telugu",
            "thai",
            "tigrinya",
            "tsonga",
            "turkish",
            "turkmen",
            "twi",
            "ukrainian",
            "urdu",
            "uyghur",
            "uzbek",
            "vietnamese",
            "welsh",
            "xhosa",
            "yiddish",
            "yoruba",
            "zulu"
          ],
          {
            "default": "english"
          }
        ],
        "add_proxies": [
          [
            [true, false]
          ],
          {
            "default": false
          }
        ],
        "proxies": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Proxies list (http=proxy), example:\nhttps=34.195.196.27:8080\nhttp=34.195.196.27:8080",
            "default": ""
          }
        ],
        "auth_data": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Authorization data...\nExample:\napi_key=your_api_key\ndetect_lang_api_key=your_api_key\nclient_id=your_client_id\nsecret_key=your_secret_key\nappid=your-appid\nappkey=your-appkey"
          }
        ],
        "service": [
          [
            "GoogleTranslator [free]",
            "MyMemoryTranslator [free]",
            "LingueeTranslator [free - word(s) only]",
            "PonsTranslator [free - word(s) only]",
            "LibreTranslator [free or api_key]",
            "QcriTranslator [free or api_key]"
          ],
          {
            "default": "GoogleTranslator"
          }
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Input text"
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "text"
    ],
    "name": "DeepTranslatorTextNode",
    "display_name": "Deep Translator Text Node",
    "description": "",
    "category": "AlekPet Nodes/text",
    "output_node": false
  },
  "PreviewTextNode": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "PreviewTextNode",
    "display_name": "Preview Text Node",
    "description": "",
    "category": "AlekPet Nodes/extras",
    "output_node": true
  },
  "GoogleTranslateCLIPTextEncodeNode": {
    "input": {
      "required": {
        "from_translate": [
          [
            "auto",
            "af",
            "sq",
            "am",
            "ar",
            "hy",
            "az",
            "eu",
            "be",
            "bn",
            "bs",
            "bg",
            "ca",
            "ceb",
            "ny",
            "zh-cn",
            "zh-tw",
            "co",
            "hr",
            "cs",
            "da",
            "nl",
            "en",
            "eo",
            "et",
            "tl",
            "fi",
            "fr",
            "fy",
            "gl",
            "ka",
            "de",
            "el",
            "gu",
            "ht",
            "ha",
            "haw",
            "iw",
            "he",
            "hi",
            "hmn",
            "hu",
            "is",
            "ig",
            "id",
            "ga",
            "it",
            "ja",
            "jw",
            "kn",
            "kk",
            "km",
            "ko",
            "ku",
            "ky",
            "lo",
            "la",
            "lv",
            "lt",
            "lb",
            "mk",
            "mg",
            "ms",
            "ml",
            "mt",
            "mi",
            "mr",
            "mn",
            "my",
            "ne",
            "no",
            "or",
            "ps",
            "fa",
            "pl",
            "pt",
            "pa",
            "ro",
            "ru",
            "sm",
            "gd",
            "sr",
            "st",
            "sn",
            "sd",
            "si",
            "sk",
            "sl",
            "so",
            "es",
            "su",
            "sw",
            "sv",
            "tg",
            "ta",
            "te",
            "th",
            "tr",
            "uk",
            "ur",
            "ug",
            "uz",
            "vi",
            "cy",
            "xh",
            "yi",
            "yo",
            "zu"
          ],
          {
            "default": "auto"
          }
        ],
        "to_translate": [
          [
            "af",
            "sq",
            "am",
            "ar",
            "hy",
            "az",
            "eu",
            "be",
            "bn",
            "bs",
            "bg",
            "ca",
            "ceb",
            "ny",
            "zh-cn",
            "zh-tw",
            "co",
            "hr",
            "cs",
            "da",
            "nl",
            "en",
            "eo",
            "et",
            "tl",
            "fi",
            "fr",
            "fy",
            "gl",
            "ka",
            "de",
            "el",
            "gu",
            "ht",
            "ha",
            "haw",
            "iw",
            "he",
            "hi",
            "hmn",
            "hu",
            "is",
            "ig",
            "id",
            "ga",
            "it",
            "ja",
            "jw",
            "kn",
            "kk",
            "km",
            "ko",
            "ku",
            "ky",
            "lo",
            "la",
            "lv",
            "lt",
            "lb",
            "mk",
            "mg",
            "ms",
            "ml",
            "mt",
            "mi",
            "mr",
            "mn",
            "my",
            "ne",
            "no",
            "or",
            "ps",
            "fa",
            "pl",
            "pt",
            "pa",
            "ro",
            "ru",
            "sm",
            "gd",
            "sr",
            "st",
            "sn",
            "sd",
            "si",
            "sk",
            "sl",
            "so",
            "es",
            "su",
            "sw",
            "sv",
            "tg",
            "ta",
            "te",
            "th",
            "tr",
            "uk",
            "ur",
            "ug",
            "uz",
            "vi",
            "cy",
            "xh",
            "yi",
            "yo",
            "zu"
          ],
          {
            "default": "en"
          }
        ],
        "manual_translate": [
          [true, false]
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Input prompt"
          }
        ],
        "clip": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CONDITIONING",
      "STRING"
    ],
    "name": "GoogleTranslateCLIPTextEncodeNode",
    "display_name": "Google Translate CLIP Text Encode Node",
    "description": "",
    "category": "AlekPet Nodes/conditioning",
    "output_node": false
  },
  "GoogleTranslateTextNode": {
    "input": {
      "required": {
        "from_translate": [
          [
            "auto",
            "af",
            "sq",
            "am",
            "ar",
            "hy",
            "az",
            "eu",
            "be",
            "bn",
            "bs",
            "bg",
            "ca",
            "ceb",
            "ny",
            "zh-cn",
            "zh-tw",
            "co",
            "hr",
            "cs",
            "da",
            "nl",
            "en",
            "eo",
            "et",
            "tl",
            "fi",
            "fr",
            "fy",
            "gl",
            "ka",
            "de",
            "el",
            "gu",
            "ht",
            "ha",
            "haw",
            "iw",
            "he",
            "hi",
            "hmn",
            "hu",
            "is",
            "ig",
            "id",
            "ga",
            "it",
            "ja",
            "jw",
            "kn",
            "kk",
            "km",
            "ko",
            "ku",
            "ky",
            "lo",
            "la",
            "lv",
            "lt",
            "lb",
            "mk",
            "mg",
            "ms",
            "ml",
            "mt",
            "mi",
            "mr",
            "mn",
            "my",
            "ne",
            "no",
            "or",
            "ps",
            "fa",
            "pl",
            "pt",
            "pa",
            "ro",
            "ru",
            "sm",
            "gd",
            "sr",
            "st",
            "sn",
            "sd",
            "si",
            "sk",
            "sl",
            "so",
            "es",
            "su",
            "sw",
            "sv",
            "tg",
            "ta",
            "te",
            "th",
            "tr",
            "uk",
            "ur",
            "ug",
            "uz",
            "vi",
            "cy",
            "xh",
            "yi",
            "yo",
            "zu"
          ],
          {
            "default": "auto"
          }
        ],
        "to_translate": [
          [
            "af",
            "sq",
            "am",
            "ar",
            "hy",
            "az",
            "eu",
            "be",
            "bn",
            "bs",
            "bg",
            "ca",
            "ceb",
            "ny",
            "zh-cn",
            "zh-tw",
            "co",
            "hr",
            "cs",
            "da",
            "nl",
            "en",
            "eo",
            "et",
            "tl",
            "fi",
            "fr",
            "fy",
            "gl",
            "ka",
            "de",
            "el",
            "gu",
            "ht",
            "ha",
            "haw",
            "iw",
            "he",
            "hi",
            "hmn",
            "hu",
            "is",
            "ig",
            "id",
            "ga",
            "it",
            "ja",
            "jw",
            "kn",
            "kk",
            "km",
            "ko",
            "ku",
            "ky",
            "lo",
            "la",
            "lv",
            "lt",
            "lb",
            "mk",
            "mg",
            "ms",
            "ml",
            "mt",
            "mi",
            "mr",
            "mn",
            "my",
            "ne",
            "no",
            "or",
            "ps",
            "fa",
            "pl",
            "pt",
            "pa",
            "ro",
            "ru",
            "sm",
            "gd",
            "sr",
            "st",
            "sn",
            "sd",
            "si",
            "sk",
            "sl",
            "so",
            "es",
            "su",
            "sw",
            "sv",
            "tg",
            "ta",
            "te",
            "th",
            "tr",
            "uk",
            "ur",
            "ug",
            "uz",
            "vi",
            "cy",
            "xh",
            "yi",
            "yo",
            "zu"
          ],
          {
            "default": "en"
          }
        ],
        "manual_translate": [
          [true, false]
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Input prompt"
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "text"
    ],
    "name": "GoogleTranslateTextNode",
    "display_name": "Google Translate Text Node",
    "description": "",
    "category": "AlekPet Nodes/text",
    "output_node": false
  },
  "PainterNode": {
    "input": {
      "required": {
        "image": [
          [
            "example.png"
          ]
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      },
      "optional": {
        "images": [
          "IMAGE"
        ],
        "update_node": [
          [true, false]
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "PainterNode",
    "display_name": "Painter Node",
    "description": "",
    "category": "AlekPet Nodes/image",
    "output_node": false
  },
  "PoseNode": {
    "input": {
      "required": {
        "image": [
          []
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "PoseNode",
    "display_name": "Pose Node",
    "description": "",
    "category": "AlekPet Nodes/image",
    "output_node": false
  },
  "TripoSRModelLoader": {
    "input": {
      "required": {
        "model": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "chunk_size": [
          "INT",
          {
            "default": 8192,
            "min": 1,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "TRIPOSR_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "TRIPOSR_MODEL"
    ],
    "name": "TripoSRModelLoader",
    "display_name": "TripoSR Model Loader",
    "description": "",
    "category": "Flowty TripoSR",
    "output_node": false
  },
  "TripoSRSampler": {
    "input": {
      "required": {
        "model": [
          "TRIPOSR_MODEL"
        ],
        "reference_image": [
          "IMAGE"
        ],
        "geometry_resolution": [
          "INT",
          {
            "default": 256,
            "min": 128,
            "max": 12288
          }
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 25,
            "min": 0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "reference_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "MESH"
    ],
    "output_is_list": [false],
    "output_name": [
      "MESH"
    ],
    "name": "TripoSRSampler",
    "display_name": "TripoSR Sampler",
    "description": "",
    "category": "Flowty TripoSR",
    "output_node": false
  },
  "TripoSRViewer": {
    "input": {
      "required": {
        "mesh": [
          "MESH"
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "TripoSRViewer",
    "display_name": "TripoSR Viewer",
    "description": "",
    "category": "Flowty TripoSR",
    "output_node": true
  },
  "LayerUtility: QWenImage2Prompt": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "question": [
          "STRING",
          {
            "multiline": false,
            "default": "describe this image"
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "text"
    ],
    "name": "LayerUtility: QWenImage2Prompt",
    "display_name": "LayerUtility: QWenImage2Prompt",
    "description": "",
    "category": "😺dzNodes/LayerUtility/Prompt",
    "output_node": false
  },
  "LayerUtility: BatchSelector": {
    "input": {
      "required": {
        "select": [
          "STRING",
          {
            "default": "0,"
          }
        ]
      },
      "optional": {
        "images": [
          "IMAGE"
        ],
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "mask"
    ],
    "name": "LayerUtility: BatchSelector",
    "display_name": "LayerUtility: Batch Selector",
    "description": "",
    "category": "😺dzNodes/LayerUtility/SystemIO",
    "output_node": false
  },
  "LayerMask: BiRefNetUltra": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "detail_method": [
          [
            "VITMatte",
            "VITMatte(local)",
            "PyMatting",
            "GuidedFilter"
          ]
        ],
        "detail_erode": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ],
        "detail_dilate": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ],
        "black_point": [
          "FLOAT",
          {
            "default": 0.01,
            "min": 0.01,
            "max": 0.98,
            "step": 0.01
          }
        ],
        "white_point": [
          "FLOAT",
          {
            "default": 0.99,
            "min": 0.02,
            "max": 0.99,
            "step": 0.01
          }
        ],
        "process_detail": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "mask"
    ],
    "name": "LayerMask: BiRefNetUltra",
    "display_name": "LayerMask: BiRefNetUltra",
    "description": "",
    "category": "😺dzNodes/LayerMask",
    "output_node": false
  },
  "LayerMask: BlendIf Mask": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "blend_if": [
          [
            "gray",
            "red",
            "green",
            "blue"
          ]
        ],
        "black_point": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 254,
            "step": 1
          }
        ],
        "black_range": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "white_point": [
          "INT",
          {
            "default": 255,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ],
        "white_range": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "mask"
    ],
    "name": "LayerMask: BlendIf Mask",
    "display_name": "LayerMask: BlendIf Mask",
    "description": "",
    "category": "😺dzNodes/LayerMask",
    "output_node": false
  },
  "LayerFilter: ChannelShake": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "distance": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 999,
            "step": 1
          }
        ],
        "angle": [
          "FLOAT",
          {
            "default": 40,
            "min": -360,
            "max": 360,
            "step": 0.1
          }
        ],
        "mode": [
          [
            "RGB",
            "RBG",
            "BGR",
            "BRG",
            "GBR",
            "GRB"
          ]
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerFilter: ChannelShake",
    "display_name": "LayerFilter: ChannelShake",
    "description": "",
    "category": "😺dzNodes/LayerFilter",
    "output_node": false
  },
  "LayerColor: ColorAdapter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "color_ref_image": [
          "IMAGE"
        ],
        "opacity": [
          "INT",
          {
            "default": 75,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerColor: ColorAdapter",
    "display_name": "LayerColor: ColorAdapter",
    "description": "",
    "category": "😺dzNodes/LayerColor",
    "output_node": false
  },
  "LayerColor: HSV": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "H": [
          "INT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "S": [
          "INT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "V": [
          "INT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerColor: HSV",
    "display_name": "LayerColor: HSV",
    "description": "",
    "category": "😺dzNodes/LayerColor",
    "output_node": false
  },
  "LayerColor: LAB": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "L": [
          "INT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "A": [
          "INT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "B": [
          "INT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerColor: LAB",
    "display_name": "LayerColor: LAB",
    "description": "",
    "category": "😺dzNodes/LayerColor",
    "output_node": false
  },
  "LayerColor: LUT Apply": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "LUT": [
          [
            "BlueArchitecture.cube"
          ]
        ],
        "color_space": [
          [
            "linear",
            "log"
          ]
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerColor: LUT Apply",
    "display_name": "LayerColor: LUT Apply",
    "description": "",
    "category": "😺dzNodes/LayerColor",
    "output_node": false
  },
  "LayerColor: RGB": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "R": [
          "INT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "G": [
          "INT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "B": [
          "INT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerColor: RGB",
    "display_name": "LayerColor: RGB",
    "description": "",
    "category": "😺dzNodes/LayerColor",
    "output_node": false
  },
  "LayerColor: YUV": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "Y": [
          "INT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "U": [
          "INT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "V": [
          "INT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerColor: YUV",
    "display_name": "LayerColor: YUV",
    "description": "",
    "category": "😺dzNodes/LayerColor",
    "output_node": false
  },
  "LayerColor: AutoAdjust": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "strength": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "brightness": [
          "INT",
          {
            "default": 0,
            "min": -100,
            "max": 100,
            "step": 1
          }
        ],
        "contrast": [
          "INT",
          {
            "default": 0,
            "min": -100,
            "max": 100,
            "step": 1
          }
        ],
        "saturation": [
          "INT",
          {
            "default": 0,
            "min": -100,
            "max": 100,
            "step": 1
          }
        ],
        "red": [
          "INT",
          {
            "default": 0,
            "min": -100,
            "max": 100,
            "step": 1
          }
        ],
        "green": [
          "INT",
          {
            "default": 0,
            "min": -100,
            "max": 100,
            "step": 1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 0,
            "min": -100,
            "max": 100,
            "step": 1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerColor: AutoAdjust",
    "display_name": "LayerColor: AutoAdjust",
    "description": "",
    "category": "😺dzNodes/LayerColor",
    "output_node": false
  },
  "LayerColor: AutoBrightness": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "strength": [
          "INT",
          {
            "default": 75,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "saturation": [
          "INT",
          {
            "default": 8,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerColor: AutoBrightness",
    "display_name": "LayerColor: AutoBrightness",
    "description": "",
    "category": "😺dzNodes/LayerColor",
    "output_node": false
  },
  "LayerColor: Brightness & Contrast": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "brightness": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 3,
            "step": 0.01
          }
        ],
        "contrast": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 3,
            "step": 0.01
          }
        ],
        "saturation": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 3,
            "step": 0.01
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerColor: Brightness & Contrast",
    "display_name": "LayerColor: Brightness & Contrast",
    "description": "",
    "category": "😺dzNodes/LayerColor",
    "output_node": false
  },
  "LayerColor: ColorBalance": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "cyan_red": [
          "FLOAT",
          {
            "default": 0,
            "min": -1,
            "max": 1,
            "step": 0.001
          }
        ],
        "magenta_green": [
          "FLOAT",
          {
            "default": 0,
            "min": -1,
            "max": 1,
            "step": 0.001
          }
        ],
        "yellow_blue": [
          "FLOAT",
          {
            "default": 0,
            "min": -1,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerColor: ColorBalance",
    "display_name": "LayerColor: ColorBalance",
    "description": "",
    "category": "😺dzNodes/LayerColor",
    "output_node": false
  },
  "LayerColor: ColorTemperature": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "temperature": [
          "FLOAT",
          {
            "default": 0,
            "min": -100,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerColor: ColorTemperature",
    "display_name": "LayerColor: ColorTemperature",
    "description": "",
    "category": "😺dzNodes/LayerColor",
    "output_node": false
  },
  "LayerColor: Exposure": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "exposure": [
          "INT",
          {
            "default": 20,
            "min": -100,
            "max": 100,
            "step": 1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerColor: Exposure",
    "display_name": "LayerColor: Exposure",
    "description": "",
    "category": "😺dzNodes/LayerColor",
    "output_node": false
  },
  "LayerColor: Gamma": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "gamma": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 10,
            "step": 0.01
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerColor: Gamma",
    "display_name": "LayerColor: Gamma",
    "description": "",
    "category": "😺dzNodes/LayerColor",
    "output_node": false
  },
  "LayerColor: Levels": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "channel": [
          [
            "RGB",
            "red",
            "green",
            "blue"
          ]
        ],
        "black_point": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "white_point": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "gray_point": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 9.99,
            "step": 0.01
          }
        ],
        "output_black_point": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "output_white_point": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerColor: Levels",
    "display_name": "LayerColor: Levels",
    "description": "",
    "category": "😺dzNodes/LayerColor",
    "output_node": false
  },
  "LayerColor: Color of Shadow & Highlight": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "shadow_brightness": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 3,
            "step": 0.01
          }
        ],
        "shadow_saturation": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 3,
            "step": 0.01
          }
        ],
        "shadow_hue": [
          "INT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "shadow_level_offset": [
          "INT",
          {
            "default": 0,
            "min": -99,
            "max": 99,
            "step": 1
          }
        ],
        "shadow_range": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ],
        "highlight_brightness": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 3,
            "step": 0.01
          }
        ],
        "highlight_saturation": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 3,
            "step": 0.01
          }
        ],
        "highlight_hue": [
          "INT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "highlight_level_offset": [
          "INT",
          {
            "default": 0,
            "min": -99,
            "max": 99,
            "step": 1
          }
        ],
        "highlight_range": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerColor: Color of Shadow & Highlight",
    "display_name": "LayerColor: Color of Shadow & Highlight",
    "description": "",
    "category": "😺dzNodes/LayerColor",
    "output_node": false
  },
  "LayerUtility: ColorImage": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 4,
            "max": 99999,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 4,
            "max": 99999,
            "step": 1
          }
        ],
        "color": [
          "STRING",
          {
            "default": "#000000"
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerUtility: ColorImage",
    "display_name": "LayerUtility: ColorImage",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: ColorImage V2": {
    "input": {
      "required": {
        "size": [
          [
            "custom",
            "1024 x 1024",
            "768 x 512",
            "512 x 768",
            "1280 x 720",
            "720 x 1280",
            "1344 x 768",
            "768 x 1344",
            "1536 x 640",
            "640 x 1536"
          ]
        ],
        "custom_width": [
          "INT",
          {
            "default": 512,
            "min": 4,
            "max": 99999,
            "step": 1
          }
        ],
        "custom_height": [
          "INT",
          {
            "default": 512,
            "min": 4,
            "max": 99999,
            "step": 1
          }
        ],
        "color": [
          "STRING",
          {
            "default": "#000000"
          }
        ]
      },
      "optional": {
        "size_as": [
          "*",
          {

          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerUtility: ColorImage V2",
    "display_name": "LayerUtility: ColorImage V2",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerFilter: ColorMap": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "color_map": [
          [
            "autumn",
            "bone",
            "jet",
            "winter",
            "rainbow",
            "ocean",
            "summer",
            "sprint",
            "cool",
            "HSV",
            "pink",
            "hot",
            "parula",
            "magma",
            "inferno",
            "plasma",
            "viridis",
            "cividis",
            "twilight",
            "twilight_shifted",
            "turbo",
            "deepgreen"
          ]
        ],
        "opacity": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerFilter: ColorMap",
    "display_name": "LayerFilter: ColorMap",
    "description": "",
    "category": "😺dzNodes/LayerFilter",
    "output_node": false
  },
  "LayerStyle: ColorOverlay V2": {
    "input": {
      "required": {
        "background_image": [
          "IMAGE"
        ],
        "layer_image": [
          "IMAGE"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "blend_mode": [
          [
            "normal",
            "dissolve",
            "darken",
            "multiply",
            "color burn",
            "linear burn",
            "darker color",
            "lighten",
            "screen",
            "color dodge",
            "linear dodge(add)",
            "lighter color",
            "dodge",
            "overlay",
            "soft light",
            "hard light",
            "vivid light",
            "linear light",
            "pin light",
            "hard mix",
            "difference",
            "exclusion",
            "subtract",
            "divide",
            "hue",
            "saturation",
            "color",
            "luminosity",
            "grain extract",
            "grain merge"
          ]
        ],
        "opacity": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "color": [
          "STRING",
          {
            "default": "#FFBF30"
          }
        ]
      },
      "optional": {
        "layer_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerStyle: ColorOverlay V2",
    "display_name": "LayerStyle: ColorOverlay V2",
    "description": "",
    "category": "😺dzNodes/LayerStyle",
    "output_node": false
  },
  "LayerStyle: ColorOverlay": {
    "input": {
      "required": {
        "background_image": [
          "IMAGE"
        ],
        "layer_image": [
          "IMAGE"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "blend_mode": [
          [
            "normal",
            "multply",
            "screen",
            "add",
            "subtract",
            "difference",
            "darker",
            "lighter",
            "color_burn",
            "color_dodge",
            "linear_burn",
            "linear_dodge",
            "overlay",
            "soft_light",
            "hard_light",
            "vivid_light",
            "pin_light",
            "linear_light",
            "hard_mix"
          ]
        ],
        "opacity": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "color": [
          "STRING",
          {
            "default": "#FFBF30"
          }
        ]
      },
      "optional": {
        "layer_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerStyle: ColorOverlay",
    "display_name": "LayerStyle: ColorOverlay",
    "description": "",
    "category": "😺dzNodes/LayerStyle",
    "output_node": false
  },
  "LayerUtility: ColorPicker": {
    "input": {
      "required": {
        "color": [
          "COLOR",
          {
            "default": "#FFFFFF"
          }
        ],
        "mode": [
          [
            "HEX",
            "DEC"
          ]
        ]
      },
      "optional": {

      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "value"
    ],
    "name": "LayerUtility: ColorPicker",
    "display_name": "LayerUtility: ColorPicker",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: RGB Value": {
    "input": {
      "required": {
        "color_value": [
          "*",
          {

          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "INT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "R",
      "G",
      "B"
    ],
    "name": "LayerUtility: RGB Value",
    "display_name": "LayerUtility: RGB Value",
    "description": "",
    "category": "😺dzNodes/LayerUtility/Data",
    "output_node": false
  },
  "LayerMask: CreateGradientMask": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 4,
            "max": 99999,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 4,
            "max": 99999,
            "step": 1
          }
        ],
        "gradient_side": [
          [
            "bottom",
            "top",
            "left",
            "right",
            "center"
          ]
        ],
        "gradient_scale": [
          "INT",
          {
            "default": 100,
            "min": 1,
            "max": 9999,
            "step": 1
          }
        ],
        "gradient_offset": [
          "INT",
          {
            "default": 0,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "opacity": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      },
      "optional": {
        "size_as": [
          "*",
          {

          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "mask"
    ],
    "name": "LayerMask: CreateGradientMask",
    "display_name": "LayerMask: CreateGradientMask",
    "description": "",
    "category": "😺dzNodes/LayerMask",
    "output_node": false
  },
  "LayerUtility: CropBoxResolve": {
    "input": {
      "required": {
        "crop_box": [
          "BOX"
        ]
      },
      "optional": {

      }
    },
    "output": [
      "INT",
      "INT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "x",
      "y",
      "width",
      "height"
    ],
    "name": "LayerUtility: CropBoxResolve",
    "display_name": "LayerUtility: CropBoxResolve",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: CropByMask": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mask_for_crop": [
          "MASK"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "detect": [
          [
            "min_bounding_rect",
            "max_inscribed_rect",
            "mask_area"
          ]
        ],
        "top_reserve": [
          "INT",
          {
            "default": 20,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "bottom_reserve": [
          "INT",
          {
            "default": 20,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "left_reserve": [
          "INT",
          {
            "default": 20,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "right_reserve": [
          "INT",
          {
            "default": 20,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "BOX",
      "IMAGE"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "croped_image",
      "croped_mask",
      "crop_box",
      "box_preview"
    ],
    "name": "LayerUtility: CropByMask",
    "display_name": "LayerUtility: CropByMask",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: CropByMask V2": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "detect": [
          [
            "min_bounding_rect",
            "max_inscribed_rect",
            "mask_area"
          ]
        ],
        "top_reserve": [
          "INT",
          {
            "default": 20,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "bottom_reserve": [
          "INT",
          {
            "default": 20,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "left_reserve": [
          "INT",
          {
            "default": 20,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "right_reserve": [
          "INT",
          {
            "default": 20,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ]
      },
      "optional": {
        "crop_box": [
          "BOX"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "BOX",
      "IMAGE"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "croped_image",
      "croped_mask",
      "crop_box",
      "box_preview"
    ],
    "name": "LayerUtility: CropByMask V2",
    "display_name": "LayerUtility: CropByMask V2",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: BooleanOperator": {
    "input": {
      "required": {
        "a": [
          "*",
          {

          }
        ],
        "b": [
          "*",
          {

          }
        ],
        "operator": [
          [
            "==",
            "!=",
            "and",
            "or",
            "xor",
            "not(a)",
            "min",
            "max"
          ]
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [false],
    "output_name": [
      "output"
    ],
    "name": "LayerUtility: BooleanOperator",
    "display_name": "LayerUtility: BooleanOperator",
    "description": "",
    "category": "😺dzNodes/LayerUtility/Data",
    "output_node": false
  },
  "LayerUtility: NumberCalculator": {
    "input": {
      "required": {
        "a": [
          "*",
          {

          }
        ],
        "b": [
          "*",
          {

          }
        ],
        "operator": [
          [
            "+",
            "-",
            "*",
            "/",
            "**",
            "//",
            "%"
          ]
        ]
      }
    },
    "output": [
      "INT",
      "FLOAT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "int",
      "float"
    ],
    "name": "LayerUtility: NumberCalculator",
    "display_name": "LayerUtility: NumberCalculator",
    "description": "",
    "category": "😺dzNodes/LayerUtility/Data",
    "output_node": false
  },
  "LayerUtility: TextBox": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "text"
    ],
    "name": "LayerUtility: TextBox",
    "display_name": "LayerUtility: TextBox",
    "description": "",
    "category": "😺dzNodes/LayerUtility/Data",
    "output_node": false
  },
  "LayerUtility: Integer": {
    "input": {
      "required": {
        "int_value": [
          "INT",
          {
            "default": 0,
            "min": -1e+20,
            "max": 1e+20,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "int"
    ],
    "name": "LayerUtility: Integer",
    "display_name": "LayerUtility: Integer",
    "description": "",
    "category": "😺dzNodes/LayerUtility/Data",
    "output_node": false
  },
  "LayerUtility: Float": {
    "input": {
      "required": {
        "float_value": [
          "FLOAT",
          {
            "default": 0,
            "min": -1e+20,
            "max": 1e+20,
            "step": 0.00001
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "float"
    ],
    "name": "LayerUtility: Float",
    "display_name": "LayerUtility: Float",
    "description": "",
    "category": "😺dzNodes/LayerUtility/Data",
    "output_node": false
  },
  "LayerUtility: Boolean": {
    "input": {
      "required": {
        "bool_value": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [false],
    "output_name": [
      "boolean"
    ],
    "name": "LayerUtility: Boolean",
    "display_name": "LayerUtility: Boolean",
    "description": "",
    "category": "😺dzNodes/LayerUtility/Data",
    "output_node": false
  },
  "LayerUtility: Seed": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1e+20,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "seed"
    ],
    "name": "LayerUtility: Seed",
    "display_name": "LayerUtility: Seed",
    "description": "",
    "category": "😺dzNodes/LayerUtility/Data",
    "output_node": false
  },
  "LayerStyle: DropShadow": {
    "input": {
      "required": {
        "background_image": [
          "IMAGE"
        ],
        "layer_image": [
          "IMAGE"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "blend_mode": [
          [
            "normal",
            "multply",
            "screen",
            "add",
            "subtract",
            "difference",
            "darker",
            "lighter",
            "color_burn",
            "color_dodge",
            "linear_burn",
            "linear_dodge",
            "overlay",
            "soft_light",
            "hard_light",
            "vivid_light",
            "pin_light",
            "linear_light",
            "hard_mix"
          ]
        ],
        "opacity": [
          "INT",
          {
            "default": 50,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "distance_x": [
          "INT",
          {
            "default": 25,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "distance_y": [
          "INT",
          {
            "default": 25,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "grow": [
          "INT",
          {
            "default": 6,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "blur": [
          "INT",
          {
            "default": 18,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "shadow_color": [
          "STRING",
          {
            "default": "#000000"
          }
        ]
      },
      "optional": {
        "layer_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerStyle: DropShadow",
    "display_name": "LayerStyle: DropShadow",
    "description": "",
    "category": "😺dzNodes/LayerStyle",
    "output_node": false
  },
  "LayerStyle: DropShadow V2": {
    "input": {
      "required": {
        "background_image": [
          "IMAGE"
        ],
        "layer_image": [
          "IMAGE"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "blend_mode": [
          [
            "normal",
            "dissolve",
            "darken",
            "multiply",
            "color burn",
            "linear burn",
            "darker color",
            "lighten",
            "screen",
            "color dodge",
            "linear dodge(add)",
            "lighter color",
            "dodge",
            "overlay",
            "soft light",
            "hard light",
            "vivid light",
            "linear light",
            "pin light",
            "hard mix",
            "difference",
            "exclusion",
            "subtract",
            "divide",
            "hue",
            "saturation",
            "color",
            "luminosity",
            "grain extract",
            "grain merge"
          ]
        ],
        "opacity": [
          "INT",
          {
            "default": 50,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "distance_x": [
          "INT",
          {
            "default": 25,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "distance_y": [
          "INT",
          {
            "default": 25,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "grow": [
          "INT",
          {
            "default": 6,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "blur": [
          "INT",
          {
            "default": 18,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "shadow_color": [
          "STRING",
          {
            "default": "#000000"
          }
        ]
      },
      "optional": {
        "layer_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerStyle: DropShadow V2",
    "display_name": "LayerStyle: DropShadow V2",
    "description": "",
    "category": "😺dzNodes/LayerStyle",
    "output_node": false
  },
  "LayerUtility: ExtendCanvas": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "top": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 99999,
            "step": 1
          }
        ],
        "bottom": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 99999,
            "step": 1
          }
        ],
        "left": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 99999,
            "step": 1
          }
        ],
        "right": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 99999,
            "step": 1
          }
        ],
        "color": [
          "COLOR",
          {
            "default": "#000000"
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "mask"
    ],
    "name": "LayerUtility: ExtendCanvas",
    "display_name": "LayerUtility: ExtendCanvas",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: ExtendCanvasV2": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "top": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 99999,
            "step": 1
          }
        ],
        "bottom": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 99999,
            "step": 1
          }
        ],
        "left": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 99999,
            "step": 1
          }
        ],
        "right": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 99999,
            "step": 1
          }
        ],
        "color": [
          "STRING",
          {
            "default": "#000000"
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "mask"
    ],
    "name": "LayerUtility: ExtendCanvasV2",
    "display_name": "LayerUtility: ExtendCanvas V2",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerFilter: Film": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "center_x": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "center_y": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "saturation": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 3,
            "step": 0.01
          }
        ],
        "vignette_intensity": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "grain_power": [
          "FLOAT",
          {
            "default": 0.15,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "grain_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 10,
            "step": 0.1
          }
        ],
        "grain_sat": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "grain_shadows": [
          "FLOAT",
          {
            "default": 0.6,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "grain_highs": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "blur_strength": [
          "INT",
          {
            "default": 90,
            "min": 0,
            "max": 256,
            "step": 1
          }
        ],
        "blur_focus_spread": [
          "FLOAT",
          {
            "default": 2.2,
            "min": 0.1,
            "max": 8,
            "step": 0.1
          }
        ],
        "focal_depth": [
          "FLOAT",
          {
            "default": 0.9,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "depth_map": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerFilter: Film",
    "display_name": "LayerFilter: Film",
    "description": "",
    "category": "😺dzNodes/LayerFilter",
    "output_node": false
  },
  "LayerFilter: GaussianBlur": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "blur": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 999,
            "step": 1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerFilter: GaussianBlur",
    "display_name": "LayerFilter: GaussianBlur",
    "description": "",
    "category": "😺dzNodes/LayerFilter",
    "output_node": false
  },
  "LayerUtility: GetColorTone": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mode": [
          [
            "main_color",
            "average"
          ]
        ]
      },
      "optional": {

      }
    },
    "output": [
      "STRING",
      "LIST"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "RGB color in HEX",
      "HSV color in list"
    ],
    "name": "LayerUtility: GetColorTone",
    "display_name": "LayerUtility: GetColorTone",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: GetColorToneV2": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mode": [
          [
            "main_color",
            "average"
          ]
        ],
        "color_of": [
          [
            "entire",
            "background",
            "subject"
          ]
        ],
        "remove_bkgd_method": [
          [
            "BiRefNet",
            "RMBG 1.4"
          ]
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "mask_grow": [
          "INT",
          {
            "default": 16,
            "min": -999,
            "max": 999,
            "step": 1
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING",
      "LIST"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "image",
      "color_in_hex",
      "HSV color in list"
    ],
    "name": "LayerUtility: GetColorToneV2",
    "display_name": "LayerUtility: GetColorTone V2",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: GetImageSize": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {

      }
    },
    "output": [
      "INT",
      "INT",
      "BOX"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "width",
      "height",
      "original_size"
    ],
    "name": "LayerUtility: GetImageSize",
    "display_name": "LayerUtility: GetImageSize",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: GradientImage": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 4,
            "max": 99999,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 4,
            "max": 99999,
            "step": 1
          }
        ],
        "angle": [
          "INT",
          {
            "default": 0,
            "min": -360,
            "max": 360,
            "step": 1
          }
        ],
        "start_color": [
          "STRING",
          {
            "default": "#FFFFFF"
          }
        ],
        "end_color": [
          "STRING",
          {
            "default": "#000000"
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerUtility: GradientImage",
    "display_name": "LayerUtility: GradientImage",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: GradientImage V2": {
    "input": {
      "required": {
        "size": [
          [
            "custom",
            "1024 x 1024",
            "768 x 512",
            "512 x 768",
            "1280 x 720",
            "720 x 1280",
            "1344 x 768",
            "768 x 1344",
            "1536 x 640",
            "640 x 1536"
          ]
        ],
        "custom_width": [
          "INT",
          {
            "default": 512,
            "min": 4,
            "max": 99999,
            "step": 1
          }
        ],
        "custom_height": [
          "INT",
          {
            "default": 512,
            "min": 4,
            "max": 99999,
            "step": 1
          }
        ],
        "angle": [
          "INT",
          {
            "default": 0,
            "min": -360,
            "max": 360,
            "step": 1
          }
        ],
        "start_color": [
          "STRING",
          {
            "default": "#FFFFFF"
          }
        ],
        "end_color": [
          "STRING",
          {
            "default": "#000000"
          }
        ]
      },
      "optional": {
        "size_as": [
          "*",
          {

          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerUtility: GradientImage V2",
    "display_name": "LayerUtility: GradientImage V2",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerStyle: GradientOverlay": {
    "input": {
      "required": {
        "background_image": [
          "IMAGE"
        ],
        "layer_image": [
          "IMAGE"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "blend_mode": [
          [
            "normal",
            "multply",
            "screen",
            "add",
            "subtract",
            "difference",
            "darker",
            "lighter",
            "color_burn",
            "color_dodge",
            "linear_burn",
            "linear_dodge",
            "overlay",
            "soft_light",
            "hard_light",
            "vivid_light",
            "pin_light",
            "linear_light",
            "hard_mix"
          ]
        ],
        "opacity": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "start_color": [
          "STRING",
          {
            "default": "#FFBF30"
          }
        ],
        "start_alpha": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "end_color": [
          "STRING",
          {
            "default": "#FE0000"
          }
        ],
        "end_alpha": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "angle": [
          "INT",
          {
            "default": 0,
            "min": -180,
            "max": 180,
            "step": 1
          }
        ]
      },
      "optional": {
        "layer_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerStyle: GradientOverlay",
    "display_name": "LayerStyle: GradientOverlay",
    "description": "",
    "category": "😺dzNodes/LayerStyle",
    "output_node": false
  },
  "LayerStyle: GradientOverlay V2": {
    "input": {
      "required": {
        "background_image": [
          "IMAGE"
        ],
        "layer_image": [
          "IMAGE"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "blend_mode": [
          [
            "normal",
            "dissolve",
            "darken",
            "multiply",
            "color burn",
            "linear burn",
            "darker color",
            "lighten",
            "screen",
            "color dodge",
            "linear dodge(add)",
            "lighter color",
            "dodge",
            "overlay",
            "soft light",
            "hard light",
            "vivid light",
            "linear light",
            "pin light",
            "hard mix",
            "difference",
            "exclusion",
            "subtract",
            "divide",
            "hue",
            "saturation",
            "color",
            "luminosity",
            "grain extract",
            "grain merge"
          ]
        ],
        "opacity": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "start_color": [
          "STRING",
          {
            "default": "#FFBF30"
          }
        ],
        "start_alpha": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "end_color": [
          "STRING",
          {
            "default": "#FE0000"
          }
        ],
        "end_alpha": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "angle": [
          "INT",
          {
            "default": 0,
            "min": -180,
            "max": 180,
            "step": 1
          }
        ]
      },
      "optional": {
        "layer_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerStyle: GradientOverlay V2",
    "display_name": "LayerStyle: GradientOverlay V2",
    "description": "",
    "category": "😺dzNodes/LayerStyle",
    "output_node": false
  },
  "LayerFilter: HDREffects": {
    "input": {
      "required": {
        "image": [
          "IMAGE",
          {
            "default": null
          }
        ],
        "hdr_intensity": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 5,
            "step": 0.01
          }
        ],
        "shadow_intensity": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "highlight_intensity": [
          "FLOAT",
          {
            "default": 0.75,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "gamma_intensity": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "contrast": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "enhance_color": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerFilter: HDREffects",
    "display_name": "LayerFilter: HDR Effects",
    "description": "",
    "category": "😺dzNodes/LayerFilter",
    "output_node": false
  },
  "LayerUtility: ImageAutoCrop": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "background_color": [
          "STRING",
          {
            "default": "#FFFFFF"
          }
        ],
        "aspect_ratio": [
          [
            "1:1",
            "3:2",
            "4:3",
            "16:9",
            "2:3",
            "3:4",
            "9:16",
            "custom",
            "detect_mask"
          ]
        ],
        "proportional_width": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 999,
            "step": 1
          }
        ],
        "proportional_height": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 999,
            "step": 1
          }
        ],
        "scale_to_longest_side": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "longest_side": [
          "INT",
          {
            "default": 1024,
            "min": 4,
            "max": 999999,
            "step": 1
          }
        ],
        "detect": [
          [
            "min_bounding_rect",
            "max_inscribed_rect",
            "mask_area"
          ]
        ],
        "border_reserve": [
          "INT",
          {
            "default": 100,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "ultra_detail_range": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 256,
            "step": 1
          }
        ],
        "matting_method": [
          [
            "RMBG 1.4",
            "SegmentAnything"
          ]
        ],
        "sam_model": [
          [
            "sam_vit_h (2.56GB)",
            "sam_vit_l (1.25GB)",
            "sam_vit_b (375MB)",
            "sam_hq_vit_h (2.57GB)",
            "sam_hq_vit_l (1.25GB)",
            "sam_hq_vit_b (379MB)",
            "mobile_sam(39MB)"
          ]
        ],
        "grounding_dino_model": [
          [
            "GroundingDINO_SwinT_OGC (694MB)",
            "GroundingDINO_SwinB (938MB)"
          ]
        ],
        "sam_threshold": [
          "FLOAT",
          {
            "default": 0.3,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "sam_prompt": [
          "STRING",
          {
            "default": "subject"
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "cropped_image",
      "box_preview",
      "cropped_mask"
    ],
    "name": "LayerUtility: ImageAutoCrop",
    "display_name": "LayerUtility: ImageAutoCrop",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: ImageAutoCrop V2": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "fill_background": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "background_color": [
          "STRING",
          {
            "default": "#FFFFFF"
          }
        ],
        "aspect_ratio": [
          [
            "1:1",
            "3:2",
            "4:3",
            "16:9",
            "2:3",
            "3:4",
            "9:16",
            "custom",
            "detect_mask",
            "original"
          ]
        ],
        "proportional_width": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 999,
            "step": 1
          }
        ],
        "proportional_height": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 999,
            "step": 1
          }
        ],
        "scale_to_side": [
          [
            "None",
            "longest",
            "shortest",
            "width",
            "height"
          ]
        ],
        "scale_to_length": [
          "INT",
          {
            "default": 1024,
            "min": 4,
            "max": 999999,
            "step": 1
          }
        ],
        "detect": [
          [
            "min_bounding_rect",
            "max_inscribed_rect",
            "mask_area"
          ]
        ],
        "border_reserve": [
          "INT",
          {
            "default": 100,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "ultra_detail_range": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 256,
            "step": 1
          }
        ],
        "matting_method": [
          [
            "RMBG 1.4",
            "SegmentAnything"
          ]
        ],
        "sam_model": [
          [
            "sam_vit_h (2.56GB)",
            "sam_vit_l (1.25GB)",
            "sam_vit_b (375MB)",
            "sam_hq_vit_h (2.57GB)",
            "sam_hq_vit_l (1.25GB)",
            "sam_hq_vit_b (379MB)",
            "mobile_sam(39MB)"
          ]
        ],
        "grounding_dino_model": [
          [
            "GroundingDINO_SwinT_OGC (694MB)",
            "GroundingDINO_SwinB (938MB)"
          ]
        ],
        "sam_threshold": [
          "FLOAT",
          {
            "default": 0.3,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "sam_prompt": [
          "STRING",
          {
            "default": "subject"
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "cropped_image",
      "box_preview",
      "cropped_mask"
    ],
    "name": "LayerUtility: ImageAutoCrop V2",
    "display_name": "LayerUtility: ImageAutoCrop V2",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: ImageBlend": {
    "input": {
      "required": {
        "background_image": [
          "IMAGE"
        ],
        "layer_image": [
          "IMAGE"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "blend_mode": [
          [
            "normal",
            "multply",
            "screen",
            "add",
            "subtract",
            "difference",
            "darker",
            "lighter",
            "color_burn",
            "color_dodge",
            "linear_burn",
            "linear_dodge",
            "overlay",
            "soft_light",
            "hard_light",
            "vivid_light",
            "pin_light",
            "linear_light",
            "hard_mix"
          ]
        ],
        "opacity": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      },
      "optional": {
        "layer_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerUtility: ImageBlend",
    "display_name": "LayerUtility: ImageBlend",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: ImageBlendAdvance": {
    "input": {
      "required": {
        "background_image": [
          "IMAGE"
        ],
        "layer_image": [
          "IMAGE"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "blend_mode": [
          [
            "normal",
            "multply",
            "screen",
            "add",
            "subtract",
            "difference",
            "darker",
            "lighter",
            "color_burn",
            "color_dodge",
            "linear_burn",
            "linear_dodge",
            "overlay",
            "soft_light",
            "hard_light",
            "vivid_light",
            "pin_light",
            "linear_light",
            "hard_mix"
          ]
        ],
        "opacity": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "x_percent": [
          "FLOAT",
          {
            "default": 50,
            "min": -999,
            "max": 999,
            "step": 0.01
          }
        ],
        "y_percent": [
          "FLOAT",
          {
            "default": 50,
            "min": -999,
            "max": 999,
            "step": 0.01
          }
        ],
        "mirror": [
          [
            "None",
            "horizontal",
            "vertical"
          ]
        ],
        "scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 100,
            "step": 0.01
          }
        ],
        "aspect_ratio": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 100,
            "step": 0.01
          }
        ],
        "rotate": [
          "FLOAT",
          {
            "default": 0,
            "min": -999999,
            "max": 999999,
            "step": 0.01
          }
        ],
        "transform_method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ],
        "anti_aliasing": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16,
            "step": 1
          }
        ]
      },
      "optional": {
        "layer_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "mask"
    ],
    "name": "LayerUtility: ImageBlendAdvance",
    "display_name": "LayerUtility: ImageBlendAdvance",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: ImageBlendAdvance V2": {
    "input": {
      "required": {
        "background_image": [
          "IMAGE"
        ],
        "layer_image": [
          "IMAGE"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "blend_mode": [
          [
            "normal",
            "dissolve",
            "darken",
            "multiply",
            "color burn",
            "linear burn",
            "darker color",
            "lighten",
            "screen",
            "color dodge",
            "linear dodge(add)",
            "lighter color",
            "dodge",
            "overlay",
            "soft light",
            "hard light",
            "vivid light",
            "linear light",
            "pin light",
            "hard mix",
            "difference",
            "exclusion",
            "subtract",
            "divide",
            "hue",
            "saturation",
            "color",
            "luminosity",
            "grain extract",
            "grain merge"
          ]
        ],
        "opacity": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "x_percent": [
          "FLOAT",
          {
            "default": 50,
            "min": -999,
            "max": 999,
            "step": 0.01
          }
        ],
        "y_percent": [
          "FLOAT",
          {
            "default": 50,
            "min": -999,
            "max": 999,
            "step": 0.01
          }
        ],
        "mirror": [
          [
            "None",
            "horizontal",
            "vertical"
          ]
        ],
        "scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 100,
            "step": 0.01
          }
        ],
        "aspect_ratio": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 100,
            "step": 0.01
          }
        ],
        "rotate": [
          "FLOAT",
          {
            "default": 0,
            "min": -999999,
            "max": 999999,
            "step": 0.01
          }
        ],
        "transform_method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ],
        "anti_aliasing": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16,
            "step": 1
          }
        ]
      },
      "optional": {
        "layer_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "mask"
    ],
    "name": "LayerUtility: ImageBlendAdvance V2",
    "display_name": "LayerUtility: ImageBlendAdvance V2",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: ImageBlend V2": {
    "input": {
      "required": {
        "background_image": [
          "IMAGE"
        ],
        "layer_image": [
          "IMAGE"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "blend_mode": [
          [
            "normal",
            "dissolve",
            "darken",
            "multiply",
            "color burn",
            "linear burn",
            "darker color",
            "lighten",
            "screen",
            "color dodge",
            "linear dodge(add)",
            "lighter color",
            "dodge",
            "overlay",
            "soft light",
            "hard light",
            "vivid light",
            "linear light",
            "pin light",
            "hard mix",
            "difference",
            "exclusion",
            "subtract",
            "divide",
            "hue",
            "saturation",
            "color",
            "luminosity",
            "grain extract",
            "grain merge"
          ]
        ],
        "opacity": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      },
      "optional": {
        "layer_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerUtility: ImageBlend V2",
    "display_name": "LayerUtility: ImageBlend V2",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: ImageChannelMerge": {
    "input": {
      "required": {
        "channel_1": [
          "IMAGE"
        ],
        "channel_2": [
          "IMAGE"
        ],
        "channel_3": [
          "IMAGE"
        ],
        "mode": [
          [
            "RGBA",
            "YCbCr",
            "LAB",
            "HSV"
          ]
        ]
      },
      "optional": {
        "channel_4": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerUtility: ImageChannelMerge",
    "display_name": "LayerUtility: ImageChannelMerge",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: ImageChannelSplit": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mode": [
          [
            "RGBA",
            "YCbCr",
            "LAB",
            "HSV"
          ]
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "channel_1",
      "channel_2",
      "channel_3",
      "channel_4"
    ],
    "name": "LayerUtility: ImageChannelSplit",
    "display_name": "LayerUtility: ImageChannelSplit",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: ImageCombineAlpha": {
    "input": {
      "required": {
        "RGB_image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "RGBA_image"
    ],
    "name": "LayerUtility: ImageCombineAlpha",
    "display_name": "LayerUtility: ImageCombineAlpha",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: ImageHub": {
    "input": {
      "required": {
        "output": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 9,
            "step": 1
          }
        ],
        "random_output": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "input1_image": [
          "IMAGE"
        ],
        "input1_mask": [
          "MASK"
        ],
        "input2_image": [
          "IMAGE"
        ],
        "input2_mask": [
          "MASK"
        ],
        "input3_image": [
          "IMAGE"
        ],
        "input3_mask": [
          "MASK"
        ],
        "input4_image": [
          "IMAGE"
        ],
        "input4_mask": [
          "MASK"
        ],
        "input5_image": [
          "IMAGE"
        ],
        "input5_mask": [
          "MASK"
        ],
        "input6_image": [
          "IMAGE"
        ],
        "input6_mask": [
          "MASK"
        ],
        "input7_image": [
          "IMAGE"
        ],
        "input7_mask": [
          "MASK"
        ],
        "input8_image": [
          "IMAGE"
        ],
        "input8_mask": [
          "MASK"
        ],
        "input9_image": [
          "IMAGE"
        ],
        "input9_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "mask"
    ],
    "name": "LayerUtility: ImageHub",
    "display_name": "LayerUtility: ImageHub",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: ImageMaskScaleAs": {
    "input": {
      "required": {
        "scale_as": [
          "*",
          {

          }
        ],
        "fit": [
          [
            "letterbox",
            "crop",
            "fill"
          ]
        ],
        "method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "BOX",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "image",
      "mask",
      "original_size",
      "widht",
      "height"
    ],
    "name": "LayerUtility: ImageMaskScaleAs",
    "display_name": "LayerUtility: ImageMaskScaleAs",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: ImageOpacity": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "opacity": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "mask"
    ],
    "name": "LayerUtility: ImageOpacity",
    "display_name": "LayerUtility: ImageOpacity",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: ImageRemoveAlpha": {
    "input": {
      "required": {
        "RGBA_image": [
          "IMAGE"
        ],
        "fill_background": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "background_color": [
          "STRING",
          {
            "default": "#000000"
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "RGB_image"
    ],
    "name": "LayerUtility: ImageRemoveAlpha",
    "display_name": "LayerUtility: ImageRemoveAlpha",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: ImageRewardFilter": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "prompt": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "output_num": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 999999,
            "step": 1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "images",
      "obsolete_images"
    ],
    "name": "LayerUtility: ImageRewardFilter",
    "display_name": "LayerUtility: ImageRewardFilter",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: ImageScaleByAspectRatio": {
    "input": {
      "required": {
        "aspect_ratio": [
          [
            "original",
            "custom",
            "1:1",
            "3:2",
            "4:3",
            "16:9",
            "2:3",
            "3:4",
            "9:16"
          ]
        ],
        "proportional_width": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 999,
            "step": 1
          }
        ],
        "proportional_height": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 999,
            "step": 1
          }
        ],
        "fit": [
          [
            "letterbox",
            "crop",
            "fill"
          ]
        ],
        "method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ],
        "round_to_multiple": [
          [
            "8",
            "16",
            "32",
            "64",
            "None"
          ]
        ],
        "scale_to_longest_side": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "longest_side": [
          "INT",
          {
            "default": 1024,
            "min": 4,
            "max": 999999,
            "step": 1
          }
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "BOX",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "image",
      "mask",
      "original_size",
      "width",
      "height"
    ],
    "name": "LayerUtility: ImageScaleByAspectRatio",
    "display_name": "LayerUtility: ImageScaleByAspectRatio",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: ImageScaleByAspectRatio V2": {
    "input": {
      "required": {
        "aspect_ratio": [
          [
            "original",
            "custom",
            "1:1",
            "3:2",
            "4:3",
            "16:9",
            "2:3",
            "3:4",
            "9:16"
          ]
        ],
        "proportional_width": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 999,
            "step": 1
          }
        ],
        "proportional_height": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 999,
            "step": 1
          }
        ],
        "fit": [
          [
            "letterbox",
            "crop",
            "fill"
          ]
        ],
        "method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ],
        "round_to_multiple": [
          [
            "8",
            "16",
            "32",
            "64",
            "None"
          ]
        ],
        "scale_to_side": [
          [
            "None",
            "longest",
            "shortest",
            "width",
            "height",
            "total_pixel(kilo pixel)"
          ]
        ],
        "scale_to_length": [
          "INT",
          {
            "default": 1024,
            "min": 4,
            "max": 999999,
            "step": 1
          }
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "BOX",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "image",
      "mask",
      "original_size",
      "width",
      "height"
    ],
    "name": "LayerUtility: ImageScaleByAspectRatio V2",
    "display_name": "LayerUtility: ImageScaleByAspectRatio V2",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: ImageScaleRestore": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 100,
            "step": 0.01
          }
        ],
        "method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ],
        "scale_by_longest_side": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "longest_side": [
          "INT",
          {
            "default": 1024,
            "min": 4,
            "max": 999999,
            "step": 1
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ],
        "original_size": [
          "BOX"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "BOX",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "image",
      "mask",
      "original_size",
      "width",
      "height"
    ],
    "name": "LayerUtility: ImageScaleRestore",
    "display_name": "LayerUtility: ImageScaleRestore",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: ImageScaleRestore V2": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 100,
            "step": 0.01
          }
        ],
        "method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ],
        "scale_by": [
          [
            "by_scale",
            "longest",
            "shortest",
            "width",
            "height",
            "total_pixel(kilo pixel)"
          ]
        ],
        "scale_by_length": [
          "INT",
          {
            "default": 1024,
            "min": 4,
            "max": 99999999,
            "step": 1
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ],
        "original_size": [
          "BOX"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "BOX",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "image",
      "mask",
      "original_size",
      "width",
      "height"
    ],
    "name": "LayerUtility: ImageScaleRestore V2",
    "display_name": "LayerUtility: ImageScaleRestore V2",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: ImageShift": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "shift_x": [
          "INT",
          {
            "default": 256,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "shift_y": [
          "INT",
          {
            "default": 256,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "cyclic": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "background_color": [
          "STRING",
          {
            "default": "#000000"
          }
        ],
        "border_mask_width": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 999,
            "step": 1
          }
        ],
        "border_mask_blur": [
          "INT",
          {
            "default": 12,
            "min": 0,
            "max": 999,
            "step": 1
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "MASK"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "image",
      "mask",
      "border_mask"
    ],
    "name": "LayerUtility: ImageShift",
    "display_name": "LayerUtility: ImageShift",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerStyle: InnerGlow": {
    "input": {
      "required": {
        "background_image": [
          "IMAGE"
        ],
        "layer_image": [
          "IMAGE"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "blend_mode": [
          [
            "screen",
            "add",
            "lighter",
            "normal",
            "multply",
            "subtract",
            "difference",
            "darker",
            "color_burn",
            "color_dodge",
            "linear_burn",
            "linear_dodge",
            "overlay",
            "soft_light",
            "hard_light",
            "vivid_light",
            "pin_light",
            "linear_light",
            "hard_mix"
          ]
        ],
        "opacity": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "brightness": [
          "INT",
          {
            "default": 5,
            "min": 2,
            "max": 20,
            "step": 1
          }
        ],
        "glow_range": [
          "INT",
          {
            "default": 48,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "blur": [
          "INT",
          {
            "default": 25,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "light_color": [
          "STRING",
          {
            "default": "#FFBF30"
          }
        ],
        "glow_color": [
          "STRING",
          {
            "default": "#FE0000"
          }
        ]
      },
      "optional": {
        "layer_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerStyle: InnerGlow",
    "display_name": "LayerStyle: InnerGlow",
    "description": "",
    "category": "😺dzNodes/LayerStyle",
    "output_node": false
  },
  "LayerStyle: InnerGlow V2": {
    "input": {
      "required": {
        "background_image": [
          "IMAGE"
        ],
        "layer_image": [
          "IMAGE"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "blend_mode": [
          [
            "screen",
            "linear dodge(add)",
            "color dodge",
            "lighten",
            "dodge",
            "hard light",
            "linear light",
            "normal",
            "dissolve",
            "darken",
            "multiply",
            "color burn",
            "linear burn",
            "darker color",
            "lighter color",
            "overlay",
            "soft light",
            "vivid light",
            "pin light",
            "hard mix",
            "difference",
            "exclusion",
            "subtract",
            "divide",
            "hue",
            "saturation",
            "color",
            "luminosity",
            "grain extract",
            "grain merge"
          ]
        ],
        "opacity": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "brightness": [
          "INT",
          {
            "default": 5,
            "min": 2,
            "max": 20,
            "step": 1
          }
        ],
        "glow_range": [
          "INT",
          {
            "default": 48,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "blur": [
          "INT",
          {
            "default": 25,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "light_color": [
          "STRING",
          {
            "default": "#FFBF30"
          }
        ],
        "glow_color": [
          "STRING",
          {
            "default": "#FE0000"
          }
        ]
      },
      "optional": {
        "layer_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerStyle: InnerGlow V2",
    "display_name": "LayerStyle: InnerGlow V2",
    "description": "",
    "category": "😺dzNodes/LayerStyle",
    "output_node": false
  },
  "LayerStyle: InnerShadow": {
    "input": {
      "required": {
        "background_image": [
          "IMAGE"
        ],
        "layer_image": [
          "IMAGE"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "blend_mode": [
          [
            "normal",
            "multply",
            "screen",
            "add",
            "subtract",
            "difference",
            "darker",
            "lighter",
            "color_burn",
            "color_dodge",
            "linear_burn",
            "linear_dodge",
            "overlay",
            "soft_light",
            "hard_light",
            "vivid_light",
            "pin_light",
            "linear_light",
            "hard_mix"
          ]
        ],
        "opacity": [
          "INT",
          {
            "default": 50,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "distance_x": [
          "INT",
          {
            "default": 5,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "distance_y": [
          "INT",
          {
            "default": 5,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "grow": [
          "INT",
          {
            "default": 2,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "blur": [
          "INT",
          {
            "default": 15,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "shadow_color": [
          "STRING",
          {
            "default": "#000000"
          }
        ]
      },
      "optional": {
        "layer_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerStyle: InnerShadow",
    "display_name": "LayerStyle: InnerShadow",
    "description": "",
    "category": "😺dzNodes/LayerStyle",
    "output_node": false
  },
  "LayerStyle: InnerShadow V2": {
    "input": {
      "required": {
        "background_image": [
          "IMAGE"
        ],
        "layer_image": [
          "IMAGE"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "blend_mode": [
          [
            "normal",
            "dissolve",
            "darken",
            "multiply",
            "color burn",
            "linear burn",
            "darker color",
            "lighten",
            "screen",
            "color dodge",
            "linear dodge(add)",
            "lighter color",
            "dodge",
            "overlay",
            "soft light",
            "hard light",
            "vivid light",
            "linear light",
            "pin light",
            "hard mix",
            "difference",
            "exclusion",
            "subtract",
            "divide",
            "hue",
            "saturation",
            "color",
            "luminosity",
            "grain extract",
            "grain merge"
          ]
        ],
        "opacity": [
          "INT",
          {
            "default": 50,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "distance_x": [
          "INT",
          {
            "default": 5,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "distance_y": [
          "INT",
          {
            "default": 5,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "grow": [
          "INT",
          {
            "default": 2,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "blur": [
          "INT",
          {
            "default": 15,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "shadow_color": [
          "STRING",
          {
            "default": "#000000"
          }
        ]
      },
      "optional": {
        "layer_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerStyle: InnerShadow V2",
    "display_name": "LayerStyle: InnerShadow V2",
    "description": "",
    "category": "😺dzNodes/LayerStyle",
    "output_node": false
  },
  "LayerUtility: LaMa": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "lama_model": [
          [
            "lama",
            "ldm",
            "zits",
            "mat",
            "fcf",
            "manga",
            "spread"
          ]
        ],
        "device": [
          [
            "cuda",
            "cpu"
          ]
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "mask_grow": [
          "INT",
          {
            "default": 25,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "mask_blur": [
          "INT",
          {
            "default": 8,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerUtility: LaMa",
    "display_name": "LayerUtility: LaMa",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: LayerImageTransform": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": -99999,
            "max": 99999,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": -99999,
            "max": 99999,
            "step": 1
          }
        ],
        "mirror": [
          [
            "None",
            "horizontal",
            "vertical"
          ]
        ],
        "scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 100,
            "step": 0.01
          }
        ],
        "aspect_ratio": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 100,
            "step": 0.01
          }
        ],
        "rotate": [
          "FLOAT",
          {
            "default": 0,
            "min": -999999,
            "max": 999999,
            "step": 0.01
          }
        ],
        "transform_method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ],
        "anti_aliasing": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "max": 16,
            "step": 1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerUtility: LayerImageTransform",
    "display_name": "LayerUtility: LayerImageTransform",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: LayerMaskTransform": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": -99999,
            "max": 99999,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": -99999,
            "max": 99999,
            "step": 1
          }
        ],
        "mirror": [
          [
            "None",
            "horizontal",
            "vertical"
          ]
        ],
        "scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 100,
            "step": 0.01
          }
        ],
        "aspect_ratio": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 100,
            "step": 0.01
          }
        ],
        "rotate": [
          "FLOAT",
          {
            "default": 0,
            "min": -999999,
            "max": 999999,
            "step": 0.01
          }
        ],
        "transform_method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ],
        "anti_aliasing": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "max": 16,
            "step": 1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "mask"
    ],
    "name": "LayerUtility: LayerMaskTransform",
    "display_name": "LayerUtility: LayerMaskTransform",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerFilter: LightLeak": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "light": [
          [
            "random",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32"
          ]
        ],
        "corner": [
          [
            "left_top",
            "right_top",
            "left_bottom",
            "right_bottom"
          ]
        ],
        "hue": [
          "INT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "saturation": [
          "INT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "opacity": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerFilter: LightLeak",
    "display_name": "LayerFilter: LightLeak",
    "description": "",
    "category": "😺dzNodes/LayerFilter",
    "output_node": false
  },
  "LayerUtility: LoadPSD": {
    "input": {
      "required": {
        "image": [
          [],
          {
            "image_upload": true
          }
        ],
        "file_path": [
          "STRING",
          {
            "default": ""
          }
        ],
        "include_hidden_layer": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "find_layer_by": [
          [
            "layer_index",
            "layer_name"
          ]
        ],
        "layer_index": [
          "INT",
          {
            "default": 0,
            "min": -1,
            "max": 999,
            "step": 1
          }
        ],
        "layer_name": [
          "STRING",
          {
            "default": ""
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "flat_image",
      "layer_image",
      "all_layers"
    ],
    "name": "LayerUtility: LoadPSD",
    "display_name": "LayerUtility: Load PSD",
    "description": "",
    "category": "😺dzNodes/LayerUtility/SystemIO",
    "output_node": false
  },
  "LayerMask: MaskBoxDetect": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "detect": [
          [
            "min_bounding_rect",
            "max_inscribed_rect",
            "mask_area"
          ]
        ],
        "x_adjust": [
          "INT",
          {
            "default": 0,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "y_adjust": [
          "INT",
          {
            "default": 0,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "scale_adjust": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 100,
            "step": 0.01
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE",
      "FLOAT",
      "FLOAT",
      "INT",
      "INT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false, false, false],
    "output_name": [
      "box_preview",
      "x_percent",
      "y_percent",
      "width",
      "height",
      "x",
      "y"
    ],
    "name": "LayerMask: MaskBoxDetect",
    "display_name": "LayerMask: MaskBoxDetect",
    "description": "",
    "category": "😺dzNodes/LayerMask",
    "output_node": false
  },
  "LayerMask: MaskByColor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "color": [
          "COLOR",
          {
            "default": "#FFFFFF"
          }
        ],
        "color_in_HEX": [
          "STRING",
          {
            "default": ""
          }
        ],
        "threshold": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "fix_gap": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "max": 32,
            "step": 1
          }
        ],
        "fix_threshold": [
          "FLOAT",
          {
            "default": 0.75,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "mask"
    ],
    "name": "LayerMask: MaskByColor",
    "display_name": "LayerMask: Mask by Color",
    "description": "",
    "category": "😺dzNodes/LayerMask",
    "output_node": false
  },
  "LayerMask: MaskByDifferent": {
    "input": {
      "required": {
        "image_1": [
          "IMAGE"
        ],
        "image_2": [
          "IMAGE"
        ],
        "gain": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 0.1,
            "max": 100,
            "step": 0.1
          }
        ],
        "fix_gap": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 32,
            "step": 1
          }
        ],
        "fix_threshold": [
          "FLOAT",
          {
            "default": 0.75,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ],
        "main_subject_detect": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "mask"
    ],
    "name": "LayerMask: MaskByDifferent",
    "display_name": "LayerMask: MaskByDifferent",
    "description": "",
    "category": "😺dzNodes/LayerMask",
    "output_node": false
  },
  "LayerMask: MaskEdgeShrink": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "shrink_level": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 16,
            "step": 1
          }
        ],
        "soft": [
          "INT",
          {
            "default": 6,
            "min": 0,
            "max": 64,
            "step": 1
          }
        ],
        "edge_shrink": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 999,
            "step": 1
          }
        ],
        "edge_reserve": [
          "INT",
          {
            "default": 25,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "mask"
    ],
    "name": "LayerMask: MaskEdgeShrink",
    "display_name": "LayerMask: MaskEdgeShrink",
    "description": "",
    "category": "😺dzNodes/LayerMask",
    "output_node": false
  },
  "LayerMask: MaskEdgeUltraDetail": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "method": [
          [
            "PyMatting",
            "OpenCV-GuidedFilter"
          ]
        ],
        "mask_grow": [
          "INT",
          {
            "default": 0,
            "min": -999,
            "max": 999,
            "step": 1
          }
        ],
        "fix_gap": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 32,
            "step": 1
          }
        ],
        "fix_threshold": [
          "FLOAT",
          {
            "default": 0.75,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ],
        "detail_range": [
          "INT",
          {
            "default": 12,
            "min": 1,
            "max": 256,
            "step": 1
          }
        ],
        "black_point": [
          "FLOAT",
          {
            "default": 0.01,
            "min": 0.01,
            "max": 0.98,
            "step": 0.01
          }
        ],
        "white_point": [
          "FLOAT",
          {
            "default": 0.99,
            "min": 0.02,
            "max": 0.99,
            "step": 0.01
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "mask"
    ],
    "name": "LayerMask: MaskEdgeUltraDetail",
    "display_name": "LayerMask: MaskEdgeUltraDetail",
    "description": "",
    "category": "😺dzNodes/LayerMask",
    "output_node": false
  },
  "LayerMask: MaskEdgeUltraDetail V2": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "method": [
          [
            "VITMatte",
            "VITMatte(local)",
            "PyMatting",
            "GuidedFilter"
          ]
        ],
        "mask_grow": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 256,
            "step": 1
          }
        ],
        "fix_gap": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 32,
            "step": 1
          }
        ],
        "fix_threshold": [
          "FLOAT",
          {
            "default": 0.75,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ],
        "edge_erode": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ],
        "edte_dilate": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ],
        "black_point": [
          "FLOAT",
          {
            "default": 0.01,
            "min": 0.01,
            "max": 0.98,
            "step": 0.01
          }
        ],
        "white_point": [
          "FLOAT",
          {
            "default": 0.99,
            "min": 0.02,
            "max": 0.99,
            "step": 0.01
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "mask"
    ],
    "name": "LayerMask: MaskEdgeUltraDetail V2",
    "display_name": "LayerMask: MaskEdgeUltraDetail V2",
    "description": "",
    "category": "😺dzNodes/LayerMask",
    "output_node": false
  },
  "LayerMask: MaskGradient": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "gradient_side": [
          [
            "top",
            "bottom",
            "left",
            "right"
          ]
        ],
        "gradient_scale": [
          "INT",
          {
            "default": 100,
            "min": 1,
            "max": 9999,
            "step": 1
          }
        ],
        "gradient_offset": [
          "INT",
          {
            "default": 0,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "opacity": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "mask"
    ],
    "name": "LayerMask: MaskGradient",
    "display_name": "LayerMask: MaskGradient",
    "description": "",
    "category": "😺dzNodes/LayerMask",
    "output_node": false
  },
  "LayerMask: MaskGrow": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "grow": [
          "INT",
          {
            "default": 4,
            "min": -999,
            "max": 999,
            "step": 1
          }
        ],
        "blur": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 999,
            "step": 1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "mask"
    ],
    "name": "LayerMask: MaskGrow",
    "display_name": "LayerMask: MaskGrow",
    "description": "",
    "category": "😺dzNodes/LayerMask",
    "output_node": false
  },
  "LayerMask: MaskInvert": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      },
      "optional": {

      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "mask"
    ],
    "name": "LayerMask: MaskInvert",
    "display_name": "LayerMask: MaskInvert",
    "description": "",
    "category": "😺dzNodes/LayerMask",
    "output_node": false
  },
  "LayerMask: MaskMotionBlur": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "blur": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 9999,
            "step": 1
          }
        ],
        "angle": [
          "FLOAT",
          {
            "default": 0,
            "min": -360,
            "max": 360,
            "step": 0.1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "mask"
    ],
    "name": "LayerMask: MaskMotionBlur",
    "display_name": "LayerMask: MaskMotionBlur",
    "description": "",
    "category": "😺dzNodes/LayerMask",
    "output_node": false
  },
  "LayerMask: MaskPreview": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "LayerMask: MaskPreview",
    "display_name": "LayerMask: MaskPreview",
    "description": "",
    "category": "😺dzNodes/LayerMask",
    "output_node": true
  },
  "LayerMask: MaskStroke": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "stroke_grow": [
          "INT",
          {
            "default": 0,
            "min": -999,
            "max": 999,
            "step": 1
          }
        ],
        "stroke_width": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 999,
            "step": 1
          }
        ],
        "blur": [
          "INT",
          {
            "default": 6,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "mask"
    ],
    "name": "LayerMask: MaskStroke",
    "display_name": "LayerMask: MaskStroke",
    "description": "",
    "category": "😺dzNodes/LayerMask",
    "output_node": false
  },
  "LayerMask: MediapipeFacialSegment": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "left_eye": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "left_eyebrow": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "right_eye": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "right_eyebrow": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "lips": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "tooth": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "mask"
    ],
    "name": "LayerMask: MediapipeFacialSegment",
    "display_name": "LayerMask: Mediapipe Facial Segment",
    "description": "",
    "category": "😺dzNodes/LayerMask",
    "output_node": false
  },
  "LayerFilter: MotionBlur": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "angle": [
          "INT",
          {
            "default": 0,
            "min": -90,
            "max": 90,
            "step": 1
          }
        ],
        "blur": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 999,
            "step": 1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerFilter: MotionBlur",
    "display_name": "LayerFilter: MotionBlur",
    "description": "",
    "category": "😺dzNodes/LayerFilter",
    "output_node": false
  },
  "LayerStyle: OuterGlow": {
    "input": {
      "required": {
        "background_image": [
          "IMAGE"
        ],
        "layer_image": [
          "IMAGE"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "blend_mode": [
          [
            "screen",
            "add",
            "lighter",
            "normal",
            "multply",
            "subtract",
            "difference",
            "darker",
            "color_burn",
            "color_dodge",
            "linear_burn",
            "linear_dodge",
            "overlay",
            "soft_light",
            "hard_light",
            "vivid_light",
            "pin_light",
            "linear_light",
            "hard_mix"
          ]
        ],
        "opacity": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "brightness": [
          "INT",
          {
            "default": 5,
            "min": 2,
            "max": 20,
            "step": 1
          }
        ],
        "glow_range": [
          "INT",
          {
            "default": 48,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "blur": [
          "INT",
          {
            "default": 25,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "light_color": [
          "STRING",
          {
            "default": "#FFBF30"
          }
        ],
        "glow_color": [
          "STRING",
          {
            "default": "#FE0000"
          }
        ]
      },
      "optional": {
        "layer_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerStyle: OuterGlow",
    "display_name": "LayerStyle: OuterGlow",
    "description": "",
    "category": "😺dzNodes/LayerStyle",
    "output_node": false
  },
  "LayerStyle: OuterGlow V2": {
    "input": {
      "required": {
        "background_image": [
          "IMAGE"
        ],
        "layer_image": [
          "IMAGE"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "blend_mode": [
          [
            "screen",
            "linear dodge(add)",
            "color dodge",
            "lighten",
            "dodge",
            "hard light",
            "linear light",
            "normal",
            "dissolve",
            "darken",
            "multiply",
            "color burn",
            "linear burn",
            "darker color",
            "lighter color",
            "overlay",
            "soft light",
            "vivid light",
            "pin light",
            "hard mix",
            "difference",
            "exclusion",
            "subtract",
            "divide",
            "hue",
            "saturation",
            "color",
            "luminosity",
            "grain extract",
            "grain merge"
          ]
        ],
        "opacity": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "brightness": [
          "INT",
          {
            "default": 5,
            "min": 2,
            "max": 20,
            "step": 1
          }
        ],
        "glow_range": [
          "INT",
          {
            "default": 48,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "blur": [
          "INT",
          {
            "default": 25,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "light_color": [
          "STRING",
          {
            "default": "#FFBF30"
          }
        ],
        "glow_color": [
          "STRING",
          {
            "default": "#FE0000"
          }
        ]
      },
      "optional": {
        "layer_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerStyle: OuterGlow V2",
    "display_name": "LayerStyle: OuterGlow V2",
    "description": "",
    "category": "😺dzNodes/LayerStyle",
    "output_node": false
  },
  "LayerMask: PersonMaskUltra": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "face": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "hair": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "body": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "clothes": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "accessories": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "background": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "confidence": [
          "FLOAT",
          {
            "default": 0.4,
            "min": 0.05,
            "max": 0.95,
            "step": 0.01
          }
        ],
        "detail_range": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 256,
            "step": 1
          }
        ],
        "black_point": [
          "FLOAT",
          {
            "default": 0.01,
            "min": 0.01,
            "max": 0.98,
            "step": 0.01
          }
        ],
        "white_point": [
          "FLOAT",
          {
            "default": 0.99,
            "min": 0.02,
            "max": 0.99,
            "step": 0.01
          }
        ],
        "process_detail": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "mask"
    ],
    "name": "LayerMask: PersonMaskUltra",
    "display_name": "LayerMask: PersonMaskUltra",
    "description": "",
    "category": "😺dzNodes/LayerMask",
    "output_node": false
  },
  "LayerMask: PersonMaskUltra V2": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "face": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "hair": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "body": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "clothes": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "accessories": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "background": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "confidence": [
          "FLOAT",
          {
            "default": 0.4,
            "min": 0.05,
            "max": 0.95,
            "step": 0.01
          }
        ],
        "detail_method": [
          [
            "VITMatte",
            "VITMatte(local)",
            "PyMatting",
            "GuidedFilter"
          ]
        ],
        "detail_erode": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ],
        "detail_dilate": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ],
        "black_point": [
          "FLOAT",
          {
            "default": 0.01,
            "min": 0.01,
            "max": 0.98,
            "step": 0.01
          }
        ],
        "white_point": [
          "FLOAT",
          {
            "default": 0.99,
            "min": 0.02,
            "max": 0.99,
            "step": 0.01
          }
        ],
        "process_detail": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "mask"
    ],
    "name": "LayerMask: PersonMaskUltra V2",
    "display_name": "LayerMask: PersonMaskUltra V2",
    "description": "",
    "category": "😺dzNodes/LayerMask",
    "output_node": false
  },
  "LayerMask: PixelSpread": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "mask_grow": [
          "INT",
          {
            "default": 0,
            "min": -999,
            "max": 999,
            "step": 1
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerMask: PixelSpread",
    "display_name": "LayerMask: PixelSpread",
    "description": "",
    "category": "😺dzNodes/LayerMask",
    "output_node": false
  },
  "LayerUtility: PrintInfo": {
    "input": {
      "required": {
        "anything": [
          "*",
          {

          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "text"
    ],
    "name": "LayerUtility: PrintInfo",
    "display_name": "LayerUtility: PrintInfo",
    "description": "",
    "category": "😺dzNodes/LayerUtility/Data",
    "output_node": true
  },
  "LayerUtility: PromptEmbellish": {
    "input": {
      "required": {
        "api": [
          [
            "google-gemini"
          ]
        ],
        "token_limit": [
          "INT",
          {
            "default": 40,
            "min": 2,
            "max": 1024,
            "step": 1
          }
        ],
        "describe": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "text"
    ],
    "name": "LayerUtility: PromptEmbellish",
    "display_name": "LayerUtility: PromptEmbellish",
    "description": "",
    "category": "😺dzNodes/LayerUtility/Prompt",
    "output_node": false
  },
  "LayerUtility: PromptTagger": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "api": [
          [
            "gemini-pro-vision"
          ]
        ],
        "token_limit": [
          "INT",
          {
            "default": 80,
            "min": 2,
            "max": 1024,
            "step": 1
          }
        ],
        "exclude_word": [
          "STRING",
          {
            "default": ""
          }
        ],
        "replace_with_word": [
          "STRING",
          {
            "default": ""
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "text"
    ],
    "name": "LayerUtility: PromptTagger",
    "display_name": "LayerUtility: PromptTagger",
    "description": "",
    "category": "😺dzNodes/LayerUtility/Prompt",
    "output_node": false
  },
  "LayerUtility: PurgeVRAM": {
    "input": {
      "required": {
        "anything": [
          "*",
          {

          }
        ],
        "purge_cache": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "purge_models": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      },
      "optional": {

      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "LayerUtility: PurgeVRAM",
    "display_name": "LayerUtility: Purge VRAM",
    "description": "",
    "category": "😺dzNodes/LayerUtility/SystemIO",
    "output_node": true
  },
  "LayerUtility: CreateQRCode": {
    "input": {
      "required": {
        "size": [
          "INT",
          {
            "default": 512,
            "min": 4,
            "max": 99999,
            "step": 1
          }
        ],
        "border": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ],
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerUtility: CreateQRCode",
    "display_name": "LayerUtility: Create QRCode",
    "description": "",
    "category": "😺dzNodes/LayerUtility/SystemIO",
    "output_node": false
  },
  "LayerUtility: DecodeQRCode": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "pre_blur": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "max": 16,
            "step": 1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "string"
    ],
    "name": "LayerUtility: DecodeQRCode",
    "display_name": "LayerUtility: Decode QRCode",
    "description": "",
    "category": "😺dzNodes/LayerUtility/SystemIO",
    "output_node": false
  },
  "LayerMask: RemBgUltra": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "detail_range": [
          "INT",
          {
            "default": 8,
            "min": 1,
            "max": 256,
            "step": 1
          }
        ],
        "black_point": [
          "FLOAT",
          {
            "default": 0.01,
            "min": 0.01,
            "max": 0.98,
            "step": 0.01
          }
        ],
        "white_point": [
          "FLOAT",
          {
            "default": 0.99,
            "min": 0.02,
            "max": 0.99,
            "step": 0.01
          }
        ],
        "process_detail": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "mask"
    ],
    "name": "LayerMask: RemBgUltra",
    "display_name": "LayerMask: RemBgUltra",
    "description": "",
    "category": "😺dzNodes/LayerMask",
    "output_node": false
  },
  "LayerMask: RmBgUltra V2": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "detail_method": [
          [
            "VITMatte",
            "VITMatte(local)",
            "PyMatting",
            "GuidedFilter"
          ]
        ],
        "detail_erode": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ],
        "detail_dilate": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ],
        "black_point": [
          "FLOAT",
          {
            "default": 0.01,
            "min": 0.01,
            "max": 0.98,
            "step": 0.01
          }
        ],
        "white_point": [
          "FLOAT",
          {
            "default": 0.99,
            "min": 0.02,
            "max": 0.99,
            "step": 0.01
          }
        ],
        "process_detail": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "mask"
    ],
    "name": "LayerMask: RmBgUltra V2",
    "display_name": "LayerMask: RmBgUltra V2",
    "description": "",
    "category": "😺dzNodes/LayerMask",
    "output_node": false
  },
  "LayerUtility: RestoreCropBox": {
    "input": {
      "required": {
        "background_image": [
          "IMAGE"
        ],
        "croped_image": [
          "IMAGE"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "crop_box": [
          "BOX"
        ]
      },
      "optional": {
        "croped_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "mask"
    ],
    "name": "LayerUtility: RestoreCropBox",
    "display_name": "LayerUtility: RestoreCropBox",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: SaveImagePlus": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "custom_path": [
          "STRING",
          {
            "default": ""
          }
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "comfyui"
          }
        ],
        "timestamp": [
          [
            "None",
            "second",
            "millisecond"
          ]
        ],
        "format": [
          [
            "png",
            "jpg"
          ]
        ],
        "quality": [
          "INT",
          {
            "default": 80,
            "min": 10,
            "max": 100,
            "step": 1
          }
        ],
        "meta_data": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "blind_watermark": [
          "STRING",
          {
            "default": ""
          }
        ],
        "save_workflow_as_json": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "preview": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "LayerUtility: SaveImagePlus",
    "display_name": "LayerUtility: SaveImage Plus",
    "description": "",
    "category": "😺dzNodes/LayerUtility/SystemIO",
    "output_node": true
  },
  "LayerMask: SegformerB2ClothesUltra": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "face": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "hair": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "hat": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "sunglass": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "left_arm": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "right_arm": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "left_leg": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "right_leg": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "upper_clothes": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "skirt": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "pants": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "dress": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "belt": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "shoe": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "bag": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "scarf": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "detail_method": [
          [
            "VITMatte",
            "VITMatte(local)",
            "PyMatting",
            "GuidedFilter"
          ]
        ],
        "detail_erode": [
          "INT",
          {
            "default": 12,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ],
        "detail_dilate": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ],
        "black_point": [
          "FLOAT",
          {
            "default": 0.01,
            "min": 0.01,
            "max": 0.98,
            "step": 0.01
          }
        ],
        "white_point": [
          "FLOAT",
          {
            "default": 0.99,
            "min": 0.02,
            "max": 0.99,
            "step": 0.01
          }
        ],
        "process_detail": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "mask"
    ],
    "name": "LayerMask: SegformerB2ClothesUltra",
    "display_name": "LayerMask: Segformer B2 Clothes Ultra",
    "description": "",
    "category": "😺dzNodes/LayerMask",
    "output_node": false
  },
  "LayerMask: SegmentAnythingUltra": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "sam_model": [
          [
            "sam_vit_h (2.56GB)",
            "sam_vit_l (1.25GB)",
            "sam_vit_b (375MB)",
            "sam_hq_vit_h (2.57GB)",
            "sam_hq_vit_l (1.25GB)",
            "sam_hq_vit_b (379MB)",
            "mobile_sam(39MB)"
          ]
        ],
        "grounding_dino_model": [
          [
            "GroundingDINO_SwinT_OGC (694MB)",
            "GroundingDINO_SwinB (938MB)"
          ]
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.3,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "detail_range": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 256,
            "step": 1
          }
        ],
        "black_point": [
          "FLOAT",
          {
            "default": 0.15,
            "min": 0.01,
            "max": 0.98,
            "step": 0.01
          }
        ],
        "white_point": [
          "FLOAT",
          {
            "default": 0.99,
            "min": 0.02,
            "max": 0.99,
            "step": 0.01
          }
        ],
        "process_detail": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "prompt": [
          "STRING",
          {
            "default": "subject"
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "mask"
    ],
    "name": "LayerMask: SegmentAnythingUltra",
    "display_name": "LayerMask: SegmentAnythingUltra",
    "description": "",
    "category": "😺dzNodes/LayerMask",
    "output_node": false
  },
  "LayerMask: SegmentAnythingUltra V2": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "sam_model": [
          [
            "sam_vit_h (2.56GB)",
            "sam_vit_l (1.25GB)",
            "sam_vit_b (375MB)",
            "sam_hq_vit_h (2.57GB)",
            "sam_hq_vit_l (1.25GB)",
            "sam_hq_vit_b (379MB)",
            "mobile_sam(39MB)"
          ]
        ],
        "grounding_dino_model": [
          [
            "GroundingDINO_SwinT_OGC (694MB)",
            "GroundingDINO_SwinB (938MB)"
          ]
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.3,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "detail_method": [
          [
            "VITMatte",
            "VITMatte(local)",
            "PyMatting",
            "GuidedFilter"
          ]
        ],
        "detail_erode": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ],
        "detail_dilate": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ],
        "black_point": [
          "FLOAT",
          {
            "default": 0.15,
            "min": 0.01,
            "max": 0.98,
            "step": 0.01
          }
        ],
        "white_point": [
          "FLOAT",
          {
            "default": 0.99,
            "min": 0.02,
            "max": 0.99,
            "step": 0.01
          }
        ],
        "process_detail": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "prompt": [
          "STRING",
          {
            "default": "subject"
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "mask"
    ],
    "name": "LayerMask: SegmentAnythingUltra V2",
    "display_name": "LayerMask: SegmentAnythingUltra V2",
    "description": "",
    "category": "😺dzNodes/LayerMask",
    "output_node": false
  },
  "LayerMask: Shadow & Highlight Mask": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "shadow_level_offset": [
          "INT",
          {
            "default": 0,
            "min": -99,
            "max": 99,
            "step": 1
          }
        ],
        "shadow_range": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ],
        "highlight_level_offset": [
          "INT",
          {
            "default": 0,
            "min": -99,
            "max": 99,
            "step": 1
          }
        ],
        "highlight_range": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "shadow_mask",
      "highlight_mask"
    ],
    "name": "LayerMask: Shadow & Highlight Mask",
    "display_name": "LayerMask: Shadow & Highlight Mask",
    "description": "",
    "category": "😺dzNodes/LayerMask",
    "output_node": false
  },
  "LayerFilter: Sharp & Soft": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "enhance": [
          [
            "very sharp",
            "sharp",
            "soft",
            "very soft",
            "None"
          ]
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerFilter: Sharp & Soft",
    "display_name": "LayerFilter: Sharp & Soft",
    "description": "",
    "category": "😺dzNodes/LayerFilter",
    "output_node": false
  },
  "LayerStyle: Stroke": {
    "input": {
      "required": {
        "background_image": [
          "IMAGE"
        ],
        "layer_image": [
          "IMAGE"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "blend_mode": [
          [
            "normal",
            "multply",
            "screen",
            "add",
            "subtract",
            "difference",
            "darker",
            "lighter",
            "color_burn",
            "color_dodge",
            "linear_burn",
            "linear_dodge",
            "overlay",
            "soft_light",
            "hard_light",
            "vivid_light",
            "pin_light",
            "linear_light",
            "hard_mix"
          ]
        ],
        "opacity": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "stroke_grow": [
          "INT",
          {
            "default": 0,
            "min": -999,
            "max": 999,
            "step": 1
          }
        ],
        "stroke_width": [
          "INT",
          {
            "default": 8,
            "min": 0,
            "max": 999,
            "step": 1
          }
        ],
        "blur": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "stroke_color": [
          "STRING",
          {
            "default": "#FF0000"
          }
        ]
      },
      "optional": {
        "layer_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerStyle: Stroke",
    "display_name": "LayerStyle: Stroke",
    "description": "",
    "category": "😺dzNodes/LayerStyle",
    "output_node": false
  },
  "LayerUtility: SimpleTextImage": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "text",
            "multiline": true
          }
        ],
        "font_file": [
          [
            "Alibaba-PuHuiTi-Heavy.ttf"
          ]
        ],
        "align": [
          [
            "center",
            "left",
            "right"
          ]
        ],
        "char_per_line": [
          "INT",
          {
            "default": 80,
            "min": 1,
            "max": 8096,
            "step": 1
          }
        ],
        "leading": [
          "INT",
          {
            "default": 8,
            "min": 0,
            "max": 8096,
            "step": 1
          }
        ],
        "font_size": [
          "INT",
          {
            "default": 72,
            "min": 1,
            "max": 2500,
            "step": 1
          }
        ],
        "text_color": [
          "STRING",
          {
            "default": "#FFFFFF"
          }
        ],
        "stroke_width": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8096,
            "step": 1
          }
        ],
        "stroke_color": [
          "STRING",
          {
            "default": "#FF8000"
          }
        ],
        "x_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8096,
            "step": 1
          }
        ],
        "y_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8096,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8096,
            "step": 1
          }
        ]
      },
      "optional": {
        "size_as": [
          "*",
          {

          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "mask"
    ],
    "name": "LayerUtility: SimpleTextImage",
    "display_name": "LayerUtility: SimpleTextImage",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerFilter: SkinBeauty": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "smooth": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 64,
            "step": 1
          }
        ],
        "threshold": [
          "INT",
          {
            "default": -10,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "opacity": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "beauty_mask"
    ],
    "name": "LayerFilter: SkinBeauty",
    "display_name": "LayerFilter: SkinBeauty",
    "description": "",
    "category": "😺dzNodes/LayerFilter",
    "output_node": false
  },
  "LayerFilter: SoftLight": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "soft": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.2,
            "max": 10,
            "step": 0.01
          }
        ],
        "threshold": [
          "INT",
          {
            "default": -10,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "opacity": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerFilter: SoftLight",
    "display_name": "LayerFilter: SoftLight",
    "description": "",
    "category": "😺dzNodes/LayerFilter",
    "output_node": false
  },
  "LayerStyle: Stroke V2": {
    "input": {
      "required": {
        "background_image": [
          "IMAGE"
        ],
        "layer_image": [
          "IMAGE"
        ],
        "invert_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "blend_mode": [
          [
            "normal",
            "dissolve",
            "darken",
            "multiply",
            "color burn",
            "linear burn",
            "darker color",
            "lighten",
            "screen",
            "color dodge",
            "linear dodge(add)",
            "lighter color",
            "dodge",
            "overlay",
            "soft light",
            "hard light",
            "vivid light",
            "linear light",
            "pin light",
            "hard mix",
            "difference",
            "exclusion",
            "subtract",
            "divide",
            "hue",
            "saturation",
            "color",
            "luminosity",
            "grain extract",
            "grain merge"
          ]
        ],
        "opacity": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "stroke_grow": [
          "INT",
          {
            "default": 0,
            "min": -999,
            "max": 999,
            "step": 1
          }
        ],
        "stroke_width": [
          "INT",
          {
            "default": 8,
            "min": 0,
            "max": 999,
            "step": 1
          }
        ],
        "blur": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "stroke_color": [
          "STRING",
          {
            "default": "#FF0000"
          }
        ]
      },
      "optional": {
        "layer_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerStyle: Stroke V2",
    "display_name": "LayerStyle: Stroke V2",
    "description": "",
    "category": "😺dzNodes/LayerStyle",
    "output_node": false
  },
  "LayerUtility: TextImage": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": "Text"
          }
        ],
        "font_file": [
          [
            "Alibaba-PuHuiTi-Heavy.ttf"
          ]
        ],
        "spacing": [
          "INT",
          {
            "default": 0,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "leading": [
          "INT",
          {
            "default": 0,
            "min": -9999,
            "max": 9999,
            "step": 1
          }
        ],
        "horizontal_border": [
          "FLOAT",
          {
            "default": 5,
            "min": -100,
            "max": 100,
            "step": 0.1
          }
        ],
        "vertical_border": [
          "FLOAT",
          {
            "default": 5,
            "min": -100,
            "max": 100,
            "step": 0.1
          }
        ],
        "scale": [
          "FLOAT",
          {
            "default": 80,
            "min": 0.1,
            "max": 999,
            "step": 0.01
          }
        ],
        "variation_range": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "variation_seed": [
          "INT",
          {
            "default": 1719925653,
            "min": 0,
            "max": 999999999999,
            "step": 1
          }
        ],
        "layout": [
          [
            "horizontal",
            "vertical"
          ]
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 4,
            "max": 999999,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 4,
            "max": 999999,
            "step": 1
          }
        ],
        "text_color": [
          "STRING",
          {
            "default": "#FFA000"
          }
        ],
        "background_color": [
          "STRING",
          {
            "default": "#FFFFFF"
          }
        ]
      },
      "optional": {
        "size_as": [
          "*",
          {

          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "mask"
    ],
    "name": "LayerUtility: TextImage",
    "display_name": "LayerUtility: TextImage",
    "description": "",
    "category": "😺dzNodes/LayerUtility",
    "output_node": false
  },
  "LayerUtility: TextJoin": {
    "input": {
      "required": {
        "text_1": [
          "STRING",
          {
            "multiline": true
          }
        ]
      },
      "optional": {
        "text_2": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "text_3": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "text_4": [
          "STRING",
          {
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "text"
    ],
    "name": "LayerUtility: TextJoin",
    "display_name": "LayerUtility: TextJoin",
    "description": "",
    "category": "😺dzNodes/LayerUtility/Data",
    "output_node": false
  },
  "LayerFilter: WaterColor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "line_density": [
          "INT",
          {
            "default": 50,
            "min": 1,
            "max": 100,
            "step": 1
          }
        ],
        "opacity": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerFilter: WaterColor",
    "display_name": "LayerFilter: WaterColor",
    "description": "",
    "category": "😺dzNodes/LayerFilter",
    "output_node": false
  },
  "LayerUtility: AddBlindWaterMark": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "watermark_image": [
          "IMAGE"
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "LayerUtility: AddBlindWaterMark",
    "display_name": "LayerUtility: Add BlindWaterMark",
    "description": "",
    "category": "😺dzNodes/LayerUtility/SystemIO",
    "output_node": false
  },
  "LayerUtility: ShowBlindWaterMark": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {

      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "watermark_image"
    ],
    "name": "LayerUtility: ShowBlindWaterMark",
    "display_name": "LayerUtility: Show BlindWaterMark",
    "description": "",
    "category": "😺dzNodes/LayerUtility/SystemIO",
    "output_node": false
  },
  "LayerUtility: XY to Percent": {
    "input": {
      "required": {
        "background_image": [
          "IMAGE"
        ],
        "layer_image": [
          "IMAGE"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": -99999,
            "max": 99999,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": -99999,
            "max": 99999,
            "step": 1
          }
        ]
      },
      "optional": {

      }
    },
    "output": [
      "FLOAT",
      "FLOAT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "x_percent",
      "x_percent"
    ],
    "name": "LayerUtility: XY to Percent",
    "display_name": "LayerUtility: XY to Percent",
    "description": "",
    "category": "😺dzNodes/LayerUtility/Data",
    "output_node": false
  },
  "LayerMask: YoloV8Detect": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "yolo_model": [
          []
        ],
        "mask_merge": [
          [
            "all",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9"
          ]
        ]
      },
      "optional": {

      }
    },
    "output": [
      "MASK",
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "mask",
      "yolo_plot_image",
      "yolo_masks"
    ],
    "name": "LayerMask: YoloV8Detect",
    "display_name": "LayerMask: YoloV8 Detect",
    "description": "",
    "category": "😺dzNodes/LayerMask",
    "output_node": false
  },
  "StableSRColorFix": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "color_map_image": [
          "IMAGE"
        ],
        "color_fix": [
          [
            "Wavelet",
            "AdaIN"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "StableSRColorFix",
    "display_name": "StableSRColorFix",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "ApplyStableSRUpscaler": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "stablesr_model": [
          []
        ]
      },
      "optional": {
        "latent_image": [
          "LATENT"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ApplyStableSRUpscaler",
    "display_name": "ApplyStableSRUpscaler",
    "description": "",
    "category": "image/upscaling",
    "output_node": false
  },
  "Loader": {
    "input": {
      "required": {
        "Checkpoint": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "Vae": [
          [
            "Included",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "stop_at_clip_layer": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 32768,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 32768,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "VAE",
      "CLIP",
      "LATENT"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "MODEL",
      "VAE",
      "CLIP",
      "LATENT"
    ],
    "name": "Loader",
    "display_name": "Loader",
    "description": "",
    "category": "Chibi-Nodes",
    "output_node": false
  },
  "SimpleSampler": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "sampler": [
          [
            "Normal - euler",
            "Normal - uni_pc",
            "LCM Lora - lcm",
            "SDXL Turbo - dpmpp_sde karras"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latents": [
          "LATENT"
        ],
        "mode": [
          [
            "txt2img",
            "img2img"
          ]
        ]
      },
      "optional": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19,
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "SimpleSampler",
    "display_name": "SimpleSampler",
    "description": "",
    "category": "Chibi-Nodes",
    "output_node": false
  },
  "Prompts": {
    "input": {
      "required": {
        "Positive": [
          "STRING",
          {
            "default": "Positive Prompt",
            "multiline": true
          }
        ],
        "Negative": [
          "STRING",
          {
            "default": "Negative Prompt",
            "multiline": true
          }
        ]
      },
      "optional": {
        "clip": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "CLIP",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "Positive CONDITIONING",
      "Negative CONDITIONING",
      "CLIP",
      "Positive text",
      "Negative text"
    ],
    "name": "Prompts",
    "display_name": "Prompts",
    "description": "",
    "category": "Chibi-Nodes",
    "output_node": false
  },
  "ImageTool": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "width": [
          "INT",
          {
            "default": 1920,
            "min": 16,
            "max": 32768,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 1080,
            "min": 16,
            "max": 32768,
            "step": 1
          }
        ],
        "crop": [
          [false, true]
        ],
        "rotate": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 360,
            "step": 1
          }
        ],
        "mirror": [
          [false, true]
        ],
        "flip": [
          [false, true]
        ],
        "bgcolor": [
          [
            "black",
            "white"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageTool",
    "display_name": "ImageTool",
    "description": "",
    "category": "Chibi-Nodes/Image",
    "output_node": false
  },
  "Wildcards": {
    "input": {
      "required": {
        "textfile": [
          [
            "animals.txt",
            "art-styles.txt",
            "clothes.txt",
            "colours.txt",
            "descriptors.txt",
            "fabrics.txt",
            "foods.txt",
            "household-objects.txt",
            "landscapes.txt",
            "poses.txt"
          ]
        ],
        "keyword": [
          "STRING",
          {
            "default": "__wildcard__",
            "multiline": false
          }
        ],
        "entries_returned": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "clip": [
          "CLIP"
        ],
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CONDITIONING",
      "text"
    ],
    "name": "Wildcards",
    "display_name": "Wildcards",
    "description": "",
    "category": "Chibi-Nodes",
    "output_node": false
  },
  "LoadEmbedding": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "forceInput": true
          }
        ],
        "embedding": [
          [
            "bad-hands-5.pt",
            "easynegative.safetensors"
          ]
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -2,
            "max": 2,
            "step": 0.1,
            "round": 0.01
          }
        ]
      },
      "hidden": {
        "preview_image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "STRING",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "text",
      "Preview Image"
    ],
    "name": "LoadEmbedding",
    "display_name": "LoadEmbedding",
    "description": "",
    "category": "Chibi-Nodes",
    "output_node": false
  },
  "ConditionText": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "CLIP",
      "CONDITIONING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CLIP",
      "CONDITIONING"
    ],
    "name": "ConditionText",
    "display_name": "ConditionText",
    "description": "",
    "category": "Chibi-Nodes/Text",
    "output_node": false
  },
  "ConditionTextMulti": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ]
      },
      "optional": {
        "first": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "forceInput": true
          }
        ],
        "second": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "forceInput": true
          }
        ],
        "third": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "forceInput": true
          }
        ],
        "fourth": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "CLIP",
      "CONDITIONING",
      "CONDITIONING",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "CLIP",
      "first",
      "second",
      "third",
      "fourth"
    ],
    "name": "ConditionTextMulti",
    "display_name": "ConditionTextMulti",
    "description": "",
    "category": "Chibi-Nodes/Text",
    "output_node": false
  },
  "Textbox": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "forceInput": false,
            "print_to_screen": true
          }
        ]
      },
      "optional": {
        "passthrough": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "text"
    ],
    "name": "Textbox",
    "display_name": "Textbox",
    "description": "",
    "category": "Chibi-Nodes/Text",
    "output_node": true
  },
  "ImageSizeInfo": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "hidden": {
        "width": [
          "INT"
        ],
        "height": [
          "INT"
        ]
      }
    },
    "output": [
      "IMAGE",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "IMAGE",
      "width",
      "height"
    ],
    "name": "ImageSizeInfo",
    "display_name": "ImageSizeInfo",
    "description": "",
    "category": "Chibi-Nodes/Image",
    "output_node": true
  },
  "ImageSimpleResize": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "size": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 32768,
            "step": 1
          }
        ],
        "edge": [
          [
            "largest",
            "smallest",
            "all",
            "width",
            "height"
          ]
        ]
      },
      "optional": {
        "size_override": [
          "INT",
          {
            "forceInput": true
          }
        ],
        "vae": [
          "VAE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "LATENT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "LATENT"
    ],
    "name": "ImageSimpleResize",
    "display_name": "ImageSimpleResize",
    "description": "",
    "category": "Chibi-Nodes/Image",
    "output_node": false
  },
  "ImageAddText": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "Chibi-Nodes",
            "multiline": true
          }
        ],
        "font": [
          [
            "Ubuntu-Bold.ttf",
            "Ubuntu-BoldItalic.ttf",
            "Ubuntu-Italic.ttf",
            "Ubuntu-Light.ttf",
            "Ubuntu-LightItalic.ttf",
            "Ubuntu-Medium.ttf",
            "Ubuntu-MediumItalic.ttf",
            "Ubuntu-Regular.ttf",
            "UbuntuCondensed-Regular.ttf",
            "UbuntuMono-Bold.ttf",
            "UbuntuMono-BoldItalic.ttf",
            "UbuntuMono-Italic.ttf",
            "UbuntuMono-Regular.ttf"
          ]
        ],
        "font_size": [
          "INT",
          {
            "default": 24,
            "min": 0,
            "max": 200,
            "step": 1
          }
        ],
        "font_colour": [
          [
            "black",
            "white",
            "red",
            "green",
            "blue"
          ]
        ],
        "invert_mask": [
          [false, true]
        ],
        "position_x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 32768,
            "step": 1
          }
        ],
        "position_y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 32768,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 32768,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 32768,
            "step": 1
          }
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "IMAGE",
      "MASK",
      "text"
    ],
    "name": "ImageAddText",
    "display_name": "ImageAddText",
    "description": "",
    "category": "Chibi-Nodes/Image",
    "output_node": false
  },
  "Int2String": {
    "input": {
      "required": {
        "Int": [
          "INT",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Int2String",
    "display_name": "Int2String",
    "description": "",
    "category": "Chibi-Nodes/Text",
    "output_node": false
  },
  "LoadImageExtended": {
    "input": {
      "required": {
        "image": [
          [
            "example.png"
          ],
          {
            "image_upload": true
          }
        ]
      },
      "optional": {
        "vae": [
          "VAE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "LATENT",
      "STRING",
      "STRING",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false, false, false],
    "output_name": [
      "IMAGE",
      "MASK",
      "LATENT",
      "filename",
      "image Info",
      "width",
      "height"
    ],
    "name": "LoadImageExtended",
    "display_name": "LoadImageExtended",
    "description": "",
    "category": "Chibi-Nodes/Image",
    "output_node": false
  },
  "SeedGenerator": {
    "input": {
      "required": {
        "mode": [
          [
            "Random",
            "Fixed"
          ]
        ],
        "fixed_seed": [
          "INT",
          {
            "default": 8008135,
            "min": 0,
            "max": 1.8446744073709552e+19,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "INT",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "seed",
      "text"
    ],
    "name": "SeedGenerator",
    "display_name": "SeedGenerator",
    "description": "",
    "category": "Chibi-Nodes/Numbers",
    "output_node": false
  },
  "SaveImages": {
    "input": {
      "required": {
        "filename_type": [
          [
            "Timestamp",
            "Fixed",
            "Fixed Single"
          ]
        ],
        "fixed_filename": [
          "STRING",
          {
            "default": "output"
          }
        ]
      },
      "optional": {
        "images": [
          "IMAGE"
        ],
        "latents": [
          "LATENT"
        ],
        "vae": [
          "VAE"
        ],
        "fixed_filename_override": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "images",
      "filename_list"
    ],
    "name": "SaveImages",
    "display_name": "SaveImages",
    "description": "",
    "category": "Chibi-Nodes",
    "output_node": true
  },
  "TextSplit": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "",
            "forceInput": true
          }
        ],
        "separator": [
          "STRING",
          {
            "default": "."
          }
        ],
        "reverse": [
          [false, true]
        ],
        "return_half": [
          [
            "First Half",
            "Second Half"
          ]
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "text"
    ],
    "name": "TextSplit",
    "display_name": "TextSplit",
    "description": "",
    "category": "Chibi-Nodes/Text",
    "output_node": true
  },
  "RandomResolutionLatent": {
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "LATENT",
      "width",
      "height"
    ],
    "name": "RandomResolutionLatent",
    "display_name": "RandomResolutionLatent",
    "description": "",
    "category": "Chibi-Nodes/Numbers",
    "output_node": true
  },
  "CCSR_Upscale": {
    "input": {
      "required": {
        "ccsr_model": [
          "CCSRMODEL"
        ],
        "image": [
          "IMAGE"
        ],
        "resize_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos"
          ],
          {
            "default": "lanczos"
          }
        ],
        "scale_by": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 20,
            "step": 0.01
          }
        ],
        "steps": [
          "INT",
          {
            "default": 45,
            "min": 3,
            "max": 4096,
            "step": 1
          }
        ],
        "t_max": [
          "FLOAT",
          {
            "default": 0.6667,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "t_min": [
          "FLOAT",
          {
            "default": 0.3333,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "sampling_method": [
          [
            "ccsr",
            "ccsr_tiled_mixdiff",
            "ccsr_tiled_vae_gaussian_weights"
          ],
          {
            "default": "ccsr_tiled_mixdiff"
          }
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "tile_stride": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "vae_tile_size_encode": [
          "INT",
          {
            "default": 1024,
            "min": 2,
            "max": 4096,
            "step": 8
          }
        ],
        "vae_tile_size_decode": [
          "INT",
          {
            "default": 1024,
            "min": 2,
            "max": 4096,
            "step": 8
          }
        ],
        "color_fix_type": [
          [
            "none",
            "adain",
            "wavelet"
          ],
          {
            "default": "adain"
          }
        ],
        "keep_model_loaded": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 123,
            "min": 0,
            "max": 1.8446744073709552e+19,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "upscaled_image"
    ],
    "name": "CCSR_Upscale",
    "display_name": "CCSR_Upscale",
    "description": "",
    "category": "CCSR",
    "output_node": false
  },
  "CCSR_Model_Select": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ]
      }
    },
    "output": [
      "CCSRMODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "ccsr_model"
    ],
    "name": "CCSR_Model_Select",
    "display_name": "CCSR_Model_Select",
    "description": "",
    "category": "CCSR",
    "output_node": false
  },
  "SDPromptReader": {
    "input": {
      "required": {
        "image": [
          [
            "example.png"
          ],
          {
            "image_upload": true
          }
        ]
      },
      "optional": {
        "parameter_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "STRING",
      "STRING",
      "INT",
      "INT",
      "FLOAT",
      "INT",
      "INT",
      "*",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false],
    "output_name": [
      "IMAGE",
      "MASK",
      "POSITIVE",
      "NEGATIVE",
      "SEED",
      "STEPS",
      "CFG",
      "WIDTH",
      "HEIGHT",
      "MODEL_NAME",
      "FILENAME",
      "SETTINGS"
    ],
    "name": "SDPromptReader",
    "display_name": "SD Prompt Reader",
    "description": "",
    "category": "SD Prompt Reader",
    "output_node": true
  },
  "SDPromptSaver": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      },
      "optional": {
        "filename": [
          "STRING",
          {
            "default": "ComfyUI_%time_%seed_%counter",
            "multiline": false
          }
        ],
        "path": [
          "STRING",
          {
            "default": "%date/",
            "multiline": false
          }
        ],
        "model_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ],
        "vae_name": [
          [
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.5,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "lora_name": "*",
        "width": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 16384,
            "step": 8
          }
        ],
        "positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "extension": [
          [
            "png",
            "jpg",
            "jpeg",
            "webp"
          ]
        ],
        "calculate_hash": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "resource_hash": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "lossless_webp": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "jpg_webp_quality": [
          "INT",
          {
            "default": 100,
            "min": 1,
            "max": 100
          }
        ],
        "date_format": [
          "STRING",
          {
            "default": "%Y-%m-%d",
            "multiline": false
          }
        ],
        "time_format": [
          "STRING",
          {
            "default": "%H%M%S",
            "multiline": false
          }
        ],
        "save_metadata_file": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "extra_info": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "FILENAME",
      "FILE_PATH",
      "METADATA"
    ],
    "name": "SDPromptSaver",
    "display_name": "SD Prompt Saver",
    "description": "",
    "category": "SD Prompt Reader",
    "output_node": true
  },
  "SDParameterGenerator": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ]
        ]
      },
      "optional": {
        "vae_name": [
          [
            "baked VAE",
            "BerrysMix.vae.safetensors",
            "kl-f8-anime2.ckpt",
            "sdxl_vae.safetensors",
            "stage_a.safetensors",
            "vae-ft-mse-840000-ema-pruned.ckpt"
          ],
          {
            "default": "baked VAE"
          }
        ],
        "model_version": [
          [
            "SDv1 512px",
            "SDv2 768px",
            "SDXL 1024px"
          ],
          {
            "default": "SDv1 512px"
          }
        ],
        "config_name": [
          [
            "none",
            "anything_v3.yaml",
            "v1-inference.yaml",
            "v1-inference_clip_skip_2.yaml",
            "v1-inference_clip_skip_2_fp16.yaml",
            "v1-inference_fp16.yaml",
            "v1-inpainting-inference.yaml",
            "v2-inference-v.yaml",
            "v2-inference-v_fp32.yaml",
            "v2-inference.yaml",
            "v2-inference_fp32.yaml",
            "v2-inpainting-inference.yaml"
          ],
          {
            "default": "none"
          }
        ],
        "seed": [
          "INT",
          {
            "default": -1,
            "min": -3,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "refiner_start": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.5,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive_ascore": [
          "FLOAT",
          {
            "default": 6,
            "min": 0,
            "max": 1000,
            "step": 0.01
          }
        ],
        "negative_ascore": [
          "FLOAT",
          {
            "default": 6,
            "min": 0,
            "max": 1000,
            "step": 0.01
          }
        ],
        "aspect_ratio": [
          [
            "custom",
            "1:1 - 512x512 | 768x768 | 1024x1024",
            "4:3 - 576x448 | 864x672 | 1152x896",
            "3:4 - 448x576 | 672x864 | 896x1152",
            "3:2 - 608x416 | 912x624 | 1216x832",
            "2:3 - 416x608 | 624x912 | 832x1216",
            "16:9 - 672x384 | 1008x576 | 1344x768",
            "9:16 - 384x672 | 576x1008 | 768x1344",
            "21:9 - 768x320 | 1152x480 | 1536x640",
            "9:21 - 320x768 | 480x1152 | 640x1536"
          ],
          {
            "default": "custom"
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      [
        "sd1.5/AOM3A1.safetensors",
        "sd1.5/CounterfeitV30_v30.safetensors",
        "sd1.5/Deliberate_v3.safetensors",
        "sd1.5/Deliberate_v4-inpainting.safetensors",
        "sd1.5/ProteusV0.4.safetensors",
        "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
        "sd1.5/allInOnePixelModel_v1.ckpt",
        "sd1.5/analogDiffusion_10Safetensors.safetensors",
        "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
        "sd1.5/anythingV3_fp16.ckpt",
        "sd1.5/arcaneDiffusion_v3.ckpt",
        "sd1.5/archer-v1.ckpt",
        "sd1.5/cardosAnime_v10.safetensors",
        "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
        "sd1.5/classicAnim-v1.ckpt",
        "sd1.5/comic-diffusion-V2.ckpt",
        "sd1.5/complexLineart_v1.ckpt",
        "sd1.5/ddosmix_V2.safetensors",
        "sd1.5/deepSpaceDiffusion_v1.ckpt",
        "sd1.5/deliberate_v2.safetensors",
        "sd1.5/dosmix_.safetensors",
        "sd1.5/dreamshaper_631BakedVae.safetensors",
        "sd1.5/dreamshaper_8.safetensors",
        "sd1.5/eldenRingStyle_v3.ckpt",
        "sd1.5/elldrethsLucidMix_v10.safetensors",
        "sd1.5/elldrethsOG4060Mix_v10.ckpt",
        "sd1.5/elldrethsRetroMix_v10.safetensors",
        "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
        "sd1.5/f222_v1.ckpt",
        "sd1.5/helloyoung25d_V10f.safetensors",
        "sd1.5/inkpunkDiffusion_v2.ckpt",
        "sd1.5/instruct-pix2pix-00-22000.ckpt",
        "sd1.5/juggernaut_reborn.safetensors",
        "sd1.5/landscapeAnimePro_v20W768.safetensors",
        "sd1.5/meinamix_meinaV10.safetensors",
        "sd1.5/meinamix_meinaV11.safetensors",
        "sd1.5/microworlds_v1.ckpt",
        "sd1.5/midjourneyPapercut_v1.ckpt",
        "sd1.5/model.ckpt",
        "sd1.5/modelshootStyle_modelshoot10.ckpt",
        "sd1.5/modernDisney_v1.ckpt",
        "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
        "sd1.5/openjourney_V4.ckpt",
        "sd1.5/papercut_v1.ckpt",
        "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
        "sd1.5/perfectWorld_v6Baked.safetensors",
        "sd1.5/photonLCM_v10.safetensors",
        "sd1.5/photon_v1.safetensors",
        "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
        "sd1.5/portrait_10.ckpt",
        "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
        "sd1.5/realdosmix_.safetensors",
        "sd1.5/realisticVisionV13_v13.safetensors",
        "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
        "sd1.5/redshiftDiffusion_v1.ckpt",
        "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
        "sd1.5/rpg_V4.safetensors",
        "sd1.5/samdoesartV3_v3.ckpt",
        "sd1.5/samdoesartsUltmerge_v1.ckpt",
        "sd1.5/samdoessexyBlend_safetensor.safetensors",
        "sd1.5/sd-v1-5-inpainting.ckpt",
        "sd1.5/superhero-diffusion.ckpt",
        "sd1.5/supermixPreLineart_v1.safetensors",
        "sd1.5/svd.safetensors",
        "sd1.5/synthwavepunk_v2.ckpt",
        "sd1.5/theAllysMix_v10Safetensors.safetensors",
        "sd1.5/toonAme_version10.safetensors",
        "sd1.5/v1-5-pruned-emaonly.ckpt",
        "sd1.5/v1-5-pruned-emaonly.safetensors",
        "sd1.5/v1-5-pruned.ckpt",
        "sd1.5/v2-1_512-ema-pruned.safetensors",
        "sd1.5/v2-1_768-ema-pruned.safetensors",
        "sd1.5/vintedois-diffusion-v0-2.safetensors",
        "sd1.5/vinteprotogenmix_V20.safetensors",
        "sd1.5/waifuDiffusion_v13Fp32.ckpt",
        "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
        "sdxl/albedobaseXL_v21.safetensors",
        "sdxl/cosxl.safetensors",
        "sdxl/juggernautXL_v8Rundiffusion.safetensors",
        "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
        "sdxl/juggernautXL_version6Rundiffusion.safetensors",
        "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
        "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
        "sdxl/sd_xl_base_1.0.safetensors",
        "sdxl/sd_xl_refiner_1.0.safetensors",
        "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
        "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
        "stable_cascade/stable_cascade_stage_b.safetensors",
        "stable_cascade/stable_cascade_stage_c.safetensors",
        "stable_cascade/stage_b_bf16.safetensors",
        "stable_cascade/stage_c_bf16.safetensors",
        "supir/SUPIR-v0F.ckpt",
        "supir/SUPIR-v0Q.ckpt"
      ],
      [
        "BerrysMix.vae.safetensors",
        "kl-f8-anime2.ckpt",
        "sdxl_vae.safetensors",
        "stage_a.safetensors",
        "vae-ft-mse-840000-ema-pruned.ckpt"
      ],
      "MODEL",
      "CLIP",
      "VAE",
      "INT",
      "INT",
      "INT",
      "FLOAT",
      [
        "euler",
        "euler_ancestral",
        "heun",
        "heunpp2",
        "dpm_2",
        "dpm_2_ancestral",
        "lms",
        "dpm_fast",
        "dpm_adaptive",
        "dpmpp_2s_ancestral",
        "dpmpp_sde",
        "dpmpp_sde_gpu",
        "dpmpp_2m",
        "dpmpp_2m_sde",
        "dpmpp_2m_sde_gpu",
        "dpmpp_3m_sde",
        "dpmpp_3m_sde_gpu",
        "ddpm",
        "lcm",
        "ddim",
        "uni_pc",
        "uni_pc_bh2"
      ],
      [
        "normal",
        "karras",
        "exponential",
        "sgm_uniform",
        "simple",
        "ddim_uniform"
      ],
      "FLOAT",
      "FLOAT",
      "INT",
      "INT",
      "INT",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],
    "output_name": [
      "MODEL_NAME",
      "VAE_NAME",
      "MODEL",
      "CLIP",
      "VAE",
      "SEED",
      "STEPS",
      "REFINER_START_STEP",
      "CFG",
      "SAMPLER_NAME",
      "SCHEDULER",
      "POSITIVE_ASCORE",
      "NEGATIVE_ASCORE",
      "WIDTH",
      "HEIGHT",
      "BATCH_SIZE",
      "PARAMETERS"
    ],
    "name": "SDParameterGenerator",
    "display_name": "SD Parameter Generator",
    "description": "",
    "category": "SD Prompt Reader",
    "output_node": false
  },
  "SDPromptMerger": {
    "input": {
      "required": {

      },
      "optional": {
        "text_g": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "forceInput": true
          }
        ],
        "text_l": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "SDPromptMerger",
    "display_name": "SD Prompt Merger",
    "description": "",
    "category": "SD Prompt Reader",
    "output_node": false
  },
  "SDTypeConverter": {
    "input": {
      "required": {

      },
      "optional": {
        "model_name": [
          [
            "sd1.5/AOM3A1.safetensors",
            "sd1.5/CounterfeitV30_v30.safetensors",
            "sd1.5/Deliberate_v3.safetensors",
            "sd1.5/Deliberate_v4-inpainting.safetensors",
            "sd1.5/ProteusV0.4.safetensors",
            "sd1.5/abyssorangemix3AOM3_aom3a1b.safetensors",
            "sd1.5/allInOnePixelModel_v1.ckpt",
            "sd1.5/analogDiffusion_10Safetensors.safetensors",
            "sd1.5/anythingV3Inpainting_1-inpainting.ckpt",
            "sd1.5/anythingV3_fp16.ckpt",
            "sd1.5/arcaneDiffusion_v3.ckpt",
            "sd1.5/archer-v1.ckpt",
            "sd1.5/cardosAnime_v10.safetensors",
            "sd1.5/chilloutmix_NiPrunedFp32Fix.safetensors",
            "sd1.5/classicAnim-v1.ckpt",
            "sd1.5/comic-diffusion-V2.ckpt",
            "sd1.5/complexLineart_v1.ckpt",
            "sd1.5/ddosmix_V2.safetensors",
            "sd1.5/deepSpaceDiffusion_v1.ckpt",
            "sd1.5/deliberate_v2.safetensors",
            "sd1.5/dosmix_.safetensors",
            "sd1.5/dreamshaper_631BakedVae.safetensors",
            "sd1.5/dreamshaper_8.safetensors",
            "sd1.5/eldenRingStyle_v3.ckpt",
            "sd1.5/elldrethsLucidMix_v10.safetensors",
            "sd1.5/elldrethsOG4060Mix_v10.ckpt",
            "sd1.5/elldrethsRetroMix_v10.safetensors",
            "sd1.5/epicrealism_naturalSinRC1VAE.safetensors",
            "sd1.5/f222_v1.ckpt",
            "sd1.5/helloyoung25d_V10f.safetensors",
            "sd1.5/inkpunkDiffusion_v2.ckpt",
            "sd1.5/instruct-pix2pix-00-22000.ckpt",
            "sd1.5/juggernaut_reborn.safetensors",
            "sd1.5/landscapeAnimePro_v20W768.safetensors",
            "sd1.5/meinamix_meinaV10.safetensors",
            "sd1.5/meinamix_meinaV11.safetensors",
            "sd1.5/microworlds_v1.ckpt",
            "sd1.5/midjourneyPapercut_v1.ckpt",
            "sd1.5/model.ckpt",
            "sd1.5/modelshootStyle_modelshoot10.ckpt",
            "sd1.5/modernDisney_v1.ckpt",
            "sd1.5/neverendingDreamNED_v122BakedVae.safetensors",
            "sd1.5/openjourney_V4.ckpt",
            "sd1.5/papercut_v1.ckpt",
            "sd1.5/pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "sd1.5/perfectWorld_v6Baked.safetensors",
            "sd1.5/photonLCM_v10.safetensors",
            "sd1.5/photon_v1.safetensors",
            "sd1.5/playground-v2.5-1024px-aesthetic.fp16.safetensors",
            "sd1.5/portrait_10.ckpt",
            "sd1.5/protogenX34Photorealism_protogenX34.safetensors",
            "sd1.5/realdosmix_.safetensors",
            "sd1.5/realisticVisionV13_v13.safetensors",
            "sd1.5/realisticVisionV60B1_v60B1VAE.safetensors",
            "sd1.5/redshiftDiffusion_v1.ckpt",
            "sd1.5/roboeticsMix_rmix01Ckpt.ckpt",
            "sd1.5/rpg_V4.safetensors",
            "sd1.5/samdoesartV3_v3.ckpt",
            "sd1.5/samdoesartsUltmerge_v1.ckpt",
            "sd1.5/samdoessexyBlend_safetensor.safetensors",
            "sd1.5/sd-v1-5-inpainting.ckpt",
            "sd1.5/superhero-diffusion.ckpt",
            "sd1.5/supermixPreLineart_v1.safetensors",
            "sd1.5/svd.safetensors",
            "sd1.5/synthwavepunk_v2.ckpt",
            "sd1.5/theAllysMix_v10Safetensors.safetensors",
            "sd1.5/toonAme_version10.safetensors",
            "sd1.5/v1-5-pruned-emaonly.ckpt",
            "sd1.5/v1-5-pruned-emaonly.safetensors",
            "sd1.5/v1-5-pruned.ckpt",
            "sd1.5/v2-1_512-ema-pruned.safetensors",
            "sd1.5/v2-1_768-ema-pruned.safetensors",
            "sd1.5/vintedois-diffusion-v0-2.safetensors",
            "sd1.5/vinteprotogenmix_V20.safetensors",
            "sd1.5/waifuDiffusion_v13Fp32.ckpt",
            "sd1.5/z1.5Anime-darkSushiMixMix_colorful.safetensors",
            "sdxl/albedobaseXL_v21.safetensors",
            "sdxl/cosxl.safetensors",
            "sdxl/juggernautXL_v8Rundiffusion.safetensors",
            "sdxl/juggernautXL_v9Rundiffusionphoto2.safetensors",
            "sdxl/juggernautXL_version6Rundiffusion.safetensors",
            "sdxl/leosamsHelloworldXL_hw50EulerALightning.safetensors",
            "sdxl/realvisxlV40_v40LightningBakedvae.safetensors",
            "sdxl/sd_xl_base_1.0.safetensors",
            "sdxl/sd_xl_refiner_1.0.safetensors",
            "sdxl/sd_xl_turbo_1.0_fp16.safetensors",
            "sdxl/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors",
            "stable_cascade/stable_cascade_stage_b.safetensors",
            "stable_cascade/stable_cascade_stage_c.safetensors",
            "stable_cascade/stage_b_bf16.safetensors",
            "stable_cascade/stage_c_bf16.safetensors",
            "supir/SUPIR-v0F.ckpt",
            "supir/SUPIR-v0Q.ckpt"
          ],
          {
            "forceInput": true
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ],
          {
            "forceInput": true
          }
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ],
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL_NAME_STR",
      "SAMPLER_NAME_STR",
      "SCHEDULER_STR"
    ],
    "name": "SDTypeConverter",
    "display_name": "SD Type Converter",
    "description": "",
    "category": "SD Prompt Reader",
    "output_node": false
  },
  "SDAnyConverter": {
    "input": {
      "required": {

      },
      "optional": {
        "any_type_input": [
          "*",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": [
      "ANY_TYPE_OUTPUT"
    ],
    "name": "SDAnyConverter",
    "display_name": "SD Any Converter",
    "description": "",
    "category": "SD Prompt Reader",
    "output_node": false
  },
  "SDBatchLoader": {
    "input": {
      "required": {
        "path": [
          "STRING",
          {
            "default": "./input/"
          }
        ]
      },
      "optional": {
        "image_load_limit": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "start_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [true],
    "output_name": [
      "IMAGE"
    ],
    "name": "SDBatchLoader",
    "display_name": "SD Batch Loader",
    "description": "",
    "category": "SD Prompt Reader",
    "output_node": true
  },
  "SDParameterExtractor": {
    "input": {
      "required": {
        "settings": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "forceInput": true
          }
        ]
      },
      "optional": {
        "parameter": [
          [
            "parameters not loaded"
          ],
          {
            "default": "parameters not loaded"
          }
        ],
        "value_type": [
          [
            "STRING",
            "INT",
            "FLOAT"
          ],
          {
            "default": "STRING"
          }
        ],
        "parameter_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": [
      "VALUE"
    ],
    "name": "SDParameterExtractor",
    "display_name": "SD Parameter Extractor",
    "description": "",
    "category": "SD Prompt Reader",
    "output_node": true
  },
  "SDLoraLoader": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_name": [
          [
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -20,
            "max": 20,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1,
            "min": -20,
            "max": 20,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "last_lora": [
          "*"
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "*"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "NEXT_LORA"
    ],
    "name": "SDLoraLoader",
    "display_name": "SD Lora Loader",
    "description": "",
    "category": "SD Prompt Reader",
    "output_node": false
  },
  "SDLoraSelector": {
    "input": {
      "required": {
        "lora_name": [
          [
            "CLAYMATE_V2.03_.safetensors",
            "DD-made-of-clay-XL-v2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SD15-8steps-lora.safetensors",
            "Hyper-SDXL-8steps-lora.safetensors",
            "InstantPhotoX3.safetensors",
            "JuggerCineXL2.safetensors",
            "LCMTurboMix_Euler_A_fix.safetensors",
            "YaeMiko_Test.safetensors",
            "add_detail.safetensors",
            "animemix_v3_offset.safetensors",
            "charsheet.safetensors",
            "ec.safetensors",
            "epiNoiseoffset_v2.safetensors",
            "ghibli_style_offset.safetensors",
            "hipoly_3dcg_v7-epoch-000012.safetensors",
            "howlbgsv3.safetensors",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "jirai_v2.safetensors",
            "leosamHelloworldTurbo_20TurboLCM.safetensors",
            "more_details.safetensors",
            "mouth_slider_v1.safetensors",
            "pytorch_lora_weights.safetensors",
            "room.safetensors",
            "sd15_lora_beta.safetensors",
            "sdxl_lightning_4step_lora.safetensors",
            "shirt_tug.safetensors",
            "theovercomer8sContrastFix_sd15.safetensors",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_mm.ckpt",
            "vtuber-poses-05.safetensors",
            "xl_more_art-full_v1.safetensors",
            "zoom_slider_v1.safetensors"
          ]
        ]
      },
      "optional": {
        "last_lora": [
          "*"
        ]
      }
    },
    "output": [
      [
        "CLAYMATE_V2.03_.safetensors",
        "DD-made-of-clay-XL-v2.safetensors",
        "Hyper-SD15-12steps-CFG-lora.safetensors",
        "Hyper-SD15-8steps-lora.safetensors",
        "Hyper-SDXL-8steps-lora.safetensors",
        "InstantPhotoX3.safetensors",
        "JuggerCineXL2.safetensors",
        "LCMTurboMix_Euler_A_fix.safetensors",
        "YaeMiko_Test.safetensors",
        "add_detail.safetensors",
        "animemix_v3_offset.safetensors",
        "charsheet.safetensors",
        "ec.safetensors",
        "epiNoiseoffset_v2.safetensors",
        "ghibli_style_offset.safetensors",
        "hipoly_3dcg_v7-epoch-000012.safetensors",
        "howlbgsv3.safetensors",
        "ip-adapter-faceid-plus_sd15_lora.safetensors",
        "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
        "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
        "ip-adapter-faceid_sd15_lora.safetensors",
        "ip-adapter-faceid_sdxl_lora.safetensors",
        "jirai_v2.safetensors",
        "leosamHelloworldTurbo_20TurboLCM.safetensors",
        "more_details.safetensors",
        "mouth_slider_v1.safetensors",
        "pytorch_lora_weights.safetensors",
        "room.safetensors",
        "sd15_lora_beta.safetensors",
        "sdxl_lightning_4step_lora.safetensors",
        "shirt_tug.safetensors",
        "theovercomer8sContrastFix_sd15.safetensors",
        "v2_lora_ZoomIn.ckpt",
        "v2_lora_ZoomOut.ckpt",
        "v3_sd15_mm.ckpt",
        "vtuber-poses-05.safetensors",
        "xl_more_art-full_v1.safetensors",
        "zoom_slider_v1.safetensors"
      ],
      "*"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "LORA_NAME",
      "NEXT_LORA"
    ],
    "name": "SDLoraSelector",
    "display_name": "SD Lora Selector",
    "description": "",
    "category": "SD Prompt Reader",
    "output_node": false
  },
  "UltimateSDUpscale": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "model": [
          "MODEL"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "vae": [
          "VAE"
        ],
        "upscale_by": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.05,
            "max": 4,
            "step": 0.05
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000,
            "step": 1
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "upscale_model": [
          "UPSCALE_MODEL"
        ],
        "mode_type": [
          [
            "Linear",
            "Chess",
            "None"
          ]
        ],
        "tile_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "tile_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "mask_blur": [
          "INT",
          {
            "default": 8,
            "min": 0,
            "max": 64,
            "step": 1
          }
        ],
        "tile_padding": [
          "INT",
          {
            "default": 32,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "seam_fix_mode": [
          [
            "None",
            "Band Pass",
            "Half Tile",
            "Half Tile + Intersections"
          ]
        ],
        "seam_fix_denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "seam_fix_width": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "seam_fix_mask_blur": [
          "INT",
          {
            "default": 8,
            "min": 0,
            "max": 64,
            "step": 1
          }
        ],
        "seam_fix_padding": [
          "INT",
          {
            "default": 16,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "force_uniform_tiles": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "tiled_decode": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "UltimateSDUpscale",
    "display_name": "Ultimate SD Upscale",
    "description": "",
    "category": "image/upscaling",
    "output_node": false
  },
  "UltimateSDUpscaleNoUpscale": {
    "input": {
      "required": {
        "upscaled_image": [
          "IMAGE"
        ],
        "model": [
          "MODEL"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "vae": [
          "VAE"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000,
            "step": 1
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "mode_type": [
          [
            "Linear",
            "Chess",
            "None"
          ]
        ],
        "tile_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "tile_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "mask_blur": [
          "INT",
          {
            "default": 8,
            "min": 0,
            "max": 64,
            "step": 1
          }
        ],
        "tile_padding": [
          "INT",
          {
            "default": 32,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "seam_fix_mode": [
          [
            "None",
            "Band Pass",
            "Half Tile",
            "Half Tile + Intersections"
          ]
        ],
        "seam_fix_denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "seam_fix_width": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "seam_fix_mask_blur": [
          "INT",
          {
            "default": 8,
            "min": 0,
            "max": 64,
            "step": 1
          }
        ],
        "seam_fix_padding": [
          "INT",
          {
            "default": 16,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "force_uniform_tiles": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "tiled_decode": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "UltimateSDUpscaleNoUpscale",
    "display_name": "Ultimate SD Upscale (No Upscale)",
    "description": "",
    "category": "image/upscaling",
    "output_node": false
  },
  "Gemini_API_Zho": {
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "default": "What is the meaning of life?",
            "multiline": true
          }
        ],
        "model_name": [
          [
            "gemini-pro",
            "gemini-pro-vision",
            "gemini-1.5-pro-latest"
          ]
        ],
        "stream": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "api_key": [
          "STRING",
          {
            "default": ""
          }
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "text"
    ],
    "name": "Gemini_API_Zho",
    "display_name": "✨Gemini_API_Zho",
    "description": "",
    "category": "Zho模块组/✨Gemini",
    "output_node": false
  },
  "Gemini_API_Vsion_ImgURL_Zho": {
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "default": "Describe this image",
            "multiline": true
          }
        ],
        "image_url": [
          "STRING",
          {
            "default": ""
          }
        ],
        "model_name": [
          [
            "gemini-pro-vision",
            "gemini-1.5-pro-latest"
          ]
        ],
        "stream": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "api_key": [
          "STRING",
          {
            "default": ""
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "text"
    ],
    "name": "Gemini_API_Vsion_ImgURL_Zho",
    "display_name": "✨Gemini_API_Vsion_ImgURL_Zho",
    "description": "",
    "category": "Zho模块组/✨Gemini",
    "output_node": false
  },
  "Gemini_API_Chat_Zho": {
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "default": "What is the meaning of life?",
            "multiline": true
          }
        ],
        "model_name": [
          [
            "gemini-pro",
            "gemini-1.5-pro-latest"
          ]
        ],
        "api_key": [
          "STRING",
          {
            "default": ""
          }
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "response"
    ],
    "name": "Gemini_API_Chat_Zho",
    "display_name": "✨Gemini_API_Chat_Zho",
    "description": "",
    "category": "Zho模块组/✨Gemini",
    "output_node": false
  },
  "Gemini_API_S_Zho": {
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "default": "What is the meaning of life?",
            "multiline": true
          }
        ],
        "model_name": [
          [
            "gemini-pro",
            "gemini-pro-vision",
            "gemini-1.5-pro-latest"
          ]
        ],
        "stream": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "text"
    ],
    "name": "Gemini_API_S_Zho",
    "display_name": "㊙️Gemini_Zho",
    "description": "",
    "category": "Zho模块组/✨Gemini",
    "output_node": false
  },
  "Gemini_API_S_Vsion_ImgURL_Zho": {
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "default": "Describe this image",
            "multiline": true
          }
        ],
        "image_url": [
          "STRING",
          {
            "default": ""
          }
        ],
        "model_name": [
          [
            "gemini-pro-vision",
            "gemini-1.5-pro-latest"
          ]
        ],
        "stream": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "text"
    ],
    "name": "Gemini_API_S_Vsion_ImgURL_Zho",
    "display_name": "㊙️Gemini_ImgURL_Zho",
    "description": "",
    "category": "Zho模块组/✨Gemini",
    "output_node": false
  },
  "Gemini_API_S_Chat_Zho": {
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "default": "What is the meaning of life?",
            "multiline": true
          }
        ],
        "model_name": [
          [
            "gemini-pro",
            "gemini-1.5-pro-latest"
          ]
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "response"
    ],
    "name": "Gemini_API_S_Chat_Zho",
    "display_name": "㊙️Gemini_Chat_Zho",
    "description": "",
    "category": "Zho模块组/✨Gemini",
    "output_node": false
  },
  "Gemini_15P_API_S_Advance_Zho": {
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "default": "What is the meaning of life?",
            "multiline": true
          }
        ],
        "system_instruction": [
          "STRING",
          {
            "default": "You are creating a prompt for Stable Diffusion to generate an image. First step: describe this image, then put description into text. Second step: generate a text prompt for %s based on first step.  Only respond with the prompt itself, but embellish it as needed but keep it under 80 tokens.",
            "multiline": true
          }
        ],
        "model_name": [
          [
            "gemini-1.5-pro-latest"
          ]
        ],
        "stream": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "text"
    ],
    "name": "Gemini_15P_API_S_Advance_Zho",
    "display_name": "🆕Gemini_15P_Advance_Zho",
    "description": "",
    "category": "Zho模块组/✨Gemini",
    "output_node": false
  },
  "Gemini_15P_API_S_Chat_Advance_Zho": {
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "default": "What is the meaning of life?",
            "multiline": true
          }
        ],
        "system_instruction": [
          "STRING",
          {
            "default": "You are creating a prompt for Stable Diffusion to generate an image. First step: describe this image, then put description into text. Second step: generate a text prompt for %s based on first step.  Only respond with the prompt itself, but embellish it as needed but keep it under 80 tokens.",
            "multiline": true
          }
        ],
        "model_name": [
          [
            "gemini-1.5-pro-latest"
          ]
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "response"
    ],
    "name": "Gemini_15P_API_S_Chat_Advance_Zho",
    "display_name": "🆕Gemini_15P_Chat_Advance_Zho",
    "description": "",
    "category": "Zho模块组/✨Gemini",
    "output_node": false
  },
  "Gemini_FileUpload_API_S_Zho": {
    "input": {
      "required": {
        "file": [
          "STRING",
          {
            "default": "./sample.mp3",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "FILE"
    ],
    "output_is_list": [false],
    "output_name": [
      "file"
    ],
    "name": "Gemini_FileUpload_API_S_Zho",
    "display_name": "📄Gemini_FileUpload_Zho",
    "description": "",
    "category": "Zho模块组/✨Gemini",
    "output_node": false
  },
  "Gemini_File_API_S_Zho": {
    "input": {
      "required": {
        "file": [
          "FILE"
        ],
        "prompt": [
          "STRING",
          {
            "default": "Listen carefully to the following audio file. Provide a brief summary.",
            "multiline": true
          }
        ],
        "model_name": [
          [
            "gemini-1.5-pro-latest"
          ]
        ],
        "stream": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "text"
    ],
    "name": "Gemini_File_API_S_Zho",
    "display_name": "📄Gemini_File_Zho",
    "description": "",
    "category": "Zho模块组/✨Gemini",
    "output_node": false
  },
  "ConcatText_Zho": {
    "input": {
      "required": {
        "text_1": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "text_2": [
          "STRING",
          {
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "text"
    ],
    "name": "ConcatText_Zho",
    "display_name": "✨ConcatText_Zho",
    "description": "",
    "category": "Zho模块组/✨Gemini",
    "output_node": false
  },
  "DisplayText_Zho": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "text"
    ],
    "name": "DisplayText_Zho",
    "display_name": "✨DisplayText_Zho",
    "description": "",
    "category": "Zho模块组/✨Gemini",
    "output_node": true
  },
  "Phi3mini_4k_ModelLoader_Zho": {
    "input": {
      "required": {

      }
    },
    "output": [
      "PHI3",
      "TK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "Phi3mini_4k",
      "tokenizer"
    ],
    "name": "Phi3mini_4k_ModelLoader_Zho",
    "display_name": "🏖️Phi3mini 4k ModelLoader",
    "description": "",
    "category": "🏖️Phi3mini",
    "output_node": false
  },
  "Phi3mini_4k_Zho": {
    "input": {
      "required": {
        "model": [
          "PHI3"
        ],
        "tokenizer": [
          "TK"
        ],
        "prompt": [
          "STRING",
          {
            "default": "What is the meaning of life?",
            "multiline": true
          }
        ],
        "system_instruction": [
          "STRING",
          {
            "default": "You are creating a prompt for Stable Diffusion to generate an image. First step: understand the input and generate a text prompt for the input. Second step: only respond in English with the prompt itself in phrase, but embellish it as needed but keep it under 200 tokens.",
            "multiline": true
          }
        ],
        "temperature": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "text"
    ],
    "name": "Phi3mini_4k_Zho",
    "display_name": "🏖️Phi3mini 4k",
    "description": "",
    "category": "🏖️Phi3mini",
    "output_node": false
  },
  "Phi3mini_4k_Chat_Zho": {
    "input": {
      "required": {
        "model": [
          "PHI3"
        ],
        "tokenizer": [
          "TK"
        ],
        "prompt": [
          "STRING",
          {
            "default": "What is the meaning of life?",
            "multiline": true
          }
        ],
        "system_instruction": [
          "STRING",
          {
            "default": "You are creating a prompt for Stable Diffusion to generate an image. First step: understand the input and generate a text prompt for the input. Second step: only respond in English with the prompt itself in phrase, but embellish it as needed but keep it under 200 tokens.",
            "multiline": true
          }
        ],
        "temperature": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "text"
    ],
    "name": "Phi3mini_4k_Chat_Zho",
    "display_name": "🏖️Phi3mini 4k Chat",
    "description": "",
    "category": "🏖️Phi3mini",
    "output_node": false
  },
  "ServingOutput": {
    "input": {
      "required": {
        "serving_config": [
          "SERVING_CONFIG"
        ],
        "image": [
          "IMAGE"
        ],
        "frame_duration": [
          "INT",
          {
            "default": 30,
            "min": 1,
            "step": 1,
            "max": 9999999
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ServingOutput",
    "display_name": "Serving Output",
    "description": "",
    "category": "Serving-Toolkit",
    "output_node": true
  },
  "ServingInputText": {
    "input": {
      "required": {
        "serving_config": [
          "SERVING_CONFIG"
        ],
        "argument": [
          "STRING",
          {
            "multiline": false,
            "default": "prompt"
          }
        ],
        "default": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "text"
    ],
    "name": "ServingInputText",
    "display_name": "Serving Input Text",
    "description": "",
    "category": "Serving-Toolkit",
    "output_node": false
  },
  "ServingInputNumber": {
    "input": {
      "required": {
        "serving_config": [
          "SERVING_CONFIG"
        ],
        "argument": [
          "STRING",
          {
            "multiline": false,
            "default": "number"
          }
        ],
        "default": [
          "FLOAT",
          {
            "default": 0,
            "min": -999999,
            "max": 999999,
            "step": 0.0001
          }
        ],
        "min_value": [
          "FLOAT",
          {
            "default": -999999,
            "min": -999999,
            "max": 999999,
            "step": 0.0001
          }
        ],
        "max_value": [
          "FLOAT",
          {
            "default": 999999,
            "min": -999999,
            "max": 999999,
            "step": 0.0001
          }
        ],
        "step": [
          "FLOAT",
          {
            "default": 0.1,
            "min": -999999,
            "max": 999999,
            "step": 0.0001
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "FLOAT",
      "INT"
    ],
    "name": "ServingInputNumber",
    "display_name": "Serving Input Number",
    "description": "",
    "category": "Serving-Toolkit",
    "output_node": false
  },
  "DiscordServing": {
    "input": {
      "required": {
        "discord_token": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "command_name": [
          "STRING",
          {
            "multiline": false,
            "default": "generate"
          }
        ]
      }
    },
    "output": [
      "SERVING_CONFIG"
    ],
    "output_is_list": [false],
    "output_name": [
      "Serving config"
    ],
    "name": "DiscordServing",
    "display_name": "Discord Serving",
    "description": "",
    "category": "Serving-Toolkit",
    "output_node": false
  },
  "WebSocketServing": {
    "input": {
      "required": {
        "websocket_url": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ]
      }
    },
    "output": [
      "SERVING_CONFIG"
    ],
    "output_is_list": [false],
    "output_name": [
      "Serving config"
    ],
    "name": "WebSocketServing",
    "display_name": "WebSocket Serving",
    "description": "",
    "category": "Serving-Toolkit",
    "output_node": false
  }
}
